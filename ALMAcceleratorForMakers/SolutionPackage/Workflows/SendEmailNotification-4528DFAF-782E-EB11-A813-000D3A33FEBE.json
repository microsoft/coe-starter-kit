{
  "properties": {
    "connectionReferences": {
      "shared_office365_2": {
        "api": {
          "name": "shared_office365"
        },
        "connection": {
          "connectionReferenceLogicalName": "cat_sharedoffice365_4ee46"
        },
        "runtimeSource": "embedded"
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "actions": {
        "Finally": {
          "actions": {
            "Apply_to_each:_Extract_errors": {
              "actions": {
                "Append_to_string_variable_4": {
                  "inputs": {
                    "name": "ErrorDetails",
                    "value": "@{body('Fetch_Localized_Error_Message')?['Body']?['localizedtext']}\n"
                  },
                  "runAfter": {
                    "Fetch_Localized_Error": [
                      "Succeeded"
                    ]
                  },
                  "type": "AppendToStringVariable"
                },
                "Fetch_Localized_Error": {
                  "actions": {
                    "Compose": {
                      "inputs": "@concat('name==', items('Apply_to_each:_Extract_errors')?['name'], '##code==', items('Apply_to_each:_Extract_errors')?['code'], '##errorName==', items('Apply_to_each:_Extract_errors')?['outputs']?['body'])",
                      "runAfter": {},
                      "type": "Compose"
                    },
                    "Fetch_Localized_Error_Message": {
                      "inputs": {
                        "body": {
                          "text": "errorMessageFlow",
                          "text_2": "@outputs('Compose')"
                        },
                        "host": {
                          "workflowReferenceName": "4ada345e-9007-eb11-a813-000d3aa3e751"
                        }
                      },
                      "runAfter": {
                        "Compose": [
                          "Succeeded"
                        ]
                      },
                      "type": "Workflow"
                    }
                  },
                  "runAfter": {},
                  "type": "Scope"
                }
              },
              "foreach": "@body('Filter_array')",
              "runAfter": {
                "Filter_array": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Condition_for_Response": {
              "actions": {
                "Response_Failure": {
                  "inputs": {
                    "body": "@variables('ErrorDetails')",
                    "statusCode": 428
                  },
                  "kind": "Http",
                  "runAfter": {},
                  "type": "Response"
                }
              },
              "else": {
                "actions": {
                  "Response_Success": {
                    "inputs": {
                      "body": "Success",
                      "statusCode": 200
                    },
                    "kind": "Http",
                    "runAfter": {},
                    "type": "Response"
                  }
                }
              },
              "expression": {
                "greater": [
                  "@length(variables('ErrorDetails'))",
                  0
                ]
              },
              "runAfter": {
                "Apply_to_each:_Extract_errors": [
                  "Succeeded"
                ]
              },
              "type": "If"
            },
            "Filter_array": {
              "inputs": {
                "from": "@result('Try')",
                "where": "@or(equals(item()?['status'], 'Failed'), equals(item()?['status'], 'TimedOut'))"
              },
              "runAfter": {},
              "type": "Query"
            }
          },
          "runAfter": {
            "Try": [
              "Succeeded"
            ]
          },
          "type": "Scope"
        },
        "Initialize_variable:_Error_Details": {
          "inputs": {
            "variables": [
              {
                "name": "ErrorDetails",
                "type": "string"
              }
            ]
          },
          "runAfter": {},
          "type": "InitializeVariable"
        },
        "Try": {
          "actions": {
            "Send_an_email_(V2)": {
              "inputs": {
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_office365",
                  "connectionName": "shared_office365_2",
                  "operationId": "SendEmailV2"
                },
                "parameters": {
                  "emailMessage/Body": "<p>@{triggerBody()['text_2']}</p>",
                  "emailMessage/Subject": "@triggerBody()['text_1']",
                  "emailMessage/To": "@triggerBody()['text']"
                }
              },
              "runAfter": {},
              "type": "OpenApiConnection"
            }
          },
          "runAfter": {
            "Initialize_variable:_Error_Details": [
              "Succeeded"
            ]
          },
          "type": "Scope"
        }
      },
      "contentVersion": "1.0.0.0",
      "outputs": {},
      "parameters": {
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        }
      },
      "triggers": {
        "manual": {
          "inputs": {
            "schema": {
              "properties": {
                "text": {
                  "description": "Please enter your input",
                  "title": "ToList",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "text_1": {
                  "description": "Please enter your input",
                  "title": "Subject",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "text_2": {
                  "description": "Please enter your input",
                  "title": "Body",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "text_3": {
                  "description": "Please enter your input",
                  "title": "CCList",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "text_4": {
                  "description": "Please enter your input",
                  "title": "BCCList",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "text_5": {
                  "description": "Please enter your input",
                  "title": "CorrelationID",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                }
              },
              "required": [
                "text",
                "text_1",
                "text_2"
              ],
              "type": "object"
            }
          },
          "kind": "Button",
          "type": "Request"
        }
      }
    }
  },
  "schemaVersion": "1.0.0.0"
}
