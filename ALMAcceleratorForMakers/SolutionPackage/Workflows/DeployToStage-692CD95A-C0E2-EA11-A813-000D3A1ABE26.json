{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps": {
        "api": {
          "name": "shared_commondataserviceforapps"
        },
        "connection": {
          "connectionReferenceLogicalName": "cat_CDSConnection"
        },
        "runtimeSource": "embedded"
      },
      "shared_conversionservice": {
        "api": {
          "name": "shared_conversionservice"
        },
        "connection": {
          "connectionReferenceLogicalName": "cat_ContentConversionConnection"
        },
        "runtimeSource": "embedded"
      },
      "shared_github": {
        "api": {
          "name": "shared_github"
        },
        "connection": {
          "connectionReferenceLogicalName": "cat_GitHub"
        },
        "runtimeSource": "embedded"
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "actions": {
        "Branch_Name": {
          "inputs": {
            "variables": [
              {
                "name": "branchName",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "Initialize_variable": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Catch": {
          "actions": {
            "Apply_to_each": {
              "actions": {
                "Condition": {
                  "actions": {
                    "Append_to_string_variable": {
                      "inputs": {
                        "name": "ErrorDetails",
                        "value": "@{outputs('Run_a_Child_Flow_2')?['Body']?['localizedtext']}\n"
                      },
                      "runAfter": {
                        "Fetch_Localized_Error": [
                          "Succeeded"
                        ]
                      },
                      "type": "AppendToStringVariable"
                    },
                    "Fetch_Localized_Error": {
                      "actions": {
                        "Compose_2": {
                          "inputs": "@concat('name==',items('Apply_to_each')?['name'],'##code==',items('Apply_to_each')?['code'],'##errorName==',if(equals(null,items('Apply_to_each')?['outputs']?['body']),items('Apply_to_each')?['error'],items('Apply_to_each')?['outputs']?['body']))",
                          "runAfter": {},
                          "type": "Compose"
                        },
                        "Run_a_Child_Flow_2": {
                          "inputs": {
                            "body": {
                              "text": "errorMessageFlow",
                              "text_2": "@outputs('Compose_2')"
                            },
                            "host": {
                              "workflowReferenceName": "4ada345e-9007-eb11-a813-000d3aa3e751"
                            }
                          },
                          "runAfter": {
                            "Compose_2": [
                              "Succeeded"
                            ]
                          },
                          "type": "Workflow"
                        }
                      },
                      "runAfter": {},
                      "type": "Scope"
                    }
                  },
                  "else": {
                    "actions": {
                      "Set_variable_2": {
                        "inputs": {
                          "name": "ErrorDetails",
                          "value": "@variables('CreateEnvironmentErrorDetails')"
                        },
                        "runAfter": {},
                        "type": "SetVariable"
                      }
                    }
                  },
                  "expression": {
                    "equals": [
                      "@length(variables('CreateEnvironmentErrorDetails'))",
                      0
                    ]
                  },
                  "runAfter": {},
                  "type": "If"
                },
                "Log_Telemetry": {
                  "inputs": {
                    "body": {
                      "text": "@variables('CorrelationID')",
                      "text_1": "Error",
                      "text_12": "@workflow()?['run']?['name']",
                      "text_13": "@triggerOutputs()?['body/cat_buildrequestid']",
                      "text_2": "@outputs('Update_Build_Status_to_Started')?['body/_cat_project_value']",
                      "text_3": "Deployment to @{outputs('DeploymentStageRecord')?['body/cat_name']}",
                      "text_4": "@string(if(equals(null, items('Apply_to_each')?['outputs']?['body']), items('Apply_to_each')?['error'], items('Apply_to_each')?['outputs']?['body']))",
                      "text_6": "@workflow()?['tags']?['flowDisplayName']",
                      "text_8": "@items('Apply_to_each')?['name']"
                    },
                    "host": {
                      "workflowReferenceName": "05dc414d-78eb-ea11-a817-000d3a56b702"
                    }
                  },
                  "runAfter": {
                    "Condition": [
                      "Succeeded"
                    ]
                  },
                  "type": "Workflow"
                }
              },
              "foreach": "@body('Filter_array')",
              "runAfter": {
                "Filter_array": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Fetch_Localized_Build_Error_Notification": {
              "actions": {
                "Compose_3": {
                  "inputs": "@concat('firstName==',outputs('Get_Project_Owner_Details')?['body/firstname'],'##projectName==',outputs('Update_Project_Status')?['body/cat_name'],'##deploymentStageName==',outputs('DeploymentStageRecord')?['body/cat_name'])",
                  "runAfter": {
                    "Fetch_Localized_Subject": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose"
                },
                "Compose_4": {
                  "inputs": "@concat('projectName==',outputs('Update_Project_Status')?['body/cat_name'],'##deploymentStageName==',outputs('DeploymentStageRecord')?['body/cat_name'],'##flowName==',workflow()['tags']?['flowDisplayName'],'##flowRunId==',string(workflow()['run']?['name']),'##errorDetails==',variables('ErrorDetails'))",
                  "runAfter": {
                    "Fetch_Localized_User_Notification_Body": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose"
                },
                "Fetch_Localized_Admin_Notification_Body": {
                  "inputs": {
                    "body": {
                      "text": "deployToStageFlow3",
                      "text_2": "@outputs('Compose_4')"
                    },
                    "host": {
                      "workflowReferenceName": "4ada345e-9007-eb11-a813-000d3aa3e751"
                    }
                  },
                  "runAfter": {
                    "Compose_4": [
                      "Succeeded"
                    ]
                  },
                  "type": "Workflow"
                },
                "Fetch_Localized_Subject": {
                  "inputs": {
                    "body": {
                      "text": "deployToStageFlow1"
                    },
                    "host": {
                      "workflowReferenceName": "4ada345e-9007-eb11-a813-000d3aa3e751"
                    }
                  },
                  "runAfter": {},
                  "type": "Workflow"
                },
                "Fetch_Localized_User_Notification_Body": {
                  "inputs": {
                    "body": {
                      "text": "deployToStageFlow2",
                      "text_2": "@outputs('Compose_3')"
                    },
                    "host": {
                      "workflowReferenceName": "4ada345e-9007-eb11-a813-000d3aa3e751"
                    }
                  },
                  "runAfter": {
                    "Compose_3": [
                      "Succeeded"
                    ]
                  },
                  "type": "Workflow"
                }
              },
              "runAfter": {
                "Update_Project_Status": [
                  "Succeeded"
                ]
              },
              "type": "Scope"
            },
            "Filter_array": {
              "inputs": {
                "from": "@result('Try')",
                "where": "@or(equals(item()?['status'], 'Failed'), equals(item()?['status'], 'TimedOut'))"
              },
              "runAfter": {},
              "type": "Query"
            },
            "Send_Build_Error_Notification:_Admin": {
              "inputs": {
                "body": {
                  "text": "@outputs('DeploymentStageRecord')?['body/cat_stageowner']",
                  "text_1": "@outputs('Fetch_Localized_Subject')?['Body']?['localizedtext']",
                  "text_2": "@outputs('Fetch_Localized_Admin_Notification_Body')?['Body']?['localizedtext']"
                },
                "host": {
                  "workflowReferenceName": "4528dfaf-782e-eb11-a813-000d3a33febe"
                }
              },
              "runAfter": {
                "Send_Build_Error_Notification:_User": [
                  "Succeeded"
                ]
              },
              "type": "Workflow"
            },
            "Send_Build_Error_Notification:_User": {
              "inputs": {
                "body": {
                  "text": "@outputs('Get_Project_Owner_Details')?['body/domainname']",
                  "text_1": "@outputs('Fetch_Localized_Subject')?['Body']?['localizedtext']",
                  "text_2": "@outputs('Fetch_Localized_User_Notification_Body')?['Body']?['localizedtext']"
                },
                "host": {
                  "workflowReferenceName": "4528dfaf-782e-eb11-a813-000d3a33febe"
                }
              },
              "runAfter": {
                "Fetch_Localized_Build_Error_Notification": [
                  "Succeeded"
                ]
              },
              "type": "Workflow"
            },
            "Update_Build_Request": {
              "inputs": {
                "authentication": "@parameters('$authentication')",
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord"
                },
                "parameters": {
                  "entityName": "cat_buildrequests",
                  "item/cat_buildstatus": 809060003,
                  "item/cat_error": "@substring(variables('ErrorDetails'),0,min(length(variables('ErrorDetails')),3999))",
                  "recordId": "@outputs('Update_Build_Status_to_Started')?['body/cat_buildrequestid']"
                }
              },
              "runAfter": {
                "Apply_to_each": [
                  "Succeeded",
                  "Failed",
                  "Skipped",
                  "TimedOut"
                ]
              },
              "type": "OpenApiConnection"
            },
            "Update_Project_Status": {
              "inputs": {
                "authentication": "@parameters('$authentication')",
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord"
                },
                "parameters": {
                  "entityName": "cat_projects",
                  "item/cat_deploymentstatus": 809060008,
                  "item/cat_errormessage": "@substring(variables('ErrorDetails'),0,min(length(variables('ErrorDetails')),3999))",
                  "recordId": "@triggerOutputs()?['body/_cat_project_value']"
                }
              },
              "runAfter": {
                "Update_Build_Request": [
                  "Succeeded"
                ]
              },
              "type": "OpenApiConnection"
            }
          },
          "runAfter": {
            "Try": [
              "Failed",
              "TimedOut",
              "Skipped"
            ]
          },
          "type": "Scope"
        },
        "Finally": {
          "actions": {
            "Apply_to_each_2": {
              "actions": {
                "Append_to_string_variable_2": {
                  "inputs": {
                    "name": "ErrorDetails",
                    "value": "@outputs('Fetch_Localized_Error_Message')?['Body']?['localizedtext']"
                  },
                  "runAfter": {
                    "Fetch_Localized_Error_3": [
                      "Succeeded"
                    ]
                  },
                  "type": "AppendToStringVariable"
                },
                "Fetch_Localized_Error_3": {
                  "actions": {
                    "Compose_6": {
                      "inputs": "@concat('name==', items('Apply_to_each_2')?['name'], '##code==', items('Apply_to_each_2')?['code'], '##errorName==', items('Apply_to_each_2')?['outputs']?['body'])",
                      "runAfter": {},
                      "type": "Compose"
                    },
                    "Fetch_Localized_Error_Message": {
                      "inputs": {
                        "body": {
                          "text": "errorMessageFlow",
                          "text_2": "@outputs('Compose_6')"
                        },
                        "host": {
                          "workflowReferenceName": "4ada345e-9007-eb11-a813-000d3aa3e751"
                        }
                      },
                      "runAfter": {
                        "Compose_6": [
                          "Succeeded"
                        ]
                      },
                      "type": "Workflow"
                    }
                  },
                  "runAfter": {},
                  "type": "Scope"
                }
              },
              "foreach": "@body('Filter_array_2')",
              "runAfter": {
                "Filter_array_2": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Filter_array_2": {
              "inputs": {
                "from": "@result('Try')",
                "where": "@or(equals(item()?['status'], 'Failed'), equals(item()?['status'], 'TimedOut'))"
              },
              "runAfter": {},
              "type": "Query"
            }
          },
          "runAfter": {
            "Catch": [
              "Skipped",
              "Succeeded",
              "Failed",
              "TimedOut"
            ]
          },
          "type": "Scope"
        },
        "Initialize_CorrelationID": {
          "inputs": {
            "variables": [
              {
                "name": "CorrelationID",
                "type": "string",
                "value": "@{if(equals(workflow()?['run']?['name'], null), guid(), workflow()?['run']?['name'])}"
              }
            ]
          },
          "runAfter": {},
          "type": "InitializeVariable"
        },
        "Initialize_Create_Env_Error_Details": {
          "inputs": {
            "variables": [
              {
                "name": "CreateEnvironmentErrorDetails",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "Initialize_error_details": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_Dev_Environment_Secret_Name": {
          "inputs": {
            "variables": [
              {
                "name": "DevEnvironmentSecretName",
                "type": "string",
                "value": "DEV_ENVIRONMENT_SECRET"
              }
            ]
          },
          "runAfter": {
            "Target_Stage_Secret_Name": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_IsDevMode": {
          "inputs": {
            "variables": [
              {
                "name": "IsDevMode",
                "type": "string",
                "value": "true"
              }
            ]
          },
          "runAfter": {
            "Initialize_Create_Env_Error_Details": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_Notes_Variable": {
          "inputs": {
            "variables": [
              {
                "name": "Notes",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "Initialize_IsDevMode": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_error_details": {
          "inputs": {
            "variables": [
              {
                "name": "ErrorDetails",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "Branch_Name": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_variable": {
          "inputs": {
            "variables": [
              {
                "name": "repoName",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "Initialize_CorrelationID": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Target_Stage_Secret_Name": {
          "inputs": {
            "variables": [
              {
                "name": "TargetEnvironmentSecretName",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "Initialize_Notes_Variable": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Try": {
          "actions": {
            "Check_If_Deploying_to_Test": {
              "actions": {
                "Build_Environment_Id": {
                  "inputs": {
                    "authentication": "@parameters('$authentication')",
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "connectionName": "shared_commondataserviceforapps",
                      "operationId": "UpdateRecord"
                    },
                    "parameters": {
                      "entityName": "cat_buildrequests",
                      "item/cat_buildenvironment": "@outputs('Create_Build_Environment')?['Body']?['name']",
                      "recordId": "@triggerOutputs()?['body/cat_buildrequestid']"
                    }
                  },
                  "runAfter": {
                    "Get_a_dev_environment_record": [
                      "Succeeded"
                    ]
                  },
                  "type": "OpenApiConnection"
                },
                "Create_Build_Environment": {
                  "inputs": {
                    "body": {
                      "text": "BuildEnvFor@{outputs('Update_Project_Stage')?['body/cat_name']}",
                      "text_1": "@triggerOutputs()?['body/_ownerid_value']",
                      "text_2": "Yes",
                      "text_3": "@outputs('DeploymentStageRecord')?['body/cat_username']"
                    },
                    "host": {
                      "workflowReferenceName": "46735d3d-d2e1-ea11-a813-000d3a1abe26"
                    }
                  },
                  "runAfter": {},
                  "type": "Workflow"
                },
                "Create_a_repository_dispatch_event": {
                  "inputs": {
                    "authentication": "@parameters('$authentication')",
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_github",
                      "connectionName": "shared_github",
                      "operationId": "CreateRepositoryDispatchEvent"
                    },
                    "parameters": {
                      "body/client_payload": "@outputs('Event_Payload')",
                      "body/event_type": "deploy_to_test",
                      "repositoryName": "@variables('repoName')",
                      "repositoryOwner": "@outputs('Update_Project_Stage')?['body/cat_orgname']"
                    }
                  },
                  "runAfter": {
                    "Event_Payload": [
                      "Succeeded"
                    ]
                  },
                  "type": "OpenApiConnection"
                },
                "Event_Payload": {
                  "inputs": {
                    "branch": "@{outputs('Update_Project_Stage')?['body/cat_branchname']}",
                    "request": "{'requestid':'@{outputs('Build_Environment_Id')?['body/cat_buildrequestid']}', 'projectId': '@{outputs('Update_Project_Stage')?['body/cat_projectid']}', 'notes': '@{variables('Notes')}', 'buildenvironmentuserid':'@{outputs('DeploymentStageRecord')?['body/cat_username']}', 'buildenvironmentsecretname':'@{variables('DevEnvironmentSecretName')}', 'buildenvironmenturl':'@{outputs('Create_Build_Environment')?['Body']?['url']}'}",
                    "solutionname": "@{outputs('Update_Project_Stage')?['body/cat_solutionuniquename']}",
                    "sourceenvironmentsecretname": "@variables('DevEnvironmentSecretName')",
                    "sourceenvironmenturl": "@{outputs('Get_a_dev_environment_record')?['body/cat_url']}",
                    "sourceenvironmentuserid": "@{outputs('DeploymentStageRecord')?['body/cat_username']}",
                    "targetenvironmentsecretname": "@variables('TargetEnvironmentSecretName')",
                    "targetenvironmenturl": "@{triggerOutputs()?['body/cat_targetenvironmenturl']}",
                    "targetenvironmentuserid": "@{outputs('DeploymentStageRecord')?['body/cat_username']}",
                    "webhookurl": "@{outputs('Read_Notification_Webhook_Url')?['Body']?['envvalue']}"
                  },
                  "runAfter": {
                    "Build_Environment_Id": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose"
                },
                "Get_a_dev_environment_record": {
                  "inputs": {
                    "authentication": "@parameters('$authentication')",
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "connectionName": "shared_commondataserviceforapps",
                      "operationId": "GetItem"
                    },
                    "parameters": {
                      "entityName": "cat_devenvironments",
                      "recordId": "@outputs('Update_Project_Stage')?['body/_cat_environment_value']"
                    }
                  },
                  "runAfter": {
                    "Create_Build_Environment": [
                      "Succeeded"
                    ]
                  },
                  "type": "OpenApiConnection"
                },
                "Set_variable": {
                  "inputs": {
                    "name": "CreateEnvironmentErrorDetails",
                    "value": "@{string(outputs('Create_Build_Environment')?['Body'])}"
                  },
                  "runAfter": {
                    "Create_Build_Environment": [
                      "Failed",
                      "TimedOut"
                    ]
                  },
                  "type": "SetVariable"
                },
                "Update_Build_Request_2": {
                  "inputs": {
                    "authentication": "@parameters('$authentication')",
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "connectionName": "shared_commondataserviceforapps",
                      "operationId": "UpdateRecord"
                    },
                    "parameters": {
                      "entityName": "cat_buildrequests",
                      "item/cat_buildstatus": 809060005,
                      "recordId": "@outputs('Update_Build_Status_to_Started')?['body/cat_buildrequestid']"
                    }
                  },
                  "runAfter": {
                    "Create_a_repository_dispatch_event": [
                      "Succeeded"
                    ]
                  },
                  "type": "OpenApiConnection"
                },
                "Update_Project_Status_2": {
                  "inputs": {
                    "authentication": "@parameters('$authentication')",
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "connectionName": "shared_commondataserviceforapps",
                      "operationId": "UpdateRecord"
                    },
                    "parameters": {
                      "entityName": "cat_projects",
                      "item/cat_deploymentstatus": 809060012,
                      "recordId": "@triggerOutputs()?['body/_cat_project_value']"
                    }
                  },
                  "runAfter": {
                    "Update_Build_Request_2": [
                      "Succeeded"
                    ]
                  },
                  "type": "OpenApiConnection"
                }
              },
              "else": {
                "actions": {
                  "Compose": {
                    "inputs": "@{outputs('Update_Project_Stage')?['body/cat_orgname']}| @{variables('repoName')} | @{outputs('Update_Project_Stage')?['body/cat_branchname']}| | @{outputs('Update_Project_Stage')?['body/cat_name']}| @{outputs('Get_Project_Owner_Details')?['body/firstname']} | @{outputs('DeploymentStageRecord')?['body/cat_name']} | @{outputs('Update_Build_Status_to_Started')?['body/cat_targetenvironment']} | @{outputs('Update_Project_Stage')?['body/cat_solutionuniquename']} | @{outputs('Read_Notification_Webhook_Url')?['Body']?['envvalue']} | @{outputs('Get_Project_Owner_Details')?['body/domainname']} |  | @{triggerOutputs()?['body/cat_buildrequestid']} |  ;@{outputs('Read_Admin_Email')?['Body']?['envvalue']} | @{variables('CorrelationID')}",
                    "runAfter": {},
                    "type": "Compose"
                  },
                  "Run_a_Child_Flow": {
                    "inputs": {
                      "body": {
                        "text": "@outputs('Update_Project_Stage')?['body/cat_orgname']",
                        "text_1": "@variables('repoName')",
                        "text_10": "@outputs('Update_Project_Stage')?['body/cat_solutionuniquename']",
                        "text_11": "@outputs('Read_Notification_Webhook_Url')?['Body']?['envvalue']",
                        "text_12": "@outputs('Get_Project_Owner_Details')?['body/domainname']",
                        "text_13": "@outputs('Get_Repo_by_ID')?['body/html_url']",
                        "text_14": "@triggerOutputs()?['body/cat_buildrequestid']",
                        "text_15": "@variables('CorrelationID')",
                        "text_16": "@{outputs('DeploymentStageRecord')?['body/cat_stageowner']};@{outputs('Read_Admin_Email')?['Body']?['envvalue']}",
                        "text_17": "@triggerOutputs()?['body/cat_targetenvironmenturl']",
                        "text_18": "@outputs('DeploymentStageRecord')?['body/cat_username']",
                        "text_19": "@outputs('Target_Stage')?['body/cat_name']",
                        "text_2": "@outputs('Update_Project_Stage')?['body/cat_branchname']",
                        "text_3": "main",
                        "text_4": "@variables('Notes')",
                        "text_5": "@{outputs('Read_Admin_Email')?['Body']?['envvalue']};@{outputs('Target_Stage')?['body/cat_stageowner']}",
                        "text_6": "@outputs('Update_Project_Stage')?['body/cat_name']",
                        "text_7": "@{outputs('Get_Project_Owner_Details')?['body/firstname']} ",
                        "text_8": "@outputs('DeploymentStageRecord')?['body/cat_name']",
                        "text_9": "@outputs('Update_Build_Status_to_Started')?['body/cat_targetenvironment']"
                      },
                      "host": {
                        "workflowReferenceName": "076afc29-3ce8-ea11-a817-000d3a1abe26"
                      }
                    },
                    "runAfter": {
                      "Compose": [
                        "Succeeded"
                      ]
                    },
                    "type": "Workflow"
                  }
                }
              },
              "expression": {
                "not": {
                  "contains": [
                    "@toLower(outputs('DeploymentStageRecord')?['body/cat_name'])",
                    "prod"
                  ]
                }
              },
              "runAfter": {
                "Set_Repo_Name": [
                  "Succeeded"
                ]
              },
              "type": "If"
            },
            "Check_If_Deploying_to_Test_and_set_branch_name": {
              "actions": {
                "Set_Branch_Name_for_Test_Deployment": {
                  "inputs": {
                    "name": "branchName",
                    "value": "@{if( or(equals(outputs('Get_Project')?['body/cat_branchname'], ''), contains(toLower(outputs('Current_Stage')?['body/cat_name']), 'prod')) ,concat(concat(outputs('Get_Project_Owner_Details')?['body/firstname'], '_'), guid()), outputs('Get_Project')?['body/cat_branchname'])}"
                  },
                  "runAfter": {},
                  "type": "SetVariable"
                }
              },
              "else": {
                "actions": {
                  "Set_Branch_Name_variable_for_Prod_Deployment": {
                    "inputs": {
                      "name": "branchName",
                      "value": "@outputs('Get_Project')?['body/cat_branchname']"
                    },
                    "runAfter": {},
                    "type": "SetVariable"
                  }
                }
              },
              "expression": {
                "contains": [
                  "@toLower(outputs('Target_Stage')?['body/cat_name'])",
                  "test"
                ]
              },
              "runAfter": {
                "Set_Target_Stage_Secret_Name": [
                  "Succeeded"
                ]
              },
              "type": "If"
            },
            "Check_If_Notes_are_null": {
              "actions": {
                "Set_Default_Notes": {
                  "inputs": {
                    "name": "notes",
                    "value": "@{concat('deploy to ',toLower(outputs('DeploymentStageRecord')?['body/cat_name']))}"
                  },
                  "runAfter": {},
                  "type": "SetVariable"
                }
              },
              "else": {
                "actions": {
                  "Set_variable_Notes": {
                    "inputs": {
                      "name": "Notes",
                      "value": "@{trim(outputs('Html_to_text')?['body'])}"
                    },
                    "runAfter": {},
                    "type": "SetVariable"
                  }
                }
              },
              "expression": {
                "or": [
                  {
                    "equals": [
                      "@outputs('Html_to_text')?['body']",
                      "@null"
                    ]
                  },
                  {
                    "equals": [
                      "@trim(outputs('Html_to_text')?['body'])",
                      "@null"
                    ]
                  }
                ]
              },
              "runAfter": {
                "Html_to_text": [
                  "Succeeded",
                  "Failed"
                ]
              },
              "type": "If"
            },
            "Current_Stage": {
              "inputs": {
                "authentication": "@parameters('$authentication')",
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "GetItem"
                },
                "parameters": {
                  "entityName": "cat_deploymentstages",
                  "recordId": "@outputs('Get_Project')?['body/_cat_stage_value']"
                }
              },
              "runAfter": {
                "Get_Project": [
                  "Succeeded"
                ]
              },
              "runtimeConfiguration": {
                "secureData": {
                  "properties": [
                    "outputs"
                  ]
                }
              },
              "type": "OpenApiConnection"
            },
            "DeploymentStageRecord": {
              "inputs": {
                "authentication": "@parameters('$authentication')",
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "GetItem"
                },
                "parameters": {
                  "entityName": "cat_deploymentstages",
                  "recordId": "@triggerOutputs()?['body/_cat_stage_value']"
                }
              },
              "runAfter": {
                "Update_Build_Status_to_Started": [
                  "Succeeded"
                ]
              },
              "runtimeConfiguration": {
                "secureData": {
                  "properties": [
                    "outputs"
                  ]
                }
              },
              "type": "OpenApiConnection"
            },
            "Get_Project": {
              "inputs": {
                "authentication": "@parameters('$authentication')",
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "GetItem"
                },
                "parameters": {
                  "entityName": "cat_projects",
                  "recordId": "@triggerOutputs()?['body/_cat_project_value']"
                }
              },
              "runAfter": {
                "Get_Project_Owner_Details": [
                  "Succeeded"
                ]
              },
              "type": "OpenApiConnection"
            },
            "Get_Project_Owner_Details": {
              "inputs": {
                "authentication": "@parameters('$authentication')",
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "GetItem"
                },
                "parameters": {
                  "entityName": "systemusers",
                  "recordId": "@triggerOutputs()?['body/_ownerid_value']"
                }
              },
              "runAfter": {},
              "type": "OpenApiConnection"
            },
            "Get_Repo_by_ID": {
              "inputs": {
                "authentication": "@parameters('$authentication')",
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_github",
                  "connectionName": "shared_github",
                  "operationId": "GetRepositoryById"
                },
                "parameters": {
                  "repositoryId": "@outputs('Update_Project_Stage')?['body/cat_repoid']"
                }
              },
              "runAfter": {
                "Read_Admin_Email": [
                  "Succeeded"
                ]
              },
              "type": "OpenApiConnection"
            },
            "Html_to_text": {
              "inputs": {
                "authentication": "@parameters('$authentication')",
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_conversionservice",
                  "connectionName": "shared_conversionservice",
                  "operationId": "HtmlToText"
                },
                "parameters": {
                  "Content": "<p>@{triggerOutputs()?['body/cat_comment']}</p>"
                }
              },
              "runAfter": {
                "Update_Project_Stage": [
                  "Succeeded"
                ]
              },
              "type": "OpenApiConnection"
            },
            "Read_Admin_Email": {
              "inputs": {
                "body": {
                  "text": "admin_AdminMail"
                },
                "host": {
                  "workflowReferenceName": "b2b37f18-27e8-ea11-a817-000d3a56b702"
                }
              },
              "runAfter": {
                "Check_If_Notes_are_null": [
                  "Succeeded",
                  "Failed"
                ]
              },
              "type": "Workflow"
            },
            "Read_Notification_Webhook_Url": {
              "inputs": {
                "body": {
                  "text": "cat_WebhookUrl"
                },
                "host": {
                  "workflowReferenceName": "b2b37f18-27e8-ea11-a817-000d3a56b702"
                },
                "retryPolicy": {
                  "type": "none"
                }
              },
              "runAfter": {
                "Check_If_Deploying_to_Test_and_set_branch_name": [
                  "Succeeded"
                ]
              },
              "type": "Workflow"
            },
            "Set_Repo_Name": {
              "inputs": {
                "name": "repoName",
                "value": "@outputs('Get_Repo_by_ID')?['body/name']"
              },
              "runAfter": {
                "Get_Repo_by_ID": [
                  "Succeeded"
                ]
              },
              "type": "SetVariable"
            },
            "Set_Target_Stage_Secret_Name": {
              "inputs": {
                "name": "TargetEnvironmentSecretName",
                "value": "@{outputs('Target_Stage')?['body/cat_name']}_ENVIRONMENT_SECRET"
              },
              "runAfter": {
                "Target_Stage": [
                  "Succeeded"
                ]
              },
              "type": "SetVariable"
            },
            "Target_Stage": {
              "inputs": {
                "authentication": "@parameters('$authentication')",
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "GetItem"
                },
                "parameters": {
                  "entityName": "cat_deploymentstages",
                  "recordId": "@triggerOutputs()?['body/_cat_stage_value']"
                }
              },
              "runAfter": {
                "Current_Stage": [
                  "Succeeded"
                ]
              },
              "runtimeConfiguration": {
                "secureData": {
                  "properties": [
                    "outputs"
                  ]
                }
              },
              "type": "OpenApiConnection"
            },
            "Update_Build_Status_to_Started": {
              "inputs": {
                "authentication": "@parameters('$authentication')",
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord"
                },
                "parameters": {
                  "entityName": "cat_buildrequests",
                  "item/cat_buildstatus": 809060001,
                  "recordId": "@triggerOutputs()?['body/cat_buildrequestid']"
                }
              },
              "runAfter": {
                "Read_Notification_Webhook_Url": [
                  "Succeeded"
                ]
              },
              "type": "OpenApiConnection"
            },
            "Update_Project_Stage": {
              "inputs": {
                "authentication": "@parameters('$authentication')",
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord"
                },
                "parameters": {
                  "entityName": "cat_projects",
                  "item/cat_Stage@odata.bind": "@body('DeploymentStageRecord')?['@odata.editLink']",
                  "item/cat_branchname": "@variables('branchName')",
                  "item/cat_deploymentstatus": 809060010,
                  "recordId": "@outputs('Update_Build_Status_to_Started')?['body/_cat_project_value']"
                }
              },
              "runAfter": {
                "DeploymentStageRecord": [
                  "Succeeded"
                ]
              },
              "type": "OpenApiConnection"
            }
          },
          "runAfter": {
            "Initialize_Dev_Environment_Secret_Name": [
              "Succeeded"
            ]
          },
          "type": "Scope"
        }
      },
      "contentVersion": "1.0.0.0",
      "outputs": {},
      "parameters": {
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        }
      },
      "triggers": {
        "When_a_Build_Request_is_Created": {
          "inputs": {
            "authentication": "@parameters('$authentication')",
            "host": {
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
              "connectionName": "shared_commondataserviceforapps",
              "operationId": "SubscribeWebhookTrigger"
            },
            "parameters": {
              "subscriptionRequest/entityname": "cat_buildrequest",
              "subscriptionRequest/message": 1,
              "subscriptionRequest/scope": 2
            }
          },
          "type": "OpenApiConnectionWebhook"
        }
      }
    }
  },
  "schemaVersion": "1.0.0.0"
}
