{
  "properties": {
    "connectionReferences": {},
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "actions": {
        "Catch": {
          "actions": {
            "Apply_to_each_2": {
              "actions": {
                "Append_to_string_variable": {
                  "inputs": {
                    "name": "ErrorDetails",
                    "value": "@{body('Fetch_Localized_Error_Message')?['Body']?['localizedtext']}\n"
                  },
                  "runAfter": {
                    "Fetch_Localized_Error": [
                      "Succeeded"
                    ]
                  },
                  "type": "AppendToStringVariable"
                },
                "Fetch_Localized_Error": {
                  "actions": {
                    "Compose": {
                      "inputs": "@concat('name==',items('Apply_to_each_2')?['name'],'##code==',items('Apply_to_each_2')?['code'],'##errorName==',if(equals(null, items('Apply_to_each_2')?['outputs']?['body']), items('Apply_to_each_2')?['error'], items('Apply_to_each_2')?['outputs']?['body']))",
                      "runAfter": {},
                      "type": "Compose"
                    },
                    "Fetch_Localized_Error_Message": {
                      "inputs": {
                        "body": {
                          "text": "errorMessageFlow",
                          "text_2": "@outputs('Compose')"
                        },
                        "host": {
                          "workflowReferenceName": "4ada345e-9007-eb11-a813-000d3aa3e751"
                        }
                      },
                      "runAfter": {
                        "Compose": [
                          "Succeeded"
                        ]
                      },
                      "type": "Workflow"
                    }
                  },
                  "runAfter": {},
                  "type": "Scope"
                }
              },
              "foreach": "@body('Filter_array')",
              "runAfter": {
                "Filter_array": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Filter_array": {
              "inputs": {
                "from": "@result('Try')",
                "where": "@or(equals(item()?['status'], 'Failed'), equals(item()?['status'], 'TimedOut'))"
              },
              "runAfter": {},
              "type": "Query"
            }
          },
          "runAfter": {
            "Try": [
              "Failed",
              "Skipped",
              "TimedOut"
            ]
          },
          "type": "Scope"
        },
        "Initialize_error_details": {
          "inputs": {
            "variables": [
              {
                "name": "ErrorDetails",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "Run_a_Child_Flow": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_variable": {
          "inputs": {
            "variables": [
              {
                "name": "solution",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "Initialize_error_details": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_variable_2": {
          "inputs": {
            "variables": [
              {
                "name": "solutionName",
                "type": "string",
                "value": "solutionName"
              }
            ]
          },
          "runAfter": {
            "Initialize_variable": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Respond_to_a_PowerApp_or_flow": {
          "inputs": {
            "body": {
              "solutionid": "@variables('solution')",
              "solutionname": "@variables('solutionName')"
            },
            "schema": {
              "properties": {
                "solutionid": {
                  "title": "solutionId",
                  "type": "string",
                  "x-ms-dynamically-added": true
                },
                "solutionname": {
                  "title": "solutionName",
                  "type": "string",
                  "x-ms-dynamically-added": true
                }
              },
              "type": "object"
            },
            "statusCode": 200
          },
          "kind": "PowerApp",
          "runAfter": {
            "Try": [
              "Succeeded"
            ]
          },
          "type": "Response"
        },
        "Response": {
          "inputs": {
            "body": "@variables('ErrorDetails')",
            "statusCode": 501
          },
          "kind": "Http",
          "runAfter": {
            "Catch": [
              "Succeeded"
            ]
          },
          "type": "Response"
        },
        "Run_a_Child_Flow": {
          "inputs": {
            "body": {
              "text": "cat_clientId"
            },
            "host": {
              "workflowReferenceName": "b2b37f18-27e8-ea11-a817-000d3a56b702"
            }
          },
          "runAfter": {},
          "type": "Workflow"
        },
        "Try": {
          "actions": {
            "Apply_to_each": {
              "actions": {
                "Set_variable": {
                  "inputs": {
                    "name": "solution",
                    "value": "@items('Apply_to_each')?['solutionid']"
                  },
                  "runAfter": {},
                  "type": "SetVariable"
                },
                "Set_variable_2": {
                  "inputs": {
                    "name": "solutionName",
                    "value": "@items('Apply_to_each')?['uniquename']"
                  },
                  "runAfter": {
                    "Set_variable": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable"
                }
              },
              "foreach": "@body('Parse_JSON')?['value']",
              "runAfter": {
                "Parse_JSON": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Get_Solution_": {
              "inputs": {
                "headers": {
                  "authorization": "Bearer @{body('Get_Token')?['access_token']}"
                },
                "method": "GET",
                "uri": "@{triggerBody()['text']}api/data/v9.0/solutions?$filter=uniquename eq '@{triggerBody()['text_1']}'"
              },
              "runAfter": {
                "Get_Token": [
                  "Succeeded"
                ]
              },
              "runtimeConfiguration": {
                "secureData": {
                  "properties": [
                    "inputs"
                  ]
                }
              },
              "type": "Http"
            },
            "Get_Token": {
              "inputs": {
                "body": "client_id=@{outputs('Run_a_Child_Flow')?['Body']?['envvalue']}&resource=@{triggerBody()['text']}&grant_type=password&username=@{triggerBody()['text_2']}&password=@{triggerBody()['text_3']}",
                "headers": {
                  "Content-Type": "application/x-www-form-urlencoded"
                },
                "method": "POST",
                "uri": "https://login.microsoftonline.com/common/oauth2/token"
              },
              "runAfter": {},
              "runtimeConfiguration": {
                "secureData": {
                  "properties": [
                    "inputs"
                  ]
                }
              },
              "type": "Http"
            },
            "Parse_JSON": {
              "inputs": {
                "content": "@body('Get_Solution_')",
                "schema": {
                  "properties": {
                    "@@odata.context": {
                      "type": "string"
                    },
                    "value": {
                      "items": {
                        "properties": {
                          "@@odata.etag": {
                            "type": "string"
                          },
                          "_configurationpageid_value": {},
                          "_createdby_value": {
                            "type": "string"
                          },
                          "_createdonbehalfby_value": {},
                          "_modifiedby_value": {
                            "type": "string"
                          },
                          "_modifiedonbehalfby_value": {},
                          "_organizationid_value": {
                            "type": "string"
                          },
                          "_parentsolutionid_value": {},
                          "_publisherid_value": {
                            "type": "string"
                          },
                          "createdon": {
                            "type": "string"
                          },
                          "description": {},
                          "friendlyname": {
                            "type": "string"
                          },
                          "installedon": {
                            "type": "string"
                          },
                          "isapimanaged": {
                            "type": "boolean"
                          },
                          "ismanaged": {
                            "type": "boolean"
                          },
                          "isvisible": {
                            "type": "boolean"
                          },
                          "modifiedon": {
                            "type": "string"
                          },
                          "pinpointassetid": {},
                          "pinpointpublisherid": {},
                          "pinpointsolutiondefaultlocale": {},
                          "pinpointsolutionid": {},
                          "solutionid": {
                            "type": "string"
                          },
                          "solutionpackageversion": {},
                          "solutiontype": {},
                          "uniquename": {
                            "type": "string"
                          },
                          "updatedon": {},
                          "version": {
                            "type": "string"
                          },
                          "versionnumber": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "@@odata.etag",
                          "isapimanaged",
                          "_organizationid_value",
                          "versionnumber",
                          "solutionid",
                          "uniquename",
                          "friendlyname",
                          "_createdby_value",
                          "_publisherid_value",
                          "modifiedon",
                          "ismanaged",
                          "_modifiedby_value",
                          "isvisible",
                          "version",
                          "createdon",
                          "installedon",
                          "pinpointassetid",
                          "solutionpackageversion",
                          "_configurationpageid_value",
                          "_parentsolutionid_value",
                          "pinpointsolutionid",
                          "_modifiedonbehalfby_value",
                          "_createdonbehalfby_value",
                          "pinpointpublisherid",
                          "pinpointsolutiondefaultlocale",
                          "description",
                          "updatedon",
                          "solutiontype"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "runAfter": {
                "Get_Solution_": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson"
            }
          },
          "runAfter": {
            "Initialize_variable_2": [
              "Succeeded"
            ]
          },
          "type": "Scope"
        }
      },
      "contentVersion": "1.0.0.0",
      "outputs": {},
      "parameters": {
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        }
      },
      "triggers": {
        "manual": {
          "inputs": {
            "schema": {
              "properties": {
                "text": {
                  "description": "Please enter your input",
                  "title": "envUrl",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "text_1": {
                  "description": "Please enter your input",
                  "title": "solutionName",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "text_2": {
                  "description": "Please enter your input",
                  "title": "username",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "text_3": {
                  "description": "Please enter your input",
                  "title": "password",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                }
              },
              "required": [
                "text",
                "text_1",
                "text_2",
                "text_3"
              ],
              "type": "object"
            }
          },
          "kind": "Button",
          "runtimeConfiguration": {
            "secureData": {
              "properties": [
                "inputs",
                "outputs"
              ]
            }
          },
          "type": "Request"
        }
      }
    }
  },
  "schemaVersion": "1.0.0.0"
}
