{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps": {
        "api": {
          "name": "shared_commondataserviceforapps"
        },
        "connection": {
          "connectionReferenceLogicalName": "cat_CDSConnection"
        },
        "runtimeSource": "embedded"
      },
      "shared_github": {
        "api": {
          "name": "shared_github"
        },
        "connection": {
          "connectionReferenceLogicalName": "cat_GitHub"
        },
        "runtimeSource": "embedded"
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "actions": {
        "Dependent_Stage_Env_URL": {
          "inputs": {
            "variables": [
              {
                "name": "DependentStageEnvURL",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "Dependent_Stage_Owner_Name": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Dependent_Stage_Owner_Name": {
          "inputs": {
            "variables": [
              {
                "name": "DependentStageOwnerName",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "Dependent_Stage_Secret_Name": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Dependent_Stage_Secret_Name": {
          "inputs": {
            "variables": [
              {
                "name": "DependentStageSecretName",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "Dev_stage_environment_URL": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Dev_stage_environment_URL": {
          "inputs": {
            "variables": [
              {
                "name": "DevStageEnvURL",
                "type": "string",
                "value": "@triggerBody()['text_5']"
              }
            ]
          },
          "runAfter": {
            "Dev_stage_owner_name": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Dev_stage_owner_name": {
          "inputs": {
            "variables": [
              {
                "name": "DevStageOwnerName",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "Dev_stage_secret_name": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Dev_stage_secret_name": {
          "inputs": {
            "variables": [
              {
                "name": "DevStageSecretName",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "Initialize_variable": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_error_details": {
          "inputs": {
            "variables": [
              {
                "name": "ErrorDetails",
                "type": "string"
              }
            ]
          },
          "runAfter": {},
          "type": "InitializeVariable"
        },
        "Initialize_variable": {
          "inputs": {
            "variables": [
              {
                "name": "solutions",
                "type": "array"
              }
            ]
          },
          "runAfter": {
            "Initialize_error_details": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Respond_to_a_PowerApp_or_flow": {
          "inputs": {
            "body": {
              "issuccess": "true"
            },
            "schema": {
              "properties": {
                "issuccess": {
                  "title": "isSuccess",
                  "type": "string",
                  "x-ms-dynamically-added": true
                }
              },
              "type": "object"
            },
            "statusCode": 200
          },
          "kind": "PowerApp",
          "runAfter": {
            "Try": [
              "Succeeded",
              "Failed",
              "Skipped",
              "TimedOut"
            ]
          },
          "type": "Response"
        },
        "Try": {
          "actions": {
            "Apply_to_each_Dev_Records": {
              "actions": {
                "Set_Dev_Stage_Owner_Name": {
                  "inputs": {
                    "name": "DevStageOwnerName",
                    "value": "@items('Apply_to_each_Dev_Records')?['cat_username']"
                  },
                  "runAfter": {
                    "Set_Dev_Stage_Secret_name": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable"
                },
                "Set_Dev_Stage_Secret_name": {
                  "inputs": {
                    "name": "DevStageSecretName",
                    "value": "@{items('Apply_to_each_Dev_Records')?['cat_name']}_ENVIRONMENT_SECRET"
                  },
                  "runAfter": {},
                  "type": "SetVariable"
                }
              },
              "foreach": "@outputs('_List_Top(1)_Dev_record')?['body/value']",
              "runAfter": {
                "_List_Top(1)_Dev_record": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Condition": {
              "actions": {},
              "else": {
                "actions": {
                  "Terminate": {
                    "inputs": {
                      "runStatus": "Succeeded"
                    },
                    "runAfter": {},
                    "type": "Terminate"
                  }
                }
              },
              "expression": {
                "equals": [
                  "@toLower(outputs('Read_GitHubOrgPlanExist_Environment_variable')?['Body']?['envvalue'])",
                  "yes"
                ]
              },
              "runAfter": {
                "Read_GitHubOrgPlanExist_Environment_variable": [
                  "Succeeded"
                ]
              },
              "type": "If"
            },
            "List_records": {
              "inputs": {
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords"
                },
                "parameters": {
                  "$top": 5,
                  "entityName": "cat_dependencies"
                }
              },
              "runAfter": {},
              "type": "OpenApiConnection"
            },
            "Read_Dependent_Environment_GH_Secret_Name_Environment_variable": {
              "inputs": {
                "body": {
                  "text": "cat_DepndentEnvironmentSecretName"
                },
                "host": {
                  "workflowReferenceName": "b2b37f18-27e8-ea11-a817-000d3a56b702"
                }
              },
              "runAfter": {
                "Read_Dependent_Environment_URL_Environment_variable": [
                  "Succeeded"
                ]
              },
              "type": "Workflow"
            },
            "Read_Dependent_Environment_URL_Environment_variable": {
              "inputs": {
                "body": {
                  "text": "cat_DependentEnvironmentUrl"
                },
                "host": {
                  "workflowReferenceName": "b2b37f18-27e8-ea11-a817-000d3a56b702"
                }
              },
              "runAfter": {
                "Read_WebHookUrl_Environment_variable": [
                  "Succeeded"
                ]
              },
              "type": "Workflow"
            },
            "Read_Dependent_Environment_UserId_Environment_variable": {
              "inputs": {
                "body": {
                  "text": "cat_DependentEnvironmentUserId"
                },
                "host": {
                  "workflowReferenceName": "b2b37f18-27e8-ea11-a817-000d3a56b702"
                }
              },
              "runAfter": {
                "Read_Dependent_Environment_GH_Secret_Name_Environment_variable": [
                  "Succeeded"
                ]
              },
              "type": "Workflow"
            },
            "Read_GitHubOrgPlanExist_Environment_variable": {
              "inputs": {
                "body": {
                  "text": "cat_GitHubOrgPlanExist"
                },
                "host": {
                  "workflowReferenceName": "b2b37f18-27e8-ea11-a817-000d3a56b702"
                }
              },
              "runAfter": {
                "List_records": [
                  "Succeeded"
                ]
              },
              "type": "Workflow"
            },
            "Read_WebHookUrl_Environment_variable": {
              "inputs": {
                "body": {
                  "text": "cat_WebhookUrl"
                },
                "host": {
                  "workflowReferenceName": "b2b37f18-27e8-ea11-a817-000d3a56b702"
                }
              },
              "runAfter": {
                "Condition": [
                  "Succeeded"
                ]
              },
              "type": "Workflow"
            },
            "Set_Dependent_Env._URL": {
              "inputs": {
                "name": "DependentStageEnvURL",
                "value": "@outputs('Read_Dependent_Environment_URL_Environment_variable')?['Body']?['envvalue']"
              },
              "runAfter": {
                "Apply_to_each_Dev_Records": [
                  "Succeeded"
                ]
              },
              "type": "SetVariable"
            },
            "Set_Dependent_Secret_Name": {
              "inputs": {
                "name": "DependentStageSecretName",
                "value": "@outputs('Read_Dependent_Environment_GH_Secret_Name_Environment_variable')?['Body']?['envvalue']"
              },
              "runAfter": {
                "Set_Dependent_Env._URL": [
                  "Succeeded"
                ]
              },
              "type": "SetVariable"
            },
            "Set_Dependent_User_Name": {
              "inputs": {
                "name": "DependentStageOwnerName",
                "value": "@outputs('Read_Dependent_Environment_UserId_Environment_variable')?['Body']?['envvalue']"
              },
              "runAfter": {
                "Set_Dependent_Secret_Name": [
                  "Succeeded"
                ]
              },
              "type": "SetVariable"
            },
            "Trigger_workflow_for_each_dependency": {
              "actions": {
                "Prepare_JSON_Payload": {
                  "inputs": {
                    "projectid": "@triggerBody()['text_3']",
                    "requestid": "@triggerBody()['text_4']",
                    "solutionname": "@items('Trigger_workflow_for_each_dependency')?['cat_uniquesolutionname']",
                    "sourceenvironmenturl": "@variables('DependentStageEnvURL')",
                    "sourcepasswordsecretname": "@variables('DependentStageSecretName')",
                    "sourceusername": "@variables('DependentStageOwnerName')",
                    "targetenvironmenturl": "@variables('DevStageEnvURL')",
                    "targetpasswordsecretname": "@variables('DevStageSecretName')",
                    "targetusername": "@variables('DevStageOwnerName')",
                    "webhookurl": "@outputs('Read_WebHookUrl_Environment_variable')?['Body']?['envvalue']"
                  },
                  "runAfter": {},
                  "type": "Compose"
                },
                "Trigger_event_to_deploy_dependent_solution_to_dev_env": {
                  "inputs": {
                    "authentication": {
                      "type": "Raw",
                      "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_github",
                      "connectionName": "shared_github",
                      "operationId": "CreateRepositoryDispatchEvent"
                    },
                    "parameters": {
                      "body/client_payload": "@outputs('Prepare_JSON_Payload')",
                      "body/event_type": "setup-dev-env",
                      "repositoryName": "@triggerBody()['text_1']",
                      "repositoryOwner": "@triggerBody()['text']"
                    }
                  },
                  "runAfter": {
                    "Prepare_JSON_Payload": [
                      "Succeeded"
                    ]
                  },
                  "type": "OpenApiConnection"
                }
              },
              "foreach": "@outputs('List_records')?['body/value']",
              "runAfter": {
                "Set_Dependent_User_Name": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "_List_Top(1)_Dev_record": {
              "inputs": {
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords"
                },
                "parameters": {
                  "$filter": "contains(cat_name, 'DEV')",
                  "$top": 1,
                  "entityName": "cat_deploymentstages"
                }
              },
              "runAfter": {
                "Read_Dependent_Environment_UserId_Environment_variable": [
                  "Succeeded"
                ]
              },
              "type": "OpenApiConnection"
            }
          },
          "runAfter": {
            "Dependent_Stage_Env_URL": [
              "Succeeded"
            ]
          },
          "type": "Scope"
        },
        "catch": {
          "actions": {
            "Apply_to_each": {
              "actions": {
                "Append_to_string_variable": {
                  "inputs": {
                    "name": "ErrorDetails",
                    "value": "@outputs('FetchLocalizedText')?['Body']?['localizedtext']"
                  },
                  "runAfter": {
                    "Fetch_Localized_Error": [
                      "Succeeded"
                    ]
                  },
                  "type": "AppendToStringVariable"
                },
                "Fetch_Localized_Error": {
                  "actions": {
                    "Compose": {
                      "inputs": "@concat('name==',items('Apply_to_each')?['name'],'##code==',items('Apply_to_each')?['code'],'##errorName==',items('Apply_to_each')?['outputs']?['body'])",
                      "runAfter": {},
                      "type": "Compose"
                    },
                    "FetchLocalizedText": {
                      "inputs": {
                        "body": {
                          "text": "errorMessageFlow",
                          "text_2": "@outputs('Compose')"
                        },
                        "host": {
                          "workflowReferenceName": "4ada345e-9007-eb11-a813-000d3aa3e751"
                        }
                      },
                      "runAfter": {
                        "Compose": [
                          "Succeeded"
                        ]
                      },
                      "type": "Workflow"
                    }
                  },
                  "runAfter": {},
                  "type": "Scope"
                }
              },
              "foreach": "@body('Filter_array')",
              "runAfter": {
                "Filter_array": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Fetch_Localized_Email_Notification": {
              "actions": {
                "Compose_Body": {
                  "inputs": "@concat('projectId==',triggerBody()['text_3'],'##errorDetails==',variables('ErrorDetails'))",
                  "runAfter": {
                    "Fetch_Localized_Subject": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose"
                },
                "Fetch_Localized_Body": {
                  "inputs": {
                    "body": {
                      "text": "setUpDevEnvironmentFlow2",
                      "text_2": "@outputs('Compose_Body')"
                    },
                    "host": {
                      "workflowReferenceName": "4ada345e-9007-eb11-a813-000d3aa3e751"
                    }
                  },
                  "runAfter": {
                    "Compose_Body": [
                      "Succeeded"
                    ]
                  },
                  "type": "Workflow"
                },
                "Fetch_Localized_Subject": {
                  "inputs": {
                    "body": {
                      "text": "setUpDevEnvironmentFlow1"
                    },
                    "host": {
                      "workflowReferenceName": "4ada345e-9007-eb11-a813-000d3aa3e751"
                    }
                  },
                  "runAfter": {},
                  "type": "Workflow"
                }
              },
              "runAfter": {
                "Apply_to_each": [
                  "Succeeded"
                ]
              },
              "type": "Scope"
            },
            "Filter_array": {
              "inputs": {
                "from": "@result('Try')",
                "where": "@or(equals(item()?['status'], 'Failed'), equals(item()?['status'], 'TimedOut'))"
              },
              "runAfter": {},
              "type": "Query"
            },
            "Send_Email_Notifications": {
              "inputs": {
                "body": {
                  "text": "@triggerBody()['text_2']",
                  "text_1": "@outputs('Fetch_Localized_Subject')?['Body']?['localizedtext']",
                  "text_2": "@outputs('Fetch_Localized_Body')?['Body']?['localizedtext']"
                },
                "host": {
                  "workflowReferenceName": "4528dfaf-782e-eb11-a813-000d3a33febe"
                }
              },
              "runAfter": {
                "Fetch_Localized_Email_Notification": [
                  "Succeeded"
                ]
              },
              "type": "Workflow"
            }
          },
          "runAfter": {
            "Try": [
              "Failed",
              "Skipped",
              "TimedOut"
            ]
          },
          "type": "Scope"
        }
      },
      "contentVersion": "1.0.0.0",
      "outputs": {},
      "parameters": {
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        }
      },
      "triggers": {
        "manual": {
          "inputs": {
            "schema": {
              "properties": {
                "text": {
                  "description": "Organization name",
                  "title": "orgName",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "text_1": {
                  "description": "Repository name",
                  "title": "repoName",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "text_2": {
                  "description": "email ids for notification",
                  "title": "emails",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "text_3": {
                  "description": "project id",
                  "title": "projectid",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "text_4": {
                  "description": "request id",
                  "title": "requestId",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "text_5": {
                  "description": "Please enter your input",
                  "title": "devEnvironmentUrl",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                }
              },
              "required": [
                "text",
                "text_1",
                "text_2",
                "text_3",
                "text_4",
                "text_5"
              ],
              "type": "object"
            }
          },
          "kind": "Button",
          "type": "Request"
        }
      }
    }
  },
  "schemaVersion": "1.0.0.0"
}
