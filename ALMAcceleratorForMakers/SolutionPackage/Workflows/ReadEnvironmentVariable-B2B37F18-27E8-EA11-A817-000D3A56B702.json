{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps": {
        "api": {
          "name": "shared_commondataserviceforapps"
        },
        "connection": {
          "connectionReferenceLogicalName": "cat_CDSConnection"
        },
        "runtimeSource": "embedded",
        "source": "Embedded"
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "actions": {
        "Initialize_variable": {
          "inputs": {
            "variables": [
              {
                "name": "value",
                "type": "string"
              }
            ]
          },
          "runAfter": {},
          "type": "InitializeVariable"
        },
        "Respond_to_a_PowerApp_or_flow": {
          "inputs": {
            "body": {
              "envvalue": "@variables('value')",
              "issuccess": "@{true}",
              "message": "Env Value for @{triggerBody()['text']} is @{variables('value')}"
            },
            "schema": {
              "properties": {
                "envvalue": {
                  "title": "envValue",
                  "type": "string",
                  "x-ms-dynamically-added": true
                },
                "issuccess": {
                  "title": "isSuccess",
                  "type": "string",
                  "x-ms-dynamically-added": true
                },
                "message": {
                  "title": "message",
                  "type": "string",
                  "x-ms-dynamically-added": true
                }
              },
              "type": "object"
            },
            "statusCode": 200
          },
          "kind": "PowerApp",
          "runAfter": {
            "Scope_2": [
              "Succeeded"
            ]
          },
          "type": "Response"
        },
        "Response": {
          "inputs": {
            "body": "Error Getting Value for @{triggerBody()['text']}. Please check ReadEnvironmentVaribale flow",
            "statusCode": 409
          },
          "kind": "Http",
          "runAfter": {
            "Scope_2": [
              "Skipped",
              "Failed",
              "TimedOut"
            ]
          },
          "type": "Response"
        },
        "Scope_2": {
          "actions": {
            "Condition": {
              "actions": {
                "Apply_to_each_2": {
                  "actions": {
                    "Set_variable": {
                      "inputs": {
                        "name": "value",
                        "value": "@items('Apply_to_each_2')?['defaultvalue']"
                      },
                      "runAfter": {},
                      "type": "SetVariable"
                    }
                  },
                  "foreach": "@outputs('GetDefinitions_2')?['body/value']",
                  "runAfter": {},
                  "type": "Foreach"
                }
              },
              "else": {
                "actions": {
                  "Apply_to_each_3": {
                    "actions": {
                      "Set_Environment_Variable_2": {
                        "inputs": {
                          "name": "value",
                          "value": "@items('Apply_to_each_3')?['value']"
                        },
                        "runAfter": {},
                        "type": "SetVariable"
                      }
                    },
                    "foreach": "@outputs('Get_Value_2')?['body/value']",
                    "runAfter": {},
                    "type": "Foreach"
                  }
                }
              },
              "expression": {
                "equals": [
                  "@length(outputs('Get_Value_2')?['body/value'])",
                  0
                ]
              },
              "runAfter": {
                "Get_Value_2": [
                  "Succeeded"
                ]
              },
              "type": "If"
            },
            "GetDefinitions_2": {
              "inputs": {
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords"
                },
                "parameters": {
                  "$filter": "schemaname eq '@{triggerBody()['text']}'",
                  "entityName": "environmentvariabledefinitions"
                }
              },
              "runAfter": {},
              "type": "OpenApiConnection"
            },
            "Get_Value_2": {
              "inputs": {
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords"
                },
                "parameters": {
                  "$filter": "_environmentvariabledefinitionid_value eq '@{if(equals(outputs('GetDefinitions_2')['body/value']?[0]?['environmentvariabledefinitionid'], null), guid(), outputs('GetDefinitions_2')['body/value']?[0]?['environmentvariabledefinitionid'])}'",
                  "$select": "value",
                  "$top": 1,
                  "entityName": "environmentvariablevalues"
                }
              },
              "runAfter": {
                "GetDefinitions_2": [
                  "Succeeded"
                ]
              },
              "type": "OpenApiConnection"
            }
          },
          "runAfter": {
            "Initialize_variable": [
              "Succeeded"
            ]
          },
          "type": "Scope"
        }
      },
      "contentVersion": "1.0.0.0",
      "outputs": {},
      "parameters": {
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        }
      },
      "triggers": {
        "manual": {
          "inputs": {
            "schema": {
              "properties": {
                "text": {
                  "description": "varName",
                  "title": "varName",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                }
              },
              "required": [
                "text"
              ],
              "type": "object"
            }
          },
          "kind": "Button",
          "type": "Request"
        }
      }
    }
  },
  "schemaVersion": "1.0.0.0"
}
