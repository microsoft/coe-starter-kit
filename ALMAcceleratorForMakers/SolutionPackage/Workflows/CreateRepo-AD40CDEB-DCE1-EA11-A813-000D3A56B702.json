{
  "properties": {
    "connectionReferences": {
      "shared_github_1": {
        "api": {
          "name": "shared_github"
        },
        "connection": {
          "connectionReferenceLogicalName": "cat_GitHub"
        },
        "runtimeSource": "embedded"
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "actions": {
        "Create_a_repository": {
          "inputs": {
            "authentication": {
              "type": "Raw",
              "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
            },
            "host": {
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_github",
              "connectionName": "shared_github_1",
              "operationId": "CreateRepositoryUsingTemplate"
            },
            "parameters": {
              "body/name": "@variables('repoNameRetry')",
              "body/owner": "@triggerBody()['text_2']",
              "body/private": true,
              "templateOwner": "@first(split(outputs('Get_Template_Repo_Name')?['Body']?['envvalue'], '/'))",
              "templateRepository": "@last(split(outputs('Get_Template_Repo_Name')?['Body']?['envvalue'], '/'))"
            }
          },
          "runAfter": {
            "Get_Template_Repo": [
              "Succeeded"
            ]
          },
          "type": "OpenApiConnection"
        },
        "Fetch_Localized_Response": {
          "inputs": {
            "body": {
              "text": "createRepoFlow1"
            },
            "host": {
              "workflowReferenceName": "4ada345e-9007-eb11-a813-000d3aa3e751"
            }
          },
          "runAfter": {
            "Get_Template_Repo": [
              "Failed",
              "Skipped",
              "TimedOut"
            ]
          },
          "type": "Workflow"
        },
        "Fetch_Localized_Response_Message": {
          "actions": {
            "Compose_2": {
              "inputs": "@concat('repoName==', triggerBody()['text_1'], '##repoId==', variables('repoId'))",
              "runAfter": {},
              "type": "Compose"
            },
            "Fetch_Localized_Response_4": {
              "inputs": {
                "body": {
                  "text": "createRepoFlow3",
                  "text_2": "@outputs('Compose_2')"
                },
                "host": {
                  "workflowReferenceName": "4ada345e-9007-eb11-a813-000d3aa3e751"
                }
              },
              "runAfter": {
                "Compose_2": [
                  "Succeeded"
                ]
              },
              "type": "Workflow"
            }
          },
          "runAfter": {
            "Scope": [
              "Succeeded"
            ]
          },
          "type": "Scope"
        },
        "Fetch_Localized_Response_Message_2": {
          "actions": {
            "Compose": {
              "inputs": "@concat('repoName==',triggerBody()['text_1'])",
              "runAfter": {},
              "type": "Compose"
            },
            "Fetch_Localized_Response_2": {
              "inputs": {
                "body": {
                  "text": "createRepoFlow2",
                  "text_2": "@outputs('Compose')"
                },
                "host": {
                  "workflowReferenceName": "4ada345e-9007-eb11-a813-000d3aa3e751"
                }
              },
              "runAfter": {
                "Compose": [
                  "Succeeded"
                ]
              },
              "type": "Workflow"
            }
          },
          "runAfter": {
            "Scope": [
              "Failed"
            ]
          },
          "type": "Scope"
        },
        "Fetch_Localized_Response_Message_3": {
          "actions": {
            "Compose_3": {
              "inputs": "@concat('repoName==', triggerBody()['text_1'], '##repoId==', outputs('Create_a_repository')?['body/id'])",
              "runAfter": {},
              "type": "Compose"
            },
            "Fetch_Localized_Response_3": {
              "inputs": {
                "body": {
                  "text": "createRepoFlow3",
                  "text_2": "@outputs('Compose_3')"
                },
                "host": {
                  "workflowReferenceName": "4ada345e-9007-eb11-a813-000d3aa3e751"
                }
              },
              "runAfter": {
                "Compose_3": [
                  "Succeeded"
                ]
              },
              "type": "Workflow"
            }
          },
          "runAfter": {
            "Set_RepoId": [
              "Succeeded"
            ]
          },
          "type": "Scope"
        },
        "Get_Template_Repo": {
          "actions": {
            "Get_Template_Repo_Name": {
              "inputs": {
                "body": {
                  "text": "cat_TemplateRepoName"
                },
                "host": {
                  "workflowReferenceName": "b2b37f18-27e8-ea11-a817-000d3a56b702"
                }
              },
              "runAfter": {},
              "type": "Workflow"
            }
          },
          "runAfter": {
            "Initialize_variable_5": [
              "Succeeded"
            ]
          },
          "type": "Scope"
        },
        "Initialize_variable": {
          "inputs": {
            "variables": [
              {
                "name": "number",
                "type": "array",
                "value": "@createArray('1')"
              }
            ]
          },
          "runAfter": {
            "Initialize_variable_2": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_variable_2": {
          "inputs": {
            "variables": [
              {
                "name": "temp",
                "type": "string",
                "value": "@triggerBody()['text_1']"
              }
            ]
          },
          "runAfter": {
            "Initialize_variable_3": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_variable_3": {
          "inputs": {
            "variables": [
              {
                "name": "repoNameRetry",
                "type": "string",
                "value": "@triggerBody()['text_1']"
              }
            ]
          },
          "runAfter": {},
          "type": "InitializeVariable"
        },
        "Initialize_variable_4": {
          "inputs": {
            "variables": [
              {
                "name": "repoFound",
                "type": "string",
                "value": "false"
              }
            ]
          },
          "runAfter": {
            "Initialize_variable": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_variable_5": {
          "inputs": {
            "variables": [
              {
                "name": "repoId",
                "type": "integer",
                "value": 0
              }
            ]
          },
          "runAfter": {
            "Initialize_variable_4": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Respond_with_Success": {
          "inputs": {
            "body": {
              "issuccess": "@{true}",
              "message": "@outputs('Fetch_Localized_Response_4')?['Body']?['localizedtext']",
              "repoid": "@{variables('repoId')}",
              "reponame": "@variables('repoNameRetry')"
            },
            "schema": {
              "properties": {
                "issuccess": {
                  "title": "isSuccess",
                  "type": "string",
                  "x-ms-dynamically-added": true
                },
                "message": {
                  "title": "message",
                  "type": "string",
                  "x-ms-dynamically-added": true
                },
                "repoid": {
                  "title": "repoId",
                  "type": "string",
                  "x-ms-dynamically-added": true
                },
                "reponame": {
                  "title": "repoName",
                  "type": "string",
                  "x-ms-dynamically-added": true
                }
              },
              "type": "object"
            },
            "statusCode": 200
          },
          "kind": "PowerApp",
          "runAfter": {
            "Fetch_Localized_Response_Message": [
              "Succeeded"
            ]
          },
          "type": "Response"
        },
        "Respond_with_Success_2": {
          "inputs": {
            "body": {
              "issuccess": "@{true}",
              "message": "@outputs('Fetch_Localized_Response_3')?['Body']?['localizedtext']",
              "repoid": "@{outputs('Create_a_repository')?['body/id']}",
              "reponame": "@variables('repoNameRetry')"
            },
            "schema": {
              "properties": {
                "issuccess": {
                  "title": "isSuccess",
                  "type": "string",
                  "x-ms-dynamically-added": true
                },
                "message": {
                  "title": "message",
                  "type": "string",
                  "x-ms-dynamically-added": true
                },
                "repoid": {
                  "title": "repoId",
                  "type": "string",
                  "x-ms-dynamically-added": true
                },
                "reponame": {
                  "title": "repoName",
                  "type": "string",
                  "x-ms-dynamically-added": true
                }
              },
              "type": "object"
            },
            "statusCode": 200
          },
          "kind": "PowerApp",
          "runAfter": {
            "Fetch_Localized_Response_Message_3": [
              "Succeeded"
            ]
          },
          "type": "Response"
        },
        "Response_with_Environment_Variable_Reading_Error": {
          "inputs": {
            "body": "@body('Fetch_Localized_Response')?['Body']?['localizedtext']",
            "statusCode": 409
          },
          "kind": "Http",
          "runAfter": {
            "Fetch_Localized_Response": [
              "Succeeded"
            ]
          },
          "type": "Response"
        },
        "Response_with_Repo_Creation_Error": {
          "inputs": {
            "body": "@outputs('Fetch_Localized_Response_2')?['Body']?['localizedtext']",
            "statusCode": 500
          },
          "kind": "Http",
          "runAfter": {
            "Fetch_Localized_Response_Message_2": [
              "Succeeded"
            ]
          },
          "type": "Response"
        },
        "Scope": {
          "actions": {
            "Create_a_repository_2": {
              "inputs": {
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_github",
                  "connectionName": "shared_github_1",
                  "operationId": "CreateRepositoryUsingTemplate"
                },
                "parameters": {
                  "body/name": "@variables('repoNameRetry')",
                  "body/owner": "@triggerBody()['text_2']",
                  "body/private": true,
                  "templateOwner": "@first(split(outputs('Get_Template_Repo_Name')?['Body']?['envvalue'], '/'))",
                  "templateRepository": "@last(split(outputs('Get_Template_Repo_Name')?['Body']?['envvalue'], '/'))"
                }
              },
              "runAfter": {
                "Set_variable": [
                  "Succeeded"
                ]
              },
              "type": "OpenApiConnection"
            },
            "Set_RepoId_2": {
              "inputs": {
                "name": "repoId",
                "value": "@outputs('Create_a_repository_2')?['body/id']"
              },
              "runAfter": {
                "Create_a_repository_2": [
                  "Succeeded"
                ]
              },
              "type": "SetVariable"
            },
            "Set_variable": {
              "inputs": {
                "name": "repoNameRetry",
                "value": "@variables('temp')"
              },
              "runAfter": {
                "Set_variable_5": [
                  "Succeeded"
                ]
              },
              "type": "SetVariable"
            },
            "Set_variable_5": {
              "inputs": {
                "name": "temp",
                "value": "@{concat(concat(variables('repoNameRetry'), '_'), guid())}"
              },
              "runAfter": {},
              "type": "SetVariable"
            }
          },
          "runAfter": {
            "Create_a_repository": [
              "Failed"
            ]
          },
          "type": "Scope"
        },
        "Set_RepoId": {
          "inputs": {
            "name": "repoId",
            "value": "@outputs('Create_a_repository')?['body/id']"
          },
          "runAfter": {
            "Create_a_repository": [
              "Succeeded"
            ]
          },
          "type": "SetVariable"
        },
        "Terminate": {
          "inputs": {
            "runStatus": "Succeeded"
          },
          "runAfter": {
            "Respond_with_Success": [
              "Succeeded"
            ]
          },
          "type": "Terminate"
        }
      },
      "contentVersion": "1.0.0.0",
      "outputs": {},
      "parameters": {
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        }
      },
      "triggers": {
        "manual": {
          "inputs": {
            "schema": {
              "properties": {
                "text": {
                  "description": "input",
                  "title": "EnvUrl",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "text_1": {
                  "description": "repoName",
                  "title": "repoName",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "text_2": {
                  "description": "orgName",
                  "title": "orgName",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                }
              },
              "required": [
                "text",
                "text_1",
                "text_2"
              ],
              "type": "object"
            }
          },
          "kind": "Button",
          "type": "Request"
        }
      }
    }
  },
  "schemaVersion": "1.0.0.0"
}
