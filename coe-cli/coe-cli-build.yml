# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger: none
pr: 
  branches:
    include:
    # Replace the following with actual branch name(s) in your repo for which you want to trigger a build. The assumption here is that you only want to only trigger on a change to a specific branch rather than a change on any branch which would include your working branch for development.'
    - main
    - hotfix
  paths:
    include:
    - coe-cli/

pool:
  vmImage: 'windows-2022'

name: 1.0.$(Date:yyyyMMdd)$(Rev:.r)

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '16.x'
  displayName: 'Install Node.js'

- pwsh: |
    node -p "'export const LIB_VERSION = "' + $(Build.BuildNumber) + '";'" > coe-cli/src/version.ts
  displayName: 'Set Version Number'
  
- pwsh: |
    npm install
    npm install jest-junit --save-dev
    npm run build
    npm link
  displayName: 'npm install and build'
  workingDirectory: "coe-cli"

- task: Npm@1
  displayName: npm run test
  inputs:
    command: 'custom'
    workingDir: 'coe-cli'
    customCommand: 'run test:ci'

- task: PublishTestResults@2
  displayName: 'supply npm test results to pipelines'
  condition: succeededOrFailed() # because otherwise we won't know what tests failed
  inputs:
    testResultsFiles: 'coe-cli\junit.xml'

- pwsh: |
    npx pkg -t linux,macos,win ./coe --out-path dist
  displayName: 'npm install and build'
  workingDirectory: "coe-cli"

- pwsh: |
    New-Item -Path "$(Build.ArtifactStagingDirectory)" -Name "Coe-Cli" -ItemType "directory"
    New-Item -Path "$(Build.ArtifactStagingDirectory)\Coe-Cli" -Name "linux" -ItemType "directory"
    Copy-Item ./dist/coe-win.exe $(Build.ArtifactStagingDirectory)\Coe-Cli\coe-cli.exe
    Copy-Item ./dist/coe-linux $(Build.ArtifactStagingDirectory)\Coe-Cli\linux\coe-cli
  displayName: 'Copy executable to Artifact Staging'
  workingDirectory: "coe-cli"

- task: PublishPipelineArtifact@1
  displayName: 'Publish Artifacts'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: drop
