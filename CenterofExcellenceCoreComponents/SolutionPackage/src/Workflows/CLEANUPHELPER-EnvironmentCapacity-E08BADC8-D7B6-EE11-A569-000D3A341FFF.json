{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps": {
        "impersonation": {},
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "admin_CoECoreDataverse"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      },
      "shared_commondataserviceforapps_1": {
        "impersonation": {},
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "admin_CoECoreDataverse2"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)": {
          "defaultValue": "https://flow.microsoft.com/manage/environments/",
          "type": "String",
          "metadata": {
            "schemaName": "admin_PowerAutomateEnvironmentVariable",
            "description": "Inventory - REQUIRED. Environment, including geographic location, for Power Automate - Ex for commercial: https://flow.microsoft.com/manage/environments/"
          }
        }
      },
      "triggers": {
        "manual": {
          "metadata": {
            "operationMetadataId": "3a1b174e-f18d-4e07-a521-8e7b6e5aae83"
          },
          "type": "Request",
          "kind": "Button",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "title": "envtid",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                },
                "text_1": {
                  "title": "sku",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                },
                "text_2": {
                  "title": "capacity",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                },
                "text_3": {
                  "title": "addons",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                }
              },
              "required": [
                "text",
                "text_1",
                "text_2",
                "text_3"
              ]
            }
          }
        }
      },
      "actions": {
        "Error_Handling": {
          "actions": {
            "Terminate": {
              "runAfter": {
                "Update_Last_Run_Fail": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "9e5a2a18-dba2-47a1-96d5-3356f4348e5a"
              },
              "type": "Terminate",
              "inputs": {
                "runStatus": "Failed",
                "runError": {
                  "code": "500",
                  "message": "Get Environments Failed"
                }
              }
            },
            "Get_ID_Fail": {
              "runAfter": {
                "Create_a_new_record_-_Sync_Flow_Errors": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "47329bf2-8aac-400d-9778-a793b4f1180f"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "$select": "admin_coesolutionmetadataid",
                  "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                  "$top": 1
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Update_Last_Run_Fail": {
              "runAfter": {
                "Get_ID_Fail": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "c63eb7cc-6101-4567-b520-a4a8881264e9"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "recordId": "@first(outputs('Get_ID_Fail')?['body/value'])?['admin_coesolutionmetadataid']",
                  "item/admin_lastrun": "@utcNow()",
                  "item/admin_lastrunpassed": false
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Respond_to_a_PowerApp_or_flow_-_fail": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "f5b3c38f-7b71-4b85-978e-42ca90e3293f"
              },
              "type": "Response",
              "kind": "PowerApp",
              "inputs": {
                "statusCode": 200,
                "body": {
                  "result": "fail"
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "title": "result",
                      "x-ms-dynamically-added": true,
                      "type": "string"
                    }
                  }
                }
              }
            },
            "Create_a_new_record_-_Sync_Flow_Errors": {
              "runAfter": {
                "EnvtDisplayName": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "87961ff0-e261-4890-9ab9-a53f88fe0de5"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "CreateRecord"
                },
                "parameters": {
                  "entityName": "admin_syncflowerrorses",
                  "item/admin_name": "@workflow()?['tags']['flowDisplayName']",
                  "item/admin_environmentname": "@outputs('EnvtDisplayName')",
                  "item/admin_flowinstanceurl": "@concat(parameters('Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)'), workflow()?['tags']['environmentName'], '/flows/', workflow()?['name'], '/runs/', workflow()?['run']['name'])"
                },
                "retryPolicy": {
                  "type": "exponential",
                  "count": 10,
                  "interval": "PT10S"
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "EnvtDisplayName": {
              "runAfter": {
                "Respond_to_a_PowerApp_or_flow_-_fail": [
                  "Succeeded",
                  "Skipped"
                ]
              },
              "metadata": {
                "operationMetadataId": "04011018-e188-483e-9bc5-08eaee7a0cf5"
              },
              "type": "Compose",
              "inputs": "@first(outputs('List_capacity_for_Environment')?['body/value'])['admin_environment/admin_displayname']"
            }
          },
          "runAfter": {
            "Inventory_Environment_Capacities": [
              "Failed"
            ]
          },
          "metadata": {
            "operationMetadataId": "38ae684e-622d-42ea-abd2-ee571aee3a5f"
          },
          "type": "Scope"
        },
        "Update_last_run_as_pass": {
          "actions": {
            "Update_Last_Run_Successful": {
              "runAfter": {
                "Get_ID_Pass": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "78ef70e5-7f67-4737-9a02-8533f12caa19"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "recordId": "@first(outputs('Get_ID_Pass')?['body/value'])?['admin_coesolutionmetadataid']",
                  "item/admin_lastrun": "@utcNow()",
                  "item/admin_lastrunpassed": true
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Catch_-_not_ready_to_take_last_run_date": {
              "runAfter": {
                "Update_Last_Run_Successful": [
                  "Failed"
                ]
              },
              "metadata": {
                "operationMetadataId": "f88cdefe-c402-49d7-8f4a-934475e6f741"
              },
              "type": "Compose",
              "inputs": "Catch - not ready to take last run date"
            },
            "Respond_to_a_PowerApp_or_flow_-_pass": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "85a919b5-0b51-4843-ac0b-67dbfa2c2289"
              },
              "type": "Response",
              "kind": "PowerApp",
              "inputs": {
                "statusCode": 200,
                "body": {
                  "result": "pass"
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "title": "result",
                      "x-ms-dynamically-added": true,
                      "type": "string"
                    }
                  }
                }
              }
            },
            "Get_ID_Pass": {
              "runAfter": {
                "Respond_to_a_PowerApp_or_flow_-_pass": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "f4f314b6-89d3-4056-af1c-73115e7d6bd1"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "$select": "admin_coesolutionmetadataid",
                  "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                  "$top": 1
                },
                "authentication": "@parameters('$authentication')"
              }
            }
          },
          "runAfter": {
            "Error_Handling": [
              "Skipped"
            ]
          },
          "metadata": {
            "operationMetadataId": "5c140442-d939-4ca4-8ec8-d1ee2bed4a81"
          },
          "type": "Scope"
        },
        "Inventory_Environment_Capacities": {
          "actions": {
            "List_capacity_for_Environment": {
              "runAfter": {
                "Set_approved_capacity_for_Developer_and_Teams_environments": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "cebf0044-5eb4-4697-9451-9ab46a7bbc5b"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps_1",
                  "operationId": "ListRecords"
                },
                "parameters": {
                  "entityName": "admin_environmentcapacities",
                  "$select": "admin_environmentcapacityid,admin_capacitytype,admin_approvedcapacity",
                  "$filter": "admin_Environment/admin_environmentid eq @{triggerBody()['text']}",
                  "$expand": "admin_Environment($select=admin_displayname)"
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Apply_to_each_capacity": {
              "foreach": "@body('Parse_Capacity')",
              "actions": {
                "Filter_out_FinOps": {
                  "actions": {
                    "Check_if_Capacity_Type_already_exists_for_this_environment": {
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "b468d0e7-ed2b-4cfb-972c-28629111e523"
                      },
                      "type": "Query",
                      "inputs": {
                        "from": "@outputs('List_capacity_for_Environment')?['body/value']",
                        "where": "@equals(item()?['admin_capacitytype'], items('Apply_to_each_capacity')?['capacityType'])"
                      }
                    },
                    "If_Capacity_Type_exists,_update,_else_add_new": {
                      "actions": {
                        "Add_new_capacity": {
                          "runAfter": {},
                          "metadata": {
                            "operationMetadataId": "f3f2287e-414c-4512-94ee-483c7ac53383"
                          },
                          "type": "OpenApiConnection",
                          "inputs": {
                            "host": {
                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                              "connectionName": "shared_commondataserviceforapps_1",
                              "operationId": "CreateRecord"
                            },
                            "parameters": {
                              "entityName": "admin_environmentcapacities",
                              "item/admin_capacitytype": "@items('Apply_to_each_capacity')?['capacityType']",
                              "item/admin_actualconsumption": "@items('Apply_to_each_capacity')?['actualConsumption']",
                              "item/admin_approvedcapacity": "@outputs('Set_approved_capacity_for_Developer_and_Teams_environments')",
                              "item/admin_capacityunit": "@items('Apply_to_each_capacity')?['capacityUnit']",
                              "item/admin_capacityupdatedon": "@if(less(items('Apply_to_each_capacity')?['updatedOn'], addDays(utcNow(), -10000)), null, items('Apply_to_each_capacity')?['updatedOn'])",
                              "item/admin_Environment@odata.bind": "admin_environments(@{triggerBody()['text']})",
                              "item/admin_ratedconsumption": "@items('Apply_to_each_capacity')?['ratedConsumption']"
                            },
                            "authentication": "@parameters('$authentication')"
                          }
                        }
                      },
                      "runAfter": {
                        "Check_if_Capacity_Type_already_exists_for_this_environment": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Update_capacity": {
                            "runAfter": {},
                            "metadata": {
                              "operationMetadataId": "b96c3d3e-cf54-4a7f-a1d9-d2c76ed7402a"
                            },
                            "type": "OpenApiConnection",
                            "inputs": {
                              "host": {
                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                                "connectionName": "shared_commondataserviceforapps_1",
                                "operationId": "UpdateRecord"
                              },
                              "parameters": {
                                "entityName": "admin_environmentcapacities",
                                "recordId": "@first(body('Check_if_Capacity_Type_already_exists_for_this_environment'))['admin_environmentcapacityid']",
                                "item/admin_actualconsumption": "@items('Apply_to_each_capacity')?['actualConsumption']",
                                "item/admin_capacitytype": "@items('Apply_to_each_capacity')?['capacityType']",
                                "item/admin_capacityunit": "@items('Apply_to_each_capacity')?['capacityUnit']",
                                "item/admin_capacityupdatedon": "@if(less(items('Apply_to_each_capacity')?['updatedOn'], addDays(utcNow(), -10000)), null, items('Apply_to_each_capacity')?['updatedOn'])",
                                "item/admin_Environment@odata.bind": "admin_environments(@{triggerBody()['text']})",
                                "item/admin_ratedconsumption": "@items('Apply_to_each_capacity')?['ratedConsumption']"
                              },
                              "authentication": "@parameters('$authentication')"
                            }
                          }
                        }
                      },
                      "expression": {
                        "equals": [
                          "@length(body('Check_if_Capacity_Type_already_exists_for_this_environment'))",
                          0
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "5378bbe8-6de1-4cd3-814c-59cd47606ead"
                      },
                      "type": "If"
                    }
                  },
                  "runAfter": {},
                  "expression": {
                    "not": {
                      "contains": [
                        "@items('Apply_to_each_capacity')['capacityType']",
                        "FinOps"
                      ]
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "2a6d39dc-ed9a-4e32-99c9-8d54a4dc4e58"
                  },
                  "type": "If"
                }
              },
              "runAfter": {
                "List_capacity_for_Environment": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "6cb254a9-6732-4f9a-8467-d53cfe404872"
              },
              "type": "Foreach"
            },
            "Set_approved_capacity_for_Developer_and_Teams_environments": {
              "runAfter": {
                "Parse_Addons": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "cfa5721b-7971-4a7c-9806-313c48158759"
              },
              "type": "Compose",
              "inputs": "@if(or(equals(triggerBody()['text_1'], 'Teams'), equals(triggerBody()['text_1'], 'Developer')), 2000, null)"
            },
            "List_addons_for_Environment": {
              "runAfter": {
                "Apply_to_each_capacity": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "2f956a49-6a69-4a40-a8e2-f0f5de3be4a5"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "connectionName": "shared_commondataserviceforapps_1",
                  "operationId": "ListRecords"
                },
                "parameters": {
                  "entityName": "admin_environmentaddonses",
                  "$select": "admin_environmentaddonsid,admin_addontype",
                  "$filter": "admin_Environment/admin_environmentid eq @{triggerBody()['text']}"
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Apply_to_each_addon": {
              "foreach": "@body('Parse_Addons')",
              "actions": {
                "Check_if_Addon_Type_already_exists_for_this_environment": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "35e38c11-64f6-4233-8b8f-c7ee686c10bc"
                  },
                  "type": "Query",
                  "inputs": {
                    "from": "@outputs('List_addons_for_Environment')?['body/value']",
                    "where": "@equals(item()?['admin_addontype'], items('Apply_to_each_addon')?['addonType'])"
                  }
                },
                "If_Addon_Type_exists,_update,_else_add_new": {
                  "actions": {
                    "Add_a_new_row": {
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "98fba491-c1db-48a2-ae8b-7023586d81e4"
                      },
                      "type": "OpenApiConnection",
                      "inputs": {
                        "host": {
                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                          "connectionName": "shared_commondataserviceforapps_1",
                          "operationId": "CreateRecord"
                        },
                        "parameters": {
                          "entityName": "admin_environmentaddonses",
                          "item/admin_addontype": "@items('Apply_to_each_addon')?['addonType']",
                          "item/admin_Environment@odata.bind": "admin_environments(@{triggerBody()['text']})",
                          "item/admin_allocated": "@items('Apply_to_each_addon')?['allocated']"
                        },
                        "authentication": "@parameters('$authentication')"
                      }
                    }
                  },
                  "runAfter": {
                    "Check_if_Addon_Type_already_exists_for_this_environment": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Update_a_row": {
                        "runAfter": {},
                        "metadata": {
                          "operationMetadataId": "f62d6f80-69a3-4db5-a543-cea4319b8af1"
                        },
                        "type": "OpenApiConnection",
                        "inputs": {
                          "host": {
                            "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                            "connectionName": "shared_commondataserviceforapps_1",
                            "operationId": "UpdateRecord"
                          },
                          "parameters": {
                            "entityName": "admin_environmentaddonses",
                            "recordId": "@first(body('Check_if_Addon_Type_already_exists_for_this_environment'))['admin_environmentaddonsid']",
                            "item/admin_addontype": "@items('Apply_to_each_addon')?['addonType']",
                            "item/admin_allocated": "@items('Apply_to_each_addon')?['allocated']",
                            "item/admin_Environment@odata.bind": "admin_environments(@{triggerBody()['text']})"
                          },
                          "authentication": "@parameters('$authentication')"
                        }
                      }
                    }
                  },
                  "expression": {
                    "equals": [
                      "@length(body('Check_if_Addon_Type_already_exists_for_this_environment'))",
                      0
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "f41dc0b3-82c6-438e-a8a3-49c8773cab43"
                  },
                  "type": "If"
                }
              },
              "runAfter": {
                "List_addons_for_Environment": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "07b203a5-2872-475c-a437-95e3e49b5677"
              },
              "type": "Foreach"
            },
            "Parse_Capacity": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "1198e97f-a3df-449d-84b1-882a7d57895f"
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@triggerBody()['text_2']",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "capacityType": {
                        "type": "string"
                      },
                      "actualConsumption": {
                        "type": "number"
                      },
                      "ratedConsumption": {
                        "type": "number"
                      },
                      "capacityUnit": {
                        "type": "string"
                      },
                      "updatedOn": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "capacityType",
                      "actualConsumption",
                      "ratedConsumption",
                      "capacityUnit",
                      "updatedOn"
                    ]
                  }
                }
              }
            },
            "Parse_Addons": {
              "runAfter": {
                "Parse_Capacity": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "30f98850-c282-4d66-9bd0-1eb516ca1c27"
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@triggerBody()['text_3']",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "addonType": {
                        "type": "string"
                      },
                      "allocated": {
                        "type": "integer"
                      },
                      "addonUnit": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "addonType",
                      "allocated",
                      "addonUnit"
                    ]
                  }
                }
              }
            }
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "1abd8810-3b90-46e7-b61a-e8f327112911"
          },
          "type": "Scope"
        }
      }
    },
    "templateName": null
  },
  "schemaVersion": "1.0.0.0"
}