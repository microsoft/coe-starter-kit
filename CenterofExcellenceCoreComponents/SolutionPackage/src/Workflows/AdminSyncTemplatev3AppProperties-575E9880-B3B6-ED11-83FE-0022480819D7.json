{
  "properties": {
    "connectionReferences": {
      "shared_powerappsforadmins_1": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "admin_CoECorePowerAppsAdmin2"
        },
        "api": {
          "name": "shared_powerappsforadmins"
        }
      },
      "shared_commondataserviceforapps": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "admin_sharedcommondataserviceforapps_98924"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)": {
          "defaultValue": "https://flow.microsoft.com/manage/environments/",
          "type": "String",
          "metadata": {
            "schemaName": "admin_PowerAutomateEnvironmentVariable",
            "description": "Inventory - REQUIRED. Environment, including geographic location, for Power Automate - Ex for commercial: https://flow.microsoft.com/manage/environments/"
          }
        },
        "Inventory and Telemetry in Azure Data Storage account (admin_InventoryandTelemetryinAzureDataStorageaccount)": {
          "defaultValue": false,
          "type": "Bool",
          "metadata": {
            "schemaName": "admin_InventoryandTelemetryinAzureDataStorageaccount",
            "description": "Inventory - Have you set up data export in PPAC and is your inventory and telemetry in an Azure Data Storage folder (also referred to as Bring your own Datalake, self-serve analytics feature). Default no"
          }
        }
      },
      "triggers": {
        "manual": {
          "metadata": {
            "operationMetadataId": "b0937fac-3a40-4f8d-b93d-814fc6bd27bf"
          },
          "type": "Request",
          "kind": "PowerAppV2",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "title": "envtName",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                },
                "text_1": {
                  "title": "envtID",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                }
              },
              "required": [
                "text",
                "text_1"
              ]
            }
          }
        }
      },
      "actions": {
        "update_app_properties": {
          "actions": {
            "Get_Apps_as_Admin": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "2510bbf9-b8b7-401a-99a2-ea1699a9ddb5"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_powerappsforadmins_1",
                  "operationId": "Get-AdminApps",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_powerappsforadmins"
                },
                "parameters": {
                  "environment": "@triggerBody()['text']",
                  "api-version": "2020-07-01",
                  "$top": 250
                },
                "authentication": "@parameters('$authentication')",
                "retryPolicy": {
                  "type": "exponential",
                  "count": 10,
                  "interval": "PT10S"
                }
              },
              "runtimeConfiguration": {
                "paginationPolicy": {
                  "minimumItemCount": 100000
                }
              }
            },
            "App_Quarantine_Check": {
              "actions": {
                "Check_for_apps_no_longer_quarantined": {
                  "actions": {
                    "List_quarantined_apps": {
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "20af3e6e-975a-436c-bac1-d7f460f9760a"
                      },
                      "type": "OpenApiConnection",
                      "inputs": {
                        "host": {
                          "connectionName": "shared_commondataserviceforapps",
                          "operationId": "ListRecords",
                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                        },
                        "parameters": {
                          "entityName": "admin_apps",
                          "$select": "admin_appid, admin_displayname, admin_quarantineapp",
                          "$filter": "_admin_appenvironment_value eq @{triggerBody()['text_1']} and admin_quarantineapp eq true"
                        },
                        "authentication": "@parameters('$authentication')"
                      }
                    },
                    "For_each_previously_quarantined_app": {
                      "foreach": "@outputs('List_quarantined_apps')?['body/value']",
                      "actions": {
                        "Find_this_app_from_tenant": {
                          "runAfter": {},
                          "metadata": {
                            "operationMetadataId": "08dd8e79-ff3f-4b8c-b562-50c247876e3c"
                          },
                          "type": "Query",
                          "inputs": {
                            "from": "@outputs('Get_Apps_as_Admin')?['body/value']",
                            "where": "@equals(item()?['name'], items('For_each_previously_quarantined_app')?['admin_appid'])"
                          }
                        },
                        "Current_quarantine_status": {
                          "runAfter": {
                            "Find_this_app_from_tenant": [
                              "Succeeded"
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "dce0e063-dc1e-4ba8-806c-414b767d1e40"
                          },
                          "type": "Compose",
                          "inputs": "@if(equals(first(body('Find_this_app_from_tenant'))?['properties/executionRestrictions/appQuarantineState/quarantineStatus'], 'Quarantined'), true, false)"
                        },
                        "If_quarantine_state_has_changed,_update_it": {
                          "actions": {
                            "Update_quarantine_status": {
                              "runAfter": {},
                              "metadata": {
                                "operationMetadataId": "50539674-4517-4976-8092-f78805502c6a"
                              },
                              "type": "OpenApiConnection",
                              "inputs": {
                                "host": {
                                  "connectionName": "shared_commondataserviceforapps",
                                  "operationId": "UpdateRecord",
                                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                                },
                                "parameters": {
                                  "entityName": "admin_apps",
                                  "recordId": "@items('For_each_previously_quarantined_app')?['admin_appid']",
                                  "item/admin_AppEnvironment@odata.bind": "admin_environments(@{triggerBody()['text_1']})",
                                  "item/admin_quarantineapp": "@outputs('Current_quarantine_status')"
                                },
                                "authentication": "@parameters('$authentication')"
                              }
                            }
                          },
                          "runAfter": {
                            "Current_quarantine_status": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "not": {
                              "equals": [
                                "@items('For_each_previously_quarantined_app')?['admin_quarantineapp']",
                                "@outputs('Current_quarantine_status')"
                              ]
                            }
                          },
                          "metadata": {
                            "operationMetadataId": "da08d787-7d23-4561-b13a-67c37693c0d9"
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "List_quarantined_apps": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "4e68745e-7ad5-4cea-b1ed-04d634459930"
                      },
                      "type": "Foreach"
                    }
                  },
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "4c7523ca-94e4-4fff-9c32-e5ff8debf2f8"
                  },
                  "type": "Scope"
                },
                "Check_for_newly_quarantined_apps": {
                  "actions": {
                    "Filter_to_quarantined_apps": {
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "b2731c54-4fd4-47aa-910a-4f8140e3fef6"
                      },
                      "type": "Query",
                      "inputs": {
                        "from": "@outputs('Get_Apps_as_Admin')?['body/value']",
                        "where": "@equals(item()?['properties/executionRestrictions/appQuarantineState/quarantineStatus'], 'Quarantined')"
                      }
                    },
                    "Mark_all_quarantined_apps_in_CoE": {
                      "foreach": "@body('Filter_to_quarantined_apps')",
                      "actions": {
                        "Get_app_from_CoE": {
                          "runAfter": {},
                          "metadata": {
                            "operationMetadataId": "38b87bc1-acfc-4916-8364-0b760d2b3632"
                          },
                          "type": "OpenApiConnection",
                          "inputs": {
                            "host": {
                              "connectionName": "shared_commondataserviceforapps",
                              "operationId": "GetItem",
                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                            },
                            "parameters": {
                              "entityName": "admin_apps",
                              "recordId": "@items('Mark_all_quarantined_apps_in_CoE')?['name']",
                              "$select": "admin_appid, admin_displayname, admin_quarantineapp"
                            },
                            "authentication": "@parameters('$authentication')"
                          }
                        },
                        "if_not_already_marked_as_quarantined,_update": {
                          "actions": {
                            "Update_the_quarantine_state": {
                              "runAfter": {},
                              "metadata": {
                                "operationMetadataId": "5051dde4-1d56-4be4-afd3-f3eb50cb0846"
                              },
                              "type": "OpenApiConnection",
                              "inputs": {
                                "host": {
                                  "connectionName": "shared_commondataserviceforapps",
                                  "operationId": "UpdateRecord",
                                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                                },
                                "parameters": {
                                  "entityName": "admin_apps",
                                  "recordId": "@items('Mark_all_quarantined_apps_in_CoE')?['name']",
                                  "item/admin_AppEnvironment@odata.bind": "admin_environments(@{triggerBody()['text_1']})",
                                  "item/admin_quarantineapp": true
                                },
                                "authentication": "@parameters('$authentication')"
                              }
                            }
                          },
                          "runAfter": {
                            "Get_app_from_CoE": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "not": {
                              "equals": [
                                "@outputs('Get_app_from_CoE')?['body/admin_quarantineapp']",
                                "@true"
                              ]
                            }
                          },
                          "metadata": {
                            "operationMetadataId": "ec91f3b0-aab3-4e63-9a30-6fa346bb1ebf"
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "Filter_to_quarantined_apps": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "a69bad8c-b005-4778-a2b6-72a880d1cc3b"
                      },
                      "type": "Foreach"
                    }
                  },
                  "runAfter": {
                    "Check_for_apps_no_longer_quarantined": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "6a3e8bd7-6791-4175-bfa3-c4f17466f0ba"
                  },
                  "type": "Scope"
                }
              },
              "runAfter": {
                "Get_Apps_as_Admin": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "6bcdec8c-40e0-40c4-9663-941dcf77590d"
              },
              "type": "Scope"
            },
            "App_DLP_Check": {
              "actions": {
                "Get_DLP_Info_from_Tenant": {
                  "actions": {
                    "Filter_to_Compliant_Apps": {
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "ddf4ddb4-f80c-478a-9aff-6422c794e65e"
                      },
                      "type": "Query",
                      "inputs": {
                        "from": "@outputs('Get_Apps_as_Admin')?['body/value']",
                        "where": "@equals(item()?['properties/executionRestrictions/dataLossPreventionEvaluationResult/status'], 'Compliant')"
                      }
                    },
                    "Apply_to_each_non_compliant_app": {
                      "foreach": "@body('Filter_to_Non_Compliant_Apps')",
                      "actions": {
                        "Get_Policies_Violated": {
                          "actions": {
                            "Apply_to_each_violated_policy": {
                              "foreach": "@items('Apply_to_each_non_compliant_app')?['properties/executionRestrictions/dataLossPreventionEvaluationResult/violationsByPolicy']",
                              "actions": {
                                "Append_to_PoliciesViolatedArray": {
                                  "runAfter": {},
                                  "metadata": {
                                    "operationMetadataId": "fc043865-c951-48aa-9717-5df104591789"
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "PoliciesViolatedArray",
                                    "value": "@items('Apply_to_each_violated_policy')?['policyRef/policyDisplayName']"
                                  }
                                }
                              },
                              "runAfter": {},
                              "metadata": {
                                "operationMetadataId": "b65c78c2-183a-46dd-8e3f-870fc9822087"
                              },
                              "type": "Foreach"
                            }
                          },
                          "runAfter": {},
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@items('Apply_to_each_non_compliant_app')?['properties/executionRestrictions/dataLossPreventionEvaluationResult/violations']",
                                    "@null"
                                  ]
                                }
                              },
                              {
                                "greater": [
                                  "@length(item()?['properties/executionRestrictions/dataLossPreventionEvaluationResult/violations'])",
                                  0
                                ]
                              }
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "780112ea-3502-4e66-813a-72c8329c23ed"
                          },
                          "type": "If"
                        },
                        "Append_to_SelectDLPFields": {
                          "runAfter": {
                            "Get_Policies_Violated": [
                              "Succeeded"
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "23e8092e-44a7-4f8c-b283-1e9179ea64c5"
                          },
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "SelectDLPFields",
                            "value": {
                              "AppID": "@items('Apply_to_each_non_compliant_app')?['name']",
                              "DLP_Status": "@items('Apply_to_each_non_compliant_app')?['properties/executionRestrictions/dataLossPreventionEvaluationResult/status']",
                              "DLP_ErrorDetails": "@items('Apply_to_each_non_compliant_app')?['properties/executionRestrictions/dataLossPreventionEvaluationResult/violationErrorMessage']",
                              "DLP_Policies": "@replace(string(union(variables('PoliciesViolatedArray'), variables('PoliciesViolatedArray'))), '\"', '')",
                              "DLP_Last_Eval": "@split(items('Apply_to_each_non_compliant_app')?['properties/executionRestrictions/dataLossPreventionEvaluationResult/lastEvaluationDate'], 'T')[0]"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Filter_to_Non_Compliant_Apps": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "1765c859-8208-4c7f-9a29-b44160cf4265"
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 50
                        }
                      }
                    },
                    "Parse_noncompliant_actual": {
                      "runAfter": {
                        "Apply_to_each_non_compliant_app": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "1cb4df39-30e4-4641-965f-40c6a18e7aba"
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@variables('SelectDLPFields')",
                        "schema": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "AppID": {
                                "type": "string"
                              },
                              "DLP_Status": {
                                "type": "string"
                              },
                              "DLP_ErrorDetails": {
                                "type": "string"
                              },
                              "DLP_Policies": {
                                "type": "string"
                              },
                              "DLP_Last_Eval": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "AppID",
                              "DLP_Status",
                              "DLP_ErrorDetails",
                              "DLP_Policies",
                              "DLP_Last_Eval"
                            ]
                          }
                        }
                      }
                    },
                    "Parse_compliant_actual": {
                      "runAfter": {
                        "Select_compliant_actual": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "1cb4df39-30e4-4641-965f-40c6a18e7aba"
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Select_compliant_actual')",
                        "schema": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "AppID": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "AppID"
                            ]
                          }
                        }
                      }
                    },
                    "Filter_to_Non_Compliant_Apps": {
                      "runAfter": {
                        "Parse_compliant_actual": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "ddf4ddb4-f80c-478a-9aff-6422c794e65e"
                      },
                      "type": "Query",
                      "inputs": {
                        "from": "@outputs('Get_Apps_as_Admin')?['body/value']",
                        "where": "@equals(item()?['properties/executionRestrictions/dataLossPreventionEvaluationResult/status'], 'NonCompliant')"
                      }
                    },
                    "Select_compliant_actual": {
                      "runAfter": {
                        "Filter_to_Compliant_Apps": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "f3455709-2b54-4314-929d-c7965ceb5cb5"
                      },
                      "type": "Select",
                      "inputs": {
                        "from": "@body('Filter_to_Compliant_Apps')",
                        "select": {
                          "AppID": "@item()?['name']"
                        }
                      }
                    }
                  },
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "446c809b-7258-45e7-87a3-a2816b71444d"
                  },
                  "type": "Scope"
                },
                "Get_DLP_Current_Inventory": {
                  "actions": {
                    "compliant_inventory": {
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "9612cf5e-1cc0-4815-ab50-f369e85e2b55"
                      },
                      "type": "OpenApiConnection",
                      "inputs": {
                        "host": {
                          "connectionName": "shared_commondataserviceforapps",
                          "operationId": "ListRecords",
                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                        },
                        "parameters": {
                          "entityName": "admin_apps",
                          "$select": "admin_appid, admin_displayname, admin_dlpevaluationstatus, admin_dlplastevaluationdate, admin_dlppoliciesviolated, admin_dlpviolationdetails",
                          "$filter": "_admin_appenvironment_value eq @{triggerBody()['text_1']} and admin_dlpevaluationstatus eq 'Compliant' and admin_appdeleted ne true and admin_powerappstype ne 597910001"
                        },
                        "authentication": "@parameters('$authentication')"
                      }
                    },
                    "noncompliant_inventory": {
                      "runAfter": {
                        "Parse_compliant_inventory": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "20af3e6e-975a-436c-bac1-d7f460f9760a"
                      },
                      "type": "OpenApiConnection",
                      "inputs": {
                        "host": {
                          "connectionName": "shared_commondataserviceforapps",
                          "operationId": "ListRecords",
                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                        },
                        "parameters": {
                          "entityName": "admin_apps",
                          "$select": "admin_appid, admin_displayname, admin_dlpevaluationstatus, admin_dlplastevaluationdate, admin_dlppoliciesviolated, admin_dlpviolationdetails",
                          "$filter": "_admin_appenvironment_value eq @{triggerBody()['text_1']} and admin_dlpevaluationstatus ne null and admin_dlpevaluationstatus ne 'Compliant' and admin_appdeleted ne true and admin_powerappstype ne 597910001"
                        },
                        "authentication": "@parameters('$authentication')"
                      }
                    },
                    "Select_compliant_inventory": {
                      "runAfter": {
                        "compliant_inventory": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "68bd3667-f020-4954-9b34-eeffdde6d4bb"
                      },
                      "type": "Select",
                      "inputs": {
                        "from": "@outputs('compliant_inventory')?['body/value']",
                        "select": {
                          "AppID": "@item()?['admin_appid']"
                        }
                      }
                    },
                    "Parse_compliant_inventory": {
                      "runAfter": {
                        "Select_compliant_inventory": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "3c4ebfb1-a364-4cef-b583-7a7a42b16667"
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Select_compliant_inventory')",
                        "schema": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "AppID": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "AppID"
                            ]
                          }
                        }
                      }
                    },
                    "Select_noncompliant_inventory": {
                      "runAfter": {
                        "noncompliant_inventory": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "33350bce-aeba-4306-ac49-d52a45742a02"
                      },
                      "type": "Select",
                      "inputs": {
                        "from": "@outputs('noncompliant_inventory')?['body/value']",
                        "select": {
                          "AppID": "@item()?['admin_appid']",
                          "DLP_Status": "@item()?['admin_dlpevaluationstatus']",
                          "DLP_ErrorDetails": "@item()?['admin_dlpviolationdetails']",
                          "DLP_Policies": "@item()?['admin_dlppoliciesviolated']",
                          "DLP_Last_Eval": "@if(equals(item()?['admin_dlplastevaluationdate'], null), '', split(item()?['admin_dlplastevaluationdate'], 'T')[0])"
                        }
                      }
                    },
                    "Parse_noncompliant_inventory": {
                      "runAfter": {
                        "Select_noncompliant_inventory": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "3fd1d5b2-f957-49f3-8e5a-18d3aea5c97a"
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Select_noncompliant_inventory')",
                        "schema": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "AppID": {
                                "type": "string"
                              },
                              "DLP_Status": {
                                "type": "string"
                              },
                              "DLP_Last_Eval": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "DLP_Policies": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "DLP_ErrorDetails": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "required": [
                              "AppID",
                              "DLP_Status"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "runAfter": {
                    "Get_DLP_Info_from_Tenant": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "1c8d18d7-3d9f-4d43-bc06-397e4e7c2249"
                  },
                  "type": "Scope"
                },
                "Update_the_Non_Compliant_Apps": {
                  "actions": {
                    "Update_non-compliant_list": {
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "67e26474-c577-4f02-bc7a-982190a0c5c0"
                      },
                      "type": "Query",
                      "inputs": {
                        "from": "@body('Parse_noncompliant_actual')",
                        "where": "@not(contains(body('Parse_noncompliant_inventory'), item()))"
                      }
                    },
                    "Update_non-compliant_apps": {
                      "foreach": "@body('Update_non-compliant_list')",
                      "actions": {
                        "Find_newly_non-compliant_app": {
                          "runAfter": {},
                          "metadata": {
                            "operationMetadataId": "2c8c7bb5-3bfc-4053-94f8-051d7bff9284"
                          },
                          "type": "OpenApiConnection",
                          "inputs": {
                            "host": {
                              "connectionName": "shared_commondataserviceforapps",
                              "operationId": "ListRecords",
                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                            },
                            "parameters": {
                              "entityName": "admin_apps",
                              "$select": "admin_appid",
                              "$filter": "admin_appid eq @{items('Update_non-compliant_apps')?['AppID']}"
                            },
                            "authentication": "@parameters('$authentication')"
                          }
                        },
                        "if_newly_non-compliant_app_already_in_inventory": {
                          "actions": {
                            "Update_this_non-compliant_app": {
                              "runAfter": {},
                              "metadata": {
                                "operationMetadataId": "6152e06a-6b24-437d-8990-57951d9c02d6"
                              },
                              "type": "OpenApiConnection",
                              "inputs": {
                                "host": {
                                  "connectionName": "shared_commondataserviceforapps",
                                  "operationId": "UpdateRecord",
                                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                                },
                                "parameters": {
                                  "entityName": "admin_apps",
                                  "recordId": "@items('Update_non-compliant_apps')?['AppID']",
                                  "item/admin_AppEnvironment@odata.bind": "admin_environments(@{triggerBody()['text_1']})",
                                  "item/admin_dlpevaluationstatus": "@items('Update_non-compliant_apps')?['DLP_Status']",
                                  "item/admin_dlplastevaluationdate": "@items('Update_non-compliant_apps')?['DLP_Last_Eval']",
                                  "item/admin_dlppoliciesviolated": "@items('Update_non-compliant_apps')?['DLP_Policies']",
                                  "item/admin_dlpviolationdetails": "@items('Update_non-compliant_apps')?['DLP_ErrorDetails']"
                                },
                                "authentication": "@parameters('$authentication')"
                              }
                            }
                          },
                          "runAfter": {
                            "Find_newly_non-compliant_app": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "If_sync_flow_architecture_add_it": {
                                "actions": {
                                  "Upsert_this_non-compliant_app": {
                                    "runAfter": {},
                                    "metadata": {
                                      "operationMetadataId": "6152e06a-6b24-437d-8990-57951d9c02d6"
                                    },
                                    "type": "OpenApiConnection",
                                    "inputs": {
                                      "host": {
                                        "connectionName": "shared_commondataserviceforapps",
                                        "operationId": "UpdateRecord",
                                        "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                                      },
                                      "parameters": {
                                        "entityName": "admin_apps",
                                        "recordId": "@items('Update_non-compliant_apps')?['AppID']",
                                        "item/admin_displayname": "Found in set logic, details will fill next sync flow run",
                                        "item/admin_AppEnvironment@odata.bind": "admin_environments(@{triggerBody()['text_1']})",
                                        "item/admin_dlpevaluationstatus": "@items('Update_non-compliant_apps')?['DLP_Status']",
                                        "item/admin_dlplastevaluationdate": "@items('Update_non-compliant_apps')?['DLP_Last_Eval']",
                                        "item/admin_dlppoliciesviolated": "@items('Update_non-compliant_apps')?['DLP_Policies']",
                                        "item/admin_dlpviolationdetails": "@items('Update_non-compliant_apps')?['DLP_ErrorDetails']",
                                        "item/admin_recordguidasstring": "@items('Update_non-compliant_apps')?['AppID']"
                                      },
                                      "authentication": "@parameters('$authentication')"
                                    }
                                  }
                                },
                                "runAfter": {},
                                "else": {
                                  "actions": {
                                    "No_benefit_to_add_in_this_case,_just_confuses": {
                                      "runAfter": {},
                                      "metadata": {
                                        "operationMetadataId": "4a1edcb0-afd5-4950-a42f-c9d3636a7553"
                                      },
                                      "type": "Compose",
                                      "inputs": "No benefit to add in this case, just confuses"
                                    }
                                  }
                                },
                                "expression": {
                                  "equals": [
                                    "@parameters('Inventory and Telemetry in Azure Data Storage account (admin_InventoryandTelemetryinAzureDataStorageaccount)')",
                                    "@false"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "adb2d70e-41b0-4848-af3f-6ad685435990"
                                },
                                "type": "If"
                              }
                            }
                          },
                          "expression": {
                            "greater": [
                              "@length(outputs('Find_newly_non-compliant_app')?['body/value'])",
                              0
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "005390cb-0a3b-4ab0-8d4c-7bb0e3320cdb"
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "Update_non-compliant_list": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "5d3473bf-6160-49b8-be47-c8dd69ccc3e5"
                      },
                      "type": "Foreach"
                    }
                  },
                  "runAfter": {
                    "Get_DLP_Current_Inventory": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "7961a64e-c09c-43bb-acf6-bc5e4c55bf24"
                  },
                  "type": "Scope"
                },
                "Update_the_Compliant_Apps": {
                  "actions": {
                    "Update_compliant_list": {
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "e1c28fe8-1361-4fe6-a33f-a9883c100610"
                      },
                      "type": "Query",
                      "inputs": {
                        "from": "@body('Parse_compliant_actual')",
                        "where": "@not(contains(body('Parse_compliant_inventory'), item()))"
                      }
                    },
                    "Update_compliant_apps": {
                      "foreach": "@body('Update_compliant_list')",
                      "actions": {
                        "Find_newly_compliant_app": {
                          "runAfter": {},
                          "metadata": {
                            "operationMetadataId": "0b37a8d0-a7b1-4305-a73c-81d32c3c0732"
                          },
                          "type": "OpenApiConnection",
                          "inputs": {
                            "host": {
                              "connectionName": "shared_commondataserviceforapps",
                              "operationId": "ListRecords",
                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                            },
                            "parameters": {
                              "entityName": "admin_apps",
                              "$select": "admin_appid",
                              "$filter": "admin_appid eq @{items('Update_compliant_apps')?['AppID']}"
                            },
                            "authentication": "@parameters('$authentication')"
                          }
                        },
                        "if_newly_compliant_app_already_in_inventory": {
                          "actions": {
                            "Update_this_compliant_app": {
                              "runAfter": {},
                              "metadata": {
                                "operationMetadataId": "7f75dbeb-c560-45db-b5aa-63b172190c30"
                              },
                              "type": "OpenApiConnection",
                              "inputs": {
                                "host": {
                                  "connectionName": "shared_commondataserviceforapps",
                                  "operationId": "UpdateRecord",
                                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                                },
                                "parameters": {
                                  "entityName": "admin_apps",
                                  "recordId": "@items('Update_compliant_apps')?['AppID']",
                                  "item/admin_AppEnvironment@odata.bind": "admin_environments(@{triggerBody()['text_1']})",
                                  "item/admin_dlpevaluationstatus": "Compliant",
                                  "item/admin_dlplastevaluationdate": "@null",
                                  "item/admin_dlppoliciesviolated": "@null",
                                  "item/admin_dlpviolationdetails": "@null"
                                },
                                "authentication": "@parameters('$authentication')"
                              }
                            }
                          },
                          "runAfter": {
                            "Find_newly_compliant_app": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "If_sync_flow_architecture_then_add_it": {
                                "actions": {
                                  "Upsert_this_compliant_app": {
                                    "runAfter": {},
                                    "metadata": {
                                      "operationMetadataId": "7f75dbeb-c560-45db-b5aa-63b172190c30"
                                    },
                                    "type": "OpenApiConnection",
                                    "inputs": {
                                      "host": {
                                        "connectionName": "shared_commondataserviceforapps",
                                        "operationId": "UpdateRecord",
                                        "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                                      },
                                      "parameters": {
                                        "entityName": "admin_apps",
                                        "recordId": "@items('Update_compliant_apps')?['AppID']",
                                        "item/admin_displayname": "Found in set logic, details will fill next sync flow run",
                                        "item/admin_AppEnvironment@odata.bind": "admin_environments(@{triggerBody()['text_1']})",
                                        "item/admin_dlpevaluationstatus": "Compliant",
                                        "item/admin_dlplastevaluationdate": "@null",
                                        "item/admin_dlppoliciesviolated": "@null",
                                        "item/admin_dlpviolationdetails": "@null",
                                        "item/admin_recordguidasstring": "@items('Update_compliant_apps')?['AppID']"
                                      },
                                      "authentication": "@parameters('$authentication')"
                                    }
                                  }
                                },
                                "runAfter": {},
                                "else": {
                                  "actions": {
                                    "No_benefit_to_add_in_this_case,_just_confuses_2": {
                                      "runAfter": {},
                                      "metadata": {
                                        "operationMetadataId": "1ae52e36-ed9d-4ab2-8495-f2a814e2f35d"
                                      },
                                      "type": "Compose",
                                      "inputs": "No benefit to add in this case, just confuses"
                                    }
                                  }
                                },
                                "expression": {
                                  "equals": [
                                    "@parameters('Inventory and Telemetry in Azure Data Storage account (admin_InventoryandTelemetryinAzureDataStorageaccount)')",
                                    "@false"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "c02550f6-984d-469c-a262-38db41e82f63"
                                },
                                "type": "If"
                              }
                            }
                          },
                          "expression": {
                            "greater": [
                              "@length(outputs('Find_newly_compliant_app')?['body/value'])",
                              0
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "d707c6e7-5aa5-4308-9f8e-877b131d9c3d"
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "Update_compliant_list": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "d4309ccf-c80b-4d3f-bfa6-972b0759d7e6"
                      },
                      "type": "Foreach"
                    }
                  },
                  "runAfter": {
                    "Update_the_Non_Compliant_Apps": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "72db70e4-6de6-4331-aee6-a755cfd5d51a"
                  },
                  "type": "Scope"
                }
              },
              "runAfter": {
                "App_Quarantine_Check": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "6bcdec8c-40e0-40c4-9663-941dcf77590d"
              },
              "type": "Scope"
            }
          },
          "runAfter": {
            "Initialize_SelectDLPFields": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "274d0402-23d0-49c7-9749-4efccae51025"
          },
          "type": "Scope"
        },
        "Initialize_PoliciesViolatedArray": {
          "runAfter": {
            "Respond_to_a_PowerApp_or_flow": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "47547832-2485-4f2f-9e50-22756f4a573d"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "PoliciesViolatedArray",
                "type": "array"
              }
            ]
          }
        },
        "Initialize_SelectDLPFields": {
          "runAfter": {
            "Initialize_PoliciesViolatedArray": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "5ef9affa-621e-46dd-924c-af73732ba73e"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "SelectDLPFields",
                "type": "array"
              }
            ]
          }
        },
        "Error_Handling": {
          "actions": {
            "Terminate": {
              "runAfter": {
                "Update_Last_Run_Fail": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "9e5a2a18-dba2-47a1-96d5-3356f4348e5a"
              },
              "type": "Terminate",
              "inputs": {
                "runStatus": "Failed",
                "runError": {
                  "code": "500",
                  "message": "Get Environments Failed"
                }
              }
            },
            "Get_ID_Fail": {
              "runAfter": {
                "Create_a_new_record_-_Sync_Flow_Errors": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "47329bf2-8aac-400d-9778-a793b4f1180f"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "$select": "admin_coesolutionmetadataid",
                  "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                  "$top": 1
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Update_Last_Run_Fail": {
              "runAfter": {
                "Get_ID_Fail": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "c63eb7cc-6101-4567-b520-a4a8881264e9"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "recordId": "@first(outputs('Get_ID_Fail')?['body/value'])?['admin_coesolutionmetadataid']",
                  "item/admin_lastrun": "@utcNow()",
                  "item/admin_lastrunpassed": false
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Get_envt_display_name": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "32ce5291-6fcf-4ed2-b8e0-d1f9c792de66"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "GetItem",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_environments",
                  "recordId": "@triggerBody()['text_1']",
                  "$select": "admin_displayname"
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Create_a_new_record_-_Sync_Flow_Errors": {
              "runAfter": {
                "Get_envt_display_name": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "87961ff0-e261-4890-9ab9-a53f88fe0de5"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "CreateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_syncflowerrorses",
                  "item/admin_name": "@workflow()?['tags']['flowDisplayName']",
                  "item/admin_environmentname": "@outputs('Get_envt_display_name')?['body/admin_displayname']",
                  "item/admin_flowinstanceurl": "@concat(parameters('Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)'), workflow()?['tags']['environmentName'], '/flows/', workflow()?['name'], '/runs/', workflow()?['run']['name'])"
                },
                "authentication": "@parameters('$authentication')",
                "retryPolicy": {
                  "type": "exponential",
                  "count": 10,
                  "interval": "PT10S"
                }
              }
            }
          },
          "runAfter": {
            "update_app_properties": [
              "Failed"
            ]
          },
          "metadata": {
            "operationMetadataId": "38ae684e-622d-42ea-abd2-ee571aee3a5f"
          },
          "type": "Scope"
        },
        "Update_last_run_as_pass": {
          "actions": {
            "Update_Last_Run_Successful": {
              "runAfter": {
                "Get_ID_Pass": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "78ef70e5-7f67-4737-9a02-8533f12caa19"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "recordId": "@first(outputs('Get_ID_Pass')?['body/value'])?['admin_coesolutionmetadataid']",
                  "item/admin_lastrun": "@utcNow()",
                  "item/admin_lastrunpassed": true
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Get_ID_Pass": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "f4f314b6-89d3-4056-af1c-73115e7d6bd1"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "$select": "admin_coesolutionmetadataid",
                  "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                  "$top": 1
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Catch_-_not_ready_to_take_last_run_date": {
              "runAfter": {
                "Update_Last_Run_Successful": [
                  "Failed"
                ]
              },
              "metadata": {
                "operationMetadataId": "f88cdefe-c402-49d7-8f4a-934475e6f741"
              },
              "type": "Compose",
              "inputs": "Catch - not ready to take last run date"
            }
          },
          "runAfter": {
            "Error_Handling": [
              "Skipped"
            ]
          },
          "metadata": {
            "operationMetadataId": "5c140442-d939-4ca4-8ec8-d1ee2bed4a81"
          },
          "type": "Scope"
        },
        "Respond_to_a_PowerApp_or_flow": {
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "888a4ba5-9b3a-4fb4-aa45-19c8ff849d81"
          },
          "type": "Response",
          "kind": "PowerApp",
          "inputs": {
            "statusCode": 200,
            "body": {
              "result": "pass"
            },
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "title": "result",
                  "x-ms-dynamically-added": true,
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "templateName": ""
  },
  "schemaVersion": "1.0.0.0"
}