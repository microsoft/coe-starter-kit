{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "admin_sharedcommondataserviceforapps_98924"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      },
      "shared_commondataserviceforapps_2": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "admin_CoECoreDataverseEnvRequest"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      },
      "shared_powerappsforadmins_1": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "admin_CoECorePowerAppsAdmin2"
        },
        "api": {
          "name": "shared_powerappsforadmins"
        }
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)": {
          "defaultValue": "https://flow.microsoft.com/manage/environments/",
          "type": "String",
          "metadata": {
            "schemaName": "admin_PowerAutomateEnvironmentVariable",
            "description": "Inventory - REQUIRED. Environment, including geographic location, for Power Automate - Ex for commercial: https://flow.microsoft.com/manage/environments/"
          }
        },
        "Inventory and Telemetry in Azure Data Storage account (admin_InventoryandTelemetryinAzureDataStorageaccount)": {
          "defaultValue": false,
          "type": "Bool",
          "metadata": {
            "schemaName": "admin_InventoryandTelemetryinAzureDataStorageaccount",
            "description": "Inventory - Have you set up data export in PPAC and is your inventory and telemetry in an Azure Data Storage folder (also referred to as Bring your own Datalake, self-serve analytics feature). Default no"
          }
        }
      },
      "triggers": {
        "manual": {
          "metadata": {
            "operationMetadataId": "b0937fac-3a40-4f8d-b93d-814fc6bd27bf"
          },
          "type": "Request",
          "kind": "PowerAppV2",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "title": "envtName",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                },
                "text_1": {
                  "title": "envtID",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                }
              },
              "required": [
                "text",
                "text_1"
              ]
            }
          }
        }
      },
      "actions": {
        "Error_Handling": {
          "actions": {
            "Terminate": {
              "runAfter": {
                "Update_Last_Run_Fail": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "9e5a2a18-dba2-47a1-96d5-3356f4348e5a"
              },
              "type": "Terminate",
              "inputs": {
                "runStatus": "Failed",
                "runError": {
                  "code": "500",
                  "message": "Get Environments Failed"
                }
              }
            },
            "Get_ID_Fail": {
              "runAfter": {
                "Create_a_new_record_-_Sync_Flow_Errors": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "47329bf2-8aac-400d-9778-a793b4f1180f"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "$select": "admin_coesolutionmetadataid",
                  "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                  "$top": 1
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Update_Last_Run_Fail": {
              "runAfter": {
                "Get_ID_Fail": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "c63eb7cc-6101-4567-b520-a4a8881264e9"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "recordId": "@first(outputs('Get_ID_Fail')?['body/value'])?['admin_coesolutionmetadataid']",
                  "item/admin_lastrun": "@utcNow()",
                  "item/admin_lastrunpassed": false
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Create_a_new_record_-_Sync_Flow_Errors": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "87961ff0-e261-4890-9ab9-a53f88fe0de5"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "CreateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_syncflowerrorses",
                  "item/admin_name": "@workflow()?['tags']['flowDisplayName']",
                  "item/admin_environmentname": "@outputs('Get_Evnt_Details')?['body/admin_displayname']",
                  "item/admin_flowinstanceurl": "@concat(parameters('Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)'), workflow()?['tags']['environmentName'], '/flows/', workflow()?['name'], '/runs/', workflow()?['run']['name'])"
                },
                "authentication": "@parameters('$authentication')",
                "retryPolicy": {
                  "type": "exponential",
                  "count": 10,
                  "interval": "PT10S"
                }
              }
            }
          },
          "runAfter": {
            "Get_extra_app_properties_for_this_envt": [
              "Failed"
            ]
          },
          "metadata": {
            "operationMetadataId": "38ae684e-622d-42ea-abd2-ee571aee3a5f"
          },
          "type": "Scope"
        },
        "Update_last_run_as_pass": {
          "actions": {
            "Update_Last_Run_Successful": {
              "runAfter": {
                "Get_ID_Pass": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "78ef70e5-7f67-4737-9a02-8533f12caa19"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "recordId": "@first(outputs('Get_ID_Pass')?['body/value'])?['admin_coesolutionmetadataid']",
                  "item/admin_lastrun": "@utcNow()",
                  "item/admin_lastrunpassed": true
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Get_ID_Pass": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "f4f314b6-89d3-4056-af1c-73115e7d6bd1"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "$select": "admin_coesolutionmetadataid",
                  "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                  "$top": 1
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Catch_-_not_ready_to_take_last_run_date": {
              "runAfter": {
                "Update_Last_Run_Successful": [
                  "Failed"
                ]
              },
              "metadata": {
                "operationMetadataId": "f88cdefe-c402-49d7-8f4a-934475e6f741"
              },
              "type": "Compose",
              "inputs": "Catch - not ready to take last run date"
            }
          },
          "runAfter": {
            "Error_Handling": [
              "Skipped"
            ]
          },
          "metadata": {
            "operationMetadataId": "5c140442-d939-4ca4-8ec8-d1ee2bed4a81"
          },
          "type": "Scope"
        },
        "Respond_to_a_PowerApp_or_flow": {
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "888a4ba5-9b3a-4fb4-aa45-19c8ff849d81"
          },
          "type": "Response",
          "kind": "PowerApp",
          "inputs": {
            "statusCode": 200,
            "body": {
              "result": "pass"
            },
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "title": "result",
                  "x-ms-dynamically-added": true,
                  "type": "string"
                }
              }
            }
          }
        },
        "Check_if_Inventory_in_sync_flow_architecture,_terminate_if_true": {
          "actions": {
            "Terminate_for_environments_marked_deleted": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "71b2e356-dc30-46ae-aa5e-90ae51cf707b"
              },
              "type": "Terminate",
              "inputs": {
                "runStatus": "Succeeded"
              }
            }
          },
          "runAfter": {
            "Respond_to_a_PowerApp_or_flow": [
              "Succeeded",
              "Skipped"
            ]
          },
          "expression": {
            "equals": [
              "@parameters('Inventory and Telemetry in Azure Data Storage account (admin_InventoryandTelemetryinAzureDataStorageaccount)')",
              "@false"
            ]
          },
          "metadata": {
            "operationMetadataId": "0bf354ac-4265-4bbe-9fed-996958d038bd"
          },
          "type": "If"
        },
        "Get_extra_app_properties_for_this_envt": {
          "actions": {
            "Get_Basics": {
              "actions": {
                "CurrentAppInventory": {
                  "runAfter": {
                    "Get_Apps_as_Admin": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "0e8d8c5b-cc57-472d-864e-103af0ef245b"
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_commondataserviceforapps",
                      "operationId": "ListRecords",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                    },
                    "parameters": {
                      "entityName": "admin_apps",
                      "$select": "admin_appid, admin_powerappstype, admin_displayname, admin_quarantineapp, admin_dlpevaluationstatus, admin_dlplastevaluationdate, admin_dlpviolationdetails, _admin_appowner_value",
                      "$filter": "_admin_appenvironment_value eq @{triggerBody()['text_1']} and admin_powerappstype ne 597910001"
                    },
                    "authentication": "@parameters('$authentication')"
                  },
                  "runtimeConfiguration": {
                    "paginationPolicy": {
                      "minimumItemCount": 100000
                    }
                  }
                },
                "Ensure_Envt_Inventoried": {
                  "actions": {
                    "Get_Evnt_Details": {
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "beafe17b-c9e4-4258-a66b-955f2be67e6b"
                      },
                      "type": "OpenApiConnection",
                      "inputs": {
                        "host": {
                          "connectionName": "shared_commondataserviceforapps_2",
                          "operationId": "GetItem",
                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                        },
                        "parameters": {
                          "entityName": "admin_environments",
                          "recordId": "@triggerBody()['text_1']",
                          "$select": "admin_displayname"
                        },
                        "authentication": "@parameters('$authentication')"
                      }
                    },
                    "Terminate_if_envt_does_not_yet_exist": {
                      "runAfter": {
                        "Get_Evnt_Details": [
                          "Failed"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "f892f3e6-adaf-49a5-a0d2-67675fb248f8"
                      },
                      "type": "Terminate",
                      "inputs": {
                        "runStatus": "Succeeded"
                      }
                    }
                  },
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "ea2ba143-f432-4ccc-b552-1d1e0b54cd11"
                  },
                  "type": "Scope",
                  "description": "This is needed for BYODL case as sometimes objects are in the datalake before the envt"
                },
                "Get_Apps_as_Admin": {
                  "runAfter": {
                    "Ensure_Envt_Inventoried": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "8bafe7db-8334-45a8-8730-3e46eb368e72"
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_powerappsforadmins_1",
                      "operationId": "Get-AdminApps",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_powerappsforadmins"
                    },
                    "parameters": {
                      "environment": "@triggerBody()['text']",
                      "api-version": "2020-07-01",
                      "$top": 250
                    },
                    "authentication": "@parameters('$authentication')"
                  },
                  "runtimeConfiguration": {
                    "paginationPolicy": {
                      "minimumItemCount": 100000
                    }
                  }
                },
                "Inventory_AppIDs": {
                  "runAfter": {
                    "CurrentAppInventory": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "692908d5-63ef-4b44-acca-ba63c5c68470"
                  },
                  "type": "Select",
                  "inputs": {
                    "from": "@outputs('CurrentAppInventory')?['body/value']",
                    "select": "@item()?['admin_appid']"
                  }
                },
                "Actual_Already_Inventoried": {
                  "runAfter": {
                    "Inventory_AppIDs": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "c01813ea-9f72-400b-abb6-1dac7ead3b4b"
                  },
                  "type": "Query",
                  "inputs": {
                    "from": "@outputs('Get_Apps_as_Admin')?['body/value']",
                    "where": "@contains(body('Inventory_AppIDs'), item()?['name'])"
                  }
                }
              },
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "58b53c6e-26ef-4757-bd9e-37ba671029c9"
              },
              "type": "Scope"
            },
            "Get_List_of_Apps_to_Update_and_Insert": {
              "actions": {
                "raw": {
                  "runAfter": {
                    "Look_for_ones_with_updates": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "53487cd4-9579-4e2e-a718-46df4521b512"
                  },
                  "type": "Compose",
                  "inputs": "@variables('appsToInventory')"
                },
                "Complete_List_AppsToInventory": {
                  "runAfter": {
                    "raw": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "c848e252-7864-4c82-b0d9-e10aec85e8c0"
                  },
                  "type": "Compose",
                  "inputs": "@union(variables('appsToInventory'), variables('appsToInventory'))"
                },
                "Look_for_apps_manually_flagged_for_inventory_or_with_broken_connections": {
                  "actions": {
                    "AppsToInventory_-_ManualRequest": {
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "0e8d8c5b-cc57-472d-864e-103af0ef245b"
                      },
                      "type": "OpenApiConnection",
                      "inputs": {
                        "host": {
                          "connectionName": "shared_commondataserviceforapps",
                          "operationId": "ListRecords",
                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                        },
                        "parameters": {
                          "entityName": "admin_apps",
                          "$select": "admin_appid",
                          "$filter": "_admin_appenvironment_value eq @{triggerBody()['text_1']} and admin_powerappstype ne 597910001 and (admin_appcontainsbrokenconnections eq true or admin_inventoryme eq true)"
                        },
                        "authentication": "@parameters('$authentication')"
                      },
                      "runtimeConfiguration": {
                        "paginationPolicy": {
                          "minimumItemCount": 100000
                        }
                      }
                    },
                    "Add_manual_requests_to_array": {
                      "foreach": "@outputs('AppsToInventory_-_ManualRequest')?['body/value']",
                      "actions": {
                        "Append_to_appsToInventory_-_manual_requests": {
                          "runAfter": {},
                          "metadata": {
                            "operationMetadataId": "f6a9316e-3842-469d-b7b0-2fad69e91448"
                          },
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "appsToInventory",
                            "value": {
                              "AppID": "@items('Add_manual_requests_to_array')?['admin_appid']"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "AppsToInventory_-_ManualRequest": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "36d126b2-b699-44ff-91bb-804ce9296a8c"
                      },
                      "type": "Foreach"
                    }
                  },
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "9616f302-9d94-44a0-b657-9b1daa4f78a2"
                  },
                  "type": "Scope"
                },
                "Look_for_ones_with_updates": {
                  "actions": {
                    "Get_Inventory_-_Updates": {
                      "actions": {
                        "Select_Inventory_-_Updates": {
                          "runAfter": {},
                          "metadata": {
                            "operationMetadataId": "d9864193-358e-4194-9acd-28dab1de4882"
                          },
                          "type": "Select",
                          "inputs": {
                            "from": "@outputs('CurrentAppInventory')?['body/value']",
                            "select": {
                              "AppID": "@item()?['admin_appid']",
                              "AppQuarantined": "@item()?['admin_quarantineapp']",
                              "DLP_Status": "@item()?['admin_dlpevaluationstatus']",
                              "DLP_ErrorMessage": "@item()?['admin_dlpviolationdetails']",
                              "AppOwner": "@item()?['_admin_appowner_value']"
                            }
                          }
                        },
                        "Parse_Inventory_-_Updates": {
                          "runAfter": {
                            "Select_Inventory_-_Updates": [
                              "Succeeded"
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "274daa1f-66a7-4bf4-be08-c3a0e2f758d7"
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Select_Inventory_-_Updates')",
                            "schema": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "AppID": {
                                    "type": "string"
                                  },
                                  "AppQuarantined": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  },
                                  "DLP_Status": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "DLP_ErrorMessage": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "AppOwner": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "required": [
                                  "AppID"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "61117d90-0e7a-40c6-8484-f0212a2b0cc4"
                      },
                      "type": "Scope"
                    },
                    "Get_Actual_-_Updates": {
                      "actions": {
                        "Select_Actual_-_Updates": {
                          "runAfter": {},
                          "metadata": {
                            "operationMetadataId": "8410edf3-be25-420e-9c3d-d5c2a4d8ef20"
                          },
                          "type": "Select",
                          "inputs": {
                            "from": "@body('Actual_Already_Inventoried')",
                            "select": {
                              "AppID": "@item()?['name']",
                              "AppQuarantined": "@if(equals(item()?['properties/executionRestrictions/appQuarantineState/quarantineStatus'], 'Quarantined'), true, false)",
                              "DLP_Status": "@item()?['properties/executionRestrictions/dataLossPreventionEvaluationResult/status']",
                              "DLP_ErrorMessage": "@item()?['properties/executionRestrictions/dataLossPreventionEvaluationResult/violationErrorMessage']",
                              "AppOwner": "@item()?['properties/owner/id']"
                            }
                          }
                        },
                        "Parse_Actual_-_Updates": {
                          "runAfter": {
                            "Select_Actual_-_Updates": [
                              "Succeeded"
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "bb1cea14-82ae-4c5e-93a4-66f7d675861e"
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Select_Actual_-_Updates')",
                            "schema": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "AppID": {
                                    "type": "string"
                                  },
                                  "AppQuarantined": {
                                    "type": [
                                      "boolean",
                                      "null"
                                    ]
                                  },
                                  "DLP_Status": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "DLP_ErrorMessage": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "AppOwner": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "required": [
                                  "AppID"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Get_Inventory_-_Updates": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "7343aee1-301c-4197-a13f-d3e6968adc8b"
                      },
                      "type": "Scope"
                    },
                    "Add_Updates_to_appsToInventory": {
                      "actions": {
                        "UpdatesToInventory": {
                          "runAfter": {},
                          "metadata": {
                            "operationMetadataId": "ec8ebf56-f3e3-4251-9491-440c69d207e4"
                          },
                          "type": "Query",
                          "inputs": {
                            "from": "@body('Parse_Actual_-_Updates')",
                            "where": "@not(contains(body('Parse_Inventory_-_Updates'), item()))"
                          }
                        },
                        "Add_Updates_to_array": {
                          "foreach": "@body('UpdatesToInventory')",
                          "actions": {
                            "Append_Updates_to_appsToInventory": {
                              "runAfter": {},
                              "metadata": {
                                "operationMetadataId": "b5cba045-3339-477f-a67f-2b5ce63b9928"
                              },
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "appsToInventory",
                                "value": {
                                  "AppID": "@items('Add_Updates_to_array')?['AppID']"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "UpdatesToInventory": [
                              "Succeeded"
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "6db8b7e6-0fdd-4817-b396-693634e27477"
                          },
                          "type": "Foreach",
                          "runtimeConfiguration": {
                            "concurrency": {
                              "repetitions": 50
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Get_Actual_-_Updates": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "e201560e-ea4a-4844-a4e1-1a38aeefe1ed"
                      },
                      "type": "Scope"
                    }
                  },
                  "runAfter": {
                    "Look_for_apps_manually_flagged_for_inventory_or_with_broken_connections": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "444bea7f-5bd7-4779-b5b4-0669fd85e81f"
                  },
                  "type": "Scope"
                }
              },
              "runAfter": {
                "Get_Basics": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "189f2033-69d6-45cd-8ab2-9fb33d1381a6"
              },
              "type": "Scope"
            },
            "Update_all_targetted_apps": {
              "foreach": "@outputs('Complete_List_AppsToInventory')",
              "actions": {
                "Run_a_Child_Flow": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "c97dfe1f-9cf1-4f5c-9fed-f551036e8780"
                  },
                  "type": "Workflow",
                  "inputs": {
                    "host": {
                      "workflowReferenceName": "b677aa25-8de4-ed11-a7c7-0022480813ff"
                    },
                    "body": {
                      "text": "@triggerBody()['text_1']",
                      "text_1": "@triggerBody()['text']",
                      "text_2": "@items('Update_all_targetted_apps')?['AppID']"
                    }
                  }
                }
              },
              "runAfter": {
                "Get_List_of_Apps_to_Update_and_Insert": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "886f2d1d-98b6-4d03-8f0f-c8d5f83badb1"
              },
              "type": "Foreach",
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 50
                }
              }
            }
          },
          "runAfter": {
            "Initialize_appsToInventory": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "a61d4c0c-2a4d-4e5d-8cf5-b3d0a9ddf4aa"
          },
          "type": "Scope"
        },
        "Initialize_appsToInventory": {
          "runAfter": {
            "Check_if_Inventory_in_sync_flow_architecture,_terminate_if_true": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "e62ec4d2-a0ec-4fa6-952c-316178fd25d7"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "appsToInventory",
                "type": "array"
              }
            ]
          }
        }
      }
    },
    "templateName": ""
  },
  "schemaVersion": "1.0.0.0"
}