{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "admin_sharedcommondataserviceforapps_98924"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      },
      "shared_commondataserviceforapps_2": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "admin_CoECoreDataverseEnvRequest"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      },
      "shared_flowmanagement_1": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "admin_CoECorePowerAutomateManagement"
        },
        "api": {
          "name": "shared_flowmanagement"
        }
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "Inventory and Telemetry in Azure Data Storage account (admin_InventoryandTelemetryinAzureDataStorageaccount)": {
          "defaultValue": false,
          "type": "Bool",
          "metadata": {
            "schemaName": "admin_InventoryandTelemetryinAzureDataStorageaccount",
            "description": "Inventory - Have you set up data export in PPAC and is your inventory and telemetry in an Azure Data Storage folder (also referred to as Bring your own Datalake, self-serve analytics feature). Default no"
          }
        },
        "Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)": {
          "defaultValue": "https://flow.microsoft.com/manage/environments/",
          "type": "String",
          "metadata": {
            "schemaName": "admin_PowerAutomateEnvironmentVariable",
            "description": "Inventory - REQUIRED. Environment, including geographic location, for Power Automate - Ex for commercial: https://flow.microsoft.com/manage/environments/"
          }
        },
        "DelayInventory (admin_DelayInventory)": {
          "defaultValue": false,
          "type": "Bool",
          "metadata": {
            "schemaName": "admin_DelayInventory",
            "description": "Inventory - If Yes, will run a delay step to assist with the Dataverse health. Only turn to No for debugging. "
          }
        }
      },
      "triggers": {
        "manual": {
          "metadata": {
            "operationMetadataId": "142b95da-cec3-4e4a-8cc3-09054b222ab3"
          },
          "type": "Request",
          "kind": "PowerAppV2",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "title": "envtName",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                },
                "text_1": {
                  "title": "envtID",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                }
              },
              "required": [
                "text",
                "text_1"
              ]
            }
          }
        }
      },
      "actions": {
        "Respond_to_a_PowerApp_or_flow": {
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "888a4ba5-9b3a-4fb4-aa45-19c8ff849d81"
          },
          "type": "Response",
          "kind": "PowerApp",
          "inputs": {
            "statusCode": 200,
            "body": {
              "result": "pass"
            },
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "title": "result",
                  "x-ms-dynamically-added": true,
                  "type": "string"
                }
              }
            }
          }
        },
        "Check_if_Inventory_in_sync_flow_architecture,_terminate_if_true": {
          "actions": {
            "Terminate_for_environments_marked_deleted": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "71b2e356-dc30-46ae-aa5e-90ae51cf707b"
              },
              "type": "Terminate",
              "inputs": {
                "runStatus": "Succeeded"
              }
            }
          },
          "runAfter": {
            "Respond_to_a_PowerApp_or_flow": [
              "Succeeded",
              "Skipped"
            ]
          },
          "expression": {
            "equals": [
              "@parameters('Inventory and Telemetry in Azure Data Storage account (admin_InventoryandTelemetryinAzureDataStorageaccount)')",
              "@false"
            ]
          },
          "metadata": {
            "operationMetadataId": "0bf354ac-4265-4bbe-9fed-996958d038bd"
          },
          "type": "If"
        },
        "Error_Handling": {
          "actions": {
            "Terminate": {
              "runAfter": {
                "Update_Last_Run_Fail": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "9e5a2a18-dba2-47a1-96d5-3356f4348e5a"
              },
              "type": "Terminate",
              "inputs": {
                "runStatus": "Failed",
                "runError": {
                  "code": "500",
                  "message": "Get Environments Failed"
                }
              }
            },
            "Get_ID_Fail": {
              "runAfter": {
                "Create_a_new_record_-_Sync_Flow_Errors": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "47329bf2-8aac-400d-9778-a793b4f1180f"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "$select": "admin_coesolutionmetadataid",
                  "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                  "$top": 1
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Update_Last_Run_Fail": {
              "runAfter": {
                "Get_ID_Fail": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "c63eb7cc-6101-4567-b520-a4a8881264e9"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "recordId": "@first(outputs('Get_ID_Fail')?['body/value'])?['admin_coesolutionmetadataid']",
                  "item/admin_lastrun": "@utcNow()",
                  "item/admin_lastrunpassed": false
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Create_a_new_record_-_Sync_Flow_Errors": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "87961ff0-e261-4890-9ab9-a53f88fe0de5"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "CreateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_syncflowerrorses",
                  "item/admin_name": "@workflow()?['tags']['flowDisplayName']",
                  "item/admin_environmentname": "@outputs('Get_Evnt_Details')?['body/admin_displayname']",
                  "item/admin_flowinstanceurl": "@concat(parameters('Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)'), workflow()?['tags']['environmentName'], '/flows/', workflow()?['name'], '/runs/', workflow()?['run']['name'])"
                },
                "authentication": "@parameters('$authentication')",
                "retryPolicy": {
                  "type": "exponential",
                  "count": 10,
                  "interval": "PT10S"
                }
              }
            }
          },
          "runAfter": {
            "Get_extra_flow_properties_for_this_envt": [
              "Failed"
            ]
          },
          "metadata": {
            "operationMetadataId": "38ae684e-622d-42ea-abd2-ee571aee3a5f"
          },
          "type": "Scope"
        },
        "Update_last_run_as_pass": {
          "actions": {
            "Update_Last_Run_Successful": {
              "runAfter": {
                "Get_ID_Pass": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "78ef70e5-7f67-4737-9a02-8533f12caa19"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "recordId": "@first(outputs('Get_ID_Pass')?['body/value'])?['admin_coesolutionmetadataid']",
                  "item/admin_lastrun": "@utcNow()",
                  "item/admin_lastrunpassed": true
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Get_ID_Pass": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "f4f314b6-89d3-4056-af1c-73115e7d6bd1"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "$select": "admin_coesolutionmetadataid",
                  "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                  "$top": 1
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Catch_-_not_ready_to_take_last_run_date": {
              "runAfter": {
                "Update_Last_Run_Successful": [
                  "Failed"
                ]
              },
              "metadata": {
                "operationMetadataId": "f88cdefe-c402-49d7-8f4a-934475e6f741"
              },
              "type": "Compose",
              "inputs": "Catch - not ready to take last run date"
            }
          },
          "runAfter": {
            "Error_Handling": [
              "Skipped"
            ]
          },
          "metadata": {
            "operationMetadataId": "5c140442-d939-4ca4-8ec8-d1ee2bed4a81"
          },
          "type": "Scope"
        },
        "Initialize_flowsToInventory": {
          "runAfter": {
            "Check_if_Inventory_in_sync_flow_architecture,_terminate_if_true": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "e62ec4d2-a0ec-4fa6-952c-316178fd25d7"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "flowsToInventory",
                "type": "array"
              }
            ]
          }
        },
        "Get_extra_flow_properties_for_this_envt": {
          "actions": {
            "Get_Basics": {
              "actions": {
                "CurrentFlowInventory": {
                  "runAfter": {
                    "Filter_out_unpublished_flows": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "0e8d8c5b-cc57-472d-864e-103af0ef245b"
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_commondataserviceforapps",
                      "operationId": "ListRecords",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                    },
                    "parameters": {
                      "entityName": "admin_flows",
                      "$select": "admin_flowid, admin_flowstate",
                      "$filter": "_admin_flowenvironment_value eq @{triggerBody()['text_1']}"
                    },
                    "authentication": "@parameters('$authentication')"
                  },
                  "runtimeConfiguration": {
                    "paginationPolicy": {
                      "minimumItemCount": 100000
                    }
                  }
                },
                "Ensure_Envt_Inventoried": {
                  "actions": {
                    "Get_Evnt_Details": {
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "beafe17b-c9e4-4258-a66b-955f2be67e6b"
                      },
                      "type": "OpenApiConnection",
                      "inputs": {
                        "host": {
                          "connectionName": "shared_commondataserviceforapps_2",
                          "operationId": "GetItem",
                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                        },
                        "parameters": {
                          "entityName": "admin_environments",
                          "recordId": "@triggerBody()['text_1']",
                          "$select": "admin_displayname"
                        },
                        "authentication": "@parameters('$authentication')"
                      }
                    },
                    "Terminate_if_envt_does_not_yet_exist": {
                      "runAfter": {
                        "Get_Evnt_Details": [
                          "Failed"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "f892f3e6-adaf-49a5-a0d2-67675fb248f8"
                      },
                      "type": "Terminate",
                      "inputs": {
                        "runStatus": "Succeeded"
                      }
                    }
                  },
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "ea2ba143-f432-4ccc-b552-1d1e0b54cd11"
                  },
                  "type": "Scope",
                  "description": "This is needed for BYODL case as sometimes objects are in the datalake before the envt"
                },
                "List_Flows_as_Admin_(V2)": {
                  "runAfter": {
                    "Ensure_Envt_Inventoried": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "b0962995-3af5-4fb2-a17a-149fca48ba53"
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_flowmanagement_1",
                      "operationId": "ListFlowsInEnvironment_V2",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_flowmanagement"
                    },
                    "parameters": {
                      "environmentName": "@triggerBody()['text']",
                      "expandSuspensionInfo": true
                    },
                    "authentication": "@parameters('$authentication')",
                    "retryPolicy": {
                      "type": "exponential",
                      "count": 30,
                      "interval": "PT30S"
                    }
                  },
                  "runtimeConfiguration": {
                    "paginationPolicy": {
                      "minimumItemCount": 100000
                    }
                  }
                },
                "Filter_out_unpublished_flows": {
                  "runAfter": {
                    "List_Flows_as_Admin_(V2)": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "d8c06d7d-7642-4332-81ba-f5d7bbe636d1"
                  },
                  "type": "Query",
                  "inputs": {
                    "from": "@outputs('List_Flows_as_Admin_(V2)')?['body/value']",
                    "where": "@equals(equals(item()?['name'], item()?['properties/workflowUniqueId']), true)"
                  }
                }
              },
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "58b53c6e-26ef-4757-bd9e-37ba671029c9"
              },
              "type": "Scope"
            },
            "Inventory_all_targetted_flows": {
              "foreach": "@outputs('Complete_List_FlowToInventory')",
              "actions": {
                "Run_a_Child_Flow": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "e9ea5691-06ec-45c4-a632-a12df9e4f5d4"
                  },
                  "type": "Workflow",
                  "inputs": {
                    "host": {
                      "workflowReferenceName": "a44274df-02da-ed11-a7c7-0022480813ff"
                    },
                    "body": {
                      "text": "@triggerBody()['text_1']",
                      "text_1": "@triggerBody()['text']",
                      "text_2": "@items('Inventory_all_targetted_flows')?['FlowID']",
                      "boolean": true
                    }
                  }
                }
              },
              "runAfter": {
                "Complete_List_FlowToInventory": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "886f2d1d-98b6-4d03-8f0f-c8d5f83badb1"
              },
              "type": "Foreach",
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 50
                }
              }
            },
            "Look_for_flows_with_estimated_suspension_data": {
              "actions": {
                "Filter_to_tenant_flows_with_estimated_suspension_data": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "613d7338-3fe0-4576-9599-7ffe82f76927"
                  },
                  "type": "Query",
                  "inputs": {
                    "from": "@body('Filter_out_unpublished_flows')",
                    "where": "@contains(item()?['properties'], 'estimatedSuspensionData')"
                  }
                },
                "List_inventory_flows_with_estimated_suspension_data": {
                  "runAfter": {
                    "Select_Tenant_-_Pending_Suspension": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "90d7f482-2615-4fbe-8009-42040aa41fb3"
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_commondataserviceforapps_2",
                      "operationId": "ListRecords",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                    },
                    "parameters": {
                      "entityName": "admin_flows",
                      "$select": "admin_flowid, admin_displayname, admin_flowpendingsuspensionon, admin_flowpendingsuspensionpowerappplanexcluded, admin_flowpendingsuspensionreason",
                      "$filter": "_admin_flowenvironment_value eq @{triggerBody()['text_1']} and admin_flowpendingsuspensionreason ne null"
                    },
                    "authentication": "@parameters('$authentication')"
                  }
                },
                "Select_Tenant_-_Pending_Suspension": {
                  "runAfter": {
                    "Filter_to_tenant_flows_with_estimated_suspension_data": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "469fbe62-52f9-4f26-a352-ff1e2453379d"
                  },
                  "type": "Select",
                  "inputs": {
                    "from": "@body('Filter_to_tenant_flows_with_estimated_suspension_data')",
                    "select": {
                      "FlowID": "@item()?['name']",
                      "FPS_On": "@coalesce(split(item()?['properties/estimatedSuspensionData/time'], 'T')[0], null)",
                      "FPS_PAExcluded": "@item()?['properties/estimatedSuspensionData/powerAppPlanExcluded']",
                      "FPS_Reason": "@item()?['properties/estimatedSuspensionData/reason']"
                    }
                  }
                },
                "Select_Inventory_-_Pending_Suspension": {
                  "runAfter": {
                    "List_inventory_flows_with_estimated_suspension_data": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "e69d9531-e87e-425a-9474-3173f67305a7"
                  },
                  "type": "Select",
                  "inputs": {
                    "from": "@outputs('List_inventory_flows_with_estimated_suspension_data')?['body/value']",
                    "select": {
                      "FlowID": "@item()?['admin_flowid']",
                      "FPS_On": "@coalesce(split(item()?['admin_flowpendingsuspensionon'], 'T')[0], null)",
                      "FPS_PAExcluded": "@item()?['admin_flowpendingsuspensionpowerappplanexcluded']",
                      "FPS_Reason": "@item()?['admin_flowpendingsuspensionreason']"
                    }
                  }
                },
                "Flag_to_inventory_things_whos_pending_suspension_reason_has_changed": {
                  "actions": {
                    "Filter_to_tenant_flows_whos_reason_or_date_has_changed_": {
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "03ce36a8-9fc2-4c29-bbbf-d2bf59ea3ab6"
                      },
                      "type": "Query",
                      "inputs": {
                        "from": "@body('Select_Tenant_-_Pending_Suspension')",
                        "where": "@not(contains(body('Select_Inventory_-_Pending_Suspension'), item()))"
                      }
                    },
                    "Apply_to_tenant_flow_with_new_estimated_suspension": {
                      "foreach": "@body('Filter_to_tenant_flows_whos_reason_or_date_has_changed_')",
                      "actions": {
                        "Update_pending_suspension_2": {
                          "runAfter": {},
                          "metadata": {
                            "operationMetadataId": "a49cacd4-ce03-4fcf-aeb2-a350599c7f50"
                          },
                          "type": "OpenApiConnection",
                          "inputs": {
                            "host": {
                              "connectionName": "shared_commondataserviceforapps_2",
                              "operationId": "UpdateRecord",
                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                            },
                            "parameters": {
                              "entityName": "admin_flows",
                              "recordId": "@items('Apply_to_tenant_flow_with_new_estimated_suspension')?['FlowID']",
                              "item/admin_FlowEnvironment@odata.bind": "admin_environments(@{triggerBody()['text_1']})",
                              "item/admin_flowpendingsuspensionon": "@items('Apply_to_tenant_flow_with_new_estimated_suspension')?['FPS_On']",
                              "item/admin_flowpendingsuspensionpowerappplanexcluded": "@items('Apply_to_tenant_flow_with_new_estimated_suspension')?['FPS_PAExcluded']",
                              "item/admin_flowpendingsuspensionreason": "@items('Apply_to_tenant_flow_with_new_estimated_suspension')?['FPS_Reason']",
                              "item/admin_inventoryme": true
                            },
                            "authentication": "@parameters('$authentication')"
                          }
                        }
                      },
                      "runAfter": {
                        "Filter_to_tenant_flows_whos_reason_or_date_has_changed_": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "1c5a261c-9e2d-476e-9c59-eeff69dfa109"
                      },
                      "type": "Foreach"
                    }
                  },
                  "runAfter": {
                    "Select_Inventory_-_Pending_Suspension": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "b095c1f1-c28b-4820-9a15-532cdf95f13c"
                  },
                  "type": "Scope"
                },
                "Clear_things_no_longer_pending_suspension": {
                  "actions": {
                    "Apply_to_each_inventory_flow_with_estimated_suspension": {
                      "foreach": "@outputs('List_inventory_flows_with_estimated_suspension_data')?['body/value']",
                      "actions": {
                        "See_if_still_has_estimated_suspension": {
                          "runAfter": {},
                          "metadata": {
                            "operationMetadataId": "dce03b01-0766-4969-95fa-ed0028184819"
                          },
                          "type": "Query",
                          "inputs": {
                            "from": "@body('Filter_to_tenant_flows_with_estimated_suspension_data')",
                            "where": "@equals(item()?['name'], items('Apply_to_each_inventory_flow_with_estimated_suspension')?['admin_flowid'])"
                          }
                        },
                        "If_no_longer_has_estimated_suspension_then_clear": {
                          "actions": {
                            "Clear_estimated_suspension_data": {
                              "runAfter": {},
                              "metadata": {
                                "operationMetadataId": "563f6894-cc37-4f0d-8c52-65c963387683"
                              },
                              "type": "OpenApiConnection",
                              "inputs": {
                                "host": {
                                  "connectionName": "shared_commondataserviceforapps_2",
                                  "operationId": "UpdateRecord",
                                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                                },
                                "parameters": {
                                  "entityName": "admin_flows",
                                  "recordId": "@items('Apply_to_each_inventory_flow_with_estimated_suspension')?['admin_flowid']",
                                  "item/admin_FlowEnvironment@odata.bind": "admin_environments(@{triggerBody()['text_1']})",
                                  "item/admin_flowpendingsuspensionon": "@null",
                                  "item/admin_flowpendingsuspensionpowerappplanexcluded": "@null",
                                  "item/admin_flowpendingsuspensionreason": "@null",
                                  "item/admin_inventoryme": true
                                },
                                "authentication": "@parameters('$authentication')"
                              }
                            }
                          },
                          "runAfter": {
                            "See_if_still_has_estimated_suspension": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "equals": [
                              "@length(body('See_if_still_has_estimated_suspension'))",
                              0
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "43ce9af8-165e-4136-9619-90e22da971ed"
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "c187e70b-f563-4d13-b0b8-ac98bbc7bae1"
                      },
                      "type": "Foreach"
                    }
                  },
                  "runAfter": {
                    "Flag_to_inventory_things_whos_pending_suspension_reason_has_changed": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "971b7299-e132-45ba-8766-dd465cb51b6e"
                  },
                  "type": "Scope"
                }
              },
              "runAfter": {
                "Get_Basics": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "9d044d9f-48ef-4cdf-9dc0-02ff1950c922"
              },
              "type": "Scope"
            },
            "Look_for_flows_manually_flagged_for_inventory": {
              "actions": {
                "FlowsToInventory_-_ManualRequest": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "0e8d8c5b-cc57-472d-864e-103af0ef245b"
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_commondataserviceforapps",
                      "operationId": "ListRecords",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                    },
                    "parameters": {
                      "entityName": "admin_flows",
                      "$select": "admin_flowid",
                      "$filter": "_admin_flowenvironment_value eq @{triggerBody()['text_1']} and admin_inventoryme eq true"
                    },
                    "authentication": "@parameters('$authentication')"
                  },
                  "runtimeConfiguration": {
                    "paginationPolicy": {
                      "minimumItemCount": 100000
                    }
                  }
                },
                "Add_manual_requests_to_array": {
                  "foreach": "@outputs('FlowsToInventory_-_ManualRequest')?['body/value']",
                  "actions": {
                    "Append_to_flowsToInventory_-_manual_requests": {
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "f6a9316e-3842-469d-b7b0-2fad69e91448"
                      },
                      "type": "AppendToArrayVariable",
                      "inputs": {
                        "name": "flowsToInventory",
                        "value": {
                          "FlowID": "@items('Add_manual_requests_to_array')?['admin_flowid']"
                        }
                      }
                    }
                  },
                  "runAfter": {
                    "FlowsToInventory_-_ManualRequest": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "36d126b2-b699-44ff-91bb-804ce9296a8c"
                  },
                  "type": "Foreach"
                }
              },
              "runAfter": {
                "Look_for_flows_with_estimated_suspension_data": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "9616f302-9d94-44a0-b657-9b1daa4f78a2"
              },
              "type": "Scope"
            },
            "Look_for_flows_with_broken_connections": {
              "actions": {
                "FlowsToInventory_-_BrokenConnections": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "0e8d8c5b-cc57-472d-864e-103af0ef245b"
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_commondataserviceforapps",
                      "operationId": "ListRecords",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                    },
                    "parameters": {
                      "entityName": "admin_flows",
                      "$select": "admin_flowid",
                      "$filter": "_admin_flowenvironment_value eq @{triggerBody()['text_1']} and admin_flowcontainsbrokenconnections eq true"
                    },
                    "authentication": "@parameters('$authentication')"
                  },
                  "runtimeConfiguration": {
                    "paginationPolicy": {
                      "minimumItemCount": 100000
                    }
                  }
                },
                "Add_broken_connections_to_array": {
                  "foreach": "@outputs('FlowsToInventory_-_BrokenConnections')?['body/value']",
                  "actions": {
                    "Append_to_flowsToInventory_-_broken_connections": {
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "f6a9316e-3842-469d-b7b0-2fad69e91448"
                      },
                      "type": "AppendToArrayVariable",
                      "inputs": {
                        "name": "flowsToInventory",
                        "value": {
                          "FlowID": "@items('Add_broken_connections_to_array')?['admin_flowid']"
                        }
                      }
                    }
                  },
                  "runAfter": {
                    "FlowsToInventory_-_BrokenConnections": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "36d126b2-b699-44ff-91bb-804ce9296a8c"
                  },
                  "type": "Foreach"
                }
              },
              "runAfter": {
                "Look_for_flows_manually_flagged_for_inventory": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "9616f302-9d94-44a0-b657-9b1daa4f78a2"
              },
              "type": "Scope"
            },
            "raw": {
              "runAfter": {
                "Look_for_flows_with_broken_connections": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "53487cd4-9579-4e2e-a718-46df4521b512"
              },
              "type": "Compose",
              "inputs": "@variables('flowsToInventory')"
            },
            "Complete_List_FlowToInventory": {
              "runAfter": {
                "raw": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "c848e252-7864-4c82-b0d9-e10aec85e8c0"
              },
              "type": "Compose",
              "inputs": "@union(variables('flowsToInventory'), variables('flowsToInventory'))"
            }
          },
          "runAfter": {
            "Delay_Inventory": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "a61d4c0c-2a4d-4e5d-8cf5-b3d0a9ddf4aa"
          },
          "type": "Scope"
        },
        "Delay_Inventory": {
          "actions": {
            "Delay_1_to_300_minutes": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "f37a4a9d-c5b4-41ed-8484-636dca60ee81"
              },
              "type": "Wait",
              "inputs": {
                "interval": {
                  "count": "@rand(1, 300)",
                  "unit": "Minute"
                }
              },
              "description": "For Dataverse service health, we will randomize the start time of these flows for tenants within a 5 hour range"
            }
          },
          "runAfter": {
            "Initialize_flowsToInventory": [
              "Succeeded"
            ]
          },
          "expression": {
            "equals": [
              "@parameters('DelayInventory (admin_DelayInventory)')",
              true
            ]
          },
          "metadata": {
            "operationMetadataId": "49b3d120-232d-4694-b373-a97ecde35cc4"
          },
          "type": "If"
        }
      }
    },
    "templateName": ""
  },
  "schemaVersion": "1.0.0.0"
}