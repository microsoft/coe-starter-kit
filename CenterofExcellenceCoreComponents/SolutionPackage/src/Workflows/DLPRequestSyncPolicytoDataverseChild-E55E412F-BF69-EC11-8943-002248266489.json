{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps": {
        "api": {
          "name": "shared_commondataserviceforapps"
        },
        "connection": {
          "connectionReferenceLogicalName": "admin_CoECoreDataverseEnvRequest"
        },
        "runtimeSource": "embedded"
      },
      "shared_powerplatformforadmins_1": {
        "api": {
          "name": "shared_powerplatformforadmins"
        },
        "connection": {
          "connectionReferenceLogicalName": "admin_CoECorePowerPlatformforAdminsEnvRequest"
        },
        "runtimeSource": "embedded"
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)": {
          "defaultValue": "https://flow.microsoft.com/manage/environments/",
          "type": "String",
          "metadata": {
            "schemaName": "admin_PowerAutomateEnvironmentVariable",
            "description": "Inventory - REQUIRED. Environment, including geographic location, for Power Automate - Ex for commercial: https://flow.microsoft.com/manage/environments/"
          }
        }
      },
      "triggers": {
        "manual": {
          "type": "Request",
          "kind": "Button",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "title": "PolicyId",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Unique Identifier of the Policy in Power Platform.",
                  "x-ms-content-hint": "TEXT"
                },
                "boolean": {
                  "title": "Upsert",
                  "type": "boolean",
                  "x-ms-dynamically-added": true,
                  "description": "True to enable upsert behavior (create row if not found).",
                  "x-ms-content-hint": "BOOLEAN"
                }
              },
              "required": [
                "text"
              ]
            }
          },
          "metadata": {
            "operationMetadataId": "a170cb01-1562-437f-ad23-e1c7addc3a6d"
          }
        }
      },
      "actions": {
        "Initialize_variable_-_Currently_Blocked_Connectors": {
          "type": "InitializeVariable",
          "description": "Connectors that are actually blocked in the Power Platform Policy (source of truth).",
          "inputs": {
            "variables": [
              {
                "name": "arrPlatformPolicyConnectors",
                "type": "array"
              }
            ]
          },
          "runAfter": {
            "Initialize_variable_-_Policy_Id": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "3192c57a-0311-4da8-884e-3721c221379e"
          }
        },
        "Initialize_variable_-_Connectors_to_Relate": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "arrConnectorsToRelate",
                "type": "array"
              }
            ]
          },
          "runAfter": {
            "Initialize_variable_-_Currently_Blocked_Connectors": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "8949b3b5-ffb3-4a8d-b653-683230b124b8"
          }
        },
        "Initialize_variable_-_Connectors_to_Unrelate": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "arrConnectorsToUnrelate",
                "type": "array"
              }
            ]
          },
          "runAfter": {
            "Initialize_variable_-_Connectors_to_Relate": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "06f4dbc2-5432-439c-9711-47801b575158"
          }
        },
        "Initialize_variable_-_Policy_Id": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "var_policyId",
                "type": "string",
                "value": "@triggerBody()['text']"
              }
            ]
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "b2e6b686-8eca-4284-b57b-2f058cd0792b"
          }
        },
        "Scope_-_Sync_Policy": {
          "type": "Scope",
          "actions": {
            "Get_Data": {
              "type": "Scope",
              "actions": {
                "List_rows_-_PowerApps_Connectors": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "admin_connectors",
                      "$select": "admin_id,admin_connectorid,admin_displayname"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "ListRecords",
                      "connectionName": "shared_commondataserviceforapps"
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "4a2158ee-2d80-467f-9675-eb24995955bd"
                  }
                },
                "Get_Policy": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "admin_dlppolicies",
                      "recordId": "@triggerBody()['text']",
                      "$expand": "admin_blocked_policy_connectors($select=admin_id,admin_connectorid,admin_displayname)"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "GetItem",
                      "connectionName": "shared_commondataserviceforapps"
                    }
                  },
                  "runAfter": {
                    "List_rows_-_PowerApps_Connectors": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "a64b2a6a-4a7c-443d-8274-4d9d9ff32640"
                  }
                },
                "Get_DLP_Policy_from_Power_Platform_API": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "policy": "@outputs('Get_Policy')?['body/admin_policyid']"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_powerplatformforadmins",
                      "operationId": "GetPolicyV2",
                      "connectionName": "shared_powerplatformforadmins_1"
                    }
                  },
                  "runAfter": {
                    "Get_Policy": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "126d85ca-dcbd-486d-87c4-fe6ec8579fbe"
                  }
                },
                "Filter_Blocked_Connectors_group": {
                  "type": "Query",
                  "inputs": {
                    "from": "@outputs('Get_DLP_Policy_from_Power_Platform_API')?['body/connectorGroups']",
                    "where": "@equals(item()?['classification'], 'Blocked')"
                  },
                  "runAfter": {
                    "Get_DLP_Policy_from_Power_Platform_API": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "683b8c56-4cde-427d-8f18-1096f51731f0"
                  }
                },
                "Set_variable_-_Currently_Blocked_Connectors": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "arrPlatformPolicyConnectors",
                    "value": "@first(body('Filter_Blocked_Connectors_group'))?['connectors']"
                  },
                  "runAfter": {
                    "Filter_Blocked_Connectors_group": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "ec24fe80-b528-4cc5-844e-95bbfc80a6f0"
                  }
                }
              },
              "metadata": {
                "operationMetadataId": "859c3883-ba31-43d2-9d88-b5529a22ee22"
              }
            },
            "Parse_JSON_-_DLP_Policies_with_Connectors": {
              "type": "ParseJson",
              "inputs": {
                "content": "@body('Get_Policy')",
                "schema": {
                  "type": "object",
                  "properties": {
                    "@@odata.id": {
                      "type": "string",
                      "title": "Policy OData Id"
                    },
                    "admin_name": {
                      "type": "string",
                      "title": "Policy display name"
                    },
                    "statuscode@OData.Community.Display.V1.FormattedValue": {
                      "type": "string",
                      "title": "Formatted Policy status code"
                    },
                    "statuscode": {
                      "type": "integer",
                      "title": "Policy status code"
                    },
                    "admin_dlppolicyid": {
                      "type": "string",
                      "title": "Power Platform Policy Id",
                      "description": "Unique identifier for the Policy as it appears in the Power Platform."
                    },
                    "statecode@OData.Community.Display.V1.FormattedValue": {
                      "type": "string"
                    },
                    "statecode": {
                      "type": "integer"
                    },
                    "admin_policyid": {
                      "type": "string"
                    },
                    "admin_blocked_policy_connectors": {
                      "type": "array",
                      "title": "Blocked Connectors",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@@odata.type": {
                            "type": "string",
                            "title": "Blocked connector OData type"
                          },
                          "@@odata.id": {
                            "type": "string",
                            "title": "Blocked connector OData Id"
                          },
                          "admin_id": {
                            "type": "string",
                            "title": "Blocked connector Id",
                            "description": "Power Platform connector Id"
                          },
                          "admin_connectorid": {
                            "type": "string",
                            "title": "Blocked PowerAppsConnector Id"
                          },
                          "admin_displayname": {
                            "type": "string",
                            "title": "Blocked connector display name"
                          }
                        }
                      }
                    },
                    "admin_blocked_policy_connectors@odata.nextLink": {
                      "type": "string"
                    }
                  }
                }
              },
              "runAfter": {
                "Get_Data": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "8a00ba14-1398-46da-9aba-9238b8e27b83"
              }
            },
            "Set_variable_3": {
              "type": "SetVariable",
              "inputs": {
                "name": "arrDataversePolicyConnectors",
                "value": "@body('Parse_JSON_-_DLP_Policies_with_Connectors')?['admin_blocked_policy_connectors']"
              },
              "runAfter": {
                "Parse_JSON_-_DLP_Policies_with_Connectors": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "b1b85483-50e5-49bd-b7b4-8b72f3e2be24"
              }
            },
            "Update_Policy_Connectors_in_Dataverse": {
              "type": "Scope",
              "actions": {
                "Relate_connectors_not_already_in_Policy": {
                  "type": "Scope",
                  "actions": {
                    "Apply_to_each_Blocked_Connector": {
                      "type": "Foreach",
                      "description": "Iterates through the blocked connectors from the Platform policy (source of truth)",
                      "foreach": "@variables('arrPlatformPolicyConnectors')",
                      "actions": {
                        "Find_connector_in_Dataverse_Policy": {
                          "type": "Query",
                          "inputs": {
                            "from": "@variables('arrDataversePolicyConnectors')",
                            "where": "@equals(item()?['admin_id'], items('Apply_to_each_Blocked_Connector')?['id'])"
                          },
                          "metadata": {
                            "operationMetadataId": "d12e196e-7ae9-41a3-a66c-e2d8d54a2439"
                          }
                        },
                        "Check_if_blocked_connector_is_in_the_Dataverse_Policy": {
                          "type": "If",
                          "expression": {
                            "greater": [
                              "@length(body('Find_connector_in_Dataverse_Policy'))",
                              0
                            ]
                          },
                          "actions": {},
                          "else": {
                            "actions": {
                              "Compose": {
                                "type": "Compose",
                                "inputs": "@{items('Apply_to_each_Blocked_Connector')?['id']} is blocked and was not already in the Dataverse policy",
                                "metadata": {
                                  "operationMetadataId": "39ff66ea-be3c-4cdf-bf45-0692bfa12471"
                                }
                              },
                              "Filter_array": {
                                "type": "Query",
                                "inputs": {
                                  "from": "@outputs('List_rows_-_PowerApps_Connectors')?['body/value']",
                                  "where": "@equals(item()?['admin_id'], items('Apply_to_each_Blocked_Connector')?['id'])"
                                },
                                "runAfter": {
                                  "Compose": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "d20439b7-a549-4250-9695-e77ca5573b7f"
                                }
                              },
                              "Compose_4": {
                                "type": "Compose",
                                "inputs": "@first(body('Filter_array'))?['@odata.id']",
                                "runAfter": {
                                  "Filter_array": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "14849b41-37da-4dbf-b7b2-6d3fac93acdf"
                                }
                              },
                              "Condition": {
                                "type": "If",
                                "expression": {
                                  "greater": [
                                    "@length(body('Filter_array'))",
                                    0
                                  ]
                                },
                                "actions": {
                                  "Relate_rows": {
                                    "type": "OpenApiConnection",
                                    "inputs": {
                                      "parameters": {
                                        "entityName": "admin_dlppolicies",
                                        "recordId": "@variables('var_policyId')",
                                        "associationEntityRelationship": "admin_blocked_policy_connectors",
                                        "item/@odata.id": "@outputs('Compose_4')"
                                      },
                                      "host": {
                                        "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                                        "operationId": "AssociateEntities",
                                        "connectionName": "shared_commondataserviceforapps"
                                      }
                                    },
                                    "metadata": {
                                      "operationMetadataId": "b933aa54-2a8c-487e-b37c-efd518e01534"
                                    }
                                  }
                                },
                                "else": {
                                  "actions": {
                                    "Append_to_array_variable": {
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "arrConnectorsToRelate",
                                        "value": "@items('Apply_to_each_Blocked_Connector')?['id']"
                                      },
                                      "metadata": {
                                        "operationMetadataId": "f7903e68-823b-44af-ab22-6b20c5280072"
                                      }
                                    }
                                  }
                                },
                                "runAfter": {
                                  "Compose_4": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "2d6f1b11-c0b5-4dff-8f63-58f5f6c09b4a"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Find_connector_in_Dataverse_Policy": [
                              "Succeeded"
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "c47fa9ff-a463-4e94-ad40-c909a463f0e4"
                          }
                        }
                      },
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 50
                        }
                      },
                      "metadata": {
                        "operationMetadataId": "c5a4866d-2d20-4c0f-834f-a4f289bc99ec"
                      }
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "7985ec60-5daf-43f4-8f66-bd5b77eeedfc"
                  }
                },
                "Unrelate_connectors_no_longer_in_Policy": {
                  "type": "Scope",
                  "actions": {
                    "Apply_to_each_Connector_in_Dataverse_Policy": {
                      "type": "Foreach",
                      "foreach": "@variables('arrDataversePolicyConnectors')",
                      "actions": {
                        "Check_if_connector_still_in_Platform_Policy": {
                          "type": "Query",
                          "inputs": {
                            "from": "@variables('arrPlatformPolicyConnectors')",
                            "where": "@equals(item()?['id'], items('Apply_to_each_Connector_in_Dataverse_Policy')?['admin_id'])"
                          },
                          "metadata": {
                            "operationMetadataId": "66bba600-4b63-484e-abf9-1069fc2aaba6"
                          }
                        },
                        "Connector_is_still_in_Platform_Policy": {
                          "type": "If",
                          "expression": {
                            "greater": [
                              "@length(body('Check_if_connector_still_in_Platform_Policy'))",
                              0
                            ]
                          },
                          "actions": {},
                          "else": {
                            "actions": {
                              "Append_to_array_variable_2": {
                                "type": "AppendToArrayVariable",
                                "inputs": {
                                  "name": "arrConnectorsToUnrelate",
                                  "value": "@items('Apply_to_each_Connector_in_Dataverse_Policy')?['admin_id']"
                                },
                                "metadata": {
                                  "operationMetadataId": "ff6e2bc4-932e-4517-8b1b-2da986d339a3"
                                }
                              },
                              "Connector_no_longer_in_policy": {
                                "type": "Compose",
                                "inputs": "@first(body('Find_connector_in_Dataverse_Policy_to_Unrelate'))?['@odata.id']",
                                "runAfter": {
                                  "Find_connector_in_Dataverse_Policy_to_Unrelate": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "e2babdef-6734-40da-9e3b-322eac23e9be"
                                }
                              },
                              "Find_connector_in_Dataverse_Policy_to_Unrelate": {
                                "type": "Query",
                                "inputs": {
                                  "from": "@variables('arrDataversePolicyConnectors')",
                                  "where": "@equals(item()?['admin_id'], item()?['Apply_to_each_Connector_in_Dataverse_Policy']?['admin_id'])"
                                },
                                "runAfter": {
                                  "Append_to_array_variable_2": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "9fc0e52d-e136-4a05-8af3-3a9b7ac0cc0c"
                                }
                              },
                              "Check_if_connect_no_longer_in_policy_is_null": {
                                "type": "If",
                                "expression": {
                                  "and": [
                                    {
                                      "greater": [
                                        "@length(body('Find_connector_in_Dataverse_Policy_to_Unrelate'))",
                                        0
                                      ]
                                    }
                                  ]
                                },
                                "actions": {
                                  "Unrelate_rows": {
                                    "type": "OpenApiConnection",
                                    "inputs": {
                                      "parameters": {
                                        "entityName": "admin_dlppolicies",
                                        "recordId": "@variables('var_policyId')",
                                        "associationEntityRelationship": "admin_blocked_policy_connectors",
                                        "$id": "@outputs('Connector_no_longer_in_policy')"
                                      },
                                      "host": {
                                        "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                                        "operationId": "DisassociateEntities",
                                        "connectionName": "shared_commondataserviceforapps"
                                      }
                                    },
                                    "metadata": {
                                      "operationMetadataId": "e368415a-0c54-4a5f-bb86-3ca4b65f69cd"
                                    }
                                  }
                                },
                                "else": {
                                  "actions": {}
                                },
                                "runAfter": {
                                  "Connector_no_longer_in_policy": [
                                    "Succeeded"
                                  ]
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Check_if_connector_still_in_Platform_Policy": [
                              "Succeeded"
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "e6029c7e-2003-439e-b013-f5e700344fa9"
                          }
                        }
                      },
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 50
                        }
                      },
                      "metadata": {
                        "operationMetadataId": "8e781186-2472-46cc-9c96-910ac1f2055c"
                      }
                    }
                  },
                  "runAfter": {
                    "Compose_3": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "2e2fc9c0-5859-4cc4-bfb3-b61f1df1f2b8"
                  }
                },
                "Compose_3": {
                  "type": "Compose",
                  "inputs": "@variables('arrConnectorsToUnrelate')",
                  "runAfter": {
                    "Relate_connectors_not_already_in_Policy": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "31b32f54-76a5-4291-850f-2fa619a76b8d"
                  }
                },
                "Compose_2": {
                  "type": "Compose",
                  "inputs": "@variables('arrConnectorsToRelate')",
                  "runAfter": {
                    "Unrelate_connectors_no_longer_in_Policy": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "b67697bb-653e-4078-b4eb-1d8daa0fdb9c"
                  }
                }
              },
              "runAfter": {
                "Set_variable_3": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "0296ddfa-f12d-4d40-8956-34ad72fbc617"
              }
            }
          },
          "runAfter": {
            "Initialize_variable_-_Status_Code": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "757bcfcd-6738-41e8-b7d5-4196f120a408"
          }
        },
        "Initialize_variable_-_Recorded_Blocked_Connectors": {
          "type": "InitializeVariable",
          "description": "Connectors blocked in the Dataverse DLP Policy (to be updated)",
          "inputs": {
            "variables": [
              {
                "name": "arrDataversePolicyConnectors",
                "type": "array"
              }
            ]
          },
          "runAfter": {
            "Initialize_variable_-_Connectors_to_Unrelate": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "490a863c-0978-45ad-87f0-78f1c2ae13d2"
          }
        },
        "Initialize_variable_-_Status_Code": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "var_statusCode",
                "type": "integer",
                "value": 200
              }
            ]
          },
          "runAfter": {
            "Initialize_variable_-_Recorded_Blocked_Connectors": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "99970bdd-1b01-42e0-870e-79df17667aea"
          }
        },
        "Set_variable_-_Status_Code_-_Failed": {
          "type": "SetVariable",
          "inputs": {
            "name": "var_statusCode",
            "value": 500
          },
          "runAfter": {
            "Scope_-_Sync_Policy": [
              "Failed",
              "Skipped",
              "TimedOut"
            ]
          },
          "metadata": {
            "operationMetadataId": "c89bbd05-d358-40cf-92eb-af15e39c7daf"
          }
        },
        "Compose_5": {
          "type": "Compose",
          "inputs": "Success",
          "runAfter": {
            "Scope_-_Sync_Policy": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "457b963c-7ae0-4a5d-b1c8-667a3fc08425"
          }
        },
        "Respond_to_a_PowerApp_or_flow": {
          "type": "Response",
          "kind": "PowerApp",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "title": "Status",
                  "x-ms-dynamically-added": true,
                  "type": "number"
                }
              },
              "additionalProperties": {}
            },
            "statusCode": 200,
            "body": {
              "status": "@{variables('var_statusCode')}"
            }
          },
          "runAfter": {
            "Compose_5": [
              "Succeeded",
              "Failed",
              "Skipped",
              "TimedOut"
            ],
            "Set_variable_-_Status_Code_-_Failed": [
              "Succeeded",
              "Failed",
              "Skipped",
              "TimedOut"
            ]
          },
          "metadata": {
            "operationMetadataId": "1554c53b-8521-49fd-91a1-dd28d2f49f7c"
          }
        },
        "If_passed_or_failed": {
          "type": "If",
          "expression": {
            "equals": [
              "@variables('var_statusCode')",
              200
            ]
          },
          "actions": {
            "Update_last_run_as_pass": {
              "type": "Scope",
              "actions": {
                "Update_Last_Run_Successful": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "admin_coesolutionmetadatas",
                      "recordId": "@first(outputs('Get_ID_Pass')?['body/value'])?['admin_coesolutionmetadataid']",
                      "item/admin_lastrun": "@utcNow()",
                      "item/admin_lastrunpassed": true
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "UpdateRecord",
                      "connectionName": "shared_commondataserviceforapps"
                    }
                  },
                  "runAfter": {
                    "Get_ID_Pass": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "78ef70e5-7f67-4737-9a02-8533f12caa19"
                  }
                },
                "Get_ID_Pass": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "admin_coesolutionmetadatas",
                      "$select": "admin_coesolutionmetadataid",
                      "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                      "$top": 1
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "ListRecords",
                      "connectionName": "shared_commondataserviceforapps"
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "f4f314b6-89d3-4056-af1c-73115e7d6bd1"
                  }
                },
                "Catch_-_not_ready_to_take_last_run_date": {
                  "type": "Compose",
                  "inputs": "Catch - not ready to take last run date",
                  "runAfter": {
                    "Update_Last_Run_Successful": [
                      "Failed"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "f88cdefe-c402-49d7-8f4a-934475e6f741"
                  }
                }
              },
              "metadata": {
                "operationMetadataId": "5c140442-d939-4ca4-8ec8-d1ee2bed4a81"
              }
            }
          },
          "else": {
            "actions": {
              "Error_Handling": {
                "type": "Scope",
                "actions": {
                  "Create_a_new_record_-_Sync_Flow_Errors": {
                    "type": "OpenApiConnection",
                    "inputs": {
                      "parameters": {
                        "entityName": "admin_syncflowerrorses",
                        "item/admin_name": "@workflow()?['tags']['flowDisplayName']",
                        "item/admin_flowinstanceurl": "@concat(parameters('Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)'), workflow()?['tags']['environmentName'], '/flows/', workflow()?['name'], '/runs/', workflow()?['run']['name'])"
                      },
                      "host": {
                        "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                        "operationId": "CreateRecord",
                        "connectionName": "shared_commondataserviceforapps"
                      },
                      "retryPolicy": {
                        "type": "exponential",
                        "count": 10,
                        "interval": "PT10S"
                      }
                    },
                    "metadata": {
                      "operationMetadataId": "87961ff0-e261-4890-9ab9-a53f88fe0de5"
                    }
                  },
                  "Terminate": {
                    "type": "Terminate",
                    "inputs": {
                      "runStatus": "Failed",
                      "runError": {
                        "code": "500",
                        "message": "Get Environments Failed"
                      }
                    },
                    "runAfter": {
                      "Update_Last_Run_Fail": [
                        "Succeeded"
                      ]
                    },
                    "metadata": {
                      "operationMetadataId": "9e5a2a18-dba2-47a1-96d5-3356f4348e5a"
                    }
                  },
                  "Get_ID_Fail": {
                    "type": "OpenApiConnection",
                    "inputs": {
                      "parameters": {
                        "entityName": "admin_coesolutionmetadatas",
                        "$select": "admin_coesolutionmetadataid",
                        "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                        "$top": 1
                      },
                      "host": {
                        "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                        "operationId": "ListRecords",
                        "connectionName": "shared_commondataserviceforapps"
                      }
                    },
                    "runAfter": {
                      "Create_a_new_record_-_Sync_Flow_Errors": [
                        "Succeeded"
                      ]
                    },
                    "metadata": {
                      "operationMetadataId": "47329bf2-8aac-400d-9778-a793b4f1180f"
                    }
                  },
                  "Update_Last_Run_Fail": {
                    "type": "OpenApiConnection",
                    "inputs": {
                      "parameters": {
                        "entityName": "admin_coesolutionmetadatas",
                        "recordId": "@first(outputs('Get_ID_Fail')?['body/value'])?['admin_coesolutionmetadataid']",
                        "item/admin_lastrun": "@utcNow()",
                        "item/admin_lastrunpassed": false
                      },
                      "host": {
                        "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                        "operationId": "UpdateRecord",
                        "connectionName": "shared_commondataserviceforapps"
                      }
                    },
                    "runAfter": {
                      "Get_ID_Fail": [
                        "Succeeded"
                      ]
                    },
                    "metadata": {
                      "operationMetadataId": "c63eb7cc-6101-4567-b520-a4a8881264e9"
                    }
                  }
                },
                "metadata": {
                  "operationMetadataId": "38ae684e-622d-42ea-abd2-ee571aee3a5f"
                }
              }
            }
          },
          "runAfter": {
            "Respond_to_a_PowerApp_or_flow": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "39ff2a5f-eb32-4553-88c5-c2e571e8b7dd"
          }
        }
      },
      "description": "Takes the DLP Policy identifier as input (Dataverse record) and syncs the blocked connectors to the Dataverse Policy row."
    },
    "templateName": null
  },
  "schemaVersion": "1.0.0.0"
}