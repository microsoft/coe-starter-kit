{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps_1": {
        "api": {
          "name": "shared_commondataserviceforapps"
        },
        "connection": {
          "connectionReferenceLogicalName": "admin_CoECoreDataverseForApps"
        },
        "runtimeSource": "embedded"
      },
      "shared_commondataserviceforapps_2": {
        "api": {
          "name": "shared_commondataserviceforapps"
        },
        "connection": {
          "connectionReferenceLogicalName": "admin_CoECoreDataverseEnvRequest"
        },
        "runtimeSource": "embedded"
      },
      "shared_commondataserviceforapps": {
        "api": {
          "name": "shared_commondataserviceforapps"
        },
        "connection": {
          "connectionReferenceLogicalName": "admin_sharedcommondataserviceforapps_98924"
        },
        "runtimeSource": "embedded"
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "TenantID (admin_TenantID)": {
          "defaultValue": "67c96cd6-4a95-46ee-ac9b-8ee13ae256c4",
          "type": "String",
          "metadata": {
            "schemaName": "admin_TenantID",
            "description": "Inventory - REQUIRED. Azure Tenant ID"
          }
        },
        "Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)": {
          "defaultValue": "https://flow.microsoft.com/manage/environments/",
          "type": "String",
          "metadata": {
            "schemaName": "admin_PowerAutomateEnvironmentVariable",
            "description": "Inventory - REQUIRED. Environment, including geographic location, for Power Automate - Ex for commercial: https://flow.microsoft.com/manage/environments/"
          }
        },
        "Audit Logs - Audience (admin_AuditLogsAudience)": {
          "defaultValue": "https://manage.office.com",
          "type": "String",
          "metadata": {
            "schemaName": "admin_AuditLogsAudience",
            "description": "AuditLogs - The audience for the HTTP connector. Set by Setup wizard based on tenant type"
          }
        },
        "Audit Logs - Authority (admin_AuditLogsAuthority)": {
          "defaultValue": "https://login.windows.net",
          "type": "String",
          "metadata": {
            "schemaName": "admin_AuditLogsAuthority",
            "description": "AuditLogs - The authority for the HTTP connector. Set by Setup wizard based on tenant type"
          }
        },
        "Audit Logs - Use Graph API (admin_AuditLogsUseGraphAPI)": {
          "defaultValue": false,
          "type": "Bool",
          "metadata": {
            "schemaName": "admin_AuditLogsUseGraphAPI",
            "description": "If true, uses the AuditLogQuery api in Graph to gather audit logs. If false (default), continues to use the old Office 365 Management API to gather them. Default due to legacy behavior but its not the preferred technique due to lack of backend filtering."
          }
        },
        "Graph URL Environment Variable (admin_GraphURLEnvironmentVariable)": {
          "defaultValue": "https://graph.microsoft.com/",
          "type": "String",
          "metadata": {
            "schemaName": "admin_GraphURLEnvironmentVariable",
            "description": "Inventory - REQUIRED. The URL used to get graph information for your cloud. Ex https://graph.microsoft.com/"
          }
        },
        "Audit Logs - Minutes to Look Back (admin_AuditLogsMinutestoLookBack)": {
          "defaultValue": 65,
          "type": "Int",
          "metadata": {
            "schemaName": "admin_AuditLogsMinutestoLookBack",
            "description": "Number of minutes back to pull audit logs, default 65 will get one hour of data."
          }
        },
        "Audit Logs - End Time Minutes Ago (admin_AuditLogsEndTimeMinutesAgo)": {
          "defaultValue": 0,
          "type": "Int",
          "metadata": {
            "schemaName": "admin_AuditLogsEndTimeMinutesAgo",
            "description": "How far back in time to start looking for audit log records in number of minutes. The flow will start here and go back 65 minutes (configurable) to get logs from that period. Default 0 means that you will look for data points from this most recent hour. This gets you the most recent data but may miss logs as data can take up to 48 hours to fill in the the product logs. Value of 2820 gets you data from 48 hours ago, so your data will never be current but will always be complete"
          }
        }
      },
      "triggers": {
        "Recurrence": {
          "type": "Recurrence",
          "recurrence": {
            "frequency": "Hour",
            "interval": 1
          },
          "metadata": {
            "operationMetadataId": "9dc88c7a-f995-4a72-b992-1032dcbf90e7"
          }
        }
      },
      "actions": {
        "Initialize_appID": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "theAppID",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "end_time_minutes_back": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "4fb2b304-6d7c-407e-a2c1-782ba52b4567"
          }
        },
        "Initialize_theTextSecret": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "theTextSecret",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "Initialize_appID": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "8b1e1654-f936-473c-95f8-fcd9869e2f72"
          }
        },
        "Initialize_Secret_AzureType_to_true": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Secret_AzureType",
                "type": "boolean",
                "value": "@true"
              }
            ]
          },
          "runAfter": {
            "Initialize_theTextSecret": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "4fb2b304-6d7c-407e-a2c1-782ba52b4567"
          }
        },
        "Get_Logs": {
          "type": "Scope",
          "actions": {
            "Get_env_var_for_AppID": {
              "type": "Scope",
              "description": "must use old technique for fetching as env var is optional",
              "actions": {
                "ListDefns-AppID": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "environmentvariabledefinitions",
                      "$select": "environmentvariabledefinitionid, defaultvalue",
                      "$filter": "schemaname eq 'admin_auditlogsclientid'"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "ListRecords",
                      "connectionName": "shared_commondataserviceforapps_1"
                    }
                  },
                  "runtimeConfiguration": {
                    "paginationPolicy": {
                      "minimumItemCount": 100000
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "3e4048d2-4f28-43c6-8e87-83b68c7c79aa"
                  }
                },
                "Get_ID_from_AppID": {
                  "type": "Compose",
                  "inputs": "@first(body('ListDefns-AppID')?['value'])?['environmentvariabledefinitionid']",
                  "runAfter": {
                    "ListDefns-AppID": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "35daa390-ef10-4e7a-ad74-4616a48dfc39"
                  }
                },
                "Set_to_current_or_default_-_AppID": {
                  "type": "If",
                  "expression": {
                    "greaterOrEquals": [
                      "@length(body('ListCurrents-AppID')?['value'])",
                      1
                    ]
                  },
                  "actions": {
                    "Set_AppID_-_CurrentValue": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "theAppID",
                        "value": "@{first(body('ListCurrents-AppID')?['value'])?['Value']}"
                      },
                      "metadata": {
                        "operationMetadataId": "48e7d428-6134-4592-8a06-b7f1e52518ac"
                      }
                    }
                  },
                  "else": {
                    "actions": {
                      "Set_AppID_-_DefaultValue": {
                        "type": "SetVariable",
                        "inputs": {
                          "name": "theAppID",
                          "value": "@{first(body('ListDefns-AppID')?['value'])?['defaultvalue']}"
                        },
                        "metadata": {
                          "operationMetadataId": "c20649bc-6bdb-4e9c-bf7c-bad351afd877"
                        }
                      }
                    }
                  },
                  "runAfter": {
                    "ListCurrents-AppID": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "c2ad9e77-30d4-4855-89ee-691169650c0d"
                  }
                },
                "ListCurrents-AppID": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "environmentvariablevalues",
                      "$select": "_environmentvariabledefinitionid_value, schemaname, value",
                      "$filter": "_environmentvariabledefinitionid_value eq @{outputs('Get_ID_from_AppID')}"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "ListRecords",
                      "connectionName": "shared_commondataserviceforapps_1"
                    }
                  },
                  "runAfter": {
                    "Get_ID_from_AppID": [
                      "Succeeded"
                    ]
                  },
                  "runtimeConfiguration": {
                    "paginationPolicy": {
                      "minimumItemCount": 100000
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "db44e18b-c951-43be-8ed2-990fa2721e87"
                  }
                }
              },
              "metadata": {
                "operationMetadataId": "550ccacb-97c0-4b23-8eae-d781f108c319"
              }
            },
            "Get_env_var_for_for_text_Secret": {
              "type": "Scope",
              "description": "must use old technique for fetching as env var is optional",
              "actions": {
                "ListDefns-TextSecret": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "environmentvariabledefinitions",
                      "$select": "environmentvariabledefinitionid, defaultvalue",
                      "$filter": "schemaname eq 'admin_auditlogsclientsecret'"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "ListRecords",
                      "connectionName": "shared_commondataserviceforapps_1"
                    }
                  },
                  "runtimeConfiguration": {
                    "paginationPolicy": {
                      "minimumItemCount": 100000
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "3e4048d2-4f28-43c6-8e87-83b68c7c79aa"
                  }
                },
                "Get_ID_from_text_secret": {
                  "type": "Compose",
                  "inputs": "@first(body('ListDefns-TextSecret')?['value'])?['environmentvariabledefinitionid']",
                  "runAfter": {
                    "ListDefns-TextSecret": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "35daa390-ef10-4e7a-ad74-4616a48dfc39"
                  }
                },
                "Set_to_current_or_default_-_TextSecret": {
                  "type": "If",
                  "expression": {
                    "greaterOrEquals": [
                      "@length(body('ListCurrents-TextSecret')?['value'])",
                      1
                    ]
                  },
                  "actions": {
                    "Set_theTextSecret_-_CurrentValue": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "theTextSecret",
                        "value": "@{first(body('ListCurrents-TextSecret')?['value'])?['Value']}"
                      },
                      "metadata": {
                        "operationMetadataId": "48e7d428-6134-4592-8a06-b7f1e52518ac"
                      }
                    }
                  },
                  "else": {
                    "actions": {
                      "Set_theTextSecret_-_DefaultValue": {
                        "type": "SetVariable",
                        "inputs": {
                          "name": "theTextSecret",
                          "value": "@{first(body('ListDefns-TextSecret')?['value'])?['defaultvalue']}"
                        },
                        "metadata": {
                          "operationMetadataId": "c20649bc-6bdb-4e9c-bf7c-bad351afd877"
                        }
                      }
                    }
                  },
                  "runAfter": {
                    "ListCurrents-TextSecret": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "c2ad9e77-30d4-4855-89ee-691169650c0d"
                  }
                },
                "ListCurrents-TextSecret": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "environmentvariablevalues",
                      "$select": "_environmentvariabledefinitionid_value, schemaname, value",
                      "$filter": "_environmentvariabledefinitionid_value eq @{outputs('Get_ID_from_text_secret')}"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "ListRecords",
                      "connectionName": "shared_commondataserviceforapps_1"
                    }
                  },
                  "runAfter": {
                    "Get_ID_from_text_secret": [
                      "Succeeded"
                    ]
                  },
                  "runtimeConfiguration": {
                    "paginationPolicy": {
                      "minimumItemCount": 100000
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "db44e18b-c951-43be-8ed2-990fa2721e87"
                  }
                }
              },
              "runAfter": {
                "Get_env_var_for_AppID": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "550ccacb-97c0-4b23-8eae-d781f108c319"
              }
            },
            "Get_env_var_for_for_Azure_Secret": {
              "type": "Scope",
              "description": "must use old technique for fetching as env var is optional",
              "actions": {
                "Get_Azure_Secret": {
                  "type": "OpenApiConnection",
                  "description": "Changed the 'Retry Policy' flow 'Default' to 'Fixed Interval' to reduce the retry delays",
                  "inputs": {
                    "parameters": {
                      "actionName": "RetrieveEnvironmentVariableSecretValue",
                      "item/EnvironmentVariableName": "admin_auditlogsclientazuresecret"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "PerformUnboundAction",
                      "connectionName": "shared_commondataserviceforapps_1"
                    },
                    "retryPolicy": {
                      "type": "fixed",
                      "count": 1,
                      "interval": "PT20S"
                    }
                  },
                  "runtimeConfiguration": {
                    "secureData": {
                      "properties": [
                        "outputs"
                      ]
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "5eb8fe09-aecb-4128-ad70-91257c070c90"
                  }
                },
                "Set_Secret_AzureType_to_false_if_failed": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "Secret_AzureType",
                    "value": "@false"
                  },
                  "runAfter": {
                    "Get_Azure_Secret": [
                      "Failed"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "70626779-a669-4be0-9727-1bfa0d65c4e3"
                  }
                }
              },
              "runAfter": {
                "Get_env_var_for_for_text_Secret": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "550ccacb-97c0-4b23-8eae-d781f108c319"
              }
            },
            "UseGraphAPI": {
              "type": "If",
              "expression": {
                "equals": [
                  "@parameters('Audit Logs - Use Graph API (admin_AuditLogsUseGraphAPI)')",
                  "@true"
                ]
              },
              "actions": {
                "Scope-AuditLogQuery": {
                  "type": "Scope",
                  "actions": {
                    "ResetHttpCallFailed_2": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "httpCallFailed",
                        "value": "@false"
                      },
                      "metadata": {
                        "operationMetadataId": "a222e185-1969-4ac3-bace-bb2a7c9c99f2"
                      }
                    },
                    "RetryLogic-StartAuditLogQuery": {
                      "type": "Until",
                      "expression": "@equals(outputs('AuditLogQuery')['statusCode'], 201)",
                      "limit": {
                        "count": 5,
                        "timeout": "PT5M"
                      },
                      "actions": {
                        "AuditLogQuery": {
                          "type": "Http",
                          "inputs": {
                            "uri": "@{parameters('Graph URL Environment Variable (admin_GraphURLEnvironmentVariable)')}beta/security/auditLog/queries",
                            "method": "POST",
                            "body": {
                              "filterStartDateTime": "@{variables('startTime')}",
                              "filterEndDateTime": "@{variables('endTime')}",
                              "operationFilters": [
                                "LaunchPowerApp",
                                "DeletePowerApp"
                              ]
                            },
                            "authentication": {
                              "type": "ActiveDirectoryOAuth",
                              "authority": "@parameters('Audit Logs - Authority (admin_AuditLogsAuthority)')",
                              "tenant": "@parameters('TenantID (admin_TenantID)')",
                              "audience": "@parameters('Graph URL Environment Variable (admin_GraphURLEnvironmentVariable)')",
                              "clientId": "@variables('theAppID')",
                              "secret": "@{if(variables('Secret_AzureType'), body('Get_Azure_Secret')['EnvironmentVariableSecretValue'], variables('theTextSecret'))}"
                            }
                          },
                          "metadata": {
                            "operationMetadataId": "67c562ef-5b97-46c4-abac-9530345a55a1"
                          }
                        },
                        "AuditLogQuery-FAILED": {
                          "type": "Scope",
                          "actions": {
                            "Delay_2": {
                              "type": "Wait",
                              "inputs": {
                                "interval": {
                                  "count": 20,
                                  "unit": "Second"
                                }
                              },
                              "metadata": {
                                "operationMetadataId": "abc8fc85-493c-492d-a51f-9ade16691aca"
                              }
                            },
                            "SetHttpCallFailed-TRUE_2": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "httpCallFailed",
                                "value": "@true"
                              },
                              "runAfter": {
                                "Delay_2": [
                                  "Succeeded"
                                ]
                              },
                              "metadata": {
                                "operationMetadataId": "0b7ea99f-88ac-41c9-af52-3105f281400d"
                              }
                            }
                          },
                          "runAfter": {
                            "AuditLogQuery": [
                              "Failed"
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "8ee27dd6-e2f0-4fcf-8ed2-3a611f29666f"
                          }
                        },
                        "SetHttpCallFailed-FALSE_2": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "httpCallFailed",
                            "value": "@false"
                          },
                          "runAfter": {
                            "AuditLogQuery-FAILED": [
                              "Skipped"
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "cddaf248-9212-4462-b609-915bf8f06549"
                          }
                        }
                      },
                      "runAfter": {
                        "ResetHttpCallFailed_2": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "0de395b6-f16d-40f1-b87f-7800892683ec"
                      }
                    },
                    "DidAllListAuditLogContentCallsFailed_2": {
                      "type": "If",
                      "description": "If all HTTP calls of ListAuditlLogContent action failed then increment HTTP call failure count",
                      "expression": {
                        "equals": [
                          "@variables('httpCallFailed')",
                          "@true"
                        ]
                      },
                      "actions": {
                        "Increment_variable_2": {
                          "type": "IncrementVariable",
                          "inputs": {
                            "name": "httpCallFailureCount",
                            "value": 1
                          },
                          "metadata": {
                            "operationMetadataId": "913b0086-f075-4334-9680-6a402cda4461"
                          }
                        }
                      },
                      "else": {
                        "actions": {
                          "ParseBody_2": {
                            "type": "ParseJson",
                            "inputs": {
                              "content": "@body('AuditLogQuery')",
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "@@odata.context": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "displayName": {},
                                  "filterStartDateTime": {
                                    "type": "string"
                                  },
                                  "filterEndDateTime": {
                                    "type": "string"
                                  },
                                  "recordTypeFilters": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "keywordFilter": {},
                                  "serviceFilters": {
                                    "type": "array"
                                  },
                                  "operationFilters": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "userPrincipalNameFilters": {
                                    "type": "array"
                                  },
                                  "ipAddressFilters": {
                                    "type": "array"
                                  },
                                  "objectIdFilters": {
                                    "type": "array"
                                  },
                                  "administrativeUnitIdFilters": {
                                    "type": "array"
                                  },
                                  "status": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "metadata": {
                              "operationMetadataId": "51963714-f4c9-4fec-8108-6c9fd86341dc"
                            }
                          },
                          "Set-AuditLogQueryID": {
                            "type": "SetVariable",
                            "inputs": {
                              "name": "AuditLogQueryID",
                              "value": "@body('ParseBody_2')?['id']"
                            },
                            "runAfter": {
                              "ParseBody_2": [
                                "Succeeded"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "a84b31d3-15a4-4240-b99f-f25a7475b492"
                            }
                          },
                          "WaitUntilQueryFinished": {
                            "type": "Until",
                            "expression": "@equals(body('ParseBody-QueryStatus')?['status'], 'succeeded')",
                            "limit": {
                              "count": 120,
                              "timeout": "PT1H"
                            },
                            "actions": {
                              "AuditLogQueryStatus": {
                                "type": "Http",
                                "inputs": {
                                  "uri": "@{parameters('Graph URL Environment Variable (admin_GraphURLEnvironmentVariable)')}beta/security/auditLog/queries/@{variables('AuditLogQueryID')}",
                                  "method": "GET",
                                  "headers": {
                                    "Content-Type": "application/json"
                                  },
                                  "authentication": {
                                    "type": "ActiveDirectoryOAuth",
                                    "authority": "@parameters('Audit Logs - Authority (admin_AuditLogsAuthority)')",
                                    "tenant": "@parameters('TenantID (admin_TenantID)')",
                                    "audience": "@parameters('Graph URL Environment Variable (admin_GraphURLEnvironmentVariable)')",
                                    "clientId": "@variables('theAppID')",
                                    "secret": "@{if(variables('Secret_AzureType'), body('Get_Azure_Secret')['EnvironmentVariableSecretValue'], variables('theTextSecret'))}"
                                  }
                                },
                                "metadata": {
                                  "operationMetadataId": "67c562ef-5b97-46c4-abac-9530345a55a1"
                                }
                              },
                              "ParseBody-QueryStatus": {
                                "type": "ParseJson",
                                "inputs": {
                                  "content": "@body('AuditLogQueryStatus')",
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "@@odata.context": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "displayName": {},
                                      "filterStartDateTime": {
                                        "type": "string"
                                      },
                                      "filterEndDateTime": {
                                        "type": "string"
                                      },
                                      "recordTypeFilters": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "keywordFilter": {},
                                      "serviceFilters": {
                                        "type": "array"
                                      },
                                      "operationFilters": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "userPrincipalNameFilters": {
                                        "type": "array"
                                      },
                                      "ipAddressFilters": {
                                        "type": "array"
                                      },
                                      "objectIdFilters": {
                                        "type": "array"
                                      },
                                      "administrativeUnitIdFilters": {
                                        "type": "array"
                                      },
                                      "status": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "runAfter": {
                                  "AuditLogQueryStatus": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "a2957fc4-757e-450f-a212-52c10620bf82"
                                }
                              },
                              "WaitBeforeCheckingStatusAgain": {
                                "type": "Wait",
                                "inputs": {
                                  "interval": {
                                    "count": 60,
                                    "unit": "Second"
                                  }
                                },
                                "runAfter": {
                                  "ParseBody-QueryStatus": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "4f776f1e-d7c8-46aa-a877-5cafd12f0950"
                                }
                              }
                            },
                            "runAfter": {
                              "Set-InitialAuditLogQueryRecordsURL": [
                                "Succeeded"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "63867ca1-05b7-4921-ada4-52dbb07554ff"
                            }
                          },
                          "QueryWaitTimeExceeded": {
                            "type": "Terminate",
                            "inputs": {
                              "runStatus": "Failed",
                              "runError": {
                                "message": "Audit Log query wait time exceeded"
                              }
                            },
                            "runAfter": {
                              "WaitUntilQueryFinished": [
                                "TimedOut"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "5185d433-b91e-495c-bd1e-b914f4cfe227"
                            }
                          },
                          "Set-InitialAuditLogQueryRecordsURL": {
                            "type": "SetVariable",
                            "description": "This is first log events URL for the query and updated in the flow if results are paged",
                            "inputs": {
                              "name": "AuditLogQueryRecordsURL",
                              "value": "https://graph.microsoft.com/beta/security/auditLog/queries/@{variables('AuditLogQueryID')}/records?$top=500"
                            },
                            "runAfter": {
                              "Set-AuditLogQueryID": [
                                "Succeeded"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "3f251f0e-2d6b-459f-ab1e-75fd89ba85d6"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "RetryLogic-StartAuditLogQuery": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "de4ae85f-7d7f-425a-b2f3-9b80b9486564"
                      }
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "2d18777f-806a-4bff-8b18-1ca5ec7fba7e"
                  }
                },
                "Scope-AuditLogRecords": {
                  "type": "Scope",
                  "actions": {
                    "ProcessAuditLogRecords": {
                      "type": "Until",
                      "expression": "@equals(length(variables('AuditLogQueryRecordsURL')), 0)",
                      "limit": {
                        "count": 100,
                        "timeout": "PT1H"
                      },
                      "actions": {
                        "RetryLogic-AuditLogRecords": {
                          "type": "Until",
                          "expression": "@equals(outputs('AuditLogRecords')['statusCode'], 200)",
                          "limit": {
                            "count": 5,
                            "timeout": "PT10M"
                          },
                          "actions": {
                            "AuditLogRecords": {
                              "type": "Http",
                              "inputs": {
                                "uri": "@variables('AuditLogQueryRecordsURL')",
                                "method": "GET",
                                "authentication": {
                                  "type": "ActiveDirectoryOAuth",
                                  "authority": "@parameters('Audit Logs - Authority (admin_AuditLogsAuthority)')",
                                  "tenant": "@parameters('TenantID (admin_TenantID)')",
                                  "audience": "@parameters('Graph URL Environment Variable (admin_GraphURLEnvironmentVariable)')",
                                  "clientId": "@variables('theAppID')",
                                  "secret": "@{if(variables('Secret_AzureType'), body('Get_Azure_Secret')['EnvironmentVariableSecretValue'], variables('theTextSecret'))}"
                                }
                              },
                              "metadata": {
                                "operationMetadataId": "67c562ef-5b97-46c4-abac-9530345a55a1"
                              }
                            },
                            "AuditLogRecords-FAILED": {
                              "type": "Scope",
                              "actions": {
                                "AuditLogRecords-Wait": {
                                  "type": "Wait",
                                  "inputs": {
                                    "interval": {
                                      "count": 30,
                                      "unit": "Second"
                                    }
                                  },
                                  "metadata": {
                                    "operationMetadataId": "507770cf-aab9-4fb6-aeac-04406d09271f"
                                  }
                                },
                                "SetHttpCallFailed-TRUE-2_2": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "httpCallFailed",
                                    "value": "@true"
                                  },
                                  "runAfter": {
                                    "AuditLogRecords-Wait": [
                                      "Succeeded"
                                    ]
                                  },
                                  "metadata": {
                                    "operationMetadataId": "d21aba9a-3388-4e65-aa07-6e7380d258df"
                                  }
                                }
                              },
                              "runAfter": {
                                "AuditLogRecords": [
                                  "Failed"
                                ]
                              },
                              "metadata": {
                                "operationMetadataId": "c365de62-2609-41da-b395-772a3991f735"
                              }
                            },
                            "SetHttpCallFailed-FALSE-2_2": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "httpCallFailed",
                                "value": "@false"
                              },
                              "runAfter": {
                                "AuditLogRecords-FAILED": [
                                  "Skipped"
                                ]
                              },
                              "metadata": {
                                "operationMetadataId": "b41b2aef-84c0-4a4c-942a-7d7571b85ef8"
                              }
                            }
                          },
                          "metadata": {
                            "operationMetadataId": "46360e5e-2163-4897-955e-02120c56f6d9"
                          }
                        },
                        "DidAllGetContentDetailsCallsFailed_2": {
                          "type": "If",
                          "expression": {
                            "equals": [
                              "@variables('httpCallFailed')",
                              "@true"
                            ]
                          },
                          "actions": {
                            "IncrementHttpCallFailureCount_2": {
                              "type": "IncrementVariable",
                              "inputs": {
                                "name": "httpCallFailureCount",
                                "value": 1
                              },
                              "metadata": {
                                "operationMetadataId": "322fb9a3-a7cc-4edb-a667-0dad7c1b2299"
                              }
                            }
                          },
                          "else": {
                            "actions": {
                              "ApplyEvents": {
                                "type": "Foreach",
                                "foreach": "@body('Filter_to_current_schema')",
                                "actions": {
                                  "Filter_to_find_AppID_Graph": {
                                    "type": "Query",
                                    "inputs": {
                                      "from": "@items('ApplyEvents')?['auditData/PropertyCollection']",
                                      "where": "@equals(item()?['Name'], 'powerplatform.analytics.resource.power_app.id')"
                                    },
                                    "metadata": {
                                      "operationMetadataId": "2ff4cbec-b545-4be1-b600-b2818a9ddbdb"
                                    }
                                  },
                                  "AppIdFound_Graph": {
                                    "type": "Compose",
                                    "inputs": "@if(greater(length(body('Filter_to_find_AppID_Graph')), 0), first(body('Filter_to_find_AppID_Graph'))?['Value'], 'no app id')",
                                    "runAfter": {
                                      "Filter_to_find_AppID_Graph": [
                                        "Succeeded"
                                      ]
                                    },
                                    "metadata": {
                                      "operationMetadataId": "c7fa2908-69fd-49f1-af9d-d52f63838eaa"
                                    }
                                  },
                                  "Switch_2": {
                                    "type": "Switch",
                                    "expression": "@items('ApplyEvents')?['operation']",
                                    "default": {
                                      "actions": {}
                                    },
                                    "cases": {
                                      "LaunchPowerApp_Case": {
                                        "actions": {
                                          "AppDoesNotExist_-_AppLaunch_2": {
                                            "type": "Compose",
                                            "inputs": "APP DOES NOT EXISTS",
                                            "runAfter": {
                                              "GetApp_-_AppLaunch": [
                                                "Failed"
                                              ]
                                            },
                                            "metadata": {
                                              "operationMetadataId": "67672326-2603-4e00-9bc5-a840e94e3af3"
                                            }
                                          },
                                          "NewAuditLogEvent": {
                                            "type": "OpenApiConnection",
                                            "inputs": {
                                              "parameters": {
                                                "entityName": "admin_auditlogs",
                                                "recordId": "@items('ApplyEvents')?['id']",
                                                "item/admin_creationtime": "@items('ApplyEvents')?['createdDateTime']",
                                                "item/admin_appid": "@outputs('AppIdFound_Graph')",
                                                "item/admin_AppLookup@odata.bind": "admin_apps(@{outputs('AppIdFound_Graph')})",
                                                "item/admin_operation": "@items('ApplyEvents')?['operation']",
                                                "item/admin_title": "Power App Launch @{outputs('AppIdFound_Graph')} - @{items('ApplyEvents')?['createdDateTime']}",
                                                "item/admin_userid": "@items('ApplyEvents')?['userId']",
                                                "item/admin_userupn": "@items('ApplyEvents')?['userPrincipalName']",
                                                "item/admin_workload": "@items('ApplyEvents')?['auditData']?['Workload']"
                                              },
                                              "host": {
                                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                                                "operationId": "UpdateRecord",
                                                "connectionName": "shared_commondataserviceforapps_1"
                                              }
                                            },
                                            "runAfter": {
                                              "AppDoesNotExist_-_AppLaunch_2": [
                                                "Skipped"
                                              ]
                                            },
                                            "metadata": {
                                              "operationMetadataId": "77fd7e36-d7cc-40a1-9171-a714ec08ff7e"
                                            }
                                          },
                                          "GetApp_-_AppLaunch": {
                                            "type": "OpenApiConnection",
                                            "inputs": {
                                              "parameters": {
                                                "entityName": "admin_apps",
                                                "recordId": "@outputs('AppIdFound_Graph')"
                                              },
                                              "host": {
                                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                                                "operationId": "GetItem",
                                                "connectionName": "shared_commondataserviceforapps_1"
                                              }
                                            },
                                            "metadata": {
                                              "operationMetadataId": "cee8f054-00de-4b77-9f4b-572bf7403531"
                                            }
                                          }
                                        },
                                        "case": "LaunchPowerApp"
                                      },
                                      "DeletePowerApp_Case": {
                                        "actions": {
                                          "GetApp_-_Deleted_2": {
                                            "type": "OpenApiConnection",
                                            "inputs": {
                                              "parameters": {
                                                "entityName": "admin_apps",
                                                "recordId": "@outputs('AppIdFound_Graph')",
                                                "$select": "admin_appid, admin_displayname"
                                              },
                                              "host": {
                                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                                                "operationId": "GetItem",
                                                "connectionName": "shared_commondataserviceforapps_2"
                                              },
                                              "retryPolicy": {
                                                "type": "exponential",
                                                "count": 20,
                                                "interval": "PT20S"
                                              }
                                            },
                                            "metadata": {
                                              "operationMetadataId": "3c81e4bd-5184-40d2-aa8b-6db274687ed3"
                                            }
                                          },
                                          "AppDoesNotExists_-_AppDeleted_2": {
                                            "type": "Compose",
                                            "inputs": "APP DOES NOT EXISTS",
                                            "runAfter": {
                                              "GetApp_-_Deleted_2": [
                                                "Failed"
                                              ]
                                            },
                                            "metadata": {
                                              "operationMetadataId": "abbad281-ca7b-4394-8080-ecafc955ef7a"
                                            }
                                          },
                                          "Mark_Power_App_record_deleted_2": {
                                            "type": "OpenApiConnection",
                                            "inputs": {
                                              "parameters": {
                                                "entityName": "admin_apps",
                                                "recordId": "@outputs('AppIdFound_Graph')",
                                                "item/admin_appdeleted": true,
                                                "item/admin_appdeletedon": "@items('ApplyEvents')?['createdDateTime']"
                                              },
                                              "host": {
                                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                                                "operationId": "UpdateRecord",
                                                "connectionName": "shared_commondataserviceforapps_1"
                                              }
                                            },
                                            "runAfter": {
                                              "AppDoesNotExists_-_AppDeleted_2": [
                                                "Skipped"
                                              ]
                                            },
                                            "metadata": {
                                              "operationMetadataId": "5c582097-14cb-4afc-a89f-6e98460227be"
                                            }
                                          }
                                        },
                                        "case": "DeletePowerApp"
                                      }
                                    },
                                    "runAfter": {
                                      "AppIdFound_Graph": [
                                        "Succeeded"
                                      ]
                                    },
                                    "metadata": {
                                      "operationMetadataId": "80ade088-7dbc-49bc-a97b-6bbdfcbbf6d5"
                                    }
                                  }
                                },
                                "runAfter": {
                                  "Filter_to_current_schema": [
                                    "Succeeded"
                                  ]
                                },
                                "runtimeConfiguration": {
                                  "concurrency": {
                                    "repetitions": 25
                                  }
                                },
                                "metadata": {
                                  "operationMetadataId": "5d43e08c-b006-4d3f-ad32-e77f89f0aa4f"
                                }
                              },
                              "Set-AuditLogQueryRecordsURL": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "AuditLogQueryRecordsURL",
                                  "value": "@body('ParseBody-AuditLogRecords')?['@odata.nextLink']"
                                },
                                "runAfter": {
                                  "ApplyEvents": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "e260b736-7f12-4864-9a4f-89855042fb57"
                                }
                              },
                              "ParseBody-AuditLogRecords": {
                                "type": "ParseJson",
                                "inputs": {
                                  "content": "@body('AuditLogRecords')",
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "@@odata.context": {
                                        "type": "string"
                                      },
                                      "@@odata.count": {
                                        "type": "integer"
                                      },
                                      "value": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "createdDateTime": {
                                              "type": "string"
                                            },
                                            "auditLogRecordType": {
                                              "type": "string"
                                            },
                                            "operation": {
                                              "type": "string"
                                            },
                                            "organizationId": {
                                              "type": "string"
                                            },
                                            "userType": {
                                              "type": "string"
                                            },
                                            "userId": {
                                              "type": "string"
                                            },
                                            "service": {
                                              "type": "string"
                                            },
                                            "userPrincipalName": {
                                              "type": "string"
                                            },
                                            "auditData": {
                                              "type": "object",
                                              "properties": {
                                                "@@odata.type": {
                                                  "type": "string"
                                                },
                                                "UserId": {
                                                  "type": "string"
                                                },
                                                "Id": {
                                                  "type": "string"
                                                },
                                                "RecordType": {
                                                  "type": "integer"
                                                },
                                                "CreationTime": {
                                                  "type": "string"
                                                },
                                                "Operation": {
                                                  "type": "string"
                                                },
                                                "OrganizationId": {
                                                  "type": "string"
                                                },
                                                "UserType": {
                                                  "type": "integer"
                                                },
                                                "UserKey": {
                                                  "type": "string"
                                                },
                                                "Workload": {
                                                  "type": "string"
                                                },
                                                "ResultStatus": {
                                                  "type": "string"
                                                },
                                                "Version": {
                                                  "type": "integer"
                                                },
                                                "RequiresCustomerKeyEncryption": {
                                                  "type": "boolean"
                                                },
                                                "PropertyCollection": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "Name": {
                                                        "type": "string"
                                                      },
                                                      "Value": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "Name",
                                                      "Value"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "createdDateTime",
                                            "auditLogRecordType",
                                            "operation",
                                            "organizationId",
                                            "userType",
                                            "userId",
                                            "service",
                                            "userPrincipalName",
                                            "auditData"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                "metadata": {
                                  "operationMetadataId": "03f05c9d-27c9-477e-937d-51b1f9425784"
                                }
                              },
                              "Filter_to_current_schema": {
                                "type": "Query",
                                "inputs": {
                                  "from": "@body('ParseBody-AuditLogRecords')?['value']",
                                  "where": "@equals(item()?['auditData']?['RecordType'], 256)"
                                },
                                "runAfter": {
                                  "ParseBody-AuditLogRecords": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "091b47d6-f45b-4b1c-8d45-a13cc172875d"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "RetryLogic-AuditLogRecords": [
                              "Succeeded"
                            ]
                          },
                          "metadata": {
                            "operationMetadataId": "16fd6e5d-5aa5-4709-aa80-9590149b7dd4"
                          }
                        }
                      },
                      "metadata": {
                        "operationMetadataId": "649637c2-6c2c-40ca-8a3c-95d5994b70f2"
                      }
                    }
                  },
                  "runAfter": {
                    "Scope-AuditLogQuery": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "9e0f0dea-3023-474f-8124-9548aaa617fd"
                  }
                }
              },
              "else": {
                "actions": {
                  "BuildContentSlotArray": {
                    "type": "Until",
                    "description": "length(variables('NextPageUri')) < 1",
                    "expression": "@less(length(variables('NextPageUri')), 1)",
                    "limit": {
                      "count": 5000,
                      "timeout": "PT10H"
                    },
                    "actions": {
                      "ResetHttpCallFailed": {
                        "type": "SetVariable",
                        "inputs": {
                          "name": "httpCallFailed",
                          "value": "@false"
                        },
                        "metadata": {
                          "operationMetadataId": "a222e185-1969-4ac3-bace-bb2a7c9c99f2"
                        }
                      },
                      "RetryLogic-ListAuditLogContent": {
                        "type": "Until",
                        "expression": "@equals(outputs('ListAuditLogContent')['statusCode'], 200)",
                        "limit": {
                          "count": 5,
                          "timeout": "PT10M"
                        },
                        "actions": {
                          "ListAuditLogContent": {
                            "type": "Http",
                            "inputs": {
                              "uri": "@{parameters('Audit Logs - Audience (admin_AuditLogsAudience)')}/api/v1.0/@{parameters('TenantID (admin_TenantID)')}/activity/feed/subscriptions/content",
                              "method": "GET",
                              "headers": {
                                "Content-Type": "application/json"
                              },
                              "queries": {
                                "contentType": "Audit.General",
                                "PublisherIdentifier": "@parameters('TenantID (admin_TenantID)')",
                                "startTime": "@variables('startTime')",
                                "endTime": "@variables('endTime')",
                                "nextpage": "@variables('NextPageParamValue')"
                              },
                              "authentication": {
                                "type": "ActiveDirectoryOAuth",
                                "authority": "@parameters('Audit Logs - Authority (admin_AuditLogsAuthority)')",
                                "tenant": "@parameters('TenantID (admin_TenantID)')",
                                "audience": "@parameters('Audit Logs - Audience (admin_AuditLogsAudience)')",
                                "clientId": "@variables('theAppID')",
                                "secret": "@{if(variables('Secret_AzureType'), body('Get_Azure_Secret')['EnvironmentVariableSecretValue'], variables('theTextSecret'))}"
                              }
                            },
                            "metadata": {
                              "operationMetadataId": "67c562ef-5b97-46c4-abac-9530345a55a1"
                            }
                          },
                          "ListAuditLogContentCall-FAILED": {
                            "type": "Scope",
                            "actions": {
                              "Delay": {
                                "type": "Wait",
                                "inputs": {
                                  "interval": {
                                    "count": 30,
                                    "unit": "Second"
                                  }
                                },
                                "metadata": {
                                  "operationMetadataId": "abc8fc85-493c-492d-a51f-9ade16691aca"
                                }
                              },
                              "SetHttpCallFailed-TRUE": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "httpCallFailed",
                                  "value": "@true"
                                },
                                "runAfter": {
                                  "Delay": [
                                    "Succeeded"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "0b7ea99f-88ac-41c9-af52-3105f281400d"
                                }
                              }
                            },
                            "runAfter": {
                              "ListAuditLogContent": [
                                "Failed"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "8ee27dd6-e2f0-4fcf-8ed2-3a611f29666f"
                            }
                          },
                          "SetHttpCallFailed-FALSE": {
                            "type": "SetVariable",
                            "inputs": {
                              "name": "httpCallFailed",
                              "value": "@false"
                            },
                            "runAfter": {
                              "ListAuditLogContentCall-FAILED": [
                                "Skipped"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "cddaf248-9212-4462-b609-915bf8f06549"
                            }
                          }
                        },
                        "runAfter": {
                          "ResetHttpCallFailed": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "0de395b6-f16d-40f1-b87f-7800892683ec"
                        }
                      },
                      "DidAllListAuditLogContentCallsFailed": {
                        "type": "If",
                        "description": "If all HTTP calls of ListAuditlLogContent action failed then increment HTTP call failure count",
                        "expression": {
                          "equals": [
                            "@variables('httpCallFailed')",
                            "@true"
                          ]
                        },
                        "actions": {
                          "Increment_variable": {
                            "type": "IncrementVariable",
                            "inputs": {
                              "name": "httpCallFailureCount",
                              "value": 1
                            },
                            "metadata": {
                              "operationMetadataId": "913b0086-f075-4334-9680-6a402cda4461"
                            }
                          }
                        },
                        "else": {
                          "actions": {
                            "ParseHeader": {
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@outputs('ListAuditLogContent')['headers']",
                                "schema": {
                                  "type": "object",
                                  "properties": {
                                    "statusCode": {
                                      "type": "integer"
                                    },
                                    "headers": {
                                      "type": "object",
                                      "properties": {
                                        "Pragma": {
                                          "type": "string"
                                        },
                                        "NextPageUri": {
                                          "type": "string"
                                        },
                                        "Cache-Control": {
                                          "type": "string"
                                        },
                                        "Date": {
                                          "type": "string"
                                        },
                                        "Server": {
                                          "type": "string"
                                        },
                                        "X-AspNet-Version": {
                                          "type": "string"
                                        },
                                        "X-Powered-By": {
                                          "type": "string"
                                        },
                                        "Content-Length": {
                                          "type": "string"
                                        },
                                        "Content-Type": {
                                          "type": "string"
                                        },
                                        "Expires": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "metadata": {
                                "operationMetadataId": "3669fdf1-e0ff-49bc-8b90-2d9e3b0366e2"
                              }
                            },
                            "ParseBody": {
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@body('ListAuditLogContent')",
                                "schema": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "contentUri": {
                                        "type": "string"
                                      },
                                      "contentId": {
                                        "type": "string"
                                      },
                                      "contentType": {
                                        "type": "string"
                                      },
                                      "contentCreated": {
                                        "type": "string"
                                      },
                                      "contentExpiration": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "contentUri",
                                      "contentId",
                                      "contentType",
                                      "contentCreated",
                                      "contentExpiration"
                                    ]
                                  }
                                }
                              },
                              "runAfter": {
                                "ParseHeader": [
                                  "Succeeded"
                                ]
                              },
                              "metadata": {
                                "operationMetadataId": "51963714-f4c9-4fec-8108-6c9fd86341dc"
                              }
                            },
                            "SelectContentIDs": {
                              "type": "Select",
                              "inputs": {
                                "from": "@body('ParseBody')",
                                "select": {
                                  "ContentID": "@item()['contentId']"
                                }
                              },
                              "runAfter": {
                                "ParseBody": [
                                  "Succeeded"
                                ]
                              },
                              "metadata": {
                                "operationMetadataId": "dc57ac40-6761-484e-a249-28b6786b49e4"
                              }
                            },
                            "AppendContentIDsArray": {
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "ContentIDs",
                                "value": "@string(body('SelectContentIDs'))"
                              },
                              "runAfter": {
                                "SelectContentIDs": [
                                  "Succeeded"
                                ]
                              },
                              "metadata": {
                                "operationMetadataId": "84e2b9ed-2f17-48fd-a39e-6fd92ba4c456"
                              }
                            },
                            "DoesNextPageUriExist": {
                              "type": "If",
                              "expression": {
                                "contains": [
                                  "@body('ParseHeader')",
                                  "NextPageUri"
                                ]
                              },
                              "actions": {
                                "Set-NextPageURI": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "NextPageUri",
                                    "value": "@{body('ParseHeader')?['NextPageUri']}"
                                  },
                                  "metadata": {
                                    "operationMetadataId": "b830b69a-7ae5-43ae-b652-1b5368f89ddf"
                                  }
                                },
                                "QueryString": {
                                  "type": "Compose",
                                  "inputs": "@uriQuery(variables('NextPageUri'))",
                                  "runAfter": {
                                    "Set-NextPageURI": [
                                      "Succeeded"
                                    ]
                                  },
                                  "metadata": {
                                    "operationMetadataId": "e3615cd0-67a2-4997-8870-248da232f539"
                                  }
                                },
                                "Set-NextPageParamValue": {
                                  "type": "SetVariable",
                                  "description": "substring(outputs('QueryString'), add(indexOf(outputs('QueryString'), 'nextpage'), 9))",
                                  "inputs": {
                                    "name": "NextPageParamValue",
                                    "value": "@{substring(outputs('QueryString'), add(indexOf(outputs('QueryString'), 'nextpage'), 9))}"
                                  },
                                  "runAfter": {
                                    "QueryString": [
                                      "Succeeded"
                                    ]
                                  },
                                  "metadata": {
                                    "operationMetadataId": "d1f5bd7c-e057-40c7-b62d-29efb5fb90e8"
                                  }
                                }
                              },
                              "else": {
                                "actions": {
                                  "Set-NextPageURI-NULL": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "NextPageUri",
                                      "value": "@{null}"
                                    },
                                    "metadata": {
                                      "operationMetadataId": "9104e4bf-f2a0-47d7-b397-dc93917dbbdb"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "AppendContentIDsArray": [
                                  "Succeeded"
                                ]
                              },
                              "metadata": {
                                "operationMetadataId": "5f8df7f9-65f9-4f70-b831-c2df770d361e"
                              }
                            }
                          }
                        },
                        "runAfter": {
                          "RetryLogic-ListAuditLogContent": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "de4ae85f-7d7f-425a-b2f3-9b80b9486564"
                        }
                      }
                    },
                    "metadata": {
                      "operationMetadataId": "8b95c39b-5560-4ded-8874-6b1e62c4fb5e"
                    }
                  },
                  "LoopContentIDs": {
                    "type": "Foreach",
                    "foreach": "@variables('ContentIDs')",
                    "actions": {
                      "ConvertStringToArray": {
                        "type": "Compose",
                        "inputs": "@json(item())",
                        "metadata": {
                          "operationMetadataId": "7af04b58-f318-45e0-abb9-fe1ef438ac97"
                        }
                      },
                      "ParseContentIDs": {
                        "type": "ParseJson",
                        "inputs": {
                          "content": "@outputs('ConvertStringToArray')",
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ContentID": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "runAfter": {
                          "ConvertStringToArray": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "c5be39b1-82d6-4ef1-8dc4-417845856094"
                        }
                      },
                      "GetAndProcessEvents": {
                        "type": "Foreach",
                        "foreach": "@body('ParseContentIDs')",
                        "actions": {
                          "ResetHttpCallFailed2": {
                            "type": "SetVariable",
                            "inputs": {
                              "name": "httpCallFailed",
                              "value": "@false"
                            },
                            "metadata": {
                              "operationMetadataId": "a222e185-1969-4ac3-bace-bb2a7c9c99f2"
                            }
                          },
                          "RetryLogic-GetContentDetails": {
                            "type": "Until",
                            "expression": "@equals(outputs('GetContentDetails')['statusCode'], 200)",
                            "limit": {
                              "count": 5,
                              "timeout": "PT10M"
                            },
                            "actions": {
                              "GetContentDetails": {
                                "type": "Http",
                                "inputs": {
                                  "uri": "@{parameters('Audit Logs - Audience (admin_AuditLogsAudience)')}/api/v1.0/@{parameters('TenantID (admin_TenantID)')}/activity/feed/audit/@{items('GetAndProcessEvents')?['ContentID']}",
                                  "method": "GET",
                                  "authentication": {
                                    "type": "ActiveDirectoryOAuth",
                                    "authority": "@parameters('Audit Logs - Authority (admin_AuditLogsAuthority)')",
                                    "tenant": "@parameters('TenantID (admin_TenantID)')",
                                    "audience": "@parameters('Audit Logs - Audience (admin_AuditLogsAudience)')",
                                    "clientId": "@variables('theAppID')",
                                    "secret": "@{if(variables('Secret_AzureType'), body('Get_Azure_Secret')['EnvironmentVariableSecretValue'], variables('theTextSecret'))}"
                                  }
                                },
                                "metadata": {
                                  "operationMetadataId": "5a1d087e-1b8c-467d-a0cb-0ac40a85b7a3"
                                }
                              },
                              "GetContentDetailsCall-FAILED": {
                                "type": "Scope",
                                "actions": {
                                  "Delay2": {
                                    "type": "Wait",
                                    "inputs": {
                                      "interval": {
                                        "count": 30,
                                        "unit": "Second"
                                      }
                                    },
                                    "metadata": {
                                      "operationMetadataId": "507770cf-aab9-4fb6-aeac-04406d09271f"
                                    }
                                  },
                                  "SetHttpCallFailed-TRUE-2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "httpCallFailed",
                                      "value": "@true"
                                    },
                                    "runAfter": {
                                      "Delay2": [
                                        "Succeeded"
                                      ]
                                    },
                                    "metadata": {
                                      "operationMetadataId": "d21aba9a-3388-4e65-aa07-6e7380d258df"
                                    }
                                  }
                                },
                                "runAfter": {
                                  "GetContentDetails": [
                                    "Failed"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "c365de62-2609-41da-b395-772a3991f735"
                                }
                              },
                              "SetHttpCallFailed-FALSE-2": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "httpCallFailed",
                                  "value": "@false"
                                },
                                "runAfter": {
                                  "GetContentDetailsCall-FAILED": [
                                    "Skipped"
                                  ]
                                },
                                "metadata": {
                                  "operationMetadataId": "cddaf248-9212-4462-b609-915bf8f06549"
                                }
                              }
                            },
                            "runAfter": {
                              "ResetHttpCallFailed2": [
                                "Succeeded"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "c12d2038-763c-4b1f-922f-333471068649"
                            }
                          },
                          "DidAllGetContentDetailsCallsFailed": {
                            "type": "If",
                            "expression": {
                              "equals": [
                                "@variables('httpCallFailed')",
                                "@true"
                              ]
                            },
                            "actions": {
                              "IncrementHttpCallFailureCount": {
                                "type": "IncrementVariable",
                                "inputs": {
                                  "name": "httpCallFailureCount",
                                  "value": 1
                                },
                                "metadata": {
                                  "operationMetadataId": "322fb9a3-a7cc-4edb-a667-0dad7c1b2299"
                                }
                              }
                            },
                            "else": {
                              "actions": {
                                "ParseEvents": {
                                  "type": "ParseJson",
                                  "inputs": {
                                    "content": "@body('GetContentDetails')",
                                    "schema": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "CreationTime": {
                                            "type": "string"
                                          },
                                          "Id": {
                                            "type": "string"
                                          },
                                          "Operation": {
                                            "type": "string"
                                          },
                                          "Workload": {
                                            "type": "string"
                                          },
                                          "ObjectId": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "UserId": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "UserKey": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "metadata": {
                                    "operationMetadataId": "57dafb5c-8f05-4d24-b293-21a7c1a966d5"
                                  }
                                },
                                "FilterEvents": {
                                  "type": "Query",
                                  "inputs": {
                                    "from": "@body('ParseEvents')",
                                    "where": "@and(equals(item()?['RecordType'], 256), or(equals(item()?['Operation'], 'LaunchPowerApp'), equals(item()?['Operation'], 'DeletePowerApp')))"
                                  },
                                  "runAfter": {
                                    "ParseEvents": [
                                      "Succeeded"
                                    ]
                                  },
                                  "metadata": {
                                    "operationMetadataId": "bb5cff1f-3213-4e61-83aa-3ba39b0b90e0"
                                  }
                                },
                                "Apply_to_each_Audit_Log": {
                                  "type": "Foreach",
                                  "foreach": "@body('FilterEvents')",
                                  "actions": {
                                    "Switch": {
                                      "type": "Switch",
                                      "expression": "@items('Apply_to_each_Audit_Log')?['Operation']",
                                      "default": {
                                        "actions": {}
                                      },
                                      "cases": {
                                        "LaunchPowerApp_Case-1": {
                                          "actions": {
                                            "AppDoesNotExist_-_AppLaunch": {
                                              "type": "Compose",
                                              "inputs": "APP DOES NOT EXISTS",
                                              "runAfter": {
                                                "UpsertAuditLogEvent": [
                                                  "Failed"
                                                ]
                                              },
                                              "metadata": {
                                                "operationMetadataId": "67672326-2603-4e00-9bc5-a840e94e3af3"
                                              }
                                            },
                                            "UpsertAuditLogEvent": {
                                              "type": "OpenApiConnection",
                                              "inputs": {
                                                "parameters": {
                                                  "entityName": "admin_auditlogs",
                                                  "recordId": "@items('Apply_to_each_Audit_Log')?['Id']",
                                                  "item/admin_creationtime": "@items('Apply_to_each_Audit_Log')?['CreationTime']",
                                                  "item/admin_appid": "@outputs('AppIdFound')",
                                                  "item/admin_AppLookup@odata.bind": "admin_apps(@{outputs('AppIdFound')})",
                                                  "item/admin_operation": "@items('Apply_to_each_Audit_Log')?['Operation']",
                                                  "item/admin_title": "Power App Launch @{outputs('AppIdFound')} - @{items('Apply_to_each_Audit_Log')?['CreationTime']}",
                                                  "item/admin_userupn": "@items('Apply_to_each_Audit_Log')?['UserId']",
                                                  "item/admin_workload": "@items('Apply_to_each_Audit_Log')?['Workload']"
                                                },
                                                "host": {
                                                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                                                  "operationId": "UpdateRecord",
                                                  "connectionName": "shared_commondataserviceforapps_1"
                                                }
                                              },
                                              "metadata": {
                                                "operationMetadataId": "77fd7e36-d7cc-40a1-9171-a714ec08ff7e"
                                              }
                                            }
                                          },
                                          "case": "LaunchPowerApp"
                                        },
                                        "DeletePowerApp_Case-1": {
                                          "actions": {
                                            "UpsertAuditLog-and-AppDeleted": {
                                              "type": "Scope",
                                              "actions": {
                                                "Mark_Power_App_record_deleted": {
                                                  "type": "OpenApiConnection",
                                                  "inputs": {
                                                    "parameters": {
                                                      "entityName": "admin_apps",
                                                      "recordId": "@outputs('AppIdFound')",
                                                      "item/admin_appdeleted": true,
                                                      "item/admin_appdeletedon": "@items('Apply_to_each_Audit_Log')?['CreationTime']"
                                                    },
                                                    "host": {
                                                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                                                      "operationId": "UpdateRecord",
                                                      "connectionName": "shared_commondataserviceforapps_1"
                                                    }
                                                  },
                                                  "metadata": {
                                                    "operationMetadataId": "5c582097-14cb-4afc-a89f-6e98460227be"
                                                  }
                                                }
                                              },
                                              "runAfter": {
                                                "AppDoesNotExists_-_AppDeleted": [
                                                  "Skipped"
                                                ]
                                              },
                                              "metadata": {
                                                "operationMetadataId": "ec7f6cb5-9a9d-4c80-9443-a7a469d78bf7"
                                              }
                                            },
                                            "GetApp_-_Deleted": {
                                              "type": "OpenApiConnection",
                                              "inputs": {
                                                "parameters": {
                                                  "entityName": "admin_apps",
                                                  "recordId": "@outputs('AppIdFound')",
                                                  "$select": "admin_appid, admin_displayname"
                                                },
                                                "host": {
                                                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                                                  "operationId": "GetItem",
                                                  "connectionName": "shared_commondataserviceforapps_2"
                                                },
                                                "retryPolicy": {
                                                  "type": "exponential",
                                                  "count": 20,
                                                  "interval": "PT20S"
                                                }
                                              },
                                              "metadata": {
                                                "operationMetadataId": "3c81e4bd-5184-40d2-aa8b-6db274687ed3"
                                              }
                                            },
                                            "AppDoesNotExists_-_AppDeleted": {
                                              "type": "Compose",
                                              "inputs": "APP DOES NOT EXISTS",
                                              "runAfter": {
                                                "GetApp_-_Deleted": [
                                                  "Failed"
                                                ]
                                              },
                                              "metadata": {
                                                "operationMetadataId": "abbad281-ca7b-4394-8080-ecafc955ef7a"
                                              }
                                            }
                                          },
                                          "case": "DeletePowerApp"
                                        }
                                      },
                                      "runAfter": {
                                        "AppIdFound": [
                                          "Succeeded"
                                        ]
                                      },
                                      "metadata": {
                                        "operationMetadataId": "80ade088-7dbc-49bc-a97b-6bbdfcbbf6d5"
                                      }
                                    },
                                    "Filter_to_find_AppID": {
                                      "type": "Query",
                                      "inputs": {
                                        "from": "@items('Apply_to_each_Audit_Log')?['PropertyCollection']",
                                        "where": "@equals(item()?['Name'], 'powerplatform.analytics.resource.power_app.id')"
                                      },
                                      "metadata": {
                                        "operationMetadataId": "2ff4cbec-b545-4be1-b600-b2818a9ddbdb"
                                      }
                                    },
                                    "AppIdFound": {
                                      "type": "Compose",
                                      "inputs": "@if(greater(length(body('Filter_to_find_AppID')), 0), first(body('Filter_to_find_AppID'))?['Value'], 'no app id')",
                                      "runAfter": {
                                        "Filter_to_find_AppID": [
                                          "Succeeded"
                                        ]
                                      },
                                      "metadata": {
                                        "operationMetadataId": "c7fa2908-69fd-49f1-af9d-d52f63838eaa"
                                      }
                                    }
                                  },
                                  "runAfter": {
                                    "FilterEvents": [
                                      "Succeeded"
                                    ]
                                  },
                                  "runtimeConfiguration": {
                                    "concurrency": {
                                      "repetitions": 25
                                    }
                                  },
                                  "metadata": {
                                    "operationMetadataId": "5d43e08c-b006-4d3f-ad32-e77f89f0aa4f"
                                  }
                                }
                              }
                            },
                            "runAfter": {
                              "RetryLogic-GetContentDetails": [
                                "Succeeded"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "16fd6e5d-5aa5-4709-aa80-9590149b7dd4"
                            }
                          }
                        },
                        "runAfter": {
                          "ParseContentIDs": [
                            "Succeeded"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "fd3d6e9f-ad3f-437a-b489-ca964f1ba6eb"
                        }
                      }
                    },
                    "runAfter": {
                      "BuildContentSlotArray": [
                        "Succeeded"
                      ]
                    },
                    "metadata": {
                      "operationMetadataId": "56e71e94-aec2-410c-b98d-687f38d4ed5c"
                    }
                  }
                }
              },
              "runAfter": {
                "Get_env_var_for_for_Azure_Secret": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "4a0dff56-e149-4425-9293-c9be9fe9db04"
              }
            }
          },
          "runAfter": {
            "httpCallFailureCount": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "5b2dd07e-a81a-4782-aa0d-3670573c5eed"
          }
        },
        "Error_Handling": {
          "type": "Scope",
          "actions": {
            "Create_a_new_record_-_Sync_Flow_Errors": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "entityName": "admin_syncflowerrorses",
                  "item/admin_name": "@workflow()?['tags']['flowDisplayName']",
                  "item/admin_flowinstanceurl": "@concat(parameters('Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)'), workflow()?['tags']['environmentName'], '/flows/', workflow()?['name'], '/runs/', workflow()?['run']['name'])"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "operationId": "CreateRecord",
                  "connectionName": "shared_commondataserviceforapps"
                },
                "retryPolicy": {
                  "type": "exponential",
                  "count": 10,
                  "interval": "PT10S"
                }
              },
              "metadata": {
                "operationMetadataId": "87961ff0-e261-4890-9ab9-a53f88fe0de5"
              }
            },
            "Terminate": {
              "type": "Terminate",
              "inputs": {
                "runStatus": "Failed",
                "runError": {
                  "code": "500",
                  "message": "Get Environments Failed"
                }
              },
              "runAfter": {
                "Update_Last_Run_Fail": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "9e5a2a18-dba2-47a1-96d5-3356f4348e5a"
              }
            },
            "Get_ID_Fail": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "$select": "admin_coesolutionmetadataid",
                  "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                  "$top": 1
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "connectionName": "shared_commondataserviceforapps"
                }
              },
              "runAfter": {
                "Create_a_new_record_-_Sync_Flow_Errors": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "47329bf2-8aac-400d-9778-a793b4f1180f"
              }
            },
            "Update_Last_Run_Fail": {
              "type": "OpenApiConnection",
              "inputs": {
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "recordId": "@first(outputs('Get_ID_Fail')?['body/value'])?['admin_coesolutionmetadataid']",
                  "item/admin_lastrun": "@utcNow()",
                  "item/admin_lastrunpassed": false
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                  "operationId": "UpdateRecord",
                  "connectionName": "shared_commondataserviceforapps"
                }
              },
              "runAfter": {
                "Get_ID_Fail": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "c63eb7cc-6101-4567-b520-a4a8881264e9"
              }
            }
          },
          "runAfter": {
            "Get_Logs": [
              "Failed"
            ]
          },
          "metadata": {
            "operationMetadataId": "38ae684e-622d-42ea-abd2-ee571aee3a5f"
          }
        },
        "NextPageUri": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "NextPageUri",
                "type": "string",
                "value": "@{null}"
              }
            ]
          },
          "runAfter": {
            "ContentIDs": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "97b3b8ca-3592-48bd-86e4-0579886a9c93"
          }
        },
        "NextPageParamValue": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "NextPageParamValue",
                "type": "string",
                "value": "@{null}"
              }
            ]
          },
          "runAfter": {
            "NextPageUri": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "0c9e3b9e-1a9a-4241-8901-8ea91e9e05b1"
          }
        },
        "ContentIDs": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "ContentIDs",
                "type": "array"
              }
            ]
          },
          "runAfter": {
            "AuditLogQueryRecordsURL": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "c15216d4-4308-4e0c-9391-b03aaa088571"
          }
        },
        "startTime_variable": {
          "type": "InitializeVariable",
          "description": "Take 65 mins back -> formatDateTime(addMinutes(utcNow(), -65), 'yyyy-MM-ddTHH:mm:ss.0000000Z')",
          "inputs": {
            "variables": [
              {
                "name": "startTime",
                "type": "string",
                "value": "@{formatDateTime(addMinutes(utcNow(), outputs('start_time_minutes_back')), 'yyyy-MM-ddTHH:mm:ss.0000000Z')}"
              }
            ]
          },
          "runAfter": {
            "NextPageParamValue": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "8d2f458b-5680-4af9-9a99-6f4b895fb2e0"
          }
        },
        "endTime_variable_": {
          "type": "InitializeVariable",
          "description": "formatDateTime(utcNow(), 'yyyy-MM-ddTHH:mm:ss.0000000Z')",
          "inputs": {
            "variables": [
              {
                "name": "endTime",
                "type": "string",
                "value": "@{formatDateTime(addMinutes(utcNow(), outputs('end_time_minutes_back')), 'yyyy-MM-ddTHH:mm:ss.0000000Z')}"
              }
            ]
          },
          "runAfter": {
            "startTime_variable": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "6f63706f-8ddd-4ce2-85d4-0dc7ba17b82d"
          }
        },
        "emailGUID": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "emailGUID",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "endTime_variable_": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "dad8eca6-7937-47c0-aa57-f2d48dd1c5a2"
          }
        },
        "httpCallFailed": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "httpCallFailed",
                "type": "boolean",
                "value": "@false"
              }
            ]
          },
          "runAfter": {
            "emailGUID": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "82ad2af7-99f4-4ee4-8d72-d2771da42f7d"
          }
        },
        "httpCallFailureCount": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "httpCallFailureCount",
                "type": "integer",
                "value": 0
              }
            ]
          },
          "runAfter": {
            "httpCallFailed": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "6b3a00fe-23a7-42d3-8a15-211fddbe9387"
          }
        },
        "Update_last_run_as_pass_OR_handle_HTTP_call_errors": {
          "type": "Scope",
          "actions": {
            "AnyHttpCallFailures": {
              "type": "If",
              "description": "If there are any HTTP call failures, then we do second error handling here",
              "expression": {
                "greater": [
                  "@variables('httpCallFailureCount')",
                  0
                ]
              },
              "actions": {
                "Create_a_new_record_-_Sync_Flow_Errors_2": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "admin_syncflowerrorses",
                      "item/admin_name": "@workflow()?['tags']['flowDisplayName']",
                      "item/admin_flowinstanceurl": "@concat(parameters('Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)'), workflow()?['tags']['environmentName'], '/flows/', workflow()?['name'], '/runs/', workflow()?['run']['name'])"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "CreateRecord",
                      "connectionName": "shared_commondataserviceforapps"
                    },
                    "retryPolicy": {
                      "type": "exponential",
                      "count": 10,
                      "interval": "PT10S"
                    }
                  },
                  "metadata": {
                    "operationMetadataId": "87961ff0-e261-4890-9ab9-a53f88fe0de5"
                  }
                },
                "Get_ID_Fail_2": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "admin_coesolutionmetadatas",
                      "$select": "admin_coesolutionmetadataid",
                      "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                      "$top": 1
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "ListRecords",
                      "connectionName": "shared_commondataserviceforapps"
                    }
                  },
                  "runAfter": {
                    "Create_a_new_record_-_Sync_Flow_Errors_2": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "47329bf2-8aac-400d-9778-a793b4f1180f"
                  }
                },
                "Update_Last_Run_Fail_2": {
                  "type": "OpenApiConnection",
                  "inputs": {
                    "parameters": {
                      "entityName": "admin_coesolutionmetadatas",
                      "recordId": "@first(outputs('Get_ID_Fail_2')?['body/value'])?['admin_coesolutionmetadataid']",
                      "item/admin_lastrun": "@utcNow()",
                      "item/admin_lastrunpassed": false
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                      "operationId": "UpdateRecord",
                      "connectionName": "shared_commondataserviceforapps"
                    }
                  },
                  "runAfter": {
                    "Get_ID_Fail_2": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "c63eb7cc-6101-4567-b520-a4a8881264e9"
                  }
                },
                "Terminate_2": {
                  "type": "Terminate",
                  "inputs": {
                    "runStatus": "Failed",
                    "runError": {
                      "code": "500",
                      "message": "One or more HTTP actions to fetch Audit Log events failed"
                    }
                  },
                  "runAfter": {
                    "Update_Last_Run_Fail_2": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "9e5a2a18-dba2-47a1-96d5-3356f4348e5a"
                  }
                }
              },
              "else": {
                "actions": {
                  "Get_ID_Pass": {
                    "type": "OpenApiConnection",
                    "inputs": {
                      "parameters": {
                        "entityName": "admin_coesolutionmetadatas",
                        "$select": "admin_coesolutionmetadataid",
                        "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                        "$top": 1
                      },
                      "host": {
                        "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                        "operationId": "ListRecords",
                        "connectionName": "shared_commondataserviceforapps"
                      }
                    },
                    "metadata": {
                      "operationMetadataId": "f4f314b6-89d3-4056-af1c-73115e7d6bd1"
                    }
                  },
                  "Update_Last_Run_Successful": {
                    "type": "OpenApiConnection",
                    "inputs": {
                      "parameters": {
                        "entityName": "admin_coesolutionmetadatas",
                        "recordId": "@first(outputs('Get_ID_Pass')?['body/value'])?['admin_coesolutionmetadataid']",
                        "item/admin_lastrun": "@utcNow()",
                        "item/admin_lastrunpassed": true
                      },
                      "host": {
                        "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                        "operationId": "UpdateRecord",
                        "connectionName": "shared_commondataserviceforapps"
                      }
                    },
                    "runAfter": {
                      "Get_ID_Pass": [
                        "Succeeded"
                      ]
                    },
                    "metadata": {
                      "operationMetadataId": "78ef70e5-7f67-4737-9a02-8533f12caa19"
                    }
                  },
                  "Catch_-_not_ready_to_take_last_run_date": {
                    "type": "Compose",
                    "inputs": "Catch - not ready to take last run date",
                    "runAfter": {
                      "Update_Last_Run_Successful": [
                        "Failed"
                      ]
                    },
                    "metadata": {
                      "operationMetadataId": "f88cdefe-c402-49d7-8f4a-934475e6f741"
                    }
                  }
                }
              },
              "metadata": {
                "operationMetadataId": "8f5e96b0-d301-40ac-a19e-16dd47bea38d"
              }
            }
          },
          "runAfter": {
            "Error_Handling": [
              "Skipped"
            ]
          },
          "metadata": {
            "operationMetadataId": "5c140442-d939-4ca4-8ec8-d1ee2bed4a81"
          }
        },
        "AuditLogQueryID": {
          "type": "InitializeVariable",
          "description": "Audit Log query ID returned by the POST call to create new query. Used to get actual event log records after the query is completed",
          "inputs": {
            "variables": [
              {
                "name": "AuditLogQueryID",
                "type": "string"
              }
            ]
          },
          "runAfter": {
            "Initialize_Secret_AzureType_to_true": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "4d160935-72bc-47ce-8946-bca03a519c8d"
          }
        },
        "AuditLogQueryRecordsURL": {
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "AuditLogQueryRecordsURL",
                "type": "string",
                "value": "@{null}"
              }
            ]
          },
          "runAfter": {
            "AuditLogQueryID": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "97b3b8ca-3592-48bd-86e4-0579886a9c93"
          }
        },
        "minutes_back": {
          "type": "Compose",
          "inputs": "@mul(-1, min(60, parameters('Audit Logs - Minutes to Look Back (admin_AuditLogsMinutestoLookBack)')))",
          "runAfter": {
            "Compose": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "a66d52c8-2d2b-4306-a84a-a46bacf6af08"
          }
        },
        "start_time_minutes_back": {
          "type": "Compose",
          "inputs": "@mul(-1, add(max(60, parameters('Audit Logs - End Time Minutes Ago (admin_AuditLogsEndTimeMinutesAgo)')), parameters('Audit Logs - Minutes to Look Back (admin_AuditLogsMinutestoLookBack)')))\r\n",
          "runAfter": {
            "minutes_back": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "cb726b6d-9e7f-4ec8-acfa-b7143a82da11"
          }
        },
        "end_time_minutes_back": {
          "type": "Compose",
          "inputs": "@mul(-1, parameters('Audit Logs - End Time Minutes Ago (admin_AuditLogsEndTimeMinutesAgo)'))",
          "runAfter": {
            "start_time_minutes_back": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "a358ba94-9e4f-472b-9afd-070d57261bf9"
          }
        },
        "Compose": {
          "type": "Compose",
          "inputs": "@utcNow()",
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "a2c6ca40-ae7f-40f3-9c08-b118ca2d68d8"
          }
        }
      },
      "description": "Gather audit logs for canvas app operations directly through http rather than through the custom connector. Use only for sync flow architecture, not for BYODL"
    },
    "templateName": null
  },
  "schemaVersion": "1.0.0.0"
}