{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "admin_CoECoreDataverse2"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      },
      "shared_powerplatformforadmins": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "admin_CoECorePowerPlatformforAdmins"
        },
        "api": {
          "name": "shared_powerplatformforadmins"
        }
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)": {
          "defaultValue": "https://flow.microsoft.com/manage/environments/",
          "type": "String",
          "metadata": {
            "schemaName": "admin_PowerAutomateEnvironmentVariable",
            "description": "Inventory - REQUIRED. Environment, including geographic location, for Power Automate - Ex for commercial: https://flow.microsoft.com/manage/environments/"
          }
        },
        "DelayInventory (admin_DelayInventory)": {
          "defaultValue": false,
          "type": "Bool",
          "metadata": {
            "schemaName": "admin_DelayInventory",
            "description": "Inventory - If Yes, will run a delay step to assist with the Dataverse health. Only turn to No for debugging. "
          }
        }
      },
      "staticResults": {
        "List_Environments_as_Admin0": {
          "status": "Succeeded",
          "outputs": {
            "headers": {},
            "statusCode": "OK"
          }
        }
      },
      "triggers": {
        "Recurrence": {
          "recurrence": {
            "frequency": "Week",
            "interval": 1,
            "schedule": {
              "weekDays": [
                "Sunday"
              ]
            }
          },
          "metadata": {
            "operationMetadataId": "dfea51a6-5983-4b22-8184-81d82afc33d5"
          },
          "type": "Recurrence"
        }
      },
      "actions": {
        "Error_Handling": {
          "actions": {
            "Create_a_new_record_-_Sync_Flow_Errors": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "87961ff0-e261-4890-9ab9-a53f88fe0de5"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "CreateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_syncflowerrorses",
                  "item/admin_name": "@workflow()?['tags']['flowDisplayName']",
                  "item/admin_flowinstanceurl": "@concat(parameters('Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)'), workflow()?['tags']['environmentName'], '/flows/', workflow()?['name'], '/runs/', workflow()?['run']['name'])"
                },
                "authentication": "@parameters('$authentication')",
                "retryPolicy": {
                  "type": "exponential",
                  "count": 10,
                  "interval": "PT10S"
                }
              }
            },
            "Terminate": {
              "runAfter": {
                "Update_Last_Run_Fail": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "9e5a2a18-dba2-47a1-96d5-3356f4348e5a"
              },
              "type": "Terminate",
              "inputs": {
                "runStatus": "Failed",
                "runError": {
                  "code": "500",
                  "message": "Get Environments Failed"
                }
              }
            },
            "Get_ID_Fail": {
              "runAfter": {
                "Create_a_new_record_-_Sync_Flow_Errors": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "47329bf2-8aac-400d-9778-a793b4f1180f"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "$select": "admin_coesolutionmetadataid",
                  "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                  "$top": 1
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Update_Last_Run_Fail": {
              "runAfter": {
                "Get_ID_Fail": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "c63eb7cc-6101-4567-b520-a4a8881264e9"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "recordId": "@first(outputs('Get_ID_Fail')?['body/value'])?['admin_coesolutionmetadataid']",
                  "item/admin_lastrun": "@utcNow()",
                  "item/admin_lastrunpassed": false
                },
                "authentication": "@parameters('$authentication')"
              }
            }
          },
          "runAfter": {
            "Run_child_helpers_for_each_environment": [
              "Failed"
            ]
          },
          "metadata": {
            "operationMetadataId": "38ae684e-622d-42ea-abd2-ee571aee3a5f"
          },
          "type": "Scope"
        },
        "Update_last_run_as_pass": {
          "actions": {
            "Update_Last_Run_Successful": {
              "runAfter": {
                "Get_ID_Pass": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "78ef70e5-7f67-4737-9a02-8533f12caa19"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "recordId": "@first(outputs('Get_ID_Pass')?['body/value'])?['admin_coesolutionmetadataid']",
                  "item/admin_lastrun": "@utcNow()",
                  "item/admin_lastrunpassed": true
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Get_ID_Pass": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "f4f314b6-89d3-4056-af1c-73115e7d6bd1"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "$select": "admin_coesolutionmetadataid",
                  "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                  "$top": 1
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Catch_-_not_ready_to_take_last_run_date": {
              "runAfter": {
                "Update_Last_Run_Successful": [
                  "Failed"
                ]
              },
              "metadata": {
                "operationMetadataId": "f88cdefe-c402-49d7-8f4a-934475e6f741"
              },
              "type": "Compose",
              "inputs": "Catch - not ready to take last run date"
            }
          },
          "runAfter": {
            "Error_Handling": [
              "Skipped"
            ]
          },
          "metadata": {
            "operationMetadataId": "5c140442-d939-4ca4-8ec8-d1ee2bed4a81"
          },
          "type": "Scope"
        },
        "Run_child_helpers_for_each_environment": {
          "actions": {
            "List_Environments_as_Admin": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "73f89423-4c2d-4bc9-be74-44b354fa5852"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_powerplatformforadmins",
                  "operationId": "Get-AdminEnvironment",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_powerplatformforadmins"
                },
                "parameters": {
                  "api-version": "2021-03-01",
                  "$expand": "properties.capacity,properties.addons"
                },
                "authentication": "@parameters('$authentication')",
                "retryPolicy": {
                  "type": "exponential",
                  "count": 10,
                  "interval": "PT10S"
                }
              },
              "runtimeConfiguration": {
                "paginationPolicy": {
                  "minimumItemCount": 100000
                },
                "staticResult": {
                  "staticResultOptions": "Disabled",
                  "name": "List_Environments_as_Admin0"
                }
              }
            },
            "Walk_Each_Environment": {
              "foreach": "@outputs('List_Environments_as_Admin')?['body/value']",
              "actions": {
                "Get_Environment_": {
                  "actions": {
                    "Envt_ID": {
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "0fb34ded-674a-4a4c-a5e6-cee89054b3b9"
                      },
                      "type": "Compose",
                      "inputs": "@substring(items('Walk_Each_Environment')?['name'], sub(length(items('Walk_Each_Environment')?['name']), 36), 36)"
                    },
                    "Get_Envt_from_CoE": {
                      "runAfter": {
                        "Envt_ID": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "54b52490-e83e-4e1b-a4ed-07a47a158198"
                      },
                      "type": "OpenApiConnection",
                      "inputs": {
                        "host": {
                          "connectionName": "shared_commondataserviceforapps",
                          "operationId": "ListRecords",
                          "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                        },
                        "parameters": {
                          "entityName": "admin_environments",
                          "$select": "admin_environmentid,  admin_excusefrominventory, admin_environmentcdsinstanceurl, admin_hascds",
                          "$filter": "admin_environmentid eq @{outputs('Envt_ID')}"
                        },
                        "authentication": "@parameters('$authentication')",
                        "retryPolicy": {
                          "type": "exponential",
                          "count": 10,
                          "interval": "PT10S"
                        }
                      }
                    }
                  },
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "68d4ddc0-5ed6-42fc-b4be-d871e15fee07"
                  },
                  "type": "Scope"
                },
                "Proceed_if_Envt_already_in_CoE_and_not_excused_from_inventory": {
                  "actions": {
                    "Call_relevent_helpers_in_parallel": {
                      "runAfter": {},
                      "metadata": {
                        "operationMetadataId": "ef779d5e-69d4-47f6-aac2-ee5a7a5431b2"
                      },
                      "type": "Compose",
                      "inputs": "Call relevent helpers in parallel"
                    },
                    "Call_Environment_Capacity_Cleanup_Helper": {
                      "runAfter": {
                        "Call_relevent_helpers_in_parallel": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "7bc21aca-bd75-42ca-95c7-c5012bb79a40"
                      },
                      "type": "Workflow",
                      "inputs": {
                        "host": {
                          "workflowReferenceName": "e08badc8-d7b6-ee11-a569-000d3a341fff"
                        },
                        "body": {
                          "text": "@outputs('Envt_ID')",
                          "text_1": "@items('Walk_Each_Environment')?['properties/environmentSku']",
                          "text_2": "@coalesce(if(equals(length(items('Walk_Each_Environment')?['properties/capacity']), 0), '[]', string(items('Walk_Each_Environment')?['properties/capacity'])), '[]')",
                          "text_3": "@coalesce(if(equals(length(items('Walk_Each_Environment')?['properties/addons']), 0), '[]', string(items('Walk_Each_Environment')?['properties/addons'])), '[]')"
                        }
                      }
                    },
                    "Call_Solution_Object_Cleanup_Helper": {
                      "runAfter": {
                        "Call_relevent_helpers_in_parallel": [
                          "Succeeded"
                        ]
                      },
                      "metadata": {
                        "operationMetadataId": "274bf00c-b06d-4442-a04b-da249ca1cca2"
                      },
                      "type": "Workflow",
                      "inputs": {
                        "host": {
                          "workflowReferenceName": "8a51e503-8eb5-ee11-a569-000d3a3411d9"
                        },
                        "body": {
                          "text": "@outputs('Envt_ID')",
                          "text_1": "@first(outputs('Get_Envt_from_CoE')?['body/value'])?['admin_environmentcdsinstanceurl']"
                        }
                      }
                    }
                  },
                  "runAfter": {
                    "Get_Environment_": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "greater": [
                          "@length(outputs('Get_Envt_from_CoE')?['body/value'])",
                          0
                        ]
                      },
                      {
                        "not": {
                          "equals": [
                            "@first(outputs('Get_Envt_from_CoE')?['body/value'])?['admin_excusefrominventory']",
                            "@null"
                          ]
                        }
                      },
                      {
                        "not": {
                          "equals": [
                            "@first(outputs('Get_Envt_from_CoE')?['body/value'])?['admin_excusefrominventory']",
                            "@true"
                          ]
                        }
                      },
                      {
                        "equals": [
                          "@first(outputs('Get_Envt_from_CoE')?['body/value'])?['admin_hascds']",
                          "@true"
                        ]
                      }
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "918d8285-af37-4498-88ce-d4754fbcf7d3"
                  },
                  "type": "If"
                }
              },
              "runAfter": {
                "List_Environments_as_Admin": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "b2b7ab70-1460-4ddd-925e-b892f23e368a"
              },
              "type": "Foreach",
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 50
                }
              }
            }
          },
          "runAfter": {
            "Delay_Inventory": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "e635a8c3-a851-483d-b58f-6825ac68c325"
          },
          "type": "Scope"
        },
        "Delay_Inventory": {
          "actions": {
            "Delay_1_to_300_minutes": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "f37a4a9d-c5b4-41ed-8484-636dca60ee81"
              },
              "type": "Wait",
              "inputs": {
                "interval": {
                  "count": "@rand(1, 300)",
                  "unit": "Minute"
                }
              },
              "description": "For Dataverse service health, we will randomize the start time of these flows for tenants within a 5 hour range"
            }
          },
          "runAfter": {},
          "expression": {
            "equals": [
              "@parameters('DelayInventory (admin_DelayInventory)')",
              true
            ]
          },
          "metadata": {
            "operationMetadataId": "49b3d120-232d-4694-b373-a97ecde35cc4"
          },
          "type": "If"
        }
      },
      "outputs": {}
    },
    "templateName": ""
  },
  "schemaVersion": "1.0.0.0"
}