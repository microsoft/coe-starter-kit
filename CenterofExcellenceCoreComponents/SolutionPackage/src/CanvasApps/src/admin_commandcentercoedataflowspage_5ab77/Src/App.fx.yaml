App As appinfo:
    BackEnabled: =false
    OnStart: |
        =Concurrent(
            Set(
                AppTheme,
                {
                    palette: {
                        themePrimary: ColorValue("#0078d4"),
                        themeLighterAlt: ColorValue("#eff6fc"),
                        themeLighter: ColorValue("#deecf9"),
                        themeLight: ColorValue("#c7e0f4"),
                        themeTertiary: ColorValue("#71afe5"),
                        themeSecondary: ColorValue("#2b88d8"),
                        themeDarkAlt: ColorValue("#106ebe"),
                        themeDark: ColorValue("#005a9e"),
                        themeDarker: ColorValue("#004578"),
                        neutralLighterAlt: ColorValue("#faf9f8"),
                        neutralLighter: ColorValue("#f3f2f1"),
                        neutralLight: ColorValue("#edebe9"),
                        neutralQuaternaryAlt: ColorValue("#e1dfdd"),
                        neutralQuaternary: ColorValue("#d0d0d0"),
                        neutralTertiaryAlt: ColorValue("#c8c6c4"),
                        neutralTertiary: ColorValue("#a19f9d"),
                        neutralSecondary: ColorValue("#605e5c"),
                        neutralPrimaryAlt: ColorValue("#3b3a39"),
                        neutralPrimary: ColorValue("#323130"),
                        neutralDark: ColorValue("#201f1e"),
                        black: ColorValue("#000000"),
                        white: ColorValue("#ffffff")
                    }
                }
            ),
            Set(
                ColorYes,
                "rgb(223, 246, 221)"
            ),
            Set(
                ColorYesDark,
                "rgb(16, 124, 16)"
            ),
            Set(
                ColorNo,
                "rgb(253, 231, 233)"
            ),
            Set(
                ColorNoDark,
                "rgb(168, 0, 0)"
            ),
            Set(
                ErrorButton,
                "data:image/svg+xml," & EncodeUrl(
                    "<svg xmlns='http://www.w3.org/2000/svg' width='25' height='25' viewBox='0 0 25 25'>
          <circle cx='8' cy='8' r='8' fill='#a4262c' /> <circle cx='8' cy='11.445' r='1.239' fill='#fff' /><path d='M8.185,3.886h-1.3L7.22,9.632H8.78l.331-5.746Z' fill='#fff' />
        </svg>"
                )
            )
        );
        Set(
            AppThemeJson,
            JSON(AppTheme)
        );
        Clear(col_coeDataflows);
        Collect(
            col_coeDataflows,
            First(
                Sort(
                    Filter(
                        DataflowRefreshHistories,
                        "CoE BYODL Makers" in DataflowName
                    ),
                    EndTime,
                    SortOrder.Descending
                )
            )
        );
        Collect(
            col_coeDataflows,
            First(
                Sort(
                    Filter(
                        DataflowRefreshHistories,
                        "CoE BYODL Apps" in DataflowName
                    ),
                    EndTime,
                    SortOrder.Descending
                )
            )
        );
        Collect(
            col_coeDataflows,
            First(
                Sort(
                    Filter(
                        DataflowRefreshHistories,
                        "CoE BYODL Flows" in DataflowName
                    ),
                    EndTime,
                    SortOrder.Descending
                )
            )
        );
        Collect(
            col_coeDataflows,
            First(
                Sort(
                    Filter(
                        DataflowRefreshHistories,
                        "CoE BYODL Environments" in DataflowName
                    ),
                    EndTime,
                    SortOrder.Descending
                )
            )
        );
        Collect(
            col_coeDataflows,
            First(
                Sort(
                    Filter(
                        DataflowRefreshHistories,
                        "CoE BYODL Model Driven Apps" in DataflowName
                    ),
                    EndTime,
                    SortOrder.Descending
                )
            )
        );
        Collect(
            col_coeDataflows,
            First(
                Sort(
                    Filter(
                        DataflowRefreshHistories,
                        "CoE BYODL Apps Connection" in DataflowName
                    ),
                    EndTime,
                    SortOrder.Descending
                )
            )
        );
        Collect(
            col_coeDataflows,
            First(
                Sort(
                    Filter(
                        DataflowRefreshHistories,
                        "CoE BYODL Apps Last Launched Date" in DataflowName
                    ),
                    EndTime,
                    SortOrder.Descending
                )
            )
        );
        Collect(
            col_coeDataflows,
            First(
                Sort(
                    Filter(
                        DataflowRefreshHistories,
                        "CoE BYODL Flows Connection" in DataflowName
                    ),
                    EndTime,
                    SortOrder.Descending
                )
            )
        );
        Collect(
            col_coeDataflows,
            First(
                Sort(
                    Filter(
                        DataflowRefreshHistories,
                        "CoE BYODL Flows Last Run Date" in DataflowName
                    ),
                    EndTime,
                    SortOrder.Descending
                )
            )
        );
        ClearCollect(
            coeAddedDataflows,
            AddColumns(
                col_coeDataflows,
                "theLastRunPassedTagColor",
                If(
                    RefreshStatus = "Success",
                    ColorYes,
                    ColorNo
                ),
                "theLastRunPassedTagBorderColor",
                If(
                    RefreshStatus = "Success",
                    ColorYesDark,
                    ColorNoDark
                ),
                "dataflowName",
                DataflowName,
                "refreshTime",
                EndTime,
                "open",
                "Open dataflow"
            )
        );
        Set(
            EnvVarDefnID,
            LookUp(
                'Environment Variable Definitions',
                'Schema Name' = "admin_PowerAppEnvironmentVariable"
            ).'Environment Variable Definition'
        );
        Set(
            theAppMakerURL,
            First(
                Filter(
                    'Environment Variable Values',
                    'Environment Variable Definition'.'Environment Variable Definition' = GUID(EnvVarDefnID)
                )
            ).Value
        );
        If(
            IsBlank(theAppMakerURL),
            Set(
                theAppMakerURL,
                LookUp(
                    'Environment Variable Definitions',
                    'Environment Variable Definition' = GUID(EnvVarDefnID)
                ).'Default Value'
            )
        );
        Set(
            EnvVarDefnID,
            LookUp(
                'Environment Variable Definitions',
                'Schema Name' = "admin_InventoryandTelemetryinAzureDataStorageaccount"
            ).'Environment Variable Definition'
        );
        Set(
            theInventorySelection,
            First(
                Filter(
                    'Environment Variable Values',
                    'Environment Variable Definition'.'Environment Variable Definition' = GUID(EnvVarDefnID)
                )
            ).Value
        );
        If(
            IsBlank(theInventorySelection),
            Set(
                theAppMakerURL,
                LookUp(
                    'Environment Variable Definitions',
                    'Environment Variable Definition' = GUID(EnvVarDefnID)
                ).'Default Value'
            )
        );
        Set(
            varCoeEnvironment,
           'SetupWizard>GetCurrentEnvironment'.Run().currentenv
        );

    Host As hostControl.DefaultHostControlVariant:
        OnCancel: =false
        OnEdit: =false
        OnNew: =false
        OnSave: =false
        OnView: =false

