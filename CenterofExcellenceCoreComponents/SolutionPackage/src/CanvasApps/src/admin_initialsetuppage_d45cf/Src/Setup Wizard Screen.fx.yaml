"'Setup Wizard Screen' As screen":
    LoadingSpinnerColor: =RGBA(0, 120, 212, 1)
    OnVisible: =Set(upgradeStep,1)

    conMain As groupContainer.verticalAutoLayoutContainer:
        Height: =Parent.Height
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        Width: =Parent.Width
        X: =0+0
        Y: =0+0
        ZIndex: =1

        conMainHeader As groupContainer.horizontalAutoLayoutContainer:
            Fill: =RGBA(255, 255, 255, 1)
            FillPortions: =0
            Height: =100
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutJustifyContent: =LayoutJustifyContent.Center
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =24
            PaddingRight: =Self.PaddingLeft
            ZIndex: =1

            conMainHeaderLeft As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                Height: =100
                LayoutDirection: =LayoutDirection.Vertical
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                ZIndex: =2

                lblMainHeader As Label:
                    Alignment: =Align.Left
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =20
                    FontWeight: =FontWeight.Semibold
                    Height: =40
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    Text: ="Center of Excellence " & If(!IsBlank(LookUp(Solutions, uniquename = "CenterofExcellenceCoreComponents").'Updated On'), "Upgrade", "Setup") & " Wizard"
                    Width: =512
                    X: =0
                    Y: =0
                    ZIndex: =1

                lblMainSubheading As Label:
                    AlignInContainer: =AlignInContainer.Stretch
                    Alignment: =Align.Left
                    DisplayMode: =DisplayMode.Edit
                    Height: =24
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    Text: ="A setup wizard provides a guided step by step experience to configure the CoE Starter Kit."
                    VerticalAlignment: ="middle"
                    Width: =320
                    X: =40
                    Y: =40
                    ZIndex: =2

            "FluentIcon As 'Fluent Icon (1.0.20)'":
                DisplayMode: =DisplayMode.Edit
                FontColor: =AppTheme.palette.themePrimary
                FontSize: =18
                Height: =48
                HoverFontColor: =AppTheme.palette.themePrimary
                HoverIconColor: =AppTheme.palette.themePrimary
                IconColor: =AppTheme.palette.themePrimary
                IconName: ="Unknown"
                IconType: ='PowerCAT.Icon.IconType'.ActionButton
                LayoutMinHeight: =200
                LayoutMinWidth: =200
                OnChange: |-
                    =UpdateContext({showHelp: true})
                Text: ="Help"
                TextAlignment: ='PowerCAT.Icon.TextAlignment'.Center
                Tooltip: ="Help and Documentation"
                Width: =100
                X: =40
                Y: =40
                ZIndex: =3

        Rectangle2 As rectangle:
            AlignInContainer: =AlignInContainer.Stretch
            BorderColor: =RGBA(166, 166, 166, 1)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            DisabledFill: =RGBA(166, 166, 166, 1)
            Fill: =ColorValue(AppTheme.palette.neutralLight)
            FocusedBorderColor: =RGBA(0, 120, 212, 1)
            Height: =1
            HoverFill: =RGBA(0, 120, 212, 1)
            PressedFill: =RGBA(0, 120, 212, 1)
            ZIndex: =2

        conMainBody As groupContainer.horizontalAutoLayoutContainer:
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            ZIndex: =3

            conMainSteps As groupContainer.verticalAutoLayoutContainer:
                FillPortions: =0
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowY: =LayoutOverflow.Scroll
                PaddingLeft: =conMainHeader.PaddingLeft
                PaddingRight: =Self.PaddingLeft
                PaddingTop: =24
                Width: =300
                ZIndex: =1

                "SubwayNav1 As 'SubwayNav (1.0.20) Preview'.pcfdataset":
                    AccessibilityLabel: =""
                    ApplyDarkTheme: =false
                    DisplayMode: =DisplayMode.Disabled
                    Height: =200
                    InputEvent: =""
                    Items: |-
                        =AddColumns(
                            colSetupSteps,
                            "ItemState",
                            If(
                                ItemKey=Text(configStep),"Current",
                                ItemKey exactin colStepsCompleted.Value,"Completed",
                                ""
                            )
                        )
                    LayoutMinHeight: =200
                    LayoutMinWidth: =200
                    Theme: =AppThemeJson
                    Width: =200
                    WizardCompleteorError: ='PowerCAT.SubwayNav.WizardCompleteorError'.None
                    X: =40
                    Y: =40
                    ZIndex: =1

                    ItemKey1 As pcfDataField.textualColumn:
                        FieldDisplayName: ="ItemKey"
                        FieldName: ="ItemKey"
                        FieldType: ="s"
                        FieldVariantName: ="textualColumn"
                        Order: =1
                        ZIndex: =46

                    ItemDescription1 As pcfDataField.textualColumn:
                        FieldDisplayName: ="ItemDescription"
                        FieldName: ="ItemDescription"
                        FieldType: ="s"
                        FieldVariantName: ="textualColumn"
                        Order: =2
                        ZIndex: =47

                    ItemLabel1 As pcfDataField.textualColumn:
                        FieldDisplayName: ="ItemLabel"
                        FieldName: ="ItemLabel"
                        FieldType: ="s"
                        FieldVariantName: ="textualColumn"
                        Order: =3
                        ZIndex: =48

                    ItemState1 As pcfDataField.textualColumn:
                        FieldDisplayName: ="ItemState"
                        FieldName: ="ItemState"
                        FieldType: ="s"
                        FieldVariantName: ="textualColumn"
                        Order: =4
                        ZIndex: =49

                    ParentItemKey1 As pcfDataField.textualColumn:
                        FieldDisplayName: ="ParentItemKey"
                        FieldName: ="ParentItemKey"
                        FieldType: ="s"
                        FieldVariantName: ="textualColumn"
                        Order: =5
                        ZIndex: =50

            Rectangle2_1 As rectangle:
                AlignInContainer: =AlignInContainer.Stretch
                BorderColor: =RGBA(166, 166, 166, 1)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                DisabledFill: =RGBA(166, 166, 166, 1)
                Fill: =ColorValue(AppTheme.palette.neutralLight)
                FocusedBorderColor: =RGBA(0, 120, 212, 1)
                Height: =1
                HoverFill: =RGBA(0, 120, 212, 1)
                PressedFill: =RGBA(0, 120, 212, 1)
                Width: =1
                ZIndex: =2

            conMainDetails As groupContainer.verticalAutoLayoutContainer:
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingRight: =Self.PaddingLeft
                PaddingTop: =16
                ZIndex: =3

                lblStepName As Label:
                    AlignInContainer: =AlignInContainer.Stretch
                    Alignment: =Align.Left
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =16
                    FontWeight: =FontWeight.Semibold
                    Height: =40
                    LayoutMinHeight: =32
                    LayoutMinWidth: =640
                    PaddingStart: =24
                    Text: =LookUp(colSetupSteps, ItemKey = Text(configStep)).ItemLabel
                    Width: =640
                    X: =0
                    Y: =0
                    ZIndex: =1

                lblStepDescription As htmlViewer:
                    AlignInContainer: =AlignInContainer.Stretch
                    AutoHeight: =true
                    Font: =Font.'Segoe UI'
                    HtmlText: =LookUp(colSetupSteps, ItemKey = Text(configStep)).ItemDescription
                    LayoutMinWidth: =100
                    PaddingLeft: =24
                    PaddingRight: =Self.PaddingLeft
                    Size: =10.5
                    Width: =640
                    X: =40
                    Y: =40
                    ZIndex: =2

                conContentAll As groupContainer.horizontalAutoLayoutContainer:
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =24
                    PaddingRight: =Self.PaddingLeft
                    PaddingTop: =24
                    ZIndex: =4

                    conContentPrereqs As groupContainer.verticalAutoLayoutContainer:
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Visible: =configStep=1
                        ZIndex: =1

                        "shimmerPreRequ As 'Fluent Shimmer (1.0.20) Preview'.pcfdataset":
                            DisplayMode: =DisplayMode.Edit
                            Height: =250
                            Items: |-
                                =//shimmer to show whilst prerequisites are loading
                                If(
                                    !IsBlank(myUser.displayName),
                                    AddColumns(
                                        Table(
                                            {
                                                Value: "Microsoft Power Platform service admin, global tenant admin, or Dynamics 365 service admin.",
                                                Status: "Verify manually",
                                                IconText: "Verify manually",
                                                Tooltip: "We can not check this automatically. Please verify yourself before proceeding.",
                                                URL: "https://portal.azure.com/#view/Microsoft_AAD_UsersAndTenants/UserProfileMenuBlade/~/AdministrativeRole/userId/" & myUser.id
                                            },
                                            {
                                                Value: "Power Apps Per User (non-trial) license",
                                                Status: If(myUserDetails.haspowerapps = "Yes", "Success", "Fail"),
                                                URL: "https://ms.portal.azure.com/#view/Microsoft_AAD_UsersAndTenants/UserProfileMenuBlade/~/Licenses/userId/" & myUser.id
                                            },
                                            {
                                                Value: "Microsoft 365 license",
                                                Status: "Success", // assumption that because they established Teams and Outlook connector during import this is good
                                                URL: "https://ms.portal.azure.com/#view/Microsoft_AAD_UsersAndTenants/UserProfileMenuBlade/~/Licenses/userId/" & myUser.id
                                            },
                                            {
                                                Value: "Power Automate Per User (non-trial) license",
                                                Status: If(myUserDetails.haspowerautomate = "Yes", "Success", "Fail"),
                                                URL: "https://ms.portal.azure.com/#view/Microsoft_AAD_UsersAndTenants/UserProfileMenuBlade/~/Licenses/userId/" & myUser.id
                                            },
                                            {
                                                Value: "eMail enabled",
                                                Status: If(IsBlank(myUser.mail), "Fail", "Success" ),
                                                URL: ""
                                            }
                                        ),
                                        "StatusIcon",
                                        Switch(
                                            Status,
                                            "Success",
                                            //"icon:CompletedSolid",
                                            /*"data:image/svg+xml," &
                                            EncodeUrl("<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 2048'>
                                  <path d='M1024 0q141 0 272 36t244 104 207 160 161 207 103 245 37 272q0 141-36 272t-104 244-160 207-207 161-245 103-272 37q-141 0-272-36t-244-104-207-160-161-207-103-245-37-272q0-141 36-272t104-244 160-207 207-161T752 37t272-37zm603 685l-136-136-659 659-275-275-136 136 411 411 795-795z' fill='#107c10'/>
                                </svg>"),*/
                                            "data:image/svg+xml," &
                                            EncodeUrl("<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4096 4096'>
                                  <path d='M1491 595l90 90-749 749-365-365 90-90 275 275 659-659zM1024 0q141 0 272 36t245 103 207 160 160 208 103 245 37 272q0 141-36 272t-103 245-160 207-208 160-245 103-272 37q-141 0-272-36t-245-103-207-160-160-208-103-244-37-273q0-141 36-272t103-245 160-207 208-160T751 37t273-37zm0 1920q123 0 237-32t214-90 182-141 140-181 91-214 32-238q0-123-32-237t-90-214-141-182-181-140-214-91-238-32q-123 0-237 32t-214 90-182 141-140 181-91 214-32 238q0 123 32 237t90 214 141 182 181 140 214 91 238 32z' fill='#107c10'/>
                                </svg>"),
                                            "Fail",
                                            //"icon:Error",
                                            "data:image/svg+xml," &
                                            EncodeUrl("<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4096 4096'>
                                  <path d='M960 0q133 0 255 34t230 96 194 150 150 195 97 229 34 256q0 133-34 255t-96 230-150 194-195 150-229 97-256 34q-133 0-255-34t-230-96-194-150-150-195-97-229T0 960q0-133 34-255t96-230 150-194 195-150 229-97T960 0zm0 1792q114 0 220-30t199-84 169-130 130-168 84-199 30-221q0-114-30-220t-84-199-130-169-168-130-199-84-221-30q-115 0-221 30t-198 84-169 130-130 168-84 199-30 221q0 114 30 220t84 199 130 169 168 130 199 84 221 30zM896 512h128v640H896V512zm0 768h128v128H896v-128z' />
                                </svg>"),
                                            "Verify manually", 
                                            //"icon:Warning",
                                            "data:image/svg+xml," &
                                            EncodeUrl("<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4096 4096'>
                                  <path d='M1920 1920H0L960 0l960 1920zM207 1792h1506L960 286 207 1792zm817-1024v640H896V768h128zm-128 768h128v128H896v-128z' fill='#a80000'/>
                                </svg>")
                                        )
                                    )
                                )
                            LayoutMinHeight: =200
                            LayoutMinWidth: =200
                            Visible: =loadPrequVisible
                            Width: =
                            X: =0
                            Y: =0
                            ZIndex: =1

                        "FluentDetailsList2 As 'Fluent Details List (1.0.20)'.pcfdataset":
                            AlignInContainer: =AlignInContainer.Stretch
                            columns_Items: |-
                                =Table(
                                    {
                                        ColName: "Value",
                                        ColDisplayName: "Requirement",
                                        ColCellType:"text",
                                        ColWidth: 512,
                                        ColImageWidth: 60,
                                        ColImagePadding: 8,
                                        ColVerticalAlign: "Top"
                                    },
                                    {
                                        ColName: "StatusIcon",
                                        ColDisplayName: "",
                                        ColCellType:"clickableimage",
                                        ColWidth: 36
                                    },
                                    {
                                        ColName: "Status",
                                        ColDisplayName: "Status",
                                        ColCellType:"text",
                                        ColWidth: 100,
                                        ColImageWidth: 60,
                                        ColImagePadding: 8,
                                        ColVerticalAlign: "Top"
                                    }
                                )
                            DisplayMode: =DisplayMode.Edit
                            FillPortions: =1
                            Height: =200
                            Items: |-
                                =//Defining what the pre-requisites are manually to check on the first page before proceeding
                                If(
                                    !IsBlank(myUser.displayName),
                                    AddColumns(
                                        Table(
                                            {
                                                Value: "Microsoft Power Platform service admin, global tenant admin, or Dynamics 365 service admin.",
                                                Status: "Verify manually",
                                                IconText: "Verify manually",
                                                Tooltip: "We can not check this automatically. Please verify yourself before proceeding.",
                                                URL: "https://portal.azure.com/#view/Microsoft_AAD_UsersAndTenants/UserProfileMenuBlade/~/AdministrativeRole/userId/" & myUser.id
                                            },
                                            {
                                                Value: "Power Apps Per User (non-trial) license",
                                                Status: If(myUserDetails.haspowerapps = "Yes", "Success", "Fail"),
                                                URL: "https://ms.portal.azure.com/#view/Microsoft_AAD_UsersAndTenants/UserProfileMenuBlade/~/Licenses/userId/" & myUser.id
                                            },
                                            {
                                                Value: "Microsoft 365 license",
                                                Status: "Success", // assumption that because they established Teams and Outlook connector during import this is good
                                                URL: "https://ms.portal.azure.com/#view/Microsoft_AAD_UsersAndTenants/UserProfileMenuBlade/~/Licenses/userId/" & myUser.id
                                            },
                                            {
                                                Value: "Power Automate Per User (non-trial) license",
                                                Status: If(myUserDetails.haspowerautomate = "Yes", "Success", "Fail"),
                                                URL: "https://ms.portal.azure.com/#view/Microsoft_AAD_UsersAndTenants/UserProfileMenuBlade/~/Licenses/userId/" & myUser.id
                                            },
                                            {
                                                Value: "eMail enabled",
                                                Status: If(IsBlank(myUser.mail), "Fail", "Success" ),
                                                URL: ""
                                            }
                                        ),
                                        "StatusIcon",
                                        Switch(
                                            Status,
                                            "Success",
                                            //"icon:CompletedSolid",
                                            /*"data:image/svg+xml," &
                                            EncodeUrl("<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 2048'>
                                  <path d='M1024 0q141 0 272 36t244 104 207 160 161 207 103 245 37 272q0 141-36 272t-104 244-160 207-207 161-245 103-272 37q-141 0-272-36t-244-104-207-160-161-207-103-245-37-272q0-141 36-272t104-244 160-207 207-161T752 37t272-37zm603 685l-136-136-659 659-275-275-136 136 411 411 795-795z' fill='#107c10'/>
                                </svg>"),*/
                                            "data:image/svg+xml," &
                                            EncodeUrl("<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4096 4096'>
                                  <path d='M1491 595l90 90-749 749-365-365 90-90 275 275 659-659zM1024 0q141 0 272 36t245 103 207 160 160 208 103 245 37 272q0 141-36 272t-103 245-160 207-208 160-245 103-272 37q-141 0-272-36t-245-103-207-160-160-208-103-244-37-273q0-141 36-272t103-245 160-207 208-160T751 37t273-37zm0 1920q123 0 237-32t214-90 182-141 140-181 91-214 32-238q0-123-32-237t-90-214-141-182-181-140-214-91-238-32q-123 0-237 32t-214 90-182 141-140 181-91 214-32 238q0 123 32 237t90 214 141 182 181 140 214 91 238 32z' fill='#107c10'/>
                                </svg>"),
                                            "Fail",
                                            //"icon:Error",
                                            "data:image/svg+xml," &
                                            EncodeUrl("<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4096 4096'>
                                  <path d='M960 0q133 0 255 34t230 96 194 150 150 195 97 229 34 256q0 133-34 255t-96 230-150 194-195 150-229 97-256 34q-133 0-255-34t-230-96-194-150-150-195-97-229T0 960q0-133 34-255t96-230 150-194 195-150 229-97T960 0zm0 1792q114 0 220-30t199-84 169-130 130-168 84-199 30-221q0-114-30-220t-84-199-130-169-168-130-199-84-221-30q-115 0-221 30t-198 84-169 130-130 168-84 199-30 221q0 114 30 220t84 199 130 169 168 130 199 84 221 30zM896 512h128v640H896V512zm0 768h128v128H896v-128z' />
                                </svg>"),
                                            "Verify manually", 
                                            //"icon:Warning",
                                            "data:image/svg+xml," &
                                            EncodeUrl("<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4096 4096'>
                                  <path d='M1920 1920H0L960 0l960 1920zM207 1792h1506L960 286 207 1792zm817-1024v640H896V768h128zm-128 768h128v128H896v-128z' fill='#a80000'/>
                                </svg>")
                                        )
                                    )
                                )
                            LayoutMinHeight: =200
                            LayoutMinWidth: =200
                            SelectionType: ='PowerCAT.FluentDetailsList.SelectionType'.None
                            Width: =200
                            X: =0
                            Y: =0
                            ZIndex: =2

                            Value4 As pcfDataField.textualColumn:
                                FieldDisplayName: ="Value"
                                FieldName: ="Value"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =1
                                ZIndex: =40

                            Status3 As pcfDataField.textualColumn:
                                FieldDisplayName: ="Status"
                                FieldName: ="Status"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =2
                                ZIndex: =41

                            StatusIcon3 As pcfDataField.textualColumn:
                                FieldDisplayName: ="StatusIcon"
                                FieldName: ="StatusIcon"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =3
                                ZIndex: =42

                    conContentComms As groupContainer.verticalAutoLayoutContainer:
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Visible: =configStep=2
                        ZIndex: =2

                        galComms As gallery.galleryVertical:
                            BorderColor: =RGBA(166, 166, 166, 1)
                            FocusedBorderColor: =RGBA(0, 120, 212, 1)
                            FocusedBorderThickness: =2
                            Items: =colCommunicate
                            Layout: =Layout.Vertical
                            LayoutMinHeight: =287
                            LayoutMinWidth: =conContentComms.Width - 50
                            TemplateSize: =conContentComms.Height - 50
                            WrapCount: =Max(1,Min(3,App.ActiveScreen.Size))
                            ZIndex: =4

                            "Elevation1 As 'Fluent Elevation (1.0.20)'":
                                Depth: ='PowerCAT.Elevation.Depth'.Depth4
                                DisplayMode: =DisplayMode.Edit
                                Height: =Parent.TemplateHeight
                                HoverDepth: ='PowerCAT.Elevation.HoverDepth'.Depth8
                                Width: =Parent.TemplateWidth-20
                                X: =0
                                Y: =0
                                ZIndex: =1

                            conCommsTile As groupContainer.verticalAutoLayoutContainer:
                                Height: =galComms.TemplateHeight
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutGap: =10
                                LayoutMode: =LayoutMode.Auto
                                PaddingBottom: =Self.PaddingLeft
                                PaddingLeft: =16
                                PaddingRight: =Self.PaddingLeft
                                PaddingTop: =Self.PaddingLeft/2
                                Width: =Parent.TemplateWidth-20
                                ZIndex: =3

                                Container6 As groupContainer.verticalAutoLayoutContainer:
                                    FillPortions: =0
                                    Height: =48
                                    LayoutDirection: =LayoutDirection.Vertical
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =10
                                    LayoutMode: =LayoutMode.Auto
                                    ZIndex: =1

                                    lblPersona As Label:
                                        AlignInContainer: =AlignInContainer.Stretch
                                        Alignment: =Align.Left
                                        DisplayMode: =DisplayMode.Edit
                                        FontWeight: =FontWeight.Semibold
                                        Height: |
                                            =24
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =100
                                        Text: =ThisItem.type & " persona"
                                        Width: =320
                                        X: =0
                                        Y: =0
                                        ZIndex: =1

                                    Container1 As groupContainer.horizontalAutoLayoutContainer:
                                        LayoutAlignItems: =LayoutAlignItems.Center
                                        LayoutMinHeight: =24
                                        LayoutMinWidth: =250
                                        LayoutMode: =LayoutMode.Auto
                                        ZIndex: =5

                                        "Icon1 As 'Fluent Icon (1.0.20)'":
                                            DisplayMode: =DisplayMode.Edit
                                            Height: |
                                                =24
                                            IconColor: =If(!IsBlank(ThisItem.configuredGroup), "Green", "Red")
                                            IconName: =If(!IsBlank(ThisItem.configuredGroup), "Completed", "Warning")
                                            IconType: ='PowerCAT.Icon.IconType'.Icon
                                            LayoutMinHeight: =200
                                            LayoutMinWidth: =200
                                            Text: |-
                                                =If(!IsBlank(ThisItem.configuredGroup), "Configured: " & ThisItem.configuredGroup, "Not configured.")
                                            TextAlignment: ='PowerCAT.Icon.TextAlignment'.Left
                                            Tooltip: =""
                                            Width: =24
                                            X: =0
                                            Y: =0
                                            ZIndex: =1

                                        lblGroup As Label:
                                            DisplayMode: =DisplayMode.Edit
                                            Height: =32
                                            LayoutMinHeight: =24
                                            LayoutMinWidth: =320
                                            Text: |-
                                                =If(!IsBlank(ThisItem.configuredGroup), "Configured: " & ThisItem.configuredGroupName, "Not configured.")
                                            VerticalAlignment: =VerticalAlign.Middle
                                            Width: =Container1.Width - Icon1.Width - 5
                                            Wrap: =false
                                            X: =0
                                            Y: =0
                                            ZIndex: =2

                                Rectangle2_3 As rectangle:
                                    AlignInContainer: =AlignInContainer.Stretch
                                    BorderColor: =RGBA(166, 166, 166, 1)
                                    BorderStyle: =BorderStyle.None
                                    BorderThickness: =2
                                    DisabledFill: =RGBA(166, 166, 166, 1)
                                    Fill: =ColorValue(AppTheme.palette.neutralLight)
                                    FocusedBorderColor: =RGBA(0, 120, 212, 1)
                                    Height: =1
                                    HoverFill: =RGBA(0, 120, 212, 1)
                                    PressedFill: =RGBA(0, 120, 212, 1)
                                    ZIndex: =2

                                Container7 As groupContainer.verticalAutoLayoutContainer:
                                    LayoutDirection: =LayoutDirection.Vertical
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =10
                                    LayoutMode: =LayoutMode.Auto
                                    ZIndex: =3

                                    Label8 As Label:
                                        AlignInContainer: =AlignInContainer.Stretch
                                        DisplayMode: =DisplayMode.Edit
                                        FillPortions: =1
                                        Height: =32
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =100
                                        Text: =ThisItem.description
                                        VerticalAlignment: =VerticalAlign.Top
                                        Width: =320
                                        X: =0
                                        Y: =0
                                        ZIndex: =1

                                Container8 As groupContainer.horizontalAutoLayoutContainer:
                                    FillPortions: =0
                                    Height: =32
                                    LayoutJustifyContent: =LayoutJustifyContent.End
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =10
                                    LayoutMode: =LayoutMode.Auto
                                    ZIndex: =4

                                    Button3 As Button:
                                        ButtonType: ='Button.ButtonType'.Standard
                                        DisplayMode: =DisplayMode.Edit
                                        Height: =32
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =96
                                        OnSelect: |-
                                            =UpdateContext(
                                                {
                                                    showGroupPanel: true,
                                                    selectedGroup: ThisItem.type,
                                                    selectedSchema: ThisItem.schemaname,
                                                    createNewGroup: false,
                                                    selectedEnvVarID: LookUp(
                                                        'Environment Variable Definitions',
                                                        'Schema Name' = ThisItem.schemaname
                                                    ).'Environment Variable Definition'
                                                }
                                            );
                                            NewForm(formStep2Groups_2);
                                        Text: ="Configure group"
                                        VerticalAlignment: =VerticalAlign.Middle
                                        Width: =128
                                        X: =0
                                        Y: =0
                                        ZIndex: =2

                    conContentVariables As groupContainer.verticalAutoLayoutContainer:
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Visible: =configStep=3
                        ZIndex: =3

                        conVariables As groupContainer.verticalAutoLayoutContainer:
                            LayoutDirection: =LayoutDirection.Vertical
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            LayoutOverflowY: =LayoutOverflow.Scroll
                            ZIndex: =4

                            Rectangle2_7 As rectangle:
                                AlignInContainer: =AlignInContainer.Stretch
                                BorderColor: =RGBA(166, 166, 166, 1)
                                BorderStyle: =BorderStyle.None
                                BorderThickness: =2
                                DisabledFill: =RGBA(166, 166, 166, 1)
                                Fill: =ColorValue(AppTheme.palette.neutralLight)
                                FocusedBorderColor: =RGBA(0, 120, 212, 1)
                                Height: =1
                                HoverFill: =RGBA(0, 120, 212, 1)
                                PressedFill: =RGBA(0, 120, 212, 1)
                                ZIndex: =1

                            conVarRegionCloud As groupContainer.horizontalAutoLayoutContainer:
                                FillPortions: =0
                                Height: =96
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                PaddingRight: =12
                                ZIndex: =2

                                conVarRegionCloudText As groupContainer.verticalAutoLayoutContainer:
                                    LayoutDirection: =LayoutDirection.Vertical
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    PaddingRight: =12
                                    PaddingTop: =8
                                    X: =40
                                    Y: =40
                                    ZIndex: =3

                                    lblVarRegionCloud As Label:
                                        AlignInContainer: =AlignInContainer.Stretch
                                        DisplayMode: =DisplayMode.Edit
                                        FontWeight: =FontWeight.Semibold
                                        Height: =32
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =320
                                        Text: ="Power Platform Region/Cloud"
                                        Width: =320
                                        X: =0
                                        Y: =0
                                        ZIndex: =1

                                    lblVarRegionCloudDescription As Label:
                                        AlignInContainer: =AlignInContainer.Stretch
                                        DisplayMode: =DisplayMode.Edit
                                        Height: =64
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =320
                                        PaddingEnd: =12
                                        Text: ="Power Platform is available in commercial regions, like United States and Europe, and Power Apps US Government regions. Select the region of your Power Platform tenant."
                                        VerticalAlignment: =VerticalAlign.Top
                                        Width: =320
                                        X: =0
                                        Y: =0
                                        ZIndex: =2

                                "cmbVarRegionCloud As 'Combo box'.pcfdataset":
                                    AlignInContainer: =AlignInContainer.Center
                                    DefaultSelectedItems: =myRegionCloud
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =32
                                    Items: =colRegionClouds
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =320
                                    OnChange: =Set(myRegionCloud,Self.Selected)
                                    Width: =320
                                    X: =0
                                    Y: =0
                                    ZIndex: =4

                                    region1 As pcfDataField.textualColumn:
                                        FieldDisplayName: ="region"
                                        FieldName: ="region"
                                        FieldType: ="s"
                                        FieldVariantName: ="textualColumn"
                                        Order: =1
                                        ZIndex: =11

                            Rectangle2_4 As rectangle:
                                AlignInContainer: =AlignInContainer.Stretch
                                BorderColor: =RGBA(166, 166, 166, 1)
                                BorderStyle: =BorderStyle.None
                                BorderThickness: =2
                                DisabledFill: =RGBA(166, 166, 166, 1)
                                Fill: =ColorValue(AppTheme.palette.neutralLight)
                                FocusedBorderColor: =RGBA(0, 120, 212, 1)
                                Height: =1
                                HoverFill: =ColorValue(AppTheme.palette.neutralLight)
                                PressedFill: =RGBA(0, 120, 212, 1)
                                ZIndex: =3

                            Rectangle2_6 As rectangle:
                                AlignInContainer: =AlignInContainer.Stretch
                                BorderColor: =RGBA(166, 166, 166, 1)
                                BorderStyle: =BorderStyle.None
                                BorderThickness: =2
                                DisabledFill: =RGBA(166, 166, 166, 1)
                                Fill: =ColorValue(AppTheme.palette.neutralLight)
                                FocusedBorderColor: =RGBA(0, 120, 212, 1)
                                Height: =1
                                HoverFill: =RGBA(0, 120, 212, 1)
                                PressedFill: =RGBA(0, 120, 212, 1)
                                Visible: =false
                                ZIndex: =4

                            galMandatoryEnvVars As gallery.galleryVertical:
                                BorderColor: =RGBA(166, 166, 166, 1)
                                FocusedBorderColor: =RGBA(0, 120, 212, 1)
                                FocusedBorderThickness: =2
                                Height: =196
                                Items: |-
                                    =Filter(
                                        'Environment Variable Definitions',
                                        Or(And(
                                            "REQUIRED." in Description,
                                            Not("Environment" in 'Display Name')
                                        ), "ProductionEnvironment" in 'Display Name')
                                    )
                                Layout: =Layout.Vertical
                                LayoutMinHeight: =287
                                LayoutMinWidth: =320
                                TemplatePadding: =0
                                TemplateSize: =96
                                ZIndex: =5

                                Rectangle2_9 As rectangle:
                                    BorderColor: =RGBA(166, 166, 166, 1)
                                    BorderStyle: =BorderStyle.None
                                    BorderThickness: =2
                                    DisabledFill: =RGBA(166, 166, 166, 1)
                                    Fill: =ColorValue(AppTheme.palette.neutralLight)
                                    FocusedBorderColor: =RGBA(0, 120, 212, 1)
                                    Height: =1
                                    HoverFill: =ColorValue(AppTheme.palette.neutralLight)
                                    PressedFill: =ColorValue(AppTheme.palette.neutralLight)
                                    Width: =Parent.TemplateWidth
                                    Y: =conVarRequired.Y+conVarRequired.Height
                                    ZIndex: =1

                                conVarRequired As groupContainer.horizontalAutoLayoutContainer:
                                    Height: =96
                                    LayoutMode: =LayoutMode.Auto
                                    LayoutWrap: =true
                                    PaddingRight: =12
                                    Width: =Parent.TemplateWidth
                                    ZIndex: =2

                                    conVarTextRequired As groupContainer.verticalAutoLayoutContainer:
                                        AlignInContainer: =AlignInContainer.Start
                                        Height: =96
                                        LayoutDirection: =LayoutDirection.Vertical
                                        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                                        LayoutMinHeight: =96
                                        LayoutMinWidth: =250
                                        LayoutMode: =LayoutMode.Auto
                                        PaddingRight: =12
                                        PaddingTop: =8
                                        X: =40
                                        Y: =40
                                        ZIndex: =2

                                        lblVarNameRequired As Label:
                                            AutoHeight: =true
                                            DisplayMode: =DisplayMode.Edit
                                            FontWeight: =FontWeight.Semibold
                                            Height: =32
                                            LayoutMinHeight: =32
                                            LayoutMinWidth: =320
                                            Text: =ThisItem.'Display Name'
                                            Width: =320
                                            X: =0
                                            Y: =0
                                            ZIndex: =1

                                        lblVarDesciptionRequired As Label:
                                            DisplayMode: =DisplayMode.Edit
                                            Height: =64
                                            LayoutMinHeight: =32
                                            LayoutMinWidth: =320
                                            PaddingEnd: =12
                                            Text: =Substitute(ThisItem.Description, "REQUIRED. ", "")
                                            VerticalAlignment: =VerticalAlign.Top
                                            Width: =galMandatoryEnvVars.TemplateWidth - txtEnvVarValue.Width - 20
                                            Wrap: =true
                                            X: =0
                                            Y: =0
                                            ZIndex: =2

                                "txtEnvVarValue As 'Text box'":
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =32
                                    Required: =true
                                    Value: |-
                                        =If(
                                            ThisItem.'Schema Name' = "admin_TenantID",
                                            tenantId,
                                             And(
                                                ThisItem.'Schema Name' = "admin_ApprovalAdmin",
                                                IsBlank(
                                                    LookUp(
                                                        'Environment Variable Values',
                                                        'Environment Variable Definition'.'Environment Variable Definition' = ThisItem.'Environment Variable Definition'
                                                    ).Value
                                                )
                                            ),
                                            myUser.mail,
                                            LookUp(
                                                'Environment Variable Values',
                                                'Environment Variable Definition'.'Environment Variable Definition' = ThisItem.'Environment Variable Definition'
                                            ).Value
                                        )
                                    Width: =320
                                    X: =galMandatoryEnvVars.TemplateWidth - txtEnvVarValue.Width - 10
                                    Y: =40
                                    ZIndex: =3

                                lblEnvVarSchema As Label:
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =32
                                    Text: =ThisItem.'Schema Name'
                                    Visible: =false
                                    Width: =320
                                    X: =60
                                    Y: =60
                                    ZIndex: =4

                                "cmbBoolean_1 As 'Combo box'.pcfdataset":
                                    DefaultSelectedItems: =[isProdCoE]
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =txtEnvVarValue.Height
                                    Items: =["yes", "no"]
                                    OnSelect: =Select(Parent)
                                    Visible: =Text(ThisItem.Type) = "Boolean"
                                    Width: =txtEnvVarValue.Width
                                    X: =txtEnvVarValue.X
                                    Y: =txtEnvVarValue.Y
                                    ZIndex: =5

                                    Value2_1 As pcfDataField.textualColumn:
                                        FieldDisplayName: ="Value"
                                        FieldName: ="Value"
                                        FieldType: ="s"
                                        FieldVariantName: ="textualColumn"
                                        Order: =1
                                        ZIndex: =12

                            Rectangle2_10 As rectangle:
                                AlignInContainer: =AlignInContainer.Stretch
                                BorderColor: =RGBA(166, 166, 166, 1)
                                BorderStyle: =BorderStyle.None
                                BorderThickness: =2
                                DisabledFill: =RGBA(166, 166, 166, 1)
                                Fill: =ColorValue(AppTheme.palette.neutralLight)
                                FocusedBorderColor: =RGBA(0, 120, 212, 1)
                                Height: =1
                                HoverFill: =RGBA(0, 120, 212, 1)
                                PressedFill: =RGBA(0, 120, 212, 1)
                                Visible: =false
                                ZIndex: =6

                            "Icon3 As 'Fluent Icon (1.0.20)'":
                                DisplayMode: =DisplayMode.Edit
                                FontColor: =AppTheme.palette.themePrimary
                                Height: =40
                                IconName: =If(showOptionalVars, "CollapseContentSingle", "ExploreContentSingle")
                                IconType: ='PowerCAT.Icon.IconType'.ActionButton
                                LayoutMinHeight: =200
                                LayoutMinWidth: =200
                                OnChange: =Set(showOptionalVars, !showOptionalVars)
                                Text: =If(showOptionalVars, "Hide", "Show") & " optional values"
                                Theme: =AppThemeJson
                                Visible: =false
                                Width: =200
                                X: =0
                                Y: =0
                                ZIndex: =8

                            galOptionalEnvVars As gallery.galleryVertical:
                                BorderColor: =RGBA(166, 166, 166, 1)
                                FillPortions: =0
                                FocusedBorderColor: =RGBA(0, 120, 212, 1)
                                FocusedBorderThickness: =2
                                Height: =196
                                Items: =Filter('Environment Variable Definitions', "OPTIONAL." in Description && Not("Innovation" in 'Display Name'))
                                Layout: =Layout.Vertical
                                LayoutMinHeight: =287
                                LayoutMinWidth: =320
                                TemplatePadding: =0
                                TemplateSize: =96
                                Visible: =showOptionalVars
                                ZIndex: =9

                                Rectangle2_11 As rectangle:
                                    BorderColor: =RGBA(166, 166, 166, 1)
                                    BorderStyle: =BorderStyle.None
                                    BorderThickness: =2
                                    DisabledFill: =RGBA(166, 166, 166, 1)
                                    Fill: =ColorValue(AppTheme.palette.neutralLight)
                                    FocusedBorderColor: =RGBA(0, 120, 212, 1)
                                    Height: =1
                                    HoverFill: =ColorValue(AppTheme.palette.neutralLight)
                                    PressedFill: =RGBA(0, 120, 212, 1)
                                    Width: =Parent.TemplateWidth
                                    Y: =95
                                    ZIndex: =1

                                conVarOptional As groupContainer.horizontalAutoLayoutContainer:
                                    Height: =96
                                    LayoutMode: =LayoutMode.Auto
                                    LayoutWrap: =true
                                    PaddingRight: =12
                                    Width: =Parent.TemplateWidth
                                    ZIndex: =2

                                    conVarTextOptional As groupContainer.verticalAutoLayoutContainer:
                                        AlignInContainer: =AlignInContainer.SetByContainer
                                        Height: =96
                                        LayoutDirection: =LayoutDirection.Vertical
                                        LayoutMinHeight: =96
                                        LayoutMinWidth: =100
                                        LayoutMode: =LayoutMode.Auto
                                        PaddingRight: =12
                                        PaddingTop: =8
                                        X: =40
                                        Y: =40
                                        ZIndex: =3

                                        lblVarNameOptional As Label:
                                            AlignInContainer: =AlignInContainer.Stretch
                                            DisplayMode: =DisplayMode.Edit
                                            FontWeight: =FontWeight.Semibold
                                            Height: =32
                                            LayoutMinHeight: =32
                                            LayoutMinWidth: =320
                                            Text: =ThisItem.'Display Name'
                                            Width: =320
                                            X: =0
                                            Y: =0
                                            ZIndex: =1

                                        lblVarDesciptionOptional As Label:
                                            AlignInContainer: =AlignInContainer.Start
                                            DisplayMode: =DisplayMode.Edit
                                            Height: =64
                                            LayoutMinHeight: =32
                                            LayoutMinWidth: =200
                                            PaddingEnd: =12
                                            Text: =Substitute(ThisItem.Description, "OPTIONAL. ", "")
                                            VerticalAlignment: =VerticalAlign.Top
                                            Width: =600
                                            X: =0
                                            Y: =0
                                            ZIndex: =2

                                "txtEnvVarValue_1 As 'Text box'":
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =32
                                    Value: =If(Text(ThisItem.Type) = "Boolean", cmbBoolean.Selected.Value, ThisItem.'Default Value')
                                    Width: =320
                                    X: =galOptionalEnvVars.TemplateWidth - txtEnvVarValue_1.Width - 10
                                    Y: =40
                                    ZIndex: =3

                                "cmbBoolean As 'Combo box'.pcfdataset":
                                    DefaultSelectedItems: =[Lower(ThisItem.'Default Value')]
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =txtEnvVarValue_1.Height
                                    Items: =["yes", "no"]
                                    OnSelect: =Select(Parent)
                                    Visible: =Text(ThisItem.Type) = "Boolean"
                                    Width: =txtEnvVarValue_1.Width
                                    X: =txtEnvVarValue_1.X
                                    Y: =txtEnvVarValue_1.Y
                                    ZIndex: =4

                                    Value2 As pcfDataField.textualColumn:
                                        FieldDisplayName: ="Value"
                                        FieldName: ="Value"
                                        FieldType: ="s"
                                        FieldVariantName: ="textualColumn"
                                        Order: =1
                                        ZIndex: =12

                                lblOptionalEnvVarSchema_1 As Label:
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =32
                                    Text: =ThisItem.'Schema Name'
                                    Visible: =false
                                    Width: =320
                                    X: =60
                                    Y: =60
                                    ZIndex: =5

                    conContentDataSource As groupContainer.verticalAutoLayoutContainer:
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Visible: =configStep=4
                        ZIndex: =4

                        galDataSource As gallery.galleryHorizontal:
                            BorderColor: =RGBA(166, 166, 166, 1)
                            FocusedBorderColor: =RGBA(0, 120, 212, 1)
                            FocusedBorderThickness: =2
                            Items: =colDataSources
                            LayoutMinHeight: =287
                            LayoutMinWidth: =320
                            TemplateSize: =If(Self.Layout = Layout.Horizontal, Min(400, Self.Width - 60), Min(400, Self.Height - 60))
                            ZIndex: =1

                            "Elevation2 As 'Fluent Elevation (1.0.20)'":
                                Depth: ='PowerCAT.Elevation.Depth'.Depth4
                                DisplayMode: =DisplayMode.Edit
                                Height: =conDataSource.Height
                                HoverDepth: ='PowerCAT.Elevation.HoverDepth'.Depth8
                                Width: =conDataSource.Width
                                X: =0+0
                                Y: =0+0
                                ZIndex: =1

                            conDataSource As groupContainer.verticalAutoLayoutContainer:
                                Height: =Parent.TemplateHeight-20
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutMode: =LayoutMode.Auto
                                Width: =Parent.TemplateWidth-20
                                X: =0+0
                                Y: =0+0
                                ZIndex: =2

                                conDataSourceHeader As groupContainer.horizontalAutoLayoutContainer:
                                    FillPortions: =0
                                    Height: =48
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    PaddingLeft: =8
                                    ZIndex: =1

                                    "icoDataSource As 'Fluent Icon (1.0.20)'":
                                        DisplayMode: =DisplayMode.Edit
                                        Height: =48
                                        IconName: |-
                                            =If(
                                                ThisItem.value=myDataSource.value,
                                               //  ThisItem.isSelected,
                                                "CompletedSolid",
                                                "CircleRing"
                                            )
                                        LayoutMinHeight: =200
                                        LayoutMinWidth: =200
                                        OnChange: |-
                                            =Set(myDataSource,ThisItem)
                                            /*
                                            With(
                                                {
                                                    myDatasource: ThisItem.value
                                                },
                                                UpdateIf(
                                                    colDataSources,
                                                    value = myDatasource, 
                                                    {isSelected: true},
                                                    
                                                    value <> myDatasource, 
                                                    {isSelected: false}
                                                );
                                            );
                                            */
                                            
                                            // UpdateContext({setupStep: ThisItem.setupStep});
                                        Theme: =AppThemeJson
                                        Tooltip: =""
                                        Width: =36
                                        X: =0
                                        Y: =0
                                        ZIndex: =1

                                    lblDataSource As Label:
                                        AlignInContainer: =AlignInContainer.Stretch
                                        DisplayMode: =DisplayMode.Edit
                                        FillPortions: =1
                                        FontWeight: =FontWeight.Semibold
                                        Height: =32
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =10
                                        Text: =ThisItem.value
                                        Width: =320
                                        X: =0
                                        Y: =0
                                        ZIndex: =2

                                Rectangle2_12 As rectangle:
                                    AlignInContainer: =AlignInContainer.Stretch
                                    BorderColor: =RGBA(166, 166, 166, 1)
                                    BorderStyle: =BorderStyle.None
                                    BorderThickness: =2
                                    DisabledFill: =RGBA(166, 166, 166, 1)
                                    Fill: =ColorValue(AppTheme.palette.neutralLight)
                                    FocusedBorderColor: =RGBA(0, 120, 212, 1)
                                    Height: =1
                                    HoverFill: =RGBA(0, 120, 212, 1)
                                    PressedFill: =RGBA(0, 120, 212, 1)
                                    ZIndex: =2

                                conDataSourceBody As groupContainer.horizontalAutoLayoutContainer:
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    PaddingBottom: =16
                                    PaddingLeft: =12
                                    PaddingRight: =Self.PaddingLeft
                                    PaddingTop: =8
                                    ZIndex: =3

                                    lblDataSourceDescription As htmlViewer:
                                        AlignInContainer: =AlignInContainer.Stretch
                                        FillPortions: =1
                                        Font: =Font.'Segoe UI'
                                        HtmlText: =ThisItem.descripton
                                        LayoutMinWidth: =100
                                        ZIndex: =1

                            Rectangle2_13 As rectangle:
                                BorderColor: =RGBA(166, 166, 166, 1)
                                BorderStyle: =BorderStyle.None
                                BorderThickness: =2
                                DisabledFill: =RGBA(255,255,255,0.8)
                                DisplayMode: =DisplayMode.View
                                Fill: =RGBA(255,255,255,0.8)
                                FocusedBorderColor: =RGBA(0, 120, 212, 1)
                                Height: =galDataSource.TemplateHeight
                                HoverFill: =RGBA(255,255,255,0.8)
                                PressedFill: =RGBA(255,255,255,0.8)
                                Visible: =!ThisItem.available
                                Width: =galDataSource.TemplateWidth
                                ZIndex: =3

                    conContentSetupFlows As groupContainer.verticalAutoLayoutContainer:
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =24
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Visible: =configStep=5
                        ZIndex: =5

                        btnRefreshSetupFlow As Button:
                            ButtonType: ='Button.ButtonType'.Primary
                            DisplayMode: =If(showRefresh, DisplayMode.Edit, DisplayMode.Disabled)
                            Height: =32
                            LayoutMinHeight: =32
                            LayoutMinWidth: =96
                            OnSelect: |-
                                =Refresh('CoE Solution Metadata');
                                Refresh('Setup Wizard State metadata');
                                
                                /*If(
                                    CountRows('CoE Solution Metadata') = 0,
                                    Patch(
                                        Processes,
                                        LookUp(
                                            Processes,
                                            "RunInitialFlows" in 'Process Name'
                                        ),
                                        {Status: 'Status (Processes)'.Activated}
                                    );
                                    Patch(
                                        'Setup Wizard State metadata',
                                        Defaults('Setup Wizard State metadata'),
                                        {
                                            Name: "Initial Setup",
                                            'Last Completed Step': 4,
                                            'Solution Name': "CenterofExcellenceCoreComponents",
                                            'Solution Version': coESolutionVersion
                                        }
                                    );
                                    Set(timerGo, true)
                                )*/
                            Text: ="Refresh"
                            Visible: =true
                            Width: =96
                            X: =0
                            Y: =0
                            ZIndex: =1

                        galSetupFlows_2 As gallery.galleryVertical:
                            BorderColor: =RGBA(166, 166, 166, 1)
                            Height: =233
                            Items: |-
                                =If(
                                    showUpgrade,
                                    Filter(
                                        'CoE Solution Metadata',
                                        RerunOnUpgrade = 'RerunOnUpgrade (CoE Solution Metadata)'.Yes && CoESolutionArea = "Inventory" && !("Connectors" in ObjectName)
                                    ),
                                    Filter(
                                        'CoE Solution Metadata',
                                        RerunOnUpgrade = 'RerunOnUpgrade (CoE Solution Metadata)'.Yes && CoESolutionArea = "Inventory"
                                    )
                                )
                            Layout: =Layout.Vertical
                            LayoutMinHeight: =287
                            LayoutMinWidth: =320
                            TemplateFill: =ColorValue(AppTheme.palette.white)
                            TemplatePadding: =10
                            TemplateSize: =If(Self.Layout = Layout.Horizontal, Min(50, Self.Width - 60), Min(50, Self.Height - 60))
                            Width: =conContentSetupFlows.Width
                            Y: =btnRefreshSetupFlow.Height + 10
                            ZIndex: =2

                            Rectangle3_2 As rectangle:
                                BorderColor: =RGBA(166, 166, 166, 1)
                                BorderStyle: =BorderStyle.None
                                BorderThickness: =2
                                DisabledFill: =RGBA(166, 166, 166, 1)
                                Fill: =ColorValue(AppTheme.palette.neutralLight)
                                FocusedBorderColor: =RGBA(0, 120, 212, 1)
                                Height: =1
                                HoverFill: =ColorValue(AppTheme.palette.neutralSecondary)
                                OnSelect: =Select(Parent)
                                PressedFill: =ColorValue(AppTheme.palette.neutralLight)
                                Width: =galSetupFlows_2.TemplateWidth
                                ZIndex: =9

                            Container2 As groupContainer.horizontalAutoLayoutContainer:
                                Height: =50
                                LayoutAlignItems: =LayoutAlignItems.Center
                                LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                                LayoutMode: =LayoutMode.Auto
                                Width: =galSetupFlows_2.TemplateWidth
                                ZIndex: =14

                                "icoSetupFlow As 'Fluent Icon (1.0.20)'":
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =48
                                    IconName: ="Flow"
                                    IconType: ='PowerCAT.Icon.IconType'.ActionButton
                                    LayoutMinHeight: =200
                                    LayoutMinWidth: =200
                                    Theme: =AppThemeJson
                                    Tooltip: =""
                                    Width: =40
                                    X: =0
                                    Y: =2
                                    ZIndex: =1

                                lblFlowName_2 As label:
                                    BorderColor: =RGBA(0, 0, 0, 0)
                                    BorderStyle: =BorderStyle.None
                                    BorderThickness: =2
                                    Color: =RGBA(51, 51, 51, 1)
                                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                    DisabledColor: =RGBA(166, 166, 166, 1)
                                    FocusedBorderThickness: =4
                                    Font: =Font.'Segoe UI'
                                    Height: =50
                                    OnSelect: =Launch(ThisItem.ObjectMakerURL)
                                    Size: =10
                                    Text: |-
                                        =ThisItem.ObjectName & Switch(ThisItem.ObjectName,
                                        "Admin | Sync Template v3 (Connectors)", " (approx. runtime 15 mins)",
                                        "Admin | Sync Template v3 CoE Solution Metadata", " (approx. runtime 5 mins)",
                                        "Admin | Sync Template v3 Configure Emails", " (approx. runtime 3 mins)")
                                    Width: =480
                                    X: =icoSetupFlow.Width + 10
                                    ZIndex: =2

                                btnStartFlow As Button:
                                    ButtonType: ='Button.ButtonType'.Primary
                                    DisplayMode: |-
                                        =If(
                                            IsBlank(
                                                LookUp(
                                                    'CoE Solution Metadata',
                                                    "Solution Metadata" in ObjectName
                                                ).LastRun
                                            ),
                                            DisplayMode.Disabled,
                                            If(
                                                IsBlank(ThisItem.LastRun) || ThisItem.LastRun < LookUp(
                                                Solutions,
                                                uniquename = "CenterofExcellenceCoreComponents"
                                            ).'Updated On',
                                                DisplayMode.Edit,
                                                DisplayMode.Disabled
                                            )
                                        )
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =96
                                    OnSelect: |-
                                        =/*Switch(ThisItem.ObjectName,
                                        "Admin | Sync Template v3 (Connectors)", 'Admin|SyncTemplatev3(Connectors)'.Run();UpdateContext({showConnectorBtnVis: false}),
                                        "Admin | Sync Template v3 CoE Solution Metadata", 'Admin|SyncTemplatev3CoESolutionMetadata'.Run();UpdateContext({showSolutionBtnVis: false}),
                                        "Admin | Sync Template v3 Configure Emails", 'Admin|SyncTemplatev3ConfigureEmails'.Run();UpdateContext({showEmailBtnVis: false}))*/
                                    Text: ="Start Flow"
                                    Visible: |-
                                        =false /*Switch(ThisItem.ObjectName,
                                        "Admin | Sync Template v3 (Connectors)", showConnectorBtnVis,
                                        "Admin | Sync Template v3 CoE Solution Metadata", false,
                                        "Admin | Sync Template v3 Configure Emails", showEmailBtnVis)*/
                                    Width: =96
                                    X: =0
                                    Y: =0
                                    ZIndex: =3

                                lblLastRun_2 As label:
                                    BorderColor: =RGBA(0, 0, 0, 0)
                                    BorderStyle: =BorderStyle.None
                                    BorderThickness: =2
                                    Color: =RGBA(51, 51, 51, 1)
                                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                    DisabledColor: =RGBA(166, 166, 166, 1)
                                    FocusedBorderThickness: =4
                                    Font: =Font.'Segoe UI'
                                    Height: =50
                                    OnSelect: =
                                    Size: =10
                                    Text: |-
                                        =If(
                                            !IsBlank(
                                                LookUp(
                                                    Solutions,
                                                    uniquename = "CenterofExcellenceCoreComponents"
                                                ).'Updated On'
                                            ) && ThisItem.LastRun < LookUp(
                                                Solutions,
                                                uniquename = "CenterofExcellenceCoreComponents"
                                            ).'Updated On',
                                            "",
                                            If(
                                                IsBlank(ThisItem.LastRun),
                                                "",
                                                "Last run: " & ThisItem.LastRun
                                            )
                                        )
                                    Width: =203
                                    X: =lblFlowName_2.Width + lblFlowName_2.X
                                    ZIndex: =4

                                "icoSeeLayers_1 As 'Fluent Icon (1.0.20)'":
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =AppTheme.palette.themePrimary
                                    Height: =48
                                    IconColor: =AppTheme.palette.themePrimary
                                    IconName: ="Warning"
                                    IconType: ='PowerCAT.Icon.IconType'.ActionButton
                                    LayoutMinHeight: =200
                                    LayoutMinWidth: =200
                                    OnChange: =Launch(theAppMakerURL & "environments/" & coeEnv & "/solutions/" & ThisItem.SolutionID & "/objects/workflow/" & ThisItem.ObjectSolutionGUID & "/layers")
                                    Text: ="See layers"
                                    Theme: =AppThemeJson
                                    Tooltip: ="This flow has unmanaged layers. Remove them before an upgrade to receive the latest version."
                                    Visible: =ThisItem.SolutionID = unmanagedSolutionID
                                    Width: =120
                                    X: =40
                                    Y: =2
                                    ZIndex: =5

                                "IconSetupFlows_2 As 'Fluent Icon (1.0.20)'":
                                    DisplayMode: =DisplayMode.Edit
                                    FillColor: =""
                                    FontColor: |-
                                        ="#000000"
                                    FontSize: =13
                                    Height: =30
                                    HoverFontColor: |-
                                        ="#000000"
                                    HoverIconColor: |-
                                        =If(ThisItem.LastRunPassed, "#107c10", "#a80000")
                                    IconColor: |-
                                        =If(ThisItem.LastRunPassed, "#107c10", "#a80000")
                                    IconName: =If(ThisItem.LastRunPassed, "CompletedSolid", "None")
                                    IconSize: =20
                                    IconType: ='PowerCAT.Icon.IconType'.ActionButton
                                    InputEvent: =
                                    LayoutMinHeight: =200
                                    LayoutMinWidth: =200
                                    Text: =
                                    TextAlignment: ='PowerCAT.Icon.TextAlignment'.Left
                                    Tooltip: =""
                                    Visible: =If(!IsBlank(LookUp(Solutions, uniquename = "CenterofExcellenceCoreComponents").'Updated On') && ThisItem.LastRun < LookUp(Solutions, uniquename = "CenterofExcellenceCoreComponents").'Updated On', false, If(IsBlank(ThisItem.LastRun), false, true))
                                    Width: =40
                                    X: =galSetupFlows_2.TemplateWidth - IconSetupFlows_2.Width - 10
                                    Y: =10
                                    ZIndex: =6

                                "ProgressIndicator1 As 'Fluent Progress Indicator (1.0.20) Preview'":
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =10
                                    LayoutMinHeight: =200
                                    LayoutMinWidth: =200
                                    PercentComplete: =80
                                    Theme: =AppThemeJson
                                    Tooltip: =""
                                    TypeofIndicator: ='PowerCAT.ProgressIndicator.TypeofIndicator'.IndeterminateIndicator
                                    Visible: =If(!IsBlank(LookUp(Solutions, uniquename = "CenterofExcellenceCoreComponents").'Updated On') && ThisItem.LastRun < LookUp(Solutions, uniquename = "CenterofExcellenceCoreComponents").'Updated On', true, If(IsBlank(ThisItem.LastRun), true, false))
                                    Width: =50
                                    X: =galSetupFlows_2.TemplateWidth - ProgressIndicator1.Width
                                    Y: =galSetupFlows_2.TemplateHeight / 2 - ProgressIndicator1.Height / 2
                                    ZIndex: =7

                                "icoSetupFlow_1 As 'Fluent Icon (1.0.20)'":
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =AppTheme.palette.themePrimary
                                    Height: =48
                                    IconName: ="OpenInNewWindow"
                                    IconType: ='PowerCAT.Icon.IconType'.ActionButton
                                    LayoutMinHeight: =200
                                    LayoutMinWidth: =200
                                    OnChange: =Launch(ThisItem.ObjectURL)
                                    Text: ="View Flow Details"
                                    TextAlignment: ='PowerCAT.Icon.TextAlignment'.Right
                                    Theme: =AppThemeJson
                                    Tooltip: =""
                                    Width: =200
                                    X: =0
                                    Y: =2
                                    ZIndex: =8

                        lblTryAgain As Label:
                            AlignInContainer: =AlignInContainer.Stretch
                            DisplayMode: =DisplayMode.Edit
                            Height: =32
                            LayoutMinHeight: =32
                            LayoutMinWidth: =320
                            Text: |-
                                ="If you do not see flows running with a progress indicator, try kicking them off manually by clicking the button below:"
                            Visible: =CountRows(Filter('Setup Wizard State metadata', Name = "RunInitialFlows" && 'Solution Version' = coESolutionVersion)) = 0 && showRefresh
                            Width: =320
                            X: =0
                            Y: =0
                            ZIndex: =3

                        btnTryAgain As Button:
                            ButtonType: ='Button.ButtonType'.Primary
                            DisplayMode: =DisplayMode.Edit
                            Height: =32
                            LayoutMinHeight: =32
                            LayoutMinWidth: =96
                            OnSelect: |-
                                =IfError(
                                    Patch(
                                        Processes,
                                        LookUp(
                                            Processes,
                                            "RunInitialFlows" in 'Process Name'
                                        ),
                                        {Status: 'Status (Processes)'.Activated}
                                    ),
                                    IfError(
                                        Patch(
                                            Processes,
                                            LookUp(
                                                Processes,
                                                "RunInitialFlows" in 'Process Name'
                                            ),
                                            {Status: 'Status (Processes)'.Activated}
                                        ),
                                        IfError(
                                            Patch(
                                                Processes,
                                                LookUp(
                                                    Processes,
                                                    "RunInitialFlows" in 'Process Name'
                                                ),
                                                {Status: 'Status (Processes)'.Activated}
                                            ),
                                            Set(
                                                x,
                                                true
                                            )
                                        )
                                    )
                                );
                                
                                
                                Patch(
                                                'Setup Wizard State metadata',
                                                Defaults('Setup Wizard State metadata'),
                                                {
                                                    Name: "Initial Setup",
                                                    'Last Completed Step': 4,
                                                    'Solution Name': "CenterofExcellenceCoreComponents",
                                                    'Solution Version': coESolutionVersion
                                                }
                                            );
                            Text: ="Re-try running setup flows"
                            Visible: =CountRows(Filter('Setup Wizard State metadata', Name = "RunInitialFlows" && 'Solution Version' = coESolutionVersion)) = 0 && showRefresh
                            Width: =200
                            X: =0
                            Y: =0
                            ZIndex: =4

                    conContentInventoryFlows As groupContainer.verticalAutoLayoutContainer:
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Visible: =configStep=6
                        ZIndex: =6

                        "icoAllOn As 'Fluent Icon (1.0.20)'":
                            AlignInContainer: =AlignInContainer.Stretch
                            DisplayMode: =DisplayMode.Edit
                            FillColor: |-
                                ="#dff6dd"
                            FontColor: |-
                                ="#107c10"
                            FontSize: =0
                            Height: =50
                            IconName: ="Completed"
                            IconSize: =0
                            IconType: ='PowerCAT.Icon.IconType'.ActionButton
                            LayoutMinHeight: =200
                            LayoutMinWidth: =200
                            Text: ="All inventory flows have been turned on. Proceed to the next step."
                            Visible: |-
                                = If(
                                        myDataSource.isBYODL,
                                CountRows( Filter(
                                            FlowsWithMetadata,
                                            And(
                                                theArea = "Inventory",
                                                neededForBYODL = 'UsedForByodlCoe (CoE Solution Metadata)'.Yes,
                                                Text(theState) ="Draft",
                                                 !("CoE BYODL" in theName)
                                            )
                                        )) = 0,
                                CountRows( Filter(
                                            FlowsWithMetadata,
                                            And(
                                                theArea = "Inventory",
                                                neededForSyncFlows = 'UsedForSyncFlowCoe (CoE Solution Metadata)'.Yes,
                                                Text(theState) ="Draft",
                                                 !("CoE BYODL" in theName)
                                            )
                                        )) = 0)
                            Width: =200
                            X: =0
                            Y: =0
                            ZIndex: =1

                        galInventoryFlows As gallery.galleryVertical:
                            BorderColor: =RGBA(166, 166, 166, 1)
                            FocusedBorderColor: =RGBA(0, 120, 212, 1)
                            FocusedBorderThickness: =2
                            Items: |-
                                =SortByColumns(
                                    If(
                                        myDataSource.isBYODL,
                                        Filter(
                                            FlowsWithMetadata,
                                            And(
                                                theArea = "Inventory",
                                                neededForBYODL = 'UsedForByodlCoe (CoE Solution Metadata)'.Yes,
                                                Text(theState) <> "Activated" || theFlowHasUnmanagedLayer,
                                                !("CoE BYODL" in theName)
                                            )
                                        ), 
                                        Filter(
                                            FlowsWithMetadata,
                                            And(
                                                theArea = "Inventory",
                                                neededForSyncFlows = 'UsedForSyncFlowCoe (CoE Solution Metadata)'.Yes,
                                                Text(theState) <> "Activated" || theFlowHasUnmanagedLayer,
                                                !("CoE BYODL" in theName)
                                            )
                                        )
                                    ),
                                    "theSetupOrder"
                                )
                            Layout: =Layout.Vertical
                            LayoutMinHeight: =287
                            LayoutMinWidth: =320
                            TemplateSize: |
                                =48
                            Width: =700
                            ZIndex: =3

                            conInventoryFlows As groupContainer.horizontalAutoLayoutContainer:
                                Height: =Parent.TemplateHeight
                                LayoutMode: =LayoutMode.Auto
                                Width: =Parent.TemplateWidth
                                X: =0+0
                                Y: =0+0
                                ZIndex: =1

                                "icoInventoryFlow As 'Fluent Icon (1.0.20)'":
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =48
                                    IconName: ="Flow"
                                    IconType: ='PowerCAT.Icon.IconType'.ActionButton
                                    LayoutMinHeight: =200
                                    LayoutMinWidth: =200
                                    Theme: =AppThemeJson
                                    Tooltip: =""
                                    Width: =40
                                    X: =0
                                    Y: =0
                                    ZIndex: =1

                                lblInventoryFlow As Label:
                                    AlignInContainer: =AlignInContainer.Stretch
                                    DisplayMode: =DisplayMode.Edit
                                    FillPortions: =1
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =100
                                    Text: =ThisItem.theName
                                    Width: =320
                                    X: =0
                                    Y: =0
                                    ZIndex: =2

                                "icoSeeState As 'Fluent Icon (1.0.20)'":
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: |-
                                        =If(ThisItem.theIsErrorState, "#d83b01", "#107c10")
                                    Height: =48
                                    IconColor: |-
                                        =If(ThisItem.theIsErrorState, "#d83b01", "#107c10")
                                    IconName: =If(ThisItem.theIsErrorState, "Warning", "Completed")
                                    IconType: ='PowerCAT.Icon.IconType'.ActionButton
                                    LayoutMinHeight: =200
                                    LayoutMinWidth: =200
                                    OnChange: =Launch(ThisItem.theUrl & "/details")
                                    Text: =If(ThisItem.theIsErrorState, "Error", "Active")
                                    TextAlignment: ='PowerCAT.Icon.TextAlignment'.Left
                                    Theme: =AppThemeJson
                                    Tooltip: ="This flow has unmanaged layers. Remove them before an upgrade to receive the latest version."
                                    Visible: =ThisItem.theState = 'Status (Processes)'.Activated
                                    Width: =100
                                    X: =0
                                    Y: =0
                                    ZIndex: =3

                                "icoSeeLayers As 'Fluent Icon (1.0.20)'":
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =AppTheme.palette.themePrimary
                                    Height: =48
                                    IconColor: =AppTheme.palette.themePrimary
                                    IconName: ="Warning"
                                    IconType: ='PowerCAT.Icon.IconType'.ActionButton
                                    LayoutMinHeight: =200
                                    LayoutMinWidth: =200
                                    OnChange: =Launch(theAppMakerURL & "environments/" & coeEnv & "/solutions/" & ThisItem.theSolutionGUID & "/objects/workflow/" & ThisItem.theSoltuionFlowGUID & "/layers")
                                    Text: ="See layers"
                                    TextAlignment: ='PowerCAT.Icon.TextAlignment'.Left
                                    Theme: =AppThemeJson
                                    Tooltip: ="This flow has unmanaged layers. Remove them before an upgrade to receive the latest version."
                                    Visible: =ThisItem.theSolutionGUID = GUID(unmanagedSolutionID)
                                    Width: =120
                                    X: =0
                                    Y: =0
                                    ZIndex: =4

                                togInventoryFlow As Toggle:
                                    AlignInContainer: =AlignInContainer.Center
                                    Checked: =ThisItem.thePublishedState = [@'Component State'].Published && !ThisItem.theIsErrorState && Text(ThisItem.theState) = "Activated"
                                    DisplayMode: =If(ThisItem.theState = 'Status (Processes)'.Suspended, DisplayMode.Disabled, DisplayMode.Edit)
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =160
                                    OnCheck: |-
                                        =UpdateIf(FlowsWithMetadata, theGUID=ThisItem.theGUID, {theState: 'Status (Processes)'.Suspended});
                                        IfError(Patch(
                                            Processes,
                                            LookUp(Processes, WorkflowIdUnique = ThisItem.theGUID), 
                                            {
                                                Status: 'Status (Processes)'.Activated
                                            }
                                        ), UpdateIf(FlowsWithMetadata, theGUID=ThisItem.theGUID, {theIsErrorState: true, theState: 'Status (Processes)'.Draft}), UpdateIf(FlowsWithMetadata, theGUID=ThisItem.theGUID, {theState: 'Status (Processes)'.Activated}));
                                        
                                        /* UpdateContext({flowPass: 'CommandCenterApp>SetCoEFlowsState'.Run(coeEnv, true, ThisItem.theGUID).return = "pass"});
                                        If(flowPass, 
                                            UpdateIf(FlowsWithMetadata, theGUID=ThisItem.theGUID, {theState: 'Status (Processes)'.Activated}), 
                                            UpdateIf(FlowsWithMetadata, theGUID=ThisItem.theGUID, {theIsErrorState: true}));
                                        If(flowPass, Notify("This flow has been turned on successfully", Success), Notify("Failed to turn on this flow. Open the Power Automate details page and turn on the flow there.", Error)) */
                                    OnUncheck: |-
                                        =IfError(Patch(
                                            Processes,
                                            LookUp(Processes, WorkflowIdUnique = ThisItem.theGUID), 
                                            {
                                                Status: 'Status (Processes)'.Draft
                                            }
                                        ), Notify("Failed to turn off flow. Use Power Automate Portal to turn off flow."))
                                    Width: =100
                                    X: =0
                                    Y: =0
                                    ZIndex: =5

                            Rectangle2_5 As rectangle:
                                BorderColor: =RGBA(166, 166, 166, 1)
                                BorderStyle: =BorderStyle.None
                                BorderThickness: =2
                                DisabledFill: =RGBA(166, 166, 166, 1)
                                Fill: =ColorValue(AppTheme.palette.neutralLight)
                                FocusedBorderColor: =RGBA(0, 120, 212, 1)
                                Height: =1
                                HoverFill: =RGBA(0, 120, 212, 1)
                                PressedFill: =RGBA(0, 120, 212, 1)
                                Width: =Parent.TemplateWidth
                                Y: =conInventoryFlows.Y+conInventoryFlows.Height
                                ZIndex: =2

                    conContentDataflows As groupContainer.verticalAutoLayoutContainer:
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =24
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Visible: =configStep=7
                        ZIndex: =7

                        "FluentDetailsList1 As 'Fluent Details List (1.0.20)'.pcfdataset":
                            AlignInContainer: =AlignInContainer.Stretch
                            columns_Items: |-
                                =Table(
                                    {
                                        ColName: "Name",
                                        ColDisplayName: "Name",
                                        ColWidth: 500,
                                        ColSortable: false,
                                        ColIsBold: false,
                                        ColResizable: true
                                    },{
                                        ColName: "Icon",
                                        ColDisplayName: "Open resource",
                                        ColCellType: "link",
                                         ColWidth: 200,
                                        ColSortable: false,
                                        ColIsBold: false,
                                        ColResizable: true
                                    },{
                                        ColName: "Link",
                                        ColDisplayName: "View step-by-step instructions",
                                          ColCellType: "link",
                                           ColWidth: 200,
                                        ColSortable: false,
                                        ColIsBold: false,
                                        ColResizable: true
                                    })
                            DisplayMode: =DisplayMode.Edit
                            FillPortions: =1
                            Height: =200
                            Items: =dataflowSteps
                            LayoutMinHeight: =200
                            LayoutMinWidth: =200
                            OnChange: |-
                                =If(Self.EventName="CellAction",
                                If(Self.EventColumn="Icon", Launch(LookUp(dataflowSteps, Key = Self.EventRowKey).Nav, {}, LaunchTarget.New), Launch(LookUp(dataflowSteps, Key = Self.EventRowKey).LinkNav, {}, LaunchTarget.New)
                                ))
                            RecordKey: ="Key"
                            SelectionType: ='PowerCAT.FluentDetailsList.SelectionType'.None
                            Theme: =AppThemeJson
                            Width: =200
                            X: =0
                            Y: =0
                            ZIndex: =1

                            Icon4 As pcfDataField.textualColumn:
                                FieldDisplayName: ="Icon"
                                FieldName: ="Icon"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =1
                                ZIndex: =43

                            Link1 As pcfDataField.textualColumn:
                                FieldDisplayName: ="Link"
                                FieldName: ="Link"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =2
                                ZIndex: =44

                            Name1 As pcfDataField.textualColumn:
                                FieldDisplayName: ="Name"
                                FieldName: ="Name"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =3
                                ZIndex: =45

                    conContentDataflows_1 As groupContainer.verticalAutoLayoutContainer:
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =24
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Visible: =configStep=8
                        ZIndex: =8

                        galInventoryFlows_1 As gallery.galleryVertical:
                            BorderColor: =RGBA(166, 166, 166, 1)
                            FocusedBorderColor: =RGBA(0, 120, 212, 1)
                            FocusedBorderThickness: =2
                            Items: |-
                                =Filter(
                                            Processes, "CoE BYODL" in 'Process Name')
                            Layout: =Layout.Vertical
                            LayoutMinHeight: =287
                            LayoutMinWidth: =320
                            TemplateSize: |
                                =48
                            Width: =700
                            ZIndex: =1

                            conInventoryFlows_1 As groupContainer.horizontalAutoLayoutContainer:
                                Height: =Parent.TemplateHeight
                                LayoutMode: =LayoutMode.Auto
                                Width: =Parent.TemplateWidth
                                X: =0+0
                                Y: =0+0
                                ZIndex: =1

                                "icoInventoryFlow_1 As 'Fluent Icon (1.0.20)'":
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =48
                                    IconName: ="Flow"
                                    LayoutMinHeight: =200
                                    LayoutMinWidth: =200
                                    Theme: =AppThemeJson
                                    Width: =40
                                    X: =0
                                    Y: =0
                                    ZIndex: =1

                                lblInventoryFlow_1 As Label:
                                    AlignInContainer: =AlignInContainer.Stretch
                                    DisplayMode: =DisplayMode.Edit
                                    FillPortions: =1
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =100
                                    Text: =ThisItem.'Process Name'
                                    Width: =320
                                    X: =0
                                    Y: =0
                                    ZIndex: =2

                                togInventoryFlow_1 As Toggle:
                                    AlignInContainer: =AlignInContainer.Center
                                    Checked: =Text(ThisItem.Status) = "Activated"
                                    DisplayMode: =If(ThisItem.Status = 'Status (Processes)'.Suspended, DisplayMode.Disabled, DisplayMode.Edit)
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =160
                                    OnCheck: |-
                                        =IfError(Patch(
                                            Processes,
                                            LookUp(Processes, WorkflowIdUnique = ThisItem.WorkflowIdUnique), 
                                            {
                                                Status: 'Status (Processes)'.Activated
                                            }
                                        ), IfError(Patch(
                                            Processes,
                                            LookUp(Processes, WorkflowIdUnique = ThisItem.WorkflowIdUnique), 
                                            {
                                                Status: 'Status (Processes)'.Activated
                                            }), Notify(ThisItem.'Process Name' & " could not be turned on. Select View Flow Details and turn the flow on from there.")))
                                        ;Refresh(Processes); //, UpdateIf(FlowsWithMetadata, theGUID=ThisItem.theGUID, {theIsErrorState: true, theState: 'Status (Processes)'.Draft}), UpdateIf(FlowsWithMetadata, theGUID=ThisItem.theGUID, {theState: 'Status (Processes)'.Activated}));
                                        
                                        /* UpdateContext({flowPass: 'CommandCenterApp>SetCoEFlowsState'.Run(coeEnv, true, ThisItem.theGUID).return = "pass"});
                                        If(flowPass, 
                                            UpdateIf(FlowsWithMetadata, theGUID=ThisItem.theGUID, {theState: 'Status (Processes)'.Activated}), 
                                            UpdateIf(FlowsWithMetadata, theGUID=ThisItem.theGUID, {theIsErrorState: true}));
                                        If(flowPass, Notify("This flow has been turned on successfully", Success), Notify("Failed to turn on this flow. Open the Power Automate details page and turn on the flow there.", Error)) */
                                    OnUncheck: |-
                                        =IfError(Patch(
                                            Processes,
                                            LookUp(Processes, WorkflowIdUnique = ThisItem.WorkflowIdUnique), 
                                            {
                                                Status: 'Status (Processes)'.Draft
                                            }
                                        ), Notify("Failed to turn off flow. Use Power Automate Portal to turn off flow."))
                                    Width: =100
                                    X: =0
                                    Y: =0
                                    ZIndex: =5

                                "icoSetupFlow_2 As 'Fluent Icon (1.0.20)'":
                                    DisplayMode: =DisplayMode.Edit
                                    FontColor: =AppTheme.palette.themePrimary
                                    Height: =48
                                    IconName: ="OpenInNewWindow"
                                    IconType: ='PowerCAT.Icon.IconType'.ActionButton
                                    LayoutMinHeight: =200
                                    LayoutMinWidth: =200
                                    OnChange: =Launch(myRegionCloud.automateUrl & coeEnv & "/solutions/" & coeSolution & "/flows/" & ThisItem.WorkflowIdUnique & "/details")
                                    Text: ="View Flow Details"
                                    TextAlignment: ='PowerCAT.Icon.TextAlignment'.Right
                                    Theme: =AppThemeJson
                                    Width: =200
                                    X: =0
                                    Y: =2
                                    ZIndex: =6

                            Rectangle2_15 As rectangle:
                                BorderColor: =RGBA(166, 166, 166, 1)
                                BorderStyle: =BorderStyle.None
                                BorderThickness: =2
                                DisabledFill: =RGBA(166, 166, 166, 1)
                                Fill: =ColorValue(AppTheme.palette.neutralLight)
                                FocusedBorderColor: =RGBA(0, 120, 212, 1)
                                Height: =1
                                HoverFill: =RGBA(0, 120, 212, 1)
                                PressedFill: =RGBA(0, 120, 212, 1)
                                Width: =Parent.TemplateWidth
                                Y: =47
                                ZIndex: =2

                    conContentDataflows_2 As groupContainer.verticalAutoLayoutContainer:
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =24
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Visible: =configStep=9
                        ZIndex: =9

                        Button4 As Button:
                            AlignInContainer: =AlignInContainer.Start
                            DisplayMode: =DisplayMode.Edit
                            Height: =32
                            LayoutMinHeight: =32
                            LayoutMinWidth: =96
                            OnSelect: |-
                                =PowerQueryDataflows.RefreshDataflow(vCurrentEnvironment, LookUp(myDataflows, Name = "CoE BYODL Makers" && 'Is Managed' = 'Is Component Managed'.Managed).OriginalDataflowId, "Environment");
                                Refresh(DataflowRefreshHistories)
                            Text: ="Refresh dataflow for initial inventory"
                            Width: =250
                            X: =0
                            Y: =0
                            ZIndex: =1

                        HtmlText1 As htmlViewer:
                            AlignInContainer: =AlignInContainer.Stretch
                            Font: =Font.'Segoe UI'
                            HtmlText: ="<a href='" & theAppMakerURL & "environments/" & coeEnv & "/dataintegration/list'>Open the Dataflow page</a> to check if the CoE BYODL Makers dataflow has started refreshing, or refresh manually from there."
                            Size: =10.5
                            ZIndex: =2

                    conContentApps As groupContainer.verticalAutoLayoutContainer:
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =24
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Visible: =configStep=10
                        ZIndex: =10

                        btnShareAll As Button:
                            ButtonType: ='Button.ButtonType'.Primary
                            DisplayMode: =DisplayMode.Edit
                            Height: =32
                            LayoutMinHeight: =32
                            LayoutMinWidth: =96
                            OnSelect: |-
                                =UpdateContext({showSharePanel: true})
                            Text: ="Share all"
                            Visible: =true
                            Width: =96
                            X: =0
                            Y: =0
                            ZIndex: =1

                        galApps As gallery.galleryVertical:
                            BorderColor: =RGBA(166, 166, 166, 1)
                            FocusedBorderColor: =RGBA(0, 120, 212, 1)
                            FocusedBorderThickness: =2
                            Items: =Filter('CoE Solution Metadata', (ObjectType = "CanvasApp" || ObjectType = "ModelDrivenApp"), CoESolution = "Core", !("deprecated" in ObjectName))
                            Layout: =Layout.Vertical
                            LayoutMinHeight: =287
                            LayoutMinWidth: =320
                            TemplateSize: =If(Self.Layout = Layout.Horizontal, Min(280, Self.Width - 60), Min(280, Self.Height - 60))
                            WrapCount: =3
                            ZIndex: =2

                            "Elevation3 As 'Fluent Elevation (1.0.20)'":
                                Depth: ='PowerCAT.Elevation.Depth'.Depth4
                                DisplayMode: =DisplayMode.Edit
                                Height: =conApps.Height
                                HoverDepth: ='PowerCAT.Elevation.HoverDepth'.Depth8
                                Width: =conApps.Width
                                X: =0+0
                                Y: =0+0
                                ZIndex: =1

                            conApps As groupContainer.verticalAutoLayoutContainer:
                                Height: =Parent.TemplateHeight-20
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutMode: =LayoutMode.Auto
                                Width: =Parent.TemplateWidth-20
                                X: =0+0
                                Y: =0+0
                                ZIndex: =2

                                conAppsHeader As groupContainer.horizontalAutoLayoutContainer:
                                    FillPortions: =0
                                    Height: =48
                                    LayoutAlignItems: =LayoutAlignItems.Center
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    ZIndex: =1

                                    Image1 As image:
                                        BorderColor: =RGBA(0, 0, 0, 0)
                                        BorderStyle: =BorderStyle.None
                                        BorderThickness: =2
                                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                        DisabledFill: =RGBA(0, 0, 0, 0)
                                        Fill: =Color.White
                                        Height: =40
                                        HoverBorderColor: =RGBA(0, 0, 0, 0)
                                        HoverFill: =RGBA(0, 0, 0, 0)
                                        Image: =PowerApps_scalable
                                        PaddingLeft: =5
                                        PressedBorderColor: =RGBA(0, 0, 0, 0)
                                        PressedFill: =RGBA(0, 0, 0, 0)
                                        Width: =40
                                        ZIndex: =1

                                    Label2 As Label:
                                        DisplayMode: =DisplayMode.Edit
                                        FillPortions: =1
                                        FontWeight: =FontWeight.Semibold
                                        Height: =32
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =100
                                        PaddingStart: =12
                                        Text: =ThisItem.ObjectName
                                        Tooltip: =ThisItem.ObjectName
                                        Width: =320
                                        Wrap: =false
                                        X: =0
                                        Y: =0
                                        ZIndex: =2

                                    "Icon7 As 'Fluent Icon (1.0.20)'":
                                        DisplayMode: =DisplayMode.Edit
                                        Height: =48
                                        IconName: ="Share"
                                        IconSize: =20
                                        IconType: ='PowerCAT.Icon.IconType'.ActionButton
                                        LayoutMinHeight: =200
                                        LayoutMinWidth: =200
                                        OnChange: =Launch(theAppMakerURL & "environments/" &coeEnv & "/apps/" & ThisItem.ObjectGUID & "/share", {}, LaunchTarget.New)
                                        Theme: =AppThemeJson
                                        Tooltip: ="Launch"
                                        Width: =40
                                        X: =0
                                        Y: =0
                                        ZIndex: =3

                                    "Icon7_1 As 'Fluent Icon (1.0.20)'":
                                        DisplayMode: =DisplayMode.Edit
                                        Height: =48
                                        IconName: ="Info"
                                        IconSize: =20
                                        IconType: ='PowerCAT.Icon.IconType'.ActionButton
                                        LayoutMinHeight: =200
                                        LayoutMinWidth: =200
                                        OnChange: =Launch(ThisItem.HelpLink, {}, LaunchTarget.New)
                                        Theme: =AppThemeJson
                                        Tooltip: ="Information"
                                        Width: =40
                                        X: =0
                                        Y: =0
                                        ZIndex: =4

                                Rectangle2_8 As rectangle:
                                    AlignInContainer: =AlignInContainer.Stretch
                                    BorderColor: =RGBA(166, 166, 166, 1)
                                    BorderStyle: =BorderStyle.None
                                    BorderThickness: =2
                                    DisabledFill: =RGBA(166, 166, 166, 1)
                                    Fill: =ColorValue(AppTheme.palette.neutralLight)
                                    FocusedBorderColor: =RGBA(0, 120, 212, 1)
                                    Height: =1
                                    HoverFill: =RGBA(0, 120, 212, 1)
                                    PressedFill: =RGBA(0, 120, 212, 1)
                                    Width: =1
                                    ZIndex: =2

                                conAppsBody As groupContainer.verticalAutoLayoutContainer:
                                    LayoutDirection: =LayoutDirection.Vertical
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    PaddingBottom: =Self.PaddingTop
                                    PaddingLeft: =16
                                    PaddingRight: =Self.PaddingLeft
                                    PaddingTop: =12
                                    ZIndex: =3

                                    lblAppDescription As Label:
                                        AlignInContainer: =AlignInContainer.Stretch
                                        DisplayMode: =DisplayMode.Edit
                                        FillPortions: =1
                                        Height: =32
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =100
                                        Text: =LookUp('Canvas Apps', DisplayName = ThisItem.ObjectName).'The description.'
                                        VerticalAlignment: =VerticalAlign.Top
                                        Width: =
                                        X: =0
                                        Y: =0
                                        ZIndex: =1

                                    lblAppPersona As label:
                                        Align: =Align.Center
                                        Color: =RGBA(51, 51, 51, 1)
                                        DisabledColor: =RGBA(166, 166, 166, 1)
                                        Fill: =ColorValue(AppTheme.palette.neutralLight)
                                        Font: =Font.'Segoe UI'
                                        Height: =25
                                        OnSelect: =
                                        PaddingBottom: =0
                                        PaddingLeft: =10
                                        PaddingRight: =10
                                        PaddingTop: =0
                                        Size: =10
                                        Text: =ThisItem.Persona
                                        Width: =60
                                        Wrap: =false
                                        X: =10
                                        Y: =galApps.TemplateHeight - lblAppPersona.Height - 10
                                        ZIndex: =2

                    conContentPowerBI As groupContainer.verticalAutoLayoutContainer:
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =24
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Visible: =configStep=11
                        ZIndex: =11

                        galDocs As gallery.galleryVertical:
                            BorderColor: =RGBA(166, 166, 166, 1)
                            FocusedBorderColor: =RGBA(0, 120, 212, 1)
                            FocusedBorderThickness: =2
                            Items: |-
                                =//steps to manually publish and set up the power bi dashboard and get familar with it, currently not part of automatic solution deployment
                                Table(
                                    {
                                        header: "Set up the Power BI dashboard",
                                        url: "https://learn.microsoft.com/power-platform/guidance/coe/setup-powerbi",
                                        description: "You can now configure and modify the Power BI dashboard by working directly with the Power BI template (.pbit) file and Power BI Desktop. Check out our documentation by clicking on 'Configure dashboard' to learn about the steps required to publish the dashboard.",
                                        img: coesetupwizard_bi,
                                        icon: '10330-icon-eBooks-Intune'
                                    },
                                    {
                                        header: "Watch the video walkthrough",
                                        url: "https://www.youtube.com/watch?v=Lsooi7xp6eA&list=PLi9EhCY4z99W5kzaPK1np6sv6AzMQDsXG&index=1&t=1942s",
                                        description: "Watch this video for a walkthrough of how to set up the Power BI dashboard.",
                                        img: "https://i.ytimg.com/vi/Lsooi7xp6eA/hqdefault.jpg",
                                        icon: youtube
                                    },
                                    {
                                        header: "How to use the Power BI dashboard",
                                        url: "https://learn.microsoft.com/power-platform/guidance/coe/power-bi",
                                        description: "The Power BI dashboard provides a holistic view with visualizations and insights into resources in your tenant: environments, apps, flows, connectors, connection references, makers, and audit logs.",
                                        img: coesetupwizard_bi2,
                                        icon: '10330-icon-eBooks-Intune'
                                    }
                                )
                            Layout: =Layout.Vertical
                            LayoutMinHeight: =287
                            LayoutMinWidth: =320
                            OnSelect: =Launch(ThisItem.url)
                            TemplateSize: =conContentPowerBI.Height - 20
                            WrapCount: =3
                            ZIndex: =1

                            "Elevation3_1 As 'Fluent Elevation (1.0.20)'":
                                Depth: ='PowerCAT.Elevation.Depth'.Depth4
                                DisplayMode: =DisplayMode.Edit
                                Height: =conDocs.Height
                                HoverDepth: ='PowerCAT.Elevation.HoverDepth'.Depth8
                                Width: =conDocs.Width
                                X: =0+0
                                Y: =0+0
                                ZIndex: =1

                            conDocs As groupContainer.verticalAutoLayoutContainer:
                                Height: =Parent.TemplateHeight-20
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutMode: =LayoutMode.Auto
                                Width: =Parent.TemplateWidth-20
                                X: =0+0
                                Y: =0+0
                                ZIndex: =2

                                Image2 As image:
                                    AlignInContainer: =AlignInContainer.Stretch
                                    BorderColor: =RGBA(0, 0, 0, 0)
                                    BorderStyle: =BorderStyle.None
                                    BorderThickness: =2
                                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                    DisabledFill: =RGBA(0, 0, 0, 0)
                                    FillPortions: =0.8
                                    Height: =196
                                    HoverBorderColor: =RGBA(0, 0, 0, 0)
                                    HoverFill: =RGBA(0, 0, 0, 0)
                                    Image: =ThisItem.img
                                    ImagePosition: =ImagePosition.Fill
                                    PressedBorderColor: =RGBA(0, 0, 0, 0)
                                    PressedFill: =RGBA(0, 0, 0, 0)
                                    ZIndex: =1

                                Rectangle2_14 As rectangle:
                                    AlignInContainer: =AlignInContainer.Stretch
                                    BorderColor: =RGBA(166, 166, 166, 1)
                                    BorderStyle: =BorderStyle.None
                                    BorderThickness: =2
                                    DisabledFill: =RGBA(166, 166, 166, 1)
                                    Fill: =ColorValue(AppTheme.palette.neutralLight)
                                    FocusedBorderColor: =RGBA(0, 120, 212, 1)
                                    Height: =1
                                    HoverFill: =RGBA(0, 120, 212, 1)
                                    PressedFill: =RGBA(0, 120, 212, 1)
                                    ZIndex: =2

                                conDocsHeader As groupContainer.horizontalAutoLayoutContainer:
                                    FillPortions: =0
                                    Height: =48
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    ZIndex: =3

                                    Image1_1 As image:
                                        BorderColor: =RGBA(0, 0, 0, 0)
                                        BorderStyle: =BorderStyle.None
                                        BorderThickness: =2
                                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                        DisabledFill: =RGBA(0, 0, 0, 0)
                                        Height: =48
                                        HoverBorderColor: =RGBA(0, 0, 0, 0)
                                        HoverFill: =RGBA(0, 0, 0, 0)
                                        Image: =ThisItem.icon
                                        PaddingBottom: =10
                                        PaddingLeft: =10
                                        PaddingRight: =10
                                        PaddingTop: =10
                                        PressedBorderColor: =RGBA(0, 0, 0, 0)
                                        PressedFill: =RGBA(0, 0, 0, 0)
                                        Width: =48
                                        ZIndex: =1

                                    Label2_1 As Label:
                                        AlignInContainer: =AlignInContainer.Stretch
                                        DisplayMode: =DisplayMode.Edit
                                        FontWeight: =FontWeight.Semibold
                                        Height: =32
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =100
                                        PaddingStart: =12
                                        Text: =ThisItem.header
                                        Width: =galDocs.TemplateWidth - Image1_1.Width - 20
                                        X: =0
                                        Y: =0
                                        ZIndex: =2

                                    "Icon7_6 As 'Fluent Icon (1.0.20)'":
                                        DisplayMode: =DisplayMode.Edit
                                        Height: =48
                                        IconName: ="OpenInNewWindow"
                                        IconSize: =20
                                        LayoutMinHeight: =200
                                        LayoutMinWidth: =200
                                        OnChange: =Launch(ThisItem.url, {}, LaunchTarget.New)
                                        Theme: =AppThemeJson
                                        Tooltip: =""
                                        Width: =40
                                        X: =0
                                        Y: =0
                                        ZIndex: =4

                                Rectangle2_16 As rectangle:
                                    BorderColor: =RGBA(166, 166, 166, 1)
                                    BorderStyle: =BorderStyle.None
                                    BorderThickness: =2
                                    DisabledFill: =RGBA(166, 166, 166, 1)
                                    Fill: =ColorValue(AppTheme.palette.neutralLight)
                                    FocusedBorderColor: =RGBA(0, 120, 212, 1)
                                    Height: =1
                                    HoverFill: =RGBA(0, 120, 212, 1)
                                    PressedFill: =RGBA(0, 120, 212, 1)
                                    Width: =1
                                    ZIndex: =4

                                conAppsBody_1 As groupContainer.verticalAutoLayoutContainer:
                                    LayoutDirection: =LayoutDirection.Vertical
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    PaddingBottom: =Self.PaddingTop
                                    PaddingLeft: =16
                                    PaddingRight: =Self.PaddingLeft
                                    PaddingTop: =12
                                    ZIndex: =5

                                    Label4_1 As Label:
                                        AlignInContainer: =AlignInContainer.Start
                                        DisplayMode: =DisplayMode.Edit
                                        FillPortions: =1
                                        Height: =32
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =100
                                        Text: =ThisItem.description
                                        VerticalAlignment: =VerticalAlign.Top
                                        Width: =galDocs.TemplateWidth - 50
                                        X: =0
                                        Y: =0
                                        ZIndex: =1

                                    Button2 As Button:
                                        AlignInContainer: =AlignInContainer.End
                                        ButtonType: ='Button.ButtonType'.Standard
                                        DisplayMode: =DisplayMode.Edit
                                        Height: =32
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =96
                                        OnSelect: =Launch(ThisItem.url)
                                        Text: ="Learn more"
                                        TextColor: =ColorValue(AppTheme.palette.themePrimary)
                                        Width: =96
                                        X: =0
                                        Y: =0
                                        ZIndex: =2

                    "'conContentM365_DELETE?' As groupContainer.verticalAutoLayoutContainer":
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =24
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Visible: =false
                        ZIndex: =12

                        "FluentDetailsList1_1 As 'Fluent Details List (1.0.20)'.pcfdataset":
                            AlignInContainer: =AlignInContainer.Stretch
                            columns_Items: |-
                                =Table(
                                    {
                                        ColName: "Name",
                                        ColDisplayName: "Name",
                                        ColWidth: 500,
                                        ColSortable: false,
                                        ColIsBold: false,
                                        ColResizable: true
                                    },{
                                        ColName: "Icon",
                                        ColDisplayName: "Open resource",
                                        ColCellType: "link",
                                         ColWidth: 200,
                                        ColSortable: false,
                                        ColIsBold: false,
                                        ColResizable: true
                                    },{
                                        ColName: "Link",
                                        ColDisplayName: "View step-by-step instructions",
                                          ColCellType: "link",
                                           ColWidth: 200,
                                        ColSortable: false,
                                        ColIsBold: false,
                                        ColResizable: true
                                    })
                            DisplayMode: =DisplayMode.Edit
                            Height: =200
                            Items: =dataflowSteps
                            LayoutMinHeight: =200
                            LayoutMinWidth: =200
                            OnChange: |-
                                =If(Self.EventName="CellAction",
                                If(Self.EventColumn="Icon", Launch(LookUp(dataflowSteps, Key = Self.EventRowKey).Nav, {}, LaunchTarget.New), Launch(LookUp(dataflowSteps, Key = Self.EventRowKey).LinkNav, {}, LaunchTarget.New)
                                ))
                            RecordKey: ="Key"
                            SelectionType: ='PowerCAT.FluentDetailsList.SelectionType'.None
                            Theme: =AppThemeJson
                            Width: =200
                            X: =0
                            Y: =0
                            ZIndex: =1

                            Icon4_1 As pcfDataField.textualColumn:
                                FieldDisplayName: ="Icon"
                                FieldName: ="Icon"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =1
                                ZIndex: =43

                            Link1_1 As pcfDataField.textualColumn:
                                FieldDisplayName: ="Link"
                                FieldName: ="Link"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =2
                                ZIndex: =44

                            Name1_1 As pcfDataField.textualColumn:
                                FieldDisplayName: ="Name"
                                FieldName: ="Name"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =3
                                ZIndex: =45

                    conContentFinish As groupContainer.verticalAutoLayoutContainer:
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutGap: =24
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        Visible: =configStep=12
                        ZIndex: =13

                        galFinish As gallery.galleryVertical:
                            BorderColor: =RGBA(166, 166, 166, 1)
                            FocusedBorderColor: =RGBA(0, 120, 212, 1)
                            FocusedBorderThickness: =2
                            Items: |-
                                =Table(
                                    {
                                        header: "What's in the Core components",
                                        type: "link",
                                        url: "https://learn.microsoft.com/en-us/power-platform/guidance/coe/core-components",
                                        description: "You're now ready to use the Power BI dashboard to get familiar with your Power Platform adoption, and start using all the apps and flows part of the Core components solution.",
                                        btntext: "Learn more",
                                        icon: '10330-icon-eBooks-Intune'
                                    },
                                    {
                                        header: "CoE Admin Command Center",
                                        type: "link",
                                        url: LookUp('CoE Solution Metadata', ObjectType = "ModelDrivenApp" && CoESolution = "Core" && ObjectName = "CoE Admin Command Center").ObjectURL,
                                        description: "The Command Center allows you to get familiar with available CoE kit resources, check CoE and Power Platform health messages and learn more about Power Platform news.",
                                        btntext: "Open app",
                                        icon: PowerApps_scalable
                                    },
                                {
                                        header: "Explore more features",
                                        type: "page",
                                        page: 'More features',
                                        description: "The CoE starter kit consists of many more features to help you manage, govern and nurture Power Platform adoption. Learn more about these features and set them up when you're ready.",
                                        btntext: "Configure more features",
                                        icon: 'MicrosoftTeams-image (10)'
                                    }, {
                                        header: "Managed Environments overview",
                                        type: "link",
                                        url: "https://learn.microsoft.com/power-platform/admin/managed-environment-overview",
                                        description: "Managed Environments is a suite of capabilities that allows admins to manage Power Platform at scale with more control, less effort, and more insights. Managed Environment capabilities are available in the product.",
                                        btntext: "Learn more",
                                        icon: '10330-icon-eBooks-Intune'
                                
                                    }
                                )
                            Layout: =Layout.Vertical
                            LayoutMinHeight: =287
                            LayoutMinWidth: =320
                            TemplateSize: =If(Self.Layout = Layout.Horizontal, Min(280, Self.Width - 60), Min(280, Self.Height - 60))
                            WrapCount: =3
                            ZIndex: =1

                            "Elevation3_2 As 'Fluent Elevation (1.0.20)'":
                                Depth: ='PowerCAT.Elevation.Depth'.Depth4
                                DisplayMode: =DisplayMode.Edit
                                Height: =conDocs_1.Height
                                HoverDepth: ='PowerCAT.Elevation.HoverDepth'.Depth8
                                Width: =conDocs_1.Width
                                X: =0+0
                                Y: =0+0
                                ZIndex: =1

                            conDocs_1 As groupContainer.verticalAutoLayoutContainer:
                                Height: =Parent.TemplateHeight-20
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutMode: =LayoutMode.Auto
                                Width: =Parent.TemplateWidth-20
                                X: =0+0
                                Y: =0+0
                                ZIndex: =2

                                conDocsHeader_1 As groupContainer.horizontalAutoLayoutContainer:
                                    AlignInContainer: =AlignInContainer.SetByContainer
                                    FillPortions: =0
                                    Height: =48
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    ZIndex: =1

                                    Image1_2 As image:
                                        BorderColor: =RGBA(0, 0, 0, 0)
                                        BorderStyle: =BorderStyle.None
                                        BorderThickness: =2
                                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                        DisabledFill: =RGBA(0, 0, 0, 0)
                                        Height: =48
                                        HoverBorderColor: =RGBA(0, 0, 0, 0)
                                        HoverFill: =RGBA(0, 0, 0, 0)
                                        Image: =ThisItem.icon
                                        PaddingBottom: =10
                                        PaddingLeft: =10
                                        PaddingRight: =10
                                        PaddingTop: =10
                                        PressedBorderColor: =RGBA(0, 0, 0, 0)
                                        PressedFill: =RGBA(0, 0, 0, 0)
                                        Width: =48
                                        ZIndex: =1

                                    Label2_2 As Label:
                                        AlignInContainer: =AlignInContainer.Stretch
                                        DisplayMode: =DisplayMode.Edit
                                        FontWeight: =FontWeight.Semibold
                                        Height: =32
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =100
                                        PaddingStart: =12
                                        Text: =ThisItem.header
                                        Width: =galFinish.TemplateWidth - Image1_2.Width - 20
                                        X: =0
                                        Y: =0
                                        ZIndex: =2

                                    "Icon7_7 As 'Fluent Icon (1.0.20)'":
                                        DisplayMode: =DisplayMode.Edit
                                        Height: =48
                                        IconName: ="OpenInNewWindow"
                                        IconSize: =20
                                        LayoutMinHeight: =200
                                        LayoutMinWidth: =200
                                        OnChange: =Launch(ThisItem.url, {}, LaunchTarget.New)
                                        Theme: =AppThemeJson
                                        Width: =40
                                        X: =0
                                        Y: =0
                                        ZIndex: =4

                                Rectangle2_17 As rectangle:
                                    BorderColor: =RGBA(166, 166, 166, 1)
                                    BorderStyle: =BorderStyle.None
                                    BorderThickness: =2
                                    DisabledFill: =RGBA(166, 166, 166, 1)
                                    Fill: =ColorValue(AppTheme.palette.neutralLight)
                                    FocusedBorderColor: =RGBA(0, 120, 212, 1)
                                    Height: =1
                                    HoverFill: =RGBA(0, 120, 212, 1)
                                    PressedFill: =RGBA(0, 120, 212, 1)
                                    Width: =1
                                    ZIndex: =2

                                conAppsBody_2 As groupContainer.verticalAutoLayoutContainer:
                                    LayoutDirection: =LayoutDirection.Vertical
                                    LayoutMinHeight: =100
                                    LayoutMinWidth: =250
                                    LayoutMode: =LayoutMode.Auto
                                    PaddingBottom: =Self.PaddingTop
                                    PaddingLeft: =16
                                    PaddingRight: =Self.PaddingLeft
                                    PaddingTop: =12
                                    ZIndex: =3

                                    Label4_2 As Label:
                                        AlignInContainer: =AlignInContainer.Start
                                        DisplayMode: =DisplayMode.Edit
                                        FillPortions: =1
                                        Height: =32
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =100
                                        Text: =ThisItem.description
                                        VerticalAlignment: =VerticalAlign.Top
                                        Width: =galFinish.TemplateWidth - 50
                                        X: =0
                                        Y: =0
                                        ZIndex: =1

                                    Button2_1 As Button:
                                        AlignInContainer: =AlignInContainer.Stretch
                                        Alignment: =Align.Right
                                        ButtonType: ='Button.ButtonType'.Standard
                                        DisplayMode: =DisplayMode.Edit
                                        Height: =32
                                        LayoutMinHeight: =32
                                        LayoutMinWidth: =96
                                        OnSelect: =If(ThisItem.type = "page", Navigate('More features'), Launch(ThisItem.url))
                                        Text: =ThisItem.btntext
                                        TextColor: =ColorValue(AppTheme.palette.themePrimary)
                                        Width: =96
                                        X: =0
                                        Y: =0
                                        ZIndex: =2

                Rectangle2_2 As rectangle:
                    AlignInContainer: =AlignInContainer.Stretch
                    BorderColor: =RGBA(166, 166, 166, 1)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    DisabledFill: =RGBA(166, 166, 166, 1)
                    Fill: =ColorValue(AppTheme.palette.neutralLight)
                    FocusedBorderColor: =RGBA(0, 120, 212, 1)
                    Height: =1
                    HoverFill: =RGBA(0, 120, 212, 1)
                    PressedFill: =RGBA(0, 120, 212, 1)
                    ZIndex: =5

                conMainNav As groupContainer.horizontalAutoLayoutContainer:
                    FillPortions: =0
                    Height: =80
                    LayoutGap: =24
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =conContentAll.PaddingLeft
                    ZIndex: =6

                    btnBack As Button:
                        AlignInContainer: =AlignInContainer.Center
                        BorderColor: =ColorValue(AppTheme.palette.neutralPrimary)
                        BorderStyle: =BorderStyle.Solid
                        BorderThickness: =1
                        ButtonType: ='Button.ButtonType'.Standard
                        DisplayMode: |-
                            =If(
                                configStep=1,
                                DisplayMode.Disabled,
                                DisplayMode.Edit
                            )
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =If(
                                configStep > 1,
                                With(
                                    {nextConfigStep: configStep - 1},
                                    // Go to the next step.
                                    Set(
                                        configStep,
                                        If(And(myDataSource.isSyncFlows, configStep = 10), 6,
                                        nextConfigStep)
                                    );
                               /*     UpdateIf(
                                        colSetupSteps,
                                        ItemKey = Text(nextConfigStep),
                                        {ItemState: "Current"}
                                    );      
                                    UpdateIf(
                                        colSetupSteps,
                                        ItemKey = Text(configStep),
                                        {ItemState: "Unsaved"}
                                    );*/
                                )
                            );
                            /*If(configStep = 7 || configStep = 8 || configStep = 9,
                                UpdateIf(
                                        colSetupSteps,
                                        And(ItemKey = Text(configStep), configStep = 7),
                                        {ItemState: "CurrentWithSubSteps"}
                                    ));*/
                        Text: ="Back"
                        Width: =72
                        X: =40
                        Y: =40
                        ZIndex: =1

                    btnNext As Button:
                        AlignInContainer: =AlignInContainer.Center
                        ButtonType: ='Button.ButtonType'.Primary
                        DisplayMode: |-
                            =If(configStep = 5,
                                If(And(CountRows(
                                    Filter(
                                        'CoE Solution Metadata',
                                        RerunOnUpgrade = 'RerunOnUpgrade (CoE Solution Metadata)'.Yes && CoESolutionArea = "Inventory"
                                    )
                                ) = CountRows(
                                    Filter(
                                        'CoE Solution Metadata',
                                        RerunOnUpgrade = 'RerunOnUpgrade (CoE Solution Metadata)'.Yes && CoESolutionArea = "Inventory" && !IsBlank(LastRun) 
                                    )
                                ), CountRows(
                                    Filter(
                                        'CoE Solution Metadata',
                                        RerunOnUpgrade = 'RerunOnUpgrade (CoE Solution Metadata)'.Yes && CoESolutionArea = "Inventory" && !IsBlank(LastRun) 
                                    )) > 0),
                                DisplayMode.Edit,
                                DisplayMode.Disabled), 
                                DisplayMode.Edit)
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =//update isProdCoE
                            Set(isProdCoE, First(cmbBoolean_1.SelectedItems).Value);
                            
                            With(
                                {
                                    nextConfigStep: configStep + 1,
                                    maxConfigStep: Max(
                                        colSetupSteps,
                                        Value(ItemKey)
                                    )
                                },
                                If(
                                    configStep < maxConfigStep,
                                    // Perform different actions depending on what the next step is.
                                    Switch(
                                        nextConfigStep,
                                        2,
                                        Select(btnSetCommunicationMethods),
                                        3,
                                        Select(btnGetTenantId),
                                        4,
                                        Select(btnUpdateEnvironmentVariables),
                                        5,
                                        Set(startTimer, true),
                                        //Select(btnActivateOtherSyncFlows),
                                        6,
                                        Select(btnActivateOtherSyncFlows),
                                        //Select(btnCollectFlowsWithMetadata),
                                        7, 
                                        Select(btnAddSystemMaker),
                                        8,
                                        Select(btnConfigureDataflows),
                                        10,
                                        Select(btnRunOrphanedMakers)
                                    );
                                    // Complete the current step.
                            If(
                                        !(configStep exactin colStepsCompleted.Value),
                                        Collect(
                                            colStepsCompleted,
                                            configStep
                                        );
                                     /*   UpdateIf(colSetupSteps, ItemKey=Text(configStep), {ItemState: "Completed"});         
                                        UpdateIf(colSetupSteps, ItemKey=Text(nextConfigStep), {ItemState: "Current"});
                                        UpdateIf(colSetupSteps, And(ItemKey=Text(nextConfigStep), ItemKey="7"), {ItemState: "CurrentWithSubSteps"});
                                        UpdateIf(colSetupSteps, And(ItemKey=Text(configStep), ItemKey="7"), {ItemState: "CurrentWithSubSteps"});
                                        If(configStep = 7 || configStep = 8 || configStep = 9, UpdateIf(colSetupSteps, And(ItemKey=Text(configStep), ItemKey="7"), {ItemState: "CurrentWithSubSteps"}));*/
                                        
                                        Patch(
                                            'Setup Wizard State metadata',
                                            Defaults('Setup Wizard State metadata'),
                                            {
                                                Name: "Initial Setup",
                                                'Last Completed Step': configStep,
                                                'Solution Name': "CenterofExcellenceCoreComponents",
                                                'Solution Version': coESolutionVersion
                                            }
                                        )
                                    );
                                    // Go to the next step.
                            Set(
                                        configStep,
                                        If(And(myDataSource.isSyncFlows, configStep = 6), 10, 
                                        nextConfigStep)
                                    )
                                )
                            )
                        Text: ="Next"
                        Visible: =configStep<12
                        Width: =72
                        X: =0
                        Y: =0
                        ZIndex: =2

                    btnFinish As Button:
                        AlignInContainer: =AlignInContainer.Center
                        ButtonType: ='Button.ButtonType'.Primary
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: =Navigate('More features')
                        Text: ="Done"
                        Visible: =configStep=Max(colSetupSteps,Value(ItemKey))
                        Width: =72
                        X: =0
                        Y: =0
                        ZIndex: =3

                    btnStepUpgradeComponents As Button:
                        ButtonType: ='Button.ButtonType'.Primary
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |
                            =//fetching new solution components
                            Set(
                                showShimmer,
                                true
                            );
                            //fetching when the solution was last installed
                            UpdateContext(
                                {
                                    latestInstall: First(
                                        SortByColumns(
                                            Filter(
                                                'Solutions History',
                                                'Solution Name' = "CenterofExcellenceCoreComponents" && Operation = 'Operation (Solutions History)'.Import
                                            ),
                                            "msdyn_starttime",
                                            SortOrder.Descending
                                        )
                                    ).'Start Time'
                                }
                            );
                            //getting canvas apps that have been added since the last install (that are new with this upgrade)
                            ClearCollect(
                                newCanvas,
                                Filter(
                                    'Canvas Apps',
                                    Solution = coeSolution && 'Created Time' > latestInstall
                                )
                            );
                            //getting flows that have been added since the last install (that are new with this upgrade)
                            ClearCollect(
                                newFlows,
                                Filter(
                                    Processes,
                                    Solution = coeSolution && 'Created On' > latestInstall
                                )
                            );
                            //getting environment variables that have been added since the last install (that are new with this upgrade)
                            ClearCollect(
                                newEnvVars,
                                Filter(
                                    'Environment Variable Definitions',
                                    solutionid = coeSolution && 'Created On' > latestInstall
                                )
                            );
                            //combining new apps, flows and env vars into a new collection 
                            ClearCollect(
                                newThings,
                                AddColumns(
                                    RenameColumns(
                                        ShowColumns(
                                            newCanvas,
                                            "displayname",
                                            "canvasappid"
                                        ),
                                        "canvasappid",
                                        "objectid"
                                    ),
                                    "type",
                                    "Canvas App"
                                )
                            );
                            Collect(
                                newThings,
                                AddColumns(
                                    RenameColumns(
                                        ShowColumns(
                                            newFlows,
                                            "name",
                                            "workflowidunique"
                                        ),
                                        "name",
                                        "displayname",
                                        "workflowidunique",
                                        "objectid"
                                    ),
                                    "type",
                                    "Cloud Flow"
                                )
                            );
                            Collect(
                                newThings,
                                AddColumns(
                                    RenameColumns(
                                        ShowColumns(
                                            newEnvVars,
                                            "displayname",
                                            "environmentvariabledefinitionidunique"
                                        ),
                                        "environmentvariabledefinitionidunique",
                                        "objectid"
                                    ),
                                    "type",
                                    "Environment Variable"
                                )
                            );
                            Set(
                                showShimmer,
                                false
                            );
                        Text: ="Step 2"
                        Visible: =false
                        Width: =1
                        X: =0
                        Y: =0
                        ZIndex: =4

                    btnStepUpgradeLayers As Button:
                        ButtonType: ='Button.ButtonType'.Primary
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =Set(showShimmer, true);
                            
                            ClearCollect(
                                coeApps,
                                Filter(
                                    'Canvas Apps',
                                    Solution = coeSolution
                                )
                            );
                            
                            Clear(AppsWithMetadata);
                            ForAll(
                                Filter(
                                    'CoE Solution Metadata',
                                    ObjectType = "CanvasApp"
                                ),
                                With(
                                    {
                                        ThisObject: LookUp('Canvas Apps',DisplayName = ObjectName)
                                    },
                                    Collect(
                                        AppsWithMetadata,
                                        {
                                            theType: ObjectType,
                                            theName: ObjectName,
                                            theSolution: CoESolution,
                                            theGUID: ThisObject.CanvasAppId,
                                            theSoltuionFlowGUID: ThisObject.Solution,
                                            theSolutionGUID: ThisObject.Solution,
                                            hasUnmanagedLayer: false,
                                            //theFlowHasUnmanagedLayer: false,
                                            lastModifiedTime: ThisObject.'Last Modified Time',
                                            lastModifiedBy: ThisObject.'Last Modified By',
                                            theFlowHasUnmanagedLayer: If(
                                        ThisObject.Solution = GUID(unmanagedSolutionID),
                                        true,
                                        false
                                    )
                                        }
                                    )
                                )
                            );
                            /*
                            UpdateIf(
                                AppsWithMetadata,
                                IsBlank(theSolutionGUID),
                                {
                                    theSolutionGUID: First(
                                        Filter(
                                            'Canvas Apps',
                                            DisplayName = theName
                                        )
                                    ).solutionid
                                }
                            );
                            
                            UpdateIf(
                                AppsWithMetadata,
                                true,
                                {
                                    theFlowHasUnmanagedLayer: 
                                    If(
                                        theSolutionGUID = GUID(unmanagedSolutionID),
                                        true,
                                        false
                                    )
                                }
                            );*/
                            
                            ClearCollect(
                                coeFlows,
                                Filter(
                                    Processes,
                                    Solution = coeSolution
                                )
                            );
                            Clear(FlowsWithMetadata);
                            ForAll(
                                Filter(
                                    'CoE Solution Metadata',
                                    ObjectType = "CloudFlows"
                                ),
                            
                                With(
                                    {
                                        ThisObject: LookUp(Processes,'Process Name' = ObjectName)
                                    },
                                    Collect(
                                        FlowsWithMetadata,
                                        {
                                            theType: ObjectType,
                                            theName: ObjectName,
                                            theSolution: CoESolution,
                                            theArea: CoESolutionArea,
                                            theSetupOrder: InstallOrder,
                                            theFlagNote: Flag,
                                            theGUID: ThisObject.Process,
                                            theSoltuionFlowGUID: ThisObject.Process,
                                            theSolutionGUID: ThisObject.Solution,
                                            theState: ThisObject.Status,
                                            thePublishedState: ThisObject.'Component State',
                                            theIsErrorState: false,
                                            hasUnmanagedLayer: false,
                                            theFlowHasUnmanagedLayer: If(
                                        ThisObject.Solution = GUID(unmanagedSolutionID),
                                        true,
                                        false
                                    ),
                                            reRun: RerunOnUpgrade,
                                            lastRun: LastRun,
                                            lastRunStatus: LastRunPassed,
                                            neededForBYODL: UsedForByodlCoe,
                                            neededForSyncFlows: UsedForSyncFlowCoe,
                                            theUrl: ObjectMakerURL,
                                            lastModifiedTime: ThisObject.'Modified On',
                                            lastModifiedBy: ThisObject.'Modified By'
                                        }
                                    )
                                )
                            );
                            //REMOVE FLOWS THE USER HAS NOT SETUP, AND SET SOLUTION AND MANAGED LAYERS
                            //RemoveIf(
                            //    FlowsWithMetadata,
                             //   IsBlank(theGUID)
                            //);
                            /*UpdateIf(
                                FlowsWithMetadata,
                                IsBlank(theSolutionGUID),
                                {
                                    theSolutionGUID: First(
                                        Filter(
                                            Processes,
                                            'Process Name' = theName
                                        )
                                    ).solutionid
                                }
                            );
                            UpdateIf(
                                FlowsWithMetadata,
                                true,
                                {
                                    theFlowHasUnmanagedLayer: If(
                                        theSolutionGUID = GUID(unmanagedSolutionID),
                                        true,
                                        false
                                    )
                                }
                            );*/
                            
                            ClearCollect(colLayers, ShowColumns(Filter(FlowsWithMetadata, theFlowHasUnmanagedLayer = true), "theGUID", "theSolutionGUID", "theName", "theFlowHasUnmanagedLayer", "theType", "lastModifiedTime"));
                            Collect(colLayers, ShowColumns(Filter(AppsWithMetadata, theFlowHasUnmanagedLayer = true), "theGUID","theSolutionGUID", "theName", "theFlowHasUnmanagedLayer", "theType", "lastModifiedTime"));
                            Set(showShimmer, false);
                        Text: ="Step 2"
                        Visible: =false
                        Width: =1
                        X: =0
                        Y: =0
                        ZIndex: =5

                    btnUpdateEnvironmentVariables As Button:
                        ButtonType: ='Button.ButtonType'.Primary
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |
                            =Set(
                                loadSyncFlowWait,
                                true
                            );
                            //updating Power Apps Maker environment variable based on region - commercial, gcc, gcc high or dod
                            Patch(
                                [@'Environment Variable Values'],
                                Defaults([@'Environment Variable Values']),
                                {
                                    'Environment Variable Definition': LookUp(
                                        [@'Environment Variable Definitions'],
                                        'Schema Name' = "admin_PowerAppEnvironmentVariable"
                                    ),
                                    'Schema Name': "admin_PowerAppEnvironmentVariable",
                                    Value: myRegionCloud.makerUrl
                                }
                            );
                            Set(
                                theAppMakerURL,
                                myRegionCloud.makerUrl
                            );
                            //updating Power Apps Player environment variable based on region - commercial, gcc, gcc high or dod
                            Patch(
                                [@'Environment Variable Values'],
                                Defaults([@'Environment Variable Values']),
                                {
                                    'Environment Variable Definition': LookUp(
                                        [@'Environment Variable Definitions'],
                                        'Schema Name' = "admin_PowerAppPlayerEnvironmentVariable"
                                    ),
                                    'Schema Name': "admin_PowerAppPlayerEnvironmentVariable",
                                    Value: myRegionCloud.appUrl
                                }
                            );
                            //updating Power Automate Maker environment variable based on region - commercial, gcc, gcc high or dod
                            Patch(
                                [@'Environment Variable Values'],
                                Defaults([@'Environment Variable Values']),
                                {
                                    'Environment Variable Definition': LookUp(
                                        [@'Environment Variable Definitions'],
                                        'Schema Name' = "admin_PowerAutomateEnvironmentVariable"
                                    ),
                                    'Schema Name': "admin_PowerAutomateEnvironmentVariable",
                                    Value: myRegionCloud.automateUrl
                                }
                            );
                            //updating Graph URL environment variable based on region - commercial, gcc, gcc high or dod
                            Patch(
                                [@'Environment Variable Values'],
                                Defaults([@'Environment Variable Values']),
                                {
                                    'Environment Variable Definition': LookUp(
                                        [@'Environment Variable Definitions'],
                                        'Schema Name' = "admin_GraphURLEnvironmentVariable"
                                    ),
                                    'Schema Name': "admin_GraphURLEnvironmentVariable",
                                    Value: myRegionCloud.graphUrl
                                }
                            );
                            
                            //updating Audience URL for HTTP calls environment variable based on region - commercial, gcc, gcc high or dod
                            Patch(
                                [@'Environment Variable Values'],
                                Defaults([@'Environment Variable Values']),
                                {
                                    'Environment Variable Definition': LookUp(
                                        [@'Environment Variable Definitions'],
                                        'Schema Name' = "admin_AuditLogsAudience"
                                    ),
                                    'Schema Name': "admin_AuditLogsAudience",
                                    Value: myRegionCloud.audienceUrl
                                }
                            );
                            
                            //updating Authority URL for HTTP calls environment variable based on region - commercial, gcc, gcc high or dod
                            Patch(
                                [@'Environment Variable Values'],
                                Defaults([@'Environment Variable Values']),
                                {
                                    'Environment Variable Definition': LookUp(
                                        [@'Environment Variable Definitions'],
                                        'Schema Name' = "admin_AuditLogsAuthority"
                                    ),
                                    'Schema Name': "admin_AuditLogsAuthority",
                                    Value: myRegionCloud.authorityUrl
                                }
                            );
                            
                            
                            
                            //updating Dataflow IDs
                            Patch(
                                [@'Environment Variable Values'],
                                Defaults([@'Environment Variable Values']),
                                {
                                    'Environment Variable Definition': LookUp(
                                        [@'Environment Variable Definitions'],
                                        'Schema Name' = "admin_AppDataflowID"
                                    ),
                                    'Schema Name': "admin_AppDataflowID",
                                    Value: LookUp(
                                        myDataflows,
                                        Name = "CoE BYODL Apps"
                                    ).OriginalDataflowId
                                }
                            );
                            Patch(
                                [@'Environment Variable Values'],
                                Defaults([@'Environment Variable Values']),
                                {
                                    'Environment Variable Definition': LookUp(
                                        [@'Environment Variable Definitions'],
                                        'Schema Name' = "admin_EnvironmentDataflowID"
                                    ),
                                    'Schema Name': "admin_EnvironmentDataflowID",
                                    Value: LookUp(
                                        myDataflows,
                                        Name = "CoE BYODL Environments"
                                    ).OriginalDataflowId
                                }
                            );
                            Patch(
                                [@'Environment Variable Values'],
                                Defaults([@'Environment Variable Values']),
                                {
                                    'Environment Variable Definition': LookUp(
                                        [@'Environment Variable Definitions'],
                                        'Schema Name' = "admin_FlowDataflowID"
                                    ),
                                    'Schema Name': "admin_FlowDataflowID",
                                    Value: LookUp(
                                        myDataflows,
                                        Name = "CoE BYODL Flows"
                                    ).OriginalDataflowId
                                }
                            );
                            Patch(
                                [@'Environment Variable Values'],
                                Defaults([@'Environment Variable Values']),
                                {
                                    'Environment Variable Definition': LookUp(
                                        [@'Environment Variable Definitions'],
                                        'Schema Name' = "admin_MakerDataflowID"
                                    ),
                                    'Schema Name': "admin_MakerDataflowID",
                                    Value: LookUp(
                                        myDataflows,
                                        Name = "CoE BYODL Makers"
                                    ).OriginalDataflowId
                                }
                            );
                            Patch(
                                [@'Environment Variable Values'],
                                Defaults([@'Environment Variable Values']),
                                {
                                    'Environment Variable Definition': LookUp(
                                        [@'Environment Variable Definitions'],
                                        'Schema Name' = "admin_AppConnectionsDataflowID"
                                    ),
                                    'Schema Name': "admin_AppConnectionsDataflowID",
                                    Value: LookUp(
                                        myDataflows,
                                        Name = "CoE BYODL Apps Connection"
                                    ).OriginalDataflowId
                                }
                            );
                            Patch(
                                [@'Environment Variable Values'],
                                Defaults([@'Environment Variable Values']),
                                {
                                    'Environment Variable Definition': LookUp(
                                        [@'Environment Variable Definitions'],
                                        'Schema Name' = "admin_AppUsageDataflowID"
                                    ),
                                    'Schema Name': "admin_AppUsageDataflowID",
                                    Value: LookUp(
                                        myDataflows,
                                        Name = "CoE BYODL Apps Last Launched Date"
                                    ).OriginalDataflowId
                                }
                            );
                            Patch(
                                [@'Environment Variable Values'],
                                Defaults([@'Environment Variable Values']),
                                {
                                    'Environment Variable Definition': LookUp(
                                        [@'Environment Variable Definitions'],
                                        'Schema Name' = "admin_FlowConnectionsDataflowID"
                                    ),
                                    'Schema Name': "admin_FlowConnectionsDataflowID",
                                    Value: LookUp(
                                        myDataflows,
                                        Name = "CoE BYODL Flows Connection"
                                    ).OriginalDataflowId
                                }
                            );
                            Patch(
                                [@'Environment Variable Values'],
                                Defaults([@'Environment Variable Values']),
                                {
                                    'Environment Variable Definition': LookUp(
                                        [@'Environment Variable Definitions'],
                                        'Schema Name' = "admin_FlowUsageDataflowID"
                                    ),
                                    'Schema Name': "admin_FlowUsageDataflowID",
                                    Value: LookUp(
                                        myDataflows,
                                        Name = "CoE BYODL Flows Last Run Date"
                                    ).OriginalDataflowId
                                }
                            );
                            Patch(
                                [@'Environment Variable Values'],
                                Defaults([@'Environment Variable Values']),
                                {
                                    'Environment Variable Definition': LookUp(
                                        [@'Environment Variable Definitions'],
                                        'Schema Name' = "admin_ModelAppDataflowID"
                                    ),
                                    'Schema Name': "admin_ModelAppDataflowID",
                                    Value: LookUp(
                                        myDataflows,
                                        Name = "CoE BYODL Model Driven Apps"
                                    ).OriginalDataflowId
                                }
                            );
                            
                            
                            
                            Clear(colMandatoryEnvVars);
                            //updating all mandatory environment variable based on input in the form
                            ForAll(
                                galMandatoryEnvVars.AllItems,
                                Collect(
                                    colMandatoryEnvVars,
                                    {
                                        'Schema Name': ThisRecord.lblEnvVarSchema.Text,
                                        Value: If(
                                            !IsBlank(ThisRecord.txtEnvVarValue.Value),
                                            ThisRecord.txtEnvVarValue.Value,
                                            If(
                                                ThisRecord.lblEnvVarSchema.Text = "admin_TenantID",
                                                tenantId,
                                                If(
                                                    ThisRecord.lblEnvVarSchema.Text = "admin_ApprovalAdmin",
                                                    myUser.mail
                                                )
                                            )
                                        )
                                    }
                                )
                            );
                            ForAll(
                                colMandatoryEnvVars As aPatch,
                                Patch(
                                    [@'Environment Variable Values'],
                                    Defaults([@'Environment Variable Values']),
                                    {
                                        'Schema Name': aPatch.'Schema Name',
                                        Value: aPatch.Value
                                    }
                                )
                            );
                                /*Patch(
                                    [@'Environment Variable Values'],
                                    Defaults([@'Environment Variable Values']),
                                    {
                                         'Schema Name': ThisRecord.lblEnvVarSchema.Text,
                                        'Environment Variable Definition': LookUp(
                                            [@'Environment Variable Definitions'],
                                            'Schema Name' = ThisRecord.'Schema Name'
                                        ),           
                                        Value: ThisRecord.txtEnvVarValue.Value
                                    }
                                )
                            );*/
                            //activate setup flows as they depend on these environment variables
                            //don't perform this step if we have already done it
                            ClearCollect(
                                    colSetupFlows,
                                    Filter(
                                        Processes,
                                        "Solution Metadata" in 'Process Name' || "Configure Emails" in 'Process Name' || "(Connectors)" in 'Process Name' || "UpdateDataflowEnvironment" in 'Process Name' || "UpdateInventoryType" in 'Process Name'
                                    )
                                );
                                UpdateIf(
                                    colSetupFlows,
                                    Status = 'Status (Processes)'.Draft,
                                    {Status: 'Status (Processes)'.Activated}
                                );
                                Patch(
                                    Processes,
                                    colSetupFlows
                                );
                                
                            /*Patch(
                                Processes,
                                First(
                                    Filter(
                                        Processes,
                                        "Configure Emails" in 'Process Name'
                                    )
                                ),
                                {Status: 'Status (Processes)'.Activated}
                            );
                            Patch(
                                Processes,
                                First(
                                    Filter(
                                        Processes,
                                        "(Connectors)" in 'Process Name'
                                    )
                                ),
                                {Status: 'Status (Processes)'.Activated}
                            );
                            Patch(
                                Processes,
                                First(
                                    Filter(
                                        Processes,
                                        "RunInitialFlows" in 'Process Name'
                                    )
                                ),
                                {Status: 'Status (Processes)'.Activated}
                            );*/
                            Refresh(Processes);
                                
                            
                            /*updating optional environment variable based on input in the form
                            Clear(colOptionalEnvVars);
                            ForAll(
                                galOptionalEnvVars.AllItems,
                                If(
                                    !IsBlank(ThisRecord.txtEnvVarValue_1.Value),
                                    Collect(
                                        colOptionalEnvVars,
                                        {
                                            'Schema Name': ThisRecord.lblOptionalEnvVarSchema_1.Text,
                                            Value: ThisRecord.txtEnvVarValue_1.Value
                                        }
                                    )
                                )
                            );
                            ForAll(
                                colOptionalEnvVars As bPatch,
                                Patch(
                                    [@'Environment Variable Values'],
                                    Defaults([@'Environment Variable Values']),
                                    {
                                        'Schema Name': bPatch.'Schema Name',
                                        Value: bPatch.Value
                                    }
                                )
                            );*/
                            UpdateContext(
                                {
                                    showConnectorBtnVis: true,
                                    showEmailBtnVis: true,
                                    startTimer: true
                                }
                            );
                            IfError(
                                Patch(
                                    Processes,
                                    LookUp(
                                        Processes,
                                        "RunInitialFlows" in 'Process Name'
                                    ),
                                    {Status: 'Status (Processes)'.Activated}
                                ),
                                IfError(
                                    Patch(
                                        Processes,
                                        LookUp(
                                            Processes,
                                            "RunInitialFlows" in 'Process Name'
                                        ),
                                        {Status: 'Status (Processes)'.Activated}
                                    ),
                                    IfError(
                                        Patch(
                                            Processes,
                                            LookUp(
                                                Processes,
                                                "RunInitialFlows" in 'Process Name'
                                            ),
                                            {Status: 'Status (Processes)'.Activated}
                                        ),
                                        Set(
                                            x,
                                            true
                                        )
                                    )
                                )
                            );
                            IfError(
                                Patch(
                                    Processes,
                                    LookUp(
                                        Processes,
                                        "Maker Check" in 'Process Name'
                                    ),
                                    {Status: 'Status (Processes)'.Activated}
                                ),
                                Notify("Failed to turn on Helper - Maker Check flow. Please navigate to the solution and turn this flow on manually.")
                            );
                            Patch(
                                'Setup Wizard State metadata',
                                Defaults('Setup Wizard State metadata'),
                                {
                                    Name: "Initial Setup",
                                    'Last Completed Step': 4,
                                    'Solution Name': "CenterofExcellenceCoreComponents",
                                    'Solution Version': coESolutionVersion
                                }
                            );
                            Set(
                                loadSyncFlowWait,
                                false
                            );
                        Visible: =false
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =6

                    btnActivateOtherSyncFlows As Button:
                        ButtonType: ='Button.ButtonType'.Primary
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |
                            =//now that environment variables are set, turn on sync flows
                            Set(
                                loadSyncFlowWait,
                                true
                            );
                            Patch(
                                [@'Environment Variable Values'],
                                Defaults([@'Environment Variable Values']),
                                {
                                    'Environment Variable Definition': LookUp(
                                        [@'Environment Variable Definitions'],
                                        'Schema Name' = "admin_InventoryandTelemetryinAzureDataStorageaccount"
                                    ),
                                    'Schema Name': "admin_InventoryandTelemetryinAzureDataStorageaccount",
                                    Value: If(
                                        myDataSource.isBYODL,
                                        "yes",
                                        "no"
                                    )
                                }
                            );
                            //'Admin|SyncTemplatev3CoESolutionMetadata'.Run();
                                If(
                                    myDataSource.isBYODL,
                                    ClearCollect(
                                        myFlowstoTurnOn,
                                        SortByColumns(
                                            Filter(
                                                'CoE Solution Metadata',
                                                And(
                                                    CoESolutionArea = "Inventory",
                                                    UsedForByodlCoe = 'UsedForByodlCoe (CoE Solution Metadata)'.Yes,
                                                    !("CoE BYODL" in ObjectName)
                                                )
                                            ), "admin_installorder"
                                        )
                                    ),
                                    ClearCollect(
                                        myFlowstoTurnOn,
                                         SortByColumns(
                                            Filter(
                                                'CoE Solution Metadata',
                                                And(
                                                    CoESolutionArea = "Inventory",
                                                    UsedForSyncFlowCoe = 'UsedForSyncFlowCoe (CoE Solution Metadata)'.Yes,
                                                    !("CoE BYODL" in ObjectName)
                                                )
                                            ),
                                           "admin_installorder"
                                        )
                                    )
                                );
                                ForAll(
                                    myFlowstoTurnOn,
                                    If(
                                        LookUp(
                                            Processes,
                                           'Process Name' = ObjectName
                                        ).Status = 'Status (Processes)'.Draft,
                                        IfError(Patch(
                                            Processes,
                                            LookUp(
                                                Processes,
                                                'Process Name' = ObjectName
                                            ),
                                            {Status: 'Status (Processes)'.Activated}
                                        ), IfError(Patch(
                                            Processes,
                                            LookUp(
                                                Processes,
                                                'Process Name' = ObjectName
                                            ),
                                            {Status: 'Status (Processes)'.Activated}
                                        ), IfError(Patch(
                                            Processes,
                                            LookUp(
                                                Processes,
                                                'Process Name' = ObjectName
                                            ),
                                            {Status: 'Status (Processes)'.Activated}
                                        ), Blank())))
                                    ));
                                 /*   ForAll(
                                    myFlowstoTurnOn,
                                    If(
                                        LookUp(
                                            Processes,
                                            'Process Name' = ObjectName
                                        ).Status = 'Status (Processes)'.Draft,
                                        IfError(Patch(
                                            Processes,
                                            LookUp(
                                                Processes,
                                               'Process Name' = ObjectName
                                            ),
                                            {Status: 'Status (Processes)'.Activated}
                                        ), IfError(Patch(
                                            Processes,
                                            LookUp(
                                                Processes,
                                                'Process Name' = ObjectName
                                            ),
                                            {Status: 'Status (Processes)'.Activated}
                                        ), Patch(
                                            Processes,
                                            LookUp(
                                                Processes,
                                               'Process Name' = ObjectName
                                            ),
                                            {Status: 'Status (Processes)'.Activated}
                                        )))
                                    )
                                )*/
                            
                            /*
                            //'Admin|SyncTemplatev3(Connectors)'.Run();
                            //'Admin|SyncTemplatev3ConfigureEmails'.Run();
                                IfError(
                                    Patch(
                                        Processes,
                                        LookUp(
                                            Processes,
                                            "CanvasAppOperations" in 'Process Name'
                                        ),
                                        {Status: 'Status (Processes)'.Activated}
                                    ),
                                    Patch(
                                        Processes,
                                        LookUp(
                                            Processes,
                                            "CanvasAppOperations" in 'Process Name'
                                        ),
                                        {Status: 'Status (Processes)'.Activated}
                                    )
                                );
                                IfError(
                                    Patch(
                                        Processes,
                                        LookUp(
                                            Processes,
                                            "CloudFlowOperations" in 'Process Name'
                                        ),
                                        {Status: 'Status (Processes)'.Activated}
                                    ),
                                    Patch(
                                        Processes,
                                        LookUp(
                                            Processes,
                                            "CloudFlowOperations" in 'Process Name'
                                        ),
                                        {Status: 'Status (Processes)'.Activated}
                                    )
                                );
                                ClearCollect(
                                    colHelperFlowsToTurnOn,
                                    Filter(
                                        Processes,
                                        And(
                                            solutionid = coeSolution,
                                            Or(
                                                "Command Center" in 'Process Name',
                                                "DLP Editor" in 'Process Name',
                                                "Admin | Add Maker" in 'Process Name',
                                                "Admin | Excuse" in 'Process Name',
                                                "HELPER" in 'Process Name'
                                            ),
                                            Status = 'Status (Processes)'.Draft
                                        )
                                    )
                                );
                                UpdateIf(
                                    colHelperFlowsToTurnOn,
                                    Status = 'Status (Processes)'.Draft,
                                    {Status: 'Status (Processes)'.Activated}
                                );
                                Patch(
                                    Processes,
                                    colHelperFlowsToTurnOn
                                );
                                Patch(
                                    Processes,
                                    LookUp(
                                        Processes,
                                        "ObjectOperations" in 'Process Name'
                                    ),
                                    {Status: 'Status (Processes)'.Activated}
                                );
                                comment in here 
                            ForAll(colHelperFlowsToTurnOn As cPatch,
                            Patch(
                                Processes,
                                LookUp(
                                        Processes,
                                       WorkflowIdUnique = cPatch.WorkflowIdUnique
                                ),
                                {Status: 'Status (Processes)'.Activated}
                            ));
                            Patch(
                                Processes,
                                First(
                                    Filter(
                                        Processes,
                                        "ObjectOperations" in 'Process Name'
                                    )
                                ),
                                {Status: 'Status (Processes)'.Activated}
                            ); comment out here
                            Patch(
                                    Processes,
                                    LookUp(
                                        Processes,
                                        "ShareApps" in 'Process Name'
                                    ),
                                    {Status: 'Status (Processes)'.Activated}
                                );
                                
                            //now that environment variables are set, turn on sync flows
                            ClearCollect(
                                    colSyncFlowsToTurnOn,
                                    Filter(
                                        Processes,
                                        And(
                                            solutionid = coeSolution,
                                            "Admin | Sync Template v3 (" in 'Process Name',
                                            !("CLEANUP - " in 'Process Name'),
                                            Status = 'Status (Processes)'.Draft
                                        )
                                    )
                                )
                            );
                            RemoveIf(
                                colSyncFlowsToTurnOn,
                                "Flow Action" in 'Process Name'
                            );
                              If(
                                    myDataSource.isBYODL, 
                                    RemoveIf(
                                colSyncFlowsToTurnOn,
                                "Sync Template v3 (Apps)" in 'Process Name'
                            ); RemoveIf(
                                colSyncFlowsToTurnOn,
                                "Sync Template v3 (Flows)" in 'Process Name'
                            ); RemoveIf(
                                colSyncFlowsToTurnOn,
                                "Sync Template v3 (Model Driven Apps)" in 'Process Name'
                            ));
                            UpdateIf(
                                colSyncFlowsToTurnOn,
                                Status = 'Status (Processes)'.Draft,
                                {Status: 'Status (Processes)'.Activated}
                            );
                            IfError(
                                Patch(
                                    Processes,
                                    colSyncFlowsToTurnOn
                                ),
                                Notify("Failed to turn on Admin | Sync Template flows. Please navigate to the solution and turn this flow on manually.")
                            );
                            /*ForAll(colSyncFlowsToTurnOn As cPatch,
                            Patch(
                                Processes,
                                LookUp(
                                        Processes,
                                       WorkflowIdUnique = cPatch.WorkflowIdUnique
                                ),
                                {Status: 'Status (Processes)'.Activated}
                            ));*/
                            //'SetupWizard>UpdateInventoryTypeAppSetting'.Run();
                            Refresh('Setup Wizard State metadata');
                            Select(btnCollectFlowsWithMetadata);
                            Set(
                                loadSyncFlowWait,
                                false
                            );
                        Visible: =false
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =7

                    btnSetCommunicationMethods As Button:
                        ButtonType: ='Button.ButtonType'.Primary
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =    Patch(Processes,
                                First(
                                    Filter(
                                        Processes,
                                        "CreateGroup" in 'Process Name'
                                    )
                                ),
                                {Status: 'Status (Processes)'.Activated}
                            );
                            
                            UpdateContext(
                                            {
                                                cAdminEnvVarID: 
                                                LookUp(
                                                    'Environment Variable Definitions',
                                                    'Schema Name' = "admin_AdminMail"
                                                ).'Environment Variable Definition',
                            
                                                cMakerEnvVarID: 
                                                LookUp(
                                                    'Environment Variable Definitions',
                                                    'Schema Name' = "admin_PowerPlatformMakeSecurityGroup"
                                                ).'Environment Variable Definition',
                            
                                                cUserVarID: 
                                                LookUp(
                                                    'Environment Variable Definitions',
                                                    'Schema Name' = "admin_PowerPlatformUserGroupID"
                                                ).'Environment Variable Definition'
                                            }
                                        );
                            //updating communication methods collection with the personas and groups specified, plus add description on intended use of the group
                                        ClearCollect(
                                            colCommunicate,
                                            {
                                                type: "Admin",
                                                description: "Add your Power Platform admins to this group so you can communicate with each other and so you can be contacted by your Power Platform makers. In the CoE Starter Kit, this group is used to share apps with all admins, and emails are sent to this group for example notifications and alerts for our governance processes.",
                                                configuredGroup: LookUp('Environment Variable Values', 'Environment Variable Definition'.'Environment Variable Definition'=GUID(cAdminEnvVarID)).Value,
                                                configuredGroupName: "",
                                                schemaname: "admin_AdminMail",
                                                addMembers: true
                                            },
                                            {
                                                type: "Maker",
                                                description: "Power Platform makers are automatically added to this group, so you have one group for all your makers. Use this group to communicate with your makers, share resources with your makers through this group (e.g. SharePoint wiki sites, Teams and Yammer groups). In the CoE Starter Kit, this group is used to share apps relevant to makers with makers.",
                                                configuredGroup: LookUp('Environment Variable Values', 'Environment Variable Definition'.'Environment Variable Definition'=GUID(cMakerEnvVarID)).Value,
                                                configuredGroupName: "",
                                                schemaname: "admin_PowerPlatformMakeSecurityGroup",
                                                addMembers: false
                                            },
                                            {
                                                type: "User",
                                                description: "Add your Power Platform users to this group (for example, if you have an 'All Company' group) and use this group to contact your Power Platform users. In the CoE Starter Kit, this group is used to share apps relevant to all users with users.",
                                                configuredGroup: LookUp('Environment Variable Values', 'Environment Variable Definition'.'Environment Variable Definition'=GUID(cUserVarID)).Value,
                                                configuredGroupName: "",
                                                addMembers: false,
                                                schemaname: "admin_PowerPlatformUserGroupID"
                                            }
                                        );
                            
                            UpdateIf(colCommunicate, type <> "Admin", {configuredGroupName: If(!IsBlank(ThisRecord.configuredGroup),
                                First(Office365Groups.ListGroups({'$filter': "id eq '" & ThisRecord.configuredGroup & "'"}).value).displayName, "")});
                            
                            UpdateIf(colCommunicate, type = "Admin", {configuredGroupName: If(!IsBlank(ThisRecord.configuredGroup),
                                First(Office365Groups.ListGroups({'$filter': "mail eq '" & ThisRecord.configuredGroup & "'"}).value).displayName, "")});
                                        
                        Visible: =false
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =8

                    btnGetTenantId As Button:
                        ButtonType: ='Button.ButtonType'.Primary
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =UpdateContext(
                                            {
                                                tenantId: 'SetupWizard>GetTenantID'.Run().tenantid
                                            }
                                        )
                        Visible: =false
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =9

                    btnCollectFlowsWithMetadata As Button:
                        ButtonType: ='Button.ButtonType'.Primary
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =Set(loadSyncFlowWait, true);
                            If(Max(colStepsCompleted,Value) <= configStep,
                            ClearCollect(
                                            coeFlows,
                                            Filter(
                                                Processes,
                                                Solution = coeSolution
                                            )
                                        );
                            
                                        Clear(FlowsWithMetadata);
                                        ForAll(
                                            Filter(
                                                'CoE Solution Metadata',
                                                ObjectType = "CloudFlows"
                                            ),
                                            With(
                                                {
                                                    ThisFlow: LookUp(Processes,'Process Name' = ObjectName)
                                                },
                                                Collect(
                                                    FlowsWithMetadata,
                                                    {
                                                        theName: ObjectName,
                                                        theSolution: CoESolution,
                                                        theArea: CoESolutionArea,
                                                        theSetupOrder: InstallOrder,
                                                        theFlagNote: Flag,
                                                        theGUID: ThisFlow.WorkflowIdUnique,
                                                        theSoltuionFlowGUID: ThisFlow.Process,
                                                        theSolutionGUID: ThisFlow.Solution,
                                                        theState: ThisFlow.Status,
                                                        thePublishedState: ThisFlow.'Component State',
                                                        theIsErrorState: false,
                                                        hasUnmanagedLayer: false,
                                                        theFlowHasUnmanagedLayer: false,
                                                        reRun: RerunOnUpgrade,
                                                        lastRun: LastRun,
                                                        lastRunStatus: LastRunPassed,
                                                        neededForBYODL: UsedForByodlCoe,
                                                        neededForSyncFlows: UsedForSyncFlowCoe,
                                                        theUrl: ObjectMakerURL,
                                                        lastModifiedTime: ThisFlow.'Modified On'
                                                    }
                                                )
                                            )  );
                                      
                                    
                            
                                        //REMOVE FLOWS THE USER HAS NOT SETUP, AND SET SOLUTION AND MANAGED LAYERS
                                        //RemoveIf(
                                        //    FlowsWithMetadata,
                                        //   IsBlank(theGUID)
                                        //);
                            
                                        UpdateIf(
                                            FlowsWithMetadata,
                                            IsBlank(theSolutionGUID),
                                            {
                                                theSolutionGUID: LookUp(Processes,'Process Name' = theName).Solution
                                            }
                                        );
                            
                                        UpdateIf(
                                            FlowsWithMetadata,
                                            true,
                                            {
                                                theFlowHasUnmanagedLayer: 
                                                If(
                                                    theSolutionGUID = GUID(unmanagedSolutionID),
                                                    true,
                                                    false
                                                )
                                            }
                                        ));
                                        Set(loadSyncFlowWait, false);
                                        
                        Visible: =false
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =10

                    Timer1 As timer:
                        BorderColor: =RGBA(0, 120, 212, 1)
                        BorderStyle: =BorderStyle.None
                        DisabledBorderColor: =RGBA(244, 244, 244, 1)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        DisabledFill: =RGBA(244, 244, 244, 1)
                        Duration: =30000
                        Fill: =RGBA(0, 120, 212, 1)
                        FocusedBorderThickness: =2
                        Font: =Font.'Segoe UI'
                        HoverBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -10%)
                        HoverColor: =RGBA(255, 255, 255, 1)
                        HoverFill: =ColorFade(RGBA(0, 120, 212, 1), -10%)
                        OnTimerEnd: =Set(showRefresh, true)
                        PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                        PressedColor: =RGBA(255, 255, 255, 1)
                        PressedFill: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                        Reset: =true
                        Size: =10.5
                        Start: =startTimer
                        Visible: =false
                        ZIndex: =11

                    btnRunOrphanedMakers As Button:
                        ButtonType: ='Button.ButtonType'.Primary
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =//'CLEANUP-Admin|SyncTemplatev3(OrphanedMakers)'.Run();
                            
                            Patch('Setup Wizard State metadata', Defaults('Setup Wizard State metadata'), {Name: "PopulateBookmarks", 'Last Completed Step': 1, 'Solution Name':"CenterofExcellenceCoreComponents"})
                        Visible: =false
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =12

                    btnConfigureDataflows As Button:
                        ButtonType: ='Button.ButtonType'.Primary
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            =Set(
                                vCurrentEnvironmentEnvVarID,
                                LookUp(
                                    'Environment Variable Definitions',
                                    'Schema Name' = "admin_CurrentEnvironment"
                                ).'Environment Variable Definition'
                            );
                            
                            Set(
                                vCurrentEnvironment,
                                LookUp(
                                        'Environment Variable Values',
                                        'Environment Variable Definition'.'Environment Variable Definition' = GUID(vCurrentEnvironmentEnvVarID)
                                ).Value
                            );
                            /*
                            IfError(Patch(
                                        Processes,
                                        LookUp(
                                            Processes,
                                            "CoE BYODL" in 'Process Name'
                                        ),
                                        {Status: 'Status (Processes)'.Activated}
                                    ), "")*/
                        Visible: =false
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =13

                    btnAddSystemMaker As Button:
                        ButtonType: ='Button.ButtonType'.Primary
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |
                            =If(
                                IsBlank(
                                    LookUp(
                                        Makers,
                                        'Display Name' = "SYSTEM"
                                    ).Maker
                                ),
                                Set(
                                    systemMaker,
                                    Patch(
                                        Makers,
                                        Defaults(Makers),
                                        {
                                            'Display Name': "SYSTEM",
                                            'Maker Is Orphaned': false
                                        }
                                    )
                                );
                                Patch(
                                    Makers,
                                    LookUp(
                                        Makers,
                                        'Display Name' = "SYSTEM"
                                    ),
                                    {'Record GUID as String': systemMaker.Maker}
                                ),Patch(
                                    Makers,
                                    LookUp(
                                        Makers,
                                        'Display Name' = "SYSTEM"
                                    ),
                                    {'Record GUID as String': LookUp(
                                        Makers,
                                        'Display Name' = "SYSTEM"
                                    ).Maker})
                            );
                            Set(
                                coeCrmURL,
                                PowerPlatformforAdmins.GetSingleEnvironment(coeEnv).properties.linkedEnvironmentMetadata.instanceUrl & "api/data/v9.2"
                            );
                            ClearCollect(
                                dataflowSteps,
                                Table(
                                    {
                                        Key: "1",
                                        Name: "Copy your Data Lake Storage URL to notepad",
                                        Icon: "Launch Azure portal",
                                        Nav: "http://portal.azure.com",
                                        Link: "Learn more",
                                        LinkNav: "https://learn.microsoft.com/power-platform/guidance/coe/setup-core-components#copy-azure-storage-account-url"
                                    },
                                     {
                                        Key: "2",
                                        Name: "Confirm you have the Storage Data Reader role permission on the Azure Storage Account",
                                        Icon: "Launch Azure portal",
                                        Nav: "http://portal.azure.com",
                                        Link: "Learn more",
                                        LinkNav: "https://learn.microsoft.com/power-platform/guidance/coe/setup-core-components#confirm-storage-account-permission"
                                    },
                                    {
                                        Key: "3",
                                        Name: "Copy Environment Web API endpoint to notepad",
                                        Icon: Coalesce(
                                            coeCrmURL,
                                            ""
                                        ),
                                        Nav: coeCrmURL,
                                        Link: "Learn more",
                                         LinkNav: "https://learn.microsoft.com/power-platform/guidance/coe/setup-core-components#copy-environment-web-api-endpoint"
                                    },
                                    {
                                        Key: "4",
                                        Name: "Configure connections to your datasources in dataflows",
                                        Icon: "Open dataflows",
                                        Nav: Coalesce(
                                            theAppMakerURL,
                                            "https://make.powerapps.com/"
                                        ) & "environments/" & coeEnv & "/dataintegration/list",
                                        Link: "Learn more",
                                        LinkNav: "https://learn.microsoft.com/power-platform/guidance/coe/setup-core-components#configure-connections-to-data-sources"
                                    },
                                    {
                                        Key: "5",
                                        Name: "Configure schedule refresh on the CoE BYODL Makers dataflow",
                                        Icon: "Open dataflow",
                                        Nav: Coalesce(
                                            theAppMakerURL,
                                            "https://make.powerapps.com/"
                                        ) & "environments/" & coeEnv & "/dataintegration/list",
                                        Link: "Learn more",
                                         LinkNav: "https://learn.microsoft.com/power-platform/guidance/coe/setup-core-components#configure-scheduled-refresh"
                                    }
                                )
                            );
                            Patch(
                                            'Setup Wizard State metadata',
                                            Defaults('Setup Wizard State metadata'),
                                            {
                                                Name: "Initial Setup",
                                                'Last Completed Step': 4,
                                                'Solution Name': "CenterofExcellenceCoreComponents",
                                                'Solution Version': coESolutionVersion
                                            }
                                        );
                        Visible: =false
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =14

                    btnNotInUse As Button:
                        ButtonType: ='Button.ButtonType'.Primary
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |-
                            = If(
                                    myDataSource.isBYODL,
                                    Collect(myByodlFlows,
                                        SortByColumns(
                                            Filter(
                                                'CoE Solution Metadata',
                                                And(
                                                    CoESolutionArea = "Inventory",
                                                    UsedForByodlCoe = 'UsedForByodlCoe (CoE Solution Metadata)'.Yes,
                                                    !("CoE BYODL" in ObjectName)
                                                )
                                            ), "admin_installorder"
                                        )
                                    ),
                                     Collect(mySyncFlows,
                                        SortByColumns(
                                            Filter(
                                                'CoE Solution Metadata',
                                                And(
                                                    CoESolutionArea = "Inventory",
                                                    UsedForSyncFlowCoe = 'UsedForSyncFlowCoe (CoE Solution Metadata)'.Yes,
                                                    !("CoE BYODL" in ObjectName)
                                                )
                                            ),
                                           "admin_installorder"
                                        )
                                        )
                                    );
                            
                            
                                  /*  ForAll(myByodlFlows,
                            If(LookUp(
                                                Processes,
                                                'Process Name' = ObjectName
                                            ).Status = 'Status (Processes)'.Draft,
                                     Patch(
                                            Processes,
                                            LookUp(
                                                Processes,
                                                'Process Name' = ObjectName
                                            ),
                                            {Status: 'Status (Processes)'.Activated}
                                        )))*/
                        Visible: =false
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =15

    panHelp As Panel:
        Buttons: |-
            =/*Table(
                {
                    Label: "Cancel",
                    ButtonType: 'Microsoft.CoreControls.Button.ButtonType'.Standard
                },
                {
                    Label: "Ok",
                    ButtonType: 'Microsoft.CoreControls.Button.ButtonType'.Primary
                }
            )*/
        Fill: =panHelp.OverlayColor
        OnCloseSelect: |-
            =UpdateContext({showHelp: false})
        Subtitle: ="Explore these links to documentation and filing issues."
        Theme: =AppTheme
        Title: ="Help"
        Visible: =showHelp
        Width: =Parent.Width
        ZIndex: =2

    conHelpPanel As groupContainer.verticalAutoLayoutContainer:
        Height: =panHelp.ContentHeight-40
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        Visible: =panHelp.Visible
        Width: =panHelp.ContentWidth-20
        X: =panHelp.ContentX
        Y: =panHelp.ContentY+20
        ZIndex: =3

        galLinks As gallery.galleryVertical:
            BorderColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =RGBA(0, 120, 212, 1)
            FocusedBorderThickness: =2
            Height: =panHelp.ContentHeight
            Items: |-
                =Table(
                    {
                        value: "Documentation",
                        url: "https://aka.ms/coestarterkit"
                    },
                    {
                        value: "Power Platform guidance",
                        url: "https://learn.microsoft.com/en-us/power-platform/guidance/"
                    },
                    {
                        value: "Walkthrough Videos",
                        url: "https://aka.ms/coekitvideos"
                    },
                    {
                        value: "Latest release",
                        url: "https://github.com/microsoft/coe-starter-kit/releases/latest"
                    },
                    {
                        value: "Raise an issue, question or feature ask",
                        url: "https://github.com/microsoft/coe-starter-kit/issues/new/choose"
                    },
                    {
                        value: "Office hours",
                        url: "https://aka.ms/coeofficehours"
                    }
                )
            Layout: =Layout.Vertical
            LayoutMinHeight: =287
            LayoutMinWidth: =320
            TemplateSize: =40
            Visible: =showHelp
            Width: =panHelp.ContentWidth - 10
            X: =panHelp.ContentX
            Y: =panHelp.ContentY + 10
            ZIndex: =2

            btnHelpLink As Button:
                Alignment: =Align.Left
                ButtonType: ='Button.ButtonType'.Standard
                DisplayMode: =DisplayMode.Edit
                Height: =32
                OnSelect: =Launch(ThisItem.url)
                Text: =ThisItem.value
                TextColor: =ColorValue(AppTheme.palette.themePrimary)
                Width: =galLinks.TemplateWidth
                X: =0
                Y: =0
                ZIndex: =1

    panCreateGroup As Panel_1:
        Buttons: |-
            =Table({Label: "Cancel", ButtonType:'Button.ButtonType'.Standard } ,{Label: "Create group", ButtonType:'Button.ButtonType'.Primary})
        Fill: =panCreateGroup.OverlayColor
        OnButtonSelect: |-
            =Switch(
                Self.SelectedButton.Label,
                   "Create group",
            
                 UpdateContext(
                    {
                        newGroupStatus: 'SetupWizard>CreateGroup'.Run(
                            txtGroup_1.Text,
                            txtEmail_1.Text
                        )
                    }
                );
                "Cancel", 
                UpdateContext({showNewGroup: false})
            );
            
            If(
                newGroupStatus.status = "Failed",
                Notify(
                    "Could not create group - please create the group under portal.azure.com and select the new group from the existing group selection after refreshing.",
                    NotificationType.Error
                ),
            SubmitForm(formStep2Groups_1)
            );
            Reset(txtGroup_1);
            Reset(txtEmail_1);
            Refresh('Environment Variable Values');
            //update environment variable with selected or newly created group
            IfError(
            Patch(
                colCommunicate,
                LookUp(
                    colCommunicate,
                    schemaname = selectedSchema
                ),
                {
                    configuredGroup: 
                        LookUp(
                                'Environment Variable Values',
                                'Environment Variable Definition'.'Environment Variable Definition' = GUID(selectedEnvVarID)
                        ).Value
                    
                }
            ), Notify("Failed to update environment variable. Please reload app."));
            
            UpdateIf(colCommunicate, type <> "Admin", {configuredGroupName: If(!IsBlank(ThisRecord.configuredGroup),
                First(Office365Groups.ListGroups({'$filter': "id eq '" & ThisRecord.configuredGroup & "'"}).value).displayName, "")});
            
            UpdateIf(colCommunicate, type = "Admin", {configuredGroupName: If(!IsBlank(ThisRecord.configuredGroup),
                First(Office365Groups.ListGroups({'$filter': "mail eq '" & ThisRecord.configuredGroup & "'"}).value).displayName, "")});
            
            UpdateContext({showNewGroup: false});
        OnCloseSelect: |-
            =UpdateContext({showNewGroup:false});
            Reset(txtGroup_1);
            Reset(txtEmail_1);
        Subtitle: =
        Title: ="Create new group"
        Visible: =showNewGroup
        Width: ='Setup Wizard Screen'.Width
        ZIndex: =4

    panConfigureGroup As Panel_1:
        Buttons: |-
            =Table({Label: "Cancel", ButtonType:'Button.ButtonType'.Standard } ,{Label: "Select Group", ButtonType:'Button.ButtonType'.Primary})
        Fill: =panConfigureGroup.OverlayColor
        OnButtonSelect: |-
            =Switch(
                Self.SelectedButton.Label,
                "Select Group",
               SubmitForm(formStep2Groups_2);
                "Cancel", 
                UpdateContext({showGroupPanel: false});
            );
            Reset(cmbGroup_1);
            Refresh('Environment Variable Values');
            IfError(
                Patch(
                    colCommunicate,
                    LookUp(
                        colCommunicate,
                        schemaname = selectedSchema
                    ),
                    {
                        configuredGroup: 
                        LookUp(
                                    'Environment Variable Values',
                                    'Environment Variable Definition'.'Environment Variable Definition' = GUID(selectedEnvVarID)
                            ).Value
                    
                    })
            , Notify("Failed to update environment variable. Reload app."));
            
            UpdateIf(colCommunicate, type <> "Admin", {configuredGroupName: If(!IsBlank(ThisRecord.configuredGroup),
                First(Office365Groups.ListGroups({'$filter': "id eq '" & ThisRecord.configuredGroup & "'"}).value).displayName, "")});
            
            UpdateIf(colCommunicate, type = "Admin", {configuredGroupName: If(!IsBlank(ThisRecord.configuredGroup),
                First(Office365Groups.ListGroups({'$filter': "mail eq '" & ThisRecord.configuredGroup & "'"}).value).displayName, "")});
                
            UpdateContext({showGroupPanel: false})
        OnCloseSelect: |-
            =UpdateContext({showGroupPanel: false});
            Reset(cmbGroup_1);
        Subtitle: ="Select a group for the " & selectedGroup & " persona. " & If(selectedGroup = "Maker", "Make sure you are the owner of the group, as flows in the CoE kit will automatically add makers to this group.")
        Title: ="Configure group"
        Visible: =showGroupPanel
        Width: ='Setup Wizard Screen'.Width
        ZIndex: =5

    conCommsPanel_SelectGroup As groupContainer.verticalAutoLayoutContainer:
        Height: =panConfigureGroup.ContentHeight-40
        LayoutDirection: =LayoutDirection.Vertical
        LayoutGap: =20
        LayoutMode: =LayoutMode.Auto
        Visible: =panConfigureGroup.Visible
        Width: =panConfigureGroup.ContentWidth-20
        X: =panConfigureGroup.ContentX
        Y: =panConfigureGroup.ContentY+20
        ZIndex: =6

        cmbGroup_1 As combobox:
            AlignInContainer: =AlignInContainer.Stretch
            BorderColor: =RGBA(153, 153, 153, 1)
            BorderThickness: =1
            ChevronBackground: =RGBA(204, 204, 204, 1)
            ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
            ChevronDisabledFill: =RGBA(166, 166, 166, 1)
            ChevronFill: =RGBA(33, 33, 33, 1)
            ChevronHoverBackground: =RGBA(212, 212, 212, 1)
            ChevronHoverFill: =RGBA(33, 33, 33, 1)
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            DisplayFields: =["displayName"]
            Font: =Font.'Segoe UI'
            Height: =30
            HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            HoverColor: =RGBA(51, 51, 51, 1)
            HoverFill: =RGBA(230, 230, 230, 1)
            Items: =SortByColumns(Filter(Office365Groups.ListGroups().value, !IsBlank(mail) ), "displayName")
            LayoutMinWidth: =100
            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =RGBA(230, 230, 230, 1)
            SearchFields: =["displayName"]
            SearchItems: =Search(SortByColumns(Filter(Office365Groups.ListGroups().value, !IsBlank(mail) ), "displayName"),cmbGroup_1.SearchText,"displayName")
            SelectionFill: =RGBA(153, 153, 153, 1)
            SelectMultiple: =false
            Size: =10
            Visible: =showGroupPanel
            Width: =100
            X: =panConfigureGroup.ContentX
            Y: =panConfigureGroup.ContentY + 20
            ZIndex: =1

        lblCantFindGroup As Label:
            DisplayMode: =DisplayMode.Edit
            Height: =65
            LayoutMinHeight: =32
            LayoutMinWidth: =320
            Text: ="If you can't find your existing group in the drop down, enter " & If("Make" in selectedSchema || "User" in selectedSchema, "the Group Azure Active Directory ID", "the Group eMail Address") & " below instead"
            Visible: =showGroupPanel
            Width: =320
            X: =panConfigureGroup.ContentX
            Y: =panConfigureGroup.ContentY + 40 + cmbGroup_1.Height
            ZIndex: =2

        "txtManualGroup As 'Text box'":
            AlignInContainer: =AlignInContainer.Stretch
            DisplayMode: =DisplayMode.Edit
            Height: =32
            LayoutMinHeight: =32
            LayoutMinWidth: =320
            Placeholder: =If("Make" in selectedSchema || "User" in selectedSchema,"Enter Group Azure Active Directory ID", "Enter Group eMail address")
            Value: =
            Width: =320
            X: =0
            Y: =0
            ZIndex: =3

        lblCreateGroup As Label:
            DisplayMode: =DisplayMode.Edit
            Height: =32
            LayoutMinHeight: =32
            LayoutMinWidth: =320
            Text: ="If you do not have a group yet, create one"
            Visible: =showGroupPanel
            Width: =320
            X: =panConfigureGroup.ContentX
            Y: =panConfigureGroup.ContentY + 40 + cmbGroup_1.Height
            ZIndex: =4

        btnCreateNewGroup As Button:
            ButtonType: ='Button.ButtonType'.Primary
            DisplayMode: =DisplayMode.Edit
            Height: =32
            LayoutMinHeight: =32
            LayoutMinWidth: =96
            OnSelect: |-
                =UpdateContext({showNewGroup: true, showCreateGroup:true, showGroupPanel:false})
            Text: ="Create new group"
            Visible: =showGroupPanel
            Width: =120
            X: =panConfigureGroup.ContentX
            Y: =panConfigureGroup.ContentY + 60 + cmbGroup_1.Height + lblCreateGroup.Height
            ZIndex: =5

        formStep2Groups_2 As form:
            BorderColor: =RGBA(166, 166, 166, 1)
            DataSource: ='Environment Variable Values'
            DefaultMode: =FormMode.New
            FillPortions: =0
            Height: =1
            Item: =LookUp('Environment Variable Values', 'Environment Variable Definition'.'Environment Variable Definition' = GUID(selectedEnvVarID))
            LayoutMinHeight: =250
            LayoutMinWidth: =1
            NumberOfColumns: =1
            OnFailure: =
            OnSuccess: =
            Width: =1
            X: =1
            Y: =1
            ZIndex: =6

            Value_DataCard1_2 As typedDataCard.pcfCoreTextualMultiLineEditCard:
                BorderColor: =RGBA(166, 166, 166, 1)
                BorderStyle: =BorderStyle.Solid
                DataField: ="value"
                Default: =ThisItem.Value
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Environment Variable Values'],DataSourceInfo.DisplayName,"value")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =70
                Required: =false
                Update: =DataCardValue1_2.Value
                Width: =300
                WidthFit: =true
                X: =0
                Y: =0
                ZIndex: =1

                DataCardKey1_2 As Label:
                    AutoHeight: =true
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =9
                    Height: =22
                    Text: =Parent.DisplayName
                    Tooltip: =Parent.DisplayName
                    VerticalAlignment: =VerticalAlign.Bottom
                    Width: =Parent.Width - 48
                    Wrap: =true
                    X: =24
                    Y: =10
                    ZIndex: =1

                "DataCardValue1_2 As 'Text box'":
                    AccessibleLabel: =Parent.DisplayName
                    DisplayMode: =Parent.DisplayMode
                    FontSize: =10.5
                    Height: =48
                    Mode: ="Multiline"
                    Required: =Parent.Required
                    Tooltip: =Parent.DisplayName
                    Value: =If(IsBlank(cmbGroup_1.Selected.id), txtManualGroup.Value, If(selectedGroup = "Admin", cmbGroup_1.Selected.mail, cmbGroup_1.Selected.id))
                    Width: =Parent.Width - 48
                    X: =24
                    Y: =DataCardKey1_2.Y + DataCardKey1_2.Height + 4
                    ZIndex: =2

                ErrorMessage1_2 As Label:
                    AutoHeight: =true
                    Color: =Color.Red
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =9
                    Height: =30
                    Text: =Parent.Error
                    Tooltip: =Parent.Error
                    Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                    Width: =Parent.Width - 48
                    Wrap: =true
                    X: =24
                    Y: =DataCardValue1_2.Y + DataCardValue1_2.Height
                    ZIndex: =3

                StarVisible1_2 As Label:
                    Alignment: =Align.Center
                    DisplayMode: =DisplayMode.Edit
                    Height: =30
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    X: =0
                    Y: =DataCardKey1_2.Y
                    ZIndex: =4

            "'Schema Name_DataCard1_2' As typedDataCard.pcfCoreTextualEditCard":
                BorderColor: =RGBA(166, 166, 166, 1)
                BorderStyle: =BorderStyle.Solid
                DataField: ="schemaname"
                Default: =ThisItem.'Schema Name'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Environment Variable Values'],DataSourceInfo.DisplayName,"schemaname")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =70
                MaxLength: =DataSourceInfo([@'Environment Variable Values'], DataSourceInfo.MaxLength, "schemaname")
                Required: =true
                Update: =DataCardValue2_2.Value
                Width: =300
                WidthFit: =true
                X: =0
                Y: =1
                ZIndex: =1

                DataCardKey2_2 As Label:
                    AutoHeight: =true
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =9
                    Height: =22
                    Text: =Parent.DisplayName
                    Tooltip: =Parent.DisplayName
                    VerticalAlignment: =VerticalAlign.Bottom
                    Width: =Parent.Width - 48
                    Wrap: =true
                    X: =24
                    Y: =10
                    ZIndex: =1

                "DataCardValue2_2 As 'Text box'":
                    AccessibleLabel: =Parent.DisplayName
                    DisplayMode: =Parent.DisplayMode
                    FontSize: =10.5
                    Height: =32
                    Mode: ="SingleLine"
                    Required: =Parent.Required
                    Tooltip: =Parent.DisplayName
                    Value: =selectedSchema
                    Width: =Parent.Width - 48
                    X: =24
                    Y: =DataCardKey2_2.Y + DataCardKey2_2.Height + 4
                    ZIndex: =2

                ErrorMessage2_2 As Label:
                    AutoHeight: =true
                    Color: =Color.Red
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =9
                    Height: =30
                    Text: =Parent.Error
                    Tooltip: =Parent.Error
                    Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                    Width: =Parent.Width - 48
                    Wrap: =true
                    X: =24
                    Y: =DataCardValue2_2.Y + DataCardValue2_2.Height
                    ZIndex: =3

                StarVisible2_2 As Label:
                    Alignment: =Align.Center
                    DisplayMode: =DisplayMode.Edit
                    Height: =30
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    X: =0
                    Y: =DataCardKey2_2.Y
                    ZIndex: =4

    conCommsPanel_CreateGroup As groupContainer.verticalAutoLayoutContainer:
        Height: =panCreateGroup.ContentHeight
        LayoutDirection: =LayoutDirection.Vertical
        LayoutGap: =10
        LayoutMode: =LayoutMode.Auto
        PaddingRight: =5
        Visible: =showNewGroup
        Width: =panCreateGroup.ContentWidth-30
        X: =panCreateGroup.ContentX
        Y: =panCreateGroup.ContentY
        ZIndex: =7

        lblGroupName_1 As Label:
            DisplayMode: =DisplayMode.Edit
            FontWeight: =FontWeight.Normal
            Height: =32
            LayoutMinHeight: =32
            LayoutMinWidth: =320
            Text: ="Create a new group for the " & selectedGroup
            Visible: =showNewGroup
            Width: =320
            X: =panCreateGroup.ContentX
            Y: =panCreateGroup.ContentY + lblGroupName_1.Height + txtGroup_1.Height + 20
            ZIndex: =1

        lblGroupName As Label:
            DisplayMode: =DisplayMode.Edit
            FontWeight: =FontWeight.Semibold
            Height: =32
            LayoutMinHeight: =32
            LayoutMinWidth: =320
            Text: ="Group name"
            Visible: =showNewGroup
            Width: =320
            X: =panCreateGroup.ContentX
            Y: =panCreateGroup.ContentY + lblGroupName.Height + txtGroup_1.Height + 20
            ZIndex: =2

        txtGroup_1 As text:
            AlignInContainer: =AlignInContainer.Stretch
            BorderColor: =RGBA(128, 128, 128, 1)
            Color: =RGBA(51, 51, 51, 1)
            Default: =""
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =30
            HintText: ="Name of the group"
            HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            HoverColor: =RGBA(51, 51, 51, 1)
            HoverFill: =RGBA(255, 255, 255, 1)
            OnSelect: =
            PressedBorderColor: =RGBA(105, 121, 126, 1)
            PressedColor: =RGBA(51, 51, 51, 1)
            PressedFill: =RGBA(255, 255, 255, 1)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Visible: =showNewGroup
            Width: =panCreateGroup.ContentWidth - 10
            X: =panConfigureGroup.ContentX
            Y: =panConfigureGroup.ContentY + lblGroupName.Height
            ZIndex: =3

        lblGroupMail As Label:
            DisplayMode: =DisplayMode.Edit
            FontWeight: =FontWeight.Semibold
            Height: =32
            LayoutMinHeight: =32
            LayoutMinWidth: =320
            Text: ="Local group name (eMail)"
            Visible: =showNewGroup
            Width: =320
            X: =panCreateGroup.ContentX
            Y: =panCreateGroup.ContentY + lblGroupName.Height + txtGroup_1.Height + 20
            ZIndex: =4

        txtEmail_1 As text:
            AlignInContainer: =AlignInContainer.Stretch
            BorderColor: =RGBA(128, 128, 128, 1)
            Color: =RGBA(51, 51, 51, 1)
            Default: =""
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            Height: =30
            HintText: ="Local part of group email (without @yourcompany)"
            HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            HoverColor: =RGBA(51, 51, 51, 1)
            HoverFill: =RGBA(255, 255, 255, 1)
            OnChange: =
            OnSelect: =
            PressedBorderColor: =RGBA(105, 121, 126, 1)
            PressedColor: =RGBA(51, 51, 51, 1)
            PressedFill: =RGBA(255, 255, 255, 1)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10
            Visible: =showNewGroup
            Width: =panCreateGroup.ContentWidth - 10
            X: =panConfigureGroup.ContentX
            Y: =panConfigureGroup.ContentY + lblGroupName.Height + txtGroup_1.Height + lblGroupMail.Height + 20
            ZIndex: =5

        formStep2Groups_1 As form:
            BorderColor: =RGBA(166, 166, 166, 1)
            DataSource: ='Environment Variable Values'
            DefaultMode: =FormMode.New
            FillPortions: =0
            Height: =1
            Item: =LookUp('Environment Variable Values', 'Environment Variable Definition'.'Environment Variable Definition' = GUID(selectedEnvVarID))
            LayoutMinHeight: =250
            LayoutMinWidth: =1
            Width: =1
            X: =20
            Y: =20
            ZIndex: =6

            Value_DataCard1_1 As typedDataCard.pcfCoreTextualMultiLineEditCard:
                BorderColor: =RGBA(166, 166, 166, 1)
                BorderStyle: =BorderStyle.Solid
                DataField: ="value"
                Default: =ThisItem.Value
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Environment Variable Values'],DataSourceInfo.DisplayName,"value")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =70
                Required: =false
                Update: =DataCardValue1_1.Value
                Width: =58
                WidthFit: =true
                X: =0
                Y: =0
                ZIndex: =1

                DataCardKey1_1 As Label:
                    AutoHeight: =true
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =9
                    Height: =22
                    Text: =Parent.DisplayName
                    Tooltip: =Parent.DisplayName
                    VerticalAlignment: =VerticalAlign.Bottom
                    Width: =Parent.Width - 48
                    Wrap: =true
                    X: =24
                    Y: =10
                    ZIndex: =1

                "DataCardValue1_1 As 'Text box'":
                    AccessibleLabel: =Parent.DisplayName
                    DisplayMode: =Parent.DisplayMode
                    FontSize: =10.5
                    Height: =48
                    Mode: ="Multiline"
                    Required: =Parent.Required
                    Tooltip: =Parent.DisplayName
                    Value: =If(selectedGroup = "Admin", newGroupStatus.email, newGroupStatus.groupid)
                    Width: =Parent.Width - 48
                    X: =24
                    Y: =DataCardKey1_1.Y + DataCardKey1_1.Height + 4
                    ZIndex: =2

                ErrorMessage1_1 As Label:
                    AutoHeight: =true
                    Color: =Color.Red
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =9
                    Height: =30
                    Text: =Parent.Error
                    Tooltip: =Parent.Error
                    Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                    Width: =Parent.Width - 48
                    Wrap: =true
                    X: =24
                    Y: =DataCardValue1_1.Y + DataCardValue1_1.Height
                    ZIndex: =3

                StarVisible1_1 As Label:
                    Alignment: =Align.Center
                    DisplayMode: =DisplayMode.Edit
                    Height: =30
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    X: =0
                    Y: =DataCardKey1_1.Y
                    ZIndex: =4

            "'Schema Name_DataCard1_1' As typedDataCard.pcfCoreTextualEditCard":
                BorderColor: =RGBA(166, 166, 166, 1)
                BorderStyle: =BorderStyle.Solid
                DataField: ="schemaname"
                Default: =ThisItem.'Schema Name'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Environment Variable Values'],DataSourceInfo.DisplayName,"schemaname")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =70
                MaxLength: =DataSourceInfo([@'Environment Variable Values'], DataSourceInfo.MaxLength, "schemaname")
                Required: =true
                Update: =DataCardValue2_1.Value
                Width: =58
                WidthFit: =true
                X: =1
                Y: =0
                ZIndex: =1

                DataCardKey2_1 As Label:
                    AutoHeight: =true
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =9
                    Height: =22
                    Text: =Parent.DisplayName
                    Tooltip: =Parent.DisplayName
                    VerticalAlignment: =VerticalAlign.Bottom
                    Width: =Parent.Width - 48
                    Wrap: =true
                    X: =24
                    Y: =10
                    ZIndex: =1

                "DataCardValue2_1 As 'Text box'":
                    AccessibleLabel: =Parent.DisplayName
                    DisplayMode: =Parent.DisplayMode
                    FontSize: =10.5
                    Height: =32
                    Mode: ="SingleLine"
                    Required: =Parent.Required
                    Tooltip: =Parent.DisplayName
                    Value: =selectedSchema
                    Width: =Parent.Width - 48
                    X: =24
                    Y: =DataCardKey2_1.Y + DataCardKey2_1.Height + 4
                    ZIndex: =2

                ErrorMessage2_1 As Label:
                    AutoHeight: =true
                    Color: =Color.Red
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =9
                    Height: =30
                    Text: =Parent.Error
                    Tooltip: =Parent.Error
                    Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                    Width: =Parent.Width - 48
                    Wrap: =true
                    X: =24
                    Y: =DataCardValue2_1.Y + DataCardValue2_1.Height
                    ZIndex: =3

                StarVisible2_1 As Label:
                    Alignment: =Align.Center
                    DisplayMode: =DisplayMode.Edit
                    Height: =30
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    X: =0
                    Y: =DataCardKey2_1.Y
                    ZIndex: =4

    panUpgrade As Dialog:
        Buttons: |-
            =Table({Label: "View details", ButtonType:'Button.ButtonType'.Standard } ,{Label: "Acknowledge", ButtonType:'Button.ButtonType'.Primary})
        DialogHeight: ='Setup Wizard Screen'.Height / 1.5
        DialogWidth: ='Setup Wizard Screen'.Width / 1.5
        Fill: =panUpgrade.OverlayColor
        Height: ='Setup Wizard Screen'.Height
        OnButtonSelect: |-
            =Switch(
                Self.SelectedButton.Label,
                "Acknowledge",
                With(
                    {
                        nextUpgradeStep: upgradeStep+1,
                        maxUpgradeStep: 4
                    },
                    If(
                        upgradeStep<maxUpgradeStep,
            
                        // Perform different actions depending on what the next step is.
                        Switch(
                            nextUpgradeStep,
                            2,Select(btnStepUpgradeLayers);
                            3, Select(btnStepUpgradeComponents);
                            4,Set(showUpgrade,false);
                        );
                        // Go to the next step.
                        Set(upgradeStep,nextUpgradeStep)
                    )
                ), 
                
                "View details",
                Launch(theAppMakerURL & "environments/" & coeEnv & "/solutions/"  & coeSolution & "/history")
            )
        OnCloseSelect: |-
            =Set(showUpgrade,false);
            Set(upgradeStep,1)
        SubTitle: |-
            =Switch(
                upgradeStep,
                2,
                "Canvas apps and Cloud flows that have unmanaged layers. This means customizations have been done to this app or flow in the managed solution, and they didn't receive the latest version during the upgrade. Remove the unmanaged layer to revert to our version, or acknowledge that you want to keep the unmanaged layer with your customizations.",
                3,
                "Canvas apps, Cloud flows, and Environment variables added as part of the upgrade. This list does not show all the changes and new components, but only apps, flows, and environment variables that have been created on during the upgrade",
                "History of upgrading the CenterofExcellenceCoreComponents solution. If you see any failures here, please select View Details. You will not be able to proceed with the setup wizard until the failure is resolved. "
            )
        Title: |-
            ="Upgrade history: CenterofExcellenceCoreComponents"
        Visible: =showUpgrade && configStep = 1
        Width: ='Setup Wizard Screen'.Width
        ZIndex: =8

    conUpgrade As groupContainer.verticalAutoLayoutContainer:
        Height: =panUpgrade.ContentHeight-120
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutDirection: =LayoutDirection.Vertical
        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
        LayoutMode: =LayoutMode.Auto
        Visible: =showUpgrade && configStep = 1
        Width: =panUpgrade.ContentWidth-40
        X: =panUpgrade.ContentX+20
        Y: =panUpgrade.ContentY+100
        ZIndex: =9

        "icoNewItems As 'Fluent Icon (1.0.20)'":
            DisplayMode: =DisplayMode.Edit
            FillColor: |-
                ="#dff6dd"
            FontColor: |-
                ="#107c10"
            FontSize: =0
            Height: =200
            IconName: ="Completed"
            IconSize: =0
            IconType: ='PowerCAT.Icon.IconType'.ActionButton
            LayoutMinHeight: =200
            LayoutMinWidth: =200
            Text: ="No new items have been added with this release. Select 'Acknowledge' to proceed to the next step."
            Tooltip: =""
            Visible: =upgradeStep = 3 && CountRows(newThings) = 0
            Width: =200
            X: =0
            Y: =0
            ZIndex: =1

        "icoNoLayers As 'Fluent Icon (1.0.20)'":
            DisplayMode: =DisplayMode.Edit
            FillColor: |-
                ="#dff6dd"
            FontColor: |-
                ="#107c10"
            FontSize: =0
            Height: =200
            IconName: ="Completed"
            IconSize: =0
            IconType: ='PowerCAT.Icon.IconType'.ActionButton
            LayoutMinHeight: =200
            LayoutMinWidth: =200
            Text: ="You do not have any unmanaged layers to review. Select 'Acknowledge' to proceed to the next step."
            Tooltip: =""
            Visible: =upgradeStep = 2 && CountRows(Filter(colLayers, theFlowHasUnmanagedLayer = true)) = 0
            Width: =200
            X: =0
            Y: =0
            ZIndex: =2

        "fluentDetailList_SolutionUpgrades As 'Fluent Details List (1.0.20)'.pcfdataset":
            columns_Items: |-
                =Table(
                    {
                        ColName: "OperationText",
                        ColDisplayName: "Operation",
                        ColCellType:"text",
                        ColWidth: 200,
                        ColImageWidth: 60,
                        ColImagePadding: 8,
                        ColVerticalAlign: "Top"
                    },
                    {
                        ColName: "msdyn_solutionversion",
                        ColDisplayName: "Version",
                        ColCellType:"text",
                        ColWidth: 64,
                        ColImageWidth: 60,
                        ColImagePadding: 8,
                        ColVerticalAlign: "Top"
                    },
                    {
                        ColName: "msdyn_starttime",
                        ColDisplayName: "Start Time",
                        ColCellType:"text",
                        ColWidth: 160,
                        ColImageWidth: 60,
                        ColImagePadding: 8,
                        ColVerticalAlign: "Top"
                    },
                    {
                        ColName: "StatusIcon",
                        ColDisplayName: "",
                        ColCellType:"clickableimage",
                        ColWidth: 48
                    },
                    {
                        ColName: "msdyn_result",
                        ColDisplayName: "Status",
                        ColCellType:"text",
                        ColWidth: 100,
                        ColImageWidth: 60,
                        ColImagePadding: 8,
                        ColVerticalAlign: "Top"
                    }
                )
            DisplayMode: =DisplayMode.Edit
            Height: =200
            Items: |-
                =//show solution upgrade history including success and failure to indicate if the last upgrade has been successful
                AddColumns(
                    Filter('Solutions History', 'Solution Name' = "CenterofExcellenceCoreComponents"),
                    "OperationText",
                    If(
                        Text(Suboperation) = "None", 
                        Text(Operation), 
                        Text(Suboperation) & " (" & Text(Operation) & ")"
                    ),
                
                    "StatusIcon",
                    Switch(
                        Text(Result),
                        "Success",
                        // icon:CompletedSolid
                        "data:image/svg+xml," &
                        EncodeUrl("<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4096 4096'>
                  <path d='M1491 595l90 90-749 749-365-365 90-90 275 275 659-659zM1024 0q141 0 272 36t245 103 207 160 160 208 103 245 37 272q0 141-36 272t-103 245-160 207-208 160-245 103-272 37q-141 0-272-36t-245-103-207-160-160-208-103-244-37-273q0-141 36-272t103-245 160-207 208-160T751 37t273-37zm0 1920q123 0 237-32t214-90 182-141 140-181 91-214 32-238q0-123-32-237t-90-214-141-182-181-140-214-91-238-32q-123 0-237 32t-214 90-182 141-140 181-91 214-32 238q0 123 32 237t90 214 141 182 181 140 214 91 238 32z' fill='#107c10'/>
                </svg>"), 
                
                        //"icon:WarningSolid"
                        "data:image/svg+xml," &
                        EncodeUrl("<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4096 4096'>
                  <path d='M1920 1920H0L960 0l960 1920zM207 1792h1506L960 286 207 1792zm817-1024v640H896V768h128zm-128 768h128v128H896v-128z' fill='#a80000'/>
                </svg>")
                    )
                )
            LayoutMinHeight: =200
            LayoutMinWidth: =200
            OnChange: =false
            OnSelect: =Launch(theAppMakerURL & "environments/" & coeEnv & "/solutions")
            RaiseOnRowSelectionChangeEvent: =true
            SelectionType: ='PowerCAT.FluentDetailsList.SelectionType'.None
            Theme: =AppThemeJson
            Visible: =showUpgrade && upgradeStep <> 2 && upgradeStep <>3
            Width: =200
            X: =0
            Y: =0
            ZIndex: =3

            "'Solution Name1' As pcfDataField.textualColumn":
                FieldDisplayName: ="Solution Name"
                FieldName: ="msdyn_name"
                FieldType: ="s"
                FieldVariantName: ="textualColumn"
                Order: =1
                ZIndex: =28

            "'Start Time1' As pcfDataField.textualColumn":
                FieldDisplayName: ="Start Time"
                FieldName: ="msdyn_starttime"
                FieldType: ="d"
                FieldVariantName: ="textualColumn"
                Order: =2
                ZIndex: =29

            "'Solution Version1' As pcfDataField.textualColumn":
                FieldDisplayName: ="Solution Version"
                FieldName: ="msdyn_solutionversion"
                FieldType: ="s"
                FieldVariantName: ="textualColumn"
                Order: =4
                ZIndex: =31

            Operation1 As pcfDataField.textualColumn:
                FieldDisplayName: ="Operation"
                FieldName: ="msdyn_operation"
                FieldType: ="l"
                FieldVariantName: ="textualColumn"
                Order: =6
                ZIndex: =33

            Suboperation1 As pcfDataField.textualColumn:
                FieldDisplayName: ="Suboperation"
                FieldName: ="msdyn_suboperation"
                FieldType: ="l"
                FieldVariantName: ="textualColumn"
                Order: =7
                ZIndex: =34

            Status2 As pcfDataField.textualColumn:
                FieldDisplayName: ="Status"
                FieldName: ="msdyn_status"
                FieldType: ="l"
                FieldVariantName: ="textualColumn"
                Order: =8
                ZIndex: =35

            Result1 As pcfDataField.textualColumn:
                FieldDisplayName: ="Result"
                FieldName: ="msdyn_result"
                FieldType: ="l"
                FieldVariantName: ="textualColumn"
                Order: =9
                ZIndex: =36

            OperationText1 As pcfDataField.textualColumn:
                FieldDisplayName: ="OperationText"
                FieldName: ="OperationText"
                FieldType: ="e"
                FieldVariantName: ="textualColumn"
                Order: =11
                ZIndex: =38

            StatusIcon2 As pcfDataField.textualColumn:
                FieldDisplayName: ="StatusIcon"
                FieldName: ="StatusIcon"
                FieldType: ="e"
                FieldVariantName: ="textualColumn"
                Order: =12
                ZIndex: =39

        galObjetsWithLayers As gallery.galleryVertical:
            AlignInContainer: =AlignInContainer.SetByContainer
            BorderColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =RGBA(0, 120, 212, 1)
            FocusedBorderThickness: =2
            Height: =panUpgrade.ContentHeight -100
            Items: =Filter(colLayers, theFlowHasUnmanagedLayer = true)
            Layout: =Layout.Vertical
            LayoutMinHeight: =287
            LayoutMinWidth: =320
            TemplateSize: =53
            Visible: =upgradeStep = 2
            Width: =panUpgrade.ContentWidth -20
            X: =panUpgrade.ContentX + 10
            Y: =panUpgrade.ContentY + 80
            ZIndex: =4

            lblUpgradeFlowName As Label:
                DisplayMode: =DisplayMode.Edit
                Height: =32
                OnSelect: =Select(Parent)
                Text: =ThisItem.theName
                Width: =320
                X: =40
                Y: =0
                ZIndex: =1

            lblUpgradeLogo As image:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                Height: =30
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                HoverFill: =RGBA(0, 0, 0, 0)
                Image: =If(ThisItem.theType = "CanvasApp", PowerApps_scalable, PowerAutomate_scalable)
                OnSelect: =Select(Parent)
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =RGBA(0, 0, 0, 0)
                PressedFill: =RGBA(0, 0, 0, 0)
                Width: =30
                ZIndex: =2

            lblUpgradeModified As Label:
                DisplayMode: =DisplayMode.Edit
                Height: =32
                OnSelect: =Select(Parent)
                Text: =ThisItem.lastModifiedTime
                Width: =150
                X: =lblUpgradeFlowName.X + lblUpgradeFlowName.Width
                Y: =0
                ZIndex: =3

            "icoLayer As 'Fluent Icon (1.0.20)'":
                DisplayMode: =DisplayMode.Edit
                Height: =34
                IconColor: =AppTheme.palette.themePrimary
                IconName: ="Warning"
                IconType: ='PowerCAT.Icon.IconType'.ActionButton
                OnChange: |+
                    =Launch(
                        theAppMakerURL & "environments/" & coeEnv & "/solutions/" & ThisItem.theSolutionGUID & "/objects/" & If(
                            ThisItem.theType = "CanvasApp",
                            "apps/",
                            "workflow/"
                        ) & ThisItem.theGUID & "/layers"
                    )
                    
                Text: ="See layers"
                Tooltip: =""
                Width: =150
                X: =lblUpgradeModified.X + lblUpgradeModified.Width
                Y: =0
                ZIndex: =5

        galNewObjects As gallery.galleryVertical:
            AlignInContainer: =AlignInContainer.SetByContainer
            BorderColor: =RGBA(166, 166, 166, 1)
            FocusedBorderColor: =RGBA(0, 120, 212, 1)
            FocusedBorderThickness: =2
            Height: =panUpgrade.ContentHeight -80
            Items: =newThings
            Layout: =Layout.Vertical
            LayoutMinHeight: =287
            LayoutMinWidth: =320
            OnSelect: |-
                =//link to maker experience of the new object
                Launch(theAppMakerURL & "environments/" & coeEnv & "/solutions/" & coeSolution & "/objects/" & If("Canvas" in ThisItem.type, "apps", If("Cloud" in ThisItem.type, "cloudflows", If("Env" in ThisItem.type, "environment%20variables"))))
            TemplateSize: =53
            Visible: =upgradeStep = 3
            Width: =panUpgrade.ContentWidth -20
            X: =panUpgrade.ContentX + 10
            Y: =panUpgrade.ContentY + 50
            ZIndex: =5

            lblNewName As Label:
                DisplayMode: =DisplayMode.Edit
                Height: =32
                OnSelect: =Select(Parent)
                Text: =ThisItem.displayname & " (" & ThisItem.type & ")"
                Width: =galNewObjects.TemplateWidth - lblNewLogo.Width
                X: =lblNewLogo.Width  + 10
                Y: =0
                ZIndex: =1

            lblNewLogo As image:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                Height: =30
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                HoverFill: =RGBA(0, 0, 0, 0)
                Image: =If("Canvas" in ThisItem.type, PowerApps_scalable, If("Cloud" in ThisItem.type, PowerAutomate_scalable, Dataverse_scalable))
                OnSelect: =Select(Parent)
                PressedBorderColor: =RGBA(0, 0, 0, 0)
                PressedFill: =RGBA(0, 0, 0, 0)
                Width: =30
                ZIndex: =2

        "fluentDetailList_NewObjects As 'Fluent Details List (1.0.20)'.pcfdataset":
            columns_Items: |-
                =Table(
                    {
                        ColName: "OperationText",
                        ColDisplayName: "Operation",
                        ColCellType:"text",
                        ColWidth: 200,
                        ColImageWidth: 60,
                        ColImagePadding: 8,
                        ColVerticalAlign: "Top"
                    },
                    {
                        ColName: "msdyn_solutionversion",
                        ColDisplayName: "Version",
                        ColCellType:"text",
                        ColWidth: 64,
                        ColImageWidth: 60,
                        ColImagePadding: 8,
                        ColVerticalAlign: "Top"
                    },
                    {
                        ColName: "msdyn_starttime",
                        ColDisplayName: "Start Time",
                        ColCellType:"text",
                        ColWidth: 160,
                        ColImageWidth: 60,
                        ColImagePadding: 8,
                        ColVerticalAlign: "Top"
                    },
                    {
                        ColName: "StatusIcon",
                        ColDisplayName: "",
                        ColCellType:"clickableimage",
                        ColWidth: 48
                    },
                    {
                        ColName: "msdyn_result",
                        ColDisplayName: "Status",
                        ColCellType:"text",
                        ColWidth: 100,
                        ColImageWidth: 60,
                        ColImagePadding: 8,
                        ColVerticalAlign: "Top"
                    }
                )
            DisplayMode: =DisplayMode.Edit
            Height: =200
            Items: =newThings
            LayoutMinHeight: =200
            LayoutMinWidth: =200
            OnChange: =false
            OnSelect: =Launch(theAppMakerURL & "environments/" & coeEnv & "/solutions")
            RaiseOnRowSelectionChangeEvent: =true
            SelectionType: ='PowerCAT.FluentDetailsList.SelectionType'.None
            Theme: =AppThemeJson
            Visible: =false //upgradeStep = 3
            Width: =200
            X: =0
            Y: =0
            ZIndex: =6

            "'Solution Name1_2' As pcfDataField.textualColumn":
                FieldDisplayName: ="Solution Name"
                FieldName: ="msdyn_name"
                FieldType: ="s"
                FieldVariantName: ="textualColumn"
                Order: =1
                ZIndex: =28

            "'Start Time1_2' As pcfDataField.textualColumn":
                FieldDisplayName: ="Start Time"
                FieldName: ="msdyn_starttime"
                FieldType: ="d"
                FieldVariantName: ="textualColumn"
                Order: =2
                ZIndex: =29

            "'Solution Version1_2' As pcfDataField.textualColumn":
                FieldDisplayName: ="Solution Version"
                FieldName: ="msdyn_solutionversion"
                FieldType: ="s"
                FieldVariantName: ="textualColumn"
                Order: =4
                ZIndex: =31

            Operation1_2 As pcfDataField.textualColumn:
                FieldDisplayName: ="Operation"
                FieldName: ="msdyn_operation"
                FieldType: ="l"
                FieldVariantName: ="textualColumn"
                Order: =6
                ZIndex: =33

            Suboperation1_2 As pcfDataField.textualColumn:
                FieldDisplayName: ="Suboperation"
                FieldName: ="msdyn_suboperation"
                FieldType: ="l"
                FieldVariantName: ="textualColumn"
                Order: =7
                ZIndex: =34

            Status2_2 As pcfDataField.textualColumn:
                FieldDisplayName: ="Status"
                FieldName: ="msdyn_status"
                FieldType: ="l"
                FieldVariantName: ="textualColumn"
                Order: =8
                ZIndex: =35

            Result1_2 As pcfDataField.textualColumn:
                FieldDisplayName: ="Result"
                FieldName: ="msdyn_result"
                FieldType: ="l"
                FieldVariantName: ="textualColumn"
                Order: =9
                ZIndex: =36

            OperationText1_2 As pcfDataField.textualColumn:
                FieldDisplayName: ="OperationText"
                FieldName: ="OperationText"
                FieldType: ="e"
                FieldVariantName: ="textualColumn"
                Order: =11
                ZIndex: =38

            StatusIcon2_2 As pcfDataField.textualColumn:
                FieldDisplayName: ="StatusIcon"
                FieldName: ="StatusIcon"
                FieldType: ="e"
                FieldVariantName: ="textualColumn"
                Order: =12
                ZIndex: =39

    panShareApps As Panel_1:
        Buttons: |-
            =Table({Label: "Cancel", ButtonType:'Button.ButtonType'.Standard } ,{Label: "Share", ButtonType:'Button.ButtonType'.Primary})
        Fill: =panShareApps.OverlayColor
        OnButtonSelect: |-
            =Switch(
                Self.SelectedButton.Label,
                "Share",
                Patch(
                Processes,
                First(
                    Filter(
                        Processes,
                        "ShareApps" in 'Process Name'
                    )
                ),
                {Status: 'Status (Processes)'.Activated}
            );
            Patch(
                            'Setup Wizard State metadata',
                            Defaults('Setup Wizard State metadata'),
                            {
                                Name: "ShareApps",
                                'Last Completed Step': 7,
                                'Solution Name': "CenterofExcellenceCoreComponents",
                                'Solution Version': coESolutionVersion
                            }
                        ),
               /* 'SetupWizard>ShareApps'.Run(
                    Text(
                        LookUp(
                            Office365Groups.ListOwnedGroupsV2().value,
                            mail = LookUp(
                                'Environment Variable Values',
                                'Environment Variable Definition'.'Schema Name' = "admin_AdminMail"
                            ).Value
                        ).id
                    ),
                    Text(
                        LookUp(
                            Office365Groups.ListOwnedGroupsV2().value,
                            id = LookUp(
                                'Environment Variable Values',
                                'Environment Variable Definition'.'Schema Name' = "admin_PowerPlatformMakeSecurityGroup"
                            ).Value
                        ).id
                    ),
                    Text(
                        LookUp(
                            Office365Groups.ListOwnedGroupsV2().value,
                            id = LookUp(
                                'Environment Variable Values',
                                'Environment Variable Definition'.'Schema Name' = "admin_PowerPlatformUserGroupID"
                            ).Value
                        ).id
                    ),
                    Text(coeEnv)
                )*/
                "Cancel",
                UpdateContext({showSharePanel: false})
            );
            UpdateContext({showSharePanel: false})
        OnCloseSelect: |-
            =UpdateContext({showSharePanel: false})
        Subtitle: ="Share all apps based on their target persona with the security groups created during the 'Configure communication methods' step. Select 'Share' to share the apps."
        Title: ="Share all apps"
        Visible: =showSharePanel
        Width: ='Setup Wizard Screen'.Width
        ZIndex: =10

    conSharePanel As groupContainer.verticalAutoLayoutContainer:
        Height: =panShareApps.ContentHeight
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutDirection: =LayoutDirection.Vertical
        LayoutGap: =20
        LayoutMode: =LayoutMode.Auto
        Visible: =panShareApps.Visible
        Width: =panShareApps.ContentWidth-20
        X: =panShareApps.ContentX
        Y: =panShareApps.ContentY+5
        ZIndex: =11

        lblShareAll As htmlViewer:
            AutoHeight: =true
            FillPortions: =1
            Font: =Font.'Segoe UI'
            HtmlText: |-
                =//creating a label that concats all the apps based on their persona to share which apps will be shared with which group
                If(
                    !IsBlank(
                        LookUp(
                            'Environment Variable Values',
                            'Environment Variable Definition'.'Schema Name' = "admin_AdminMail"
                        ).Value
                    ),
                    "The following apps will be shared with the <strong>" & LookUp(
                        Office365Groups.ListOwnedGroupsV2().value,
                        mail = LookUp(
                            'Environment Variable Values',
                            'Environment Variable Definition'.'Schema Name' = "admin_AdminMail"
                        ).Value
                    ).displayName & "</strong> group: " & With(
                        {
                            input: "<ul><li>" &Concat(
                                Filter(
                                    'CoE Solution Metadata',
                                    (ObjectType = "CanvasApp" || ObjectType = "ModelDrivenApp"),
                                    CoESolution = "Core",
                                    Persona = "Admin"
                                ),
                                ObjectName & "</li><li>"
                            )
                        },
                        Concatenate(Left(
                            input,
                            If(
                                Len(input) > 2,
                                Len(input) - 4,
                                Len(input)
                            )
                        ), "</ul>")
                    )
                ) &
                If(
                    !IsBlank(
                        LookUp(
                        'Environment Variable Values',
                        'Environment Variable Definition'.'Schema Name' = "admin_PowerPlatformMakeSecurityGroup"
                    ).Value
                    ),
                 "<br>The following apps will be shared with the <strong>" & LookUp(
                    Office365Groups.ListOwnedGroupsV2().value,
                    id = LookUp(
                        'Environment Variable Values',
                        'Environment Variable Definition'.'Schema Name' = "admin_PowerPlatformMakeSecurityGroup"
                    ).Value
                ).displayName & "</strong> group: " & With(
                    {
                        input: "<ul><li>" & Concat(
                            Filter(
                                'CoE Solution Metadata',
                                (ObjectType = "CanvasApp" || ObjectType = "ModelDrivenApp"),
                                CoESolution = "Core",
                                Persona = "Maker"
                            ),
                            ObjectName & "</li><li>"
                        )
                    },
                   Concatenate(Left(
                            input,
                            If(
                                Len(input) > 2,
                                Len(input) - 4,
                                Len(input)
                            )
                        ), "</ul>")
                )) 
                //removing user section for now as no user canvas apps. To bring back when we share MDAs
                 &
                If(!IsBlank(
                    LookUp(
                        'Environment Variable Values',
                        'Environment Variable Definition'.'Schema Name' = "admin_PowerPlatformUserGroupID"
                    ).Value ),
                
                "<br>The following apps will be shared with the <strong>" & LookUp(
                    Office365Groups.ListOwnedGroupsV2().value,
                    id = LookUp(
                        'Environment Variable Values',
                        'Environment Variable Definition'.'Schema Name' = "admin_PowerPlatformUserGroupID"
                    ).Value
                ).displayName & "</strong> group: " & With(
                    {
                        input:  "<ul><li>" & Concat(
                            Filter(
                                'CoE Solution Metadata',
                                (ObjectType = "CanvasApp" || ObjectType = "ModelDrivenApp"),
                                CoESolution = "Core",
                                Persona = "User"
                            ),
                            ObjectName & "</li><li>"
                        )
                    },
                    Concatenate(Left(
                            input,
                            If(
                                Len(input) > 2,
                                Len(input) - 4,
                                Len(input)
                            )
                        ), "</ul>")
                ))
            Size: =10.5
            ZIndex: =6

    "shimmerUpgrade As 'Fluent Shimmer (1.0.20) Preview'.pcfdataset":
        DisplayMode: =DisplayMode.Edit
        Height: =galObjetsWithLayers.Height
        RowCount: =8
        Theme: ="AppThemeJson"
        Visible: =showShimmer
        Width: =galObjetsWithLayers.Width
        X: =panUpgrade.ContentX+20
        Y: =panUpgrade.ContentY+100
        ZIndex: =12

    "loadScreen As 'Fluent Spinner (1.0.20) Preview'":
        DisplayMode: =DisplayMode.Edit
        Height: ='Setup Wizard Screen'.Height
        Label: ="Loading next step. Please wait (some steps can take a long time to load) ..."
        LabelPosition: ='PowerCAT.Spinner.LabelPosition'.Bottom
        SpinnerAlignment: ='PowerCAT.Spinner.SpinnerAlignment'.Center
        SpinnerSize: ='PowerCAT.Spinner.SpinnerSize'.Large
        Theme: =AppThemeJson
        Visible: =loadSyncFlowWait || loadPrequVisible
        Width: ='Setup Wizard Screen'.Width
        X: =0
        Y: =0
        ZIndex: =13

