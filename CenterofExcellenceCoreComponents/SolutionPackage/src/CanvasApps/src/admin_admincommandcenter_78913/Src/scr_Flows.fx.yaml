scr_Flows As screen:
    LoadingSpinnerColor: =RGBA(105, 121, 126, 1)
    OnVisible: |-
        =UpdateContext({showLoading: true, showLoadingText: "", showBlocked: false, BlockedText:"", flowSortBy:"SetupOrder", flowSortOrder:"Ascending"});
        UpdateContext({LastMetaDataRun: First(Filter('CoE Solution Metadata', ObjectName = "Admin | Sync Template v3 CoE Solution Metadata")).LastRun});
        UpdateContext({varStartTimer: false, RefreshDone: false});
        
        //Get flows for refetching
        ClearCollect(TempFlowCollection, PowerAutomateManagement.ListFlowsInEnvironment(CoE_Envt).value);
        
        //SHOW BLOCKING UX - No CoE Envt
        If(IsBlank(CoE_Envt),UpdateContext({BlockedText:"This functionality relies on data that is not yet in your CoE. 
        
        You need to run this flow: Admin | Sync Template v3
        
        Then return here to use this feature."});UpdateContext({showBlocked: true }););
        
        //SHOW BLOCKING UX - No Metadata
        If(CountRows(Filter('CoE Solution Metadata', ObjectName = "Admin | Sync Template v3 CoE Solution Metadata"))=0, UpdateContext({BlockedText:"This functionality relies on data that is not yet in your CoE. 
        
        You need to run this flow: Admin | Sync Template v3 CoE Solution Metadata
        
        Then return here to use this feature."});UpdateContext({showBlocked: true }););
        
        //ELSE FETCH FLOWS
        If(!showBlocked,
        UpdateContext({showLoadingText: "Loading CoE Flows", showLoading: true});
        UpdateContext({LastMetaDataRun: First(Filter('CoE Solution Metadata', ObjectName = "Admin | Sync Template v3 CoE Solution Metadata")).LastRun});
        Clear(FlowsWithMetadata);
        ForAll(Filter('CoE Solution Metadata', ObjectType="CloudFlows"),
            Collect(FlowsWithMetadata,
            {
                theName: ObjectName,
                theSolution: CoESolution,
                theArea: CoESolutionArea,
                theSetupOrder: InstallOrder,
                theFlagNote: Flag,
                theGUID: If(ObjectGUID = "refetch", 
                    If(CountRows(TempFlowCollection)>0, First(Filter(TempFlowCollection, properties.displayName = ObjectName)).name, "refetch"), ObjectGUID),
                theSoltuionGUID: ObjectSolutionGUID,
                theSolutionID: SolutionID,
                theFlowURL: ObjectURL,
                theFlowIsManaged: If(ObjectIsManaged = 'ObjectIsManaged (CoE Solution Metadata)'.Yes, true, false),
                theState: If(ObjectGUID = "refetch", "Started", "Stopped"), //will populate correctly below
                thePublishedState: If(ObjectGUID = "unpublished", false, true),
                theIsErrorState: false,
                theFlowHasUnmanagedLayer: false //will populate correctly below
            }
            )); 
        
        UpdateIf(FlowsWithMetadata, theGUID <> "unpublished" && theGUID <> "refetch" && !IsBlank(theGUID),
        {
            theState: PowerAutomateManagement.AdminGetFlow(CoE_Envt, ThisRecord.theGUID).properties.state,
            theFlowHasUnmanagedLayer: If(And(theFlowIsManaged = true, Text(First(Filter(Processes, 'Process Name'= theName)).solutionid)=UnmanagedSolutionID), true, false)
        });
        
        //CREATE DROP DOWNS
        Clear(DropDown_Solution);
        Collect(DropDown_Solution, "All solutions");
        ForAll(Distinct(FlowsWithMetadata, theSolution), 
            Collect(DropDown_Solution, Result));
        Clear(DropDown_Area);
        Collect(DropDown_Area, "All solution areas");
        ForAll(Distinct(FlowsWithMetadata, theArea), 
            Collect(DropDown_Area, Result));
        ); 
        UpdateContext({showLoading: false });

    c_screen_11 As groupContainer.verticalAutoLayoutContainer:
        Height: =App.Height
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        Width: =App.Width
        ZIndex: =1

        HeaderContainer2_13 As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Fill: =RGBA(52, 60, 63, 1)
            FillPortions: =0
            Height: =50
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            ZIndex: =2

            lbl_mainheader_11 As label:
                AlignInContainer: =AlignInContainer.Stretch
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =RGBA(255, 255, 255, 1)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Fill: =RGBA(68, 68, 68, 1)
                FillPortions: =1
                FocusedBorderThickness: =4
                Font: =Font.'Segoe UI'
                PaddingLeft: =20
                Text: =appTitle
                ZIndex: =1

            Timer2 As timer:
                BorderColor: =RGBA(105, 121, 126, 1)
                BorderStyle: =BorderStyle.None
                DisabledBorderColor: =RGBA(244, 244, 244, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                Duration: =15000
                Fill: =RGBA(105, 121, 126, 1)
                Font: =Font.'Segoe UI'
                HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -10%)
                HoverColor: =RGBA(255, 255, 255, 1)
                HoverFill: =ColorFade(RGBA(105, 121, 126, 1), -10%)
                OnTimerEnd: |
                    =//see if done
                    UpdateContext({RefreshDone: If(First(Filter('CoE Solution Metadata', ObjectName = "Admin | Sync Template v3 CoE Solution Metadata")).LastRun <> LastMetaDataRun, true, false)});
                    
                    
                    If(RefreshDone, 
                    
                    /////if refresh is done
                    UpdateContext({varStartTimer: false, showLoadingText: "Updating local copy of data"}); 
                    Refresh('CoE Solution Metadata');
                    UpdateContext({LastMetaDataRun: First(Filter('CoE Solution Metadata', ObjectName = "Admin | Sync Template v3 CoE Solution Metadata")).LastRun});
                    Clear(FlowsWithMetadata);
                    ForAll(Filter('CoE Solution Metadata', ObjectType="CloudFlows"),
                        Collect(FlowsWithMetadata,
                        {
                            theName: ObjectName,
                            theSolution: CoESolution,
                            theArea: CoESolutionArea,
                            theSetupOrder: InstallOrder,
                            theFlagNote: Flag,
                            theGUID: ObjectGUID,
                            theSoltuionGUID: ObjectSolutionGUID,
                            theSolutionID: SolutionID,
                            theFlowURL: ObjectURL,
                            theFlowIsManaged: If(ObjectIsManaged = 'ObjectIsManaged (CoE Solution Metadata)'.Yes, true, false),
                            theState: "Stopped", //will populate correctly below
                            thePublishedState: If(ObjectGUID = "unpublished", false, true),
                            theIsErrorState: false,
                            theFlowHasUnmanagedLayer: false //will populate correctly below
                        }
                        )); 
                    
                    UpdateIf(FlowsWithMetadata, theGUID <> "unpublished" && !IsBlank(theGUID),
                    {
                        theState: PowerAutomateManagement.AdminGetFlow(CoE_Envt, ThisRecord.theGUID).properties.state,
                        theFlowHasUnmanagedLayer: If(And(theFlowIsManaged = true, Text(First(Filter(Processes, 'Process Name'= theName)).solutionid)=UnmanagedSolutionID), true, false)
                    });
                    
                    //CREATE DROP DOWNS
                    Clear(DropDown_Solution); Collect(DropDown_Solution, "All solutions");
                    ForAll(Distinct(FlowsWithMetadata, theSolution), Collect(DropDown_Solution, Result));
                    Clear(DropDown_Area); Collect(DropDown_Area, "All solution areas");
                    ForAll(Distinct(FlowsWithMetadata, theArea), Collect(DropDown_Area, Result)); 
                    UpdateContext({showLoading: false});,
                    
                    /////else refresh not done, start timer again
                    UpdateContext({varStartTimer: false});UpdateContext({varStartTimer: true}));
                PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                PressedColor: =RGBA(255, 255, 255, 1)
                PressedFill: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                Reset: =true
                Start: =varStartTimer
                Visible: =false
                ZIndex: =2

        MainSectionContainer2_13 As groupContainer.verticalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            ZIndex: =3

            Navigation_13 As Navigation:
                AlignInContainer: =AlignInContainer.Stretch
                Items: =col_nav
                LayoutMinHeight: =600
                LayoutMinWidth: =640
                Width: =If(Navigation_13.IsExpanded, 200, 60)

            Rectangle2_26 As rectangle:
                AlignInContainer: =AlignInContainer.Stretch
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Fill: =RGBA(230, 230, 230, 1)
                FocusedBorderThickness: =4
                Height: =1
                Width: =1
                ZIndex: =2

            c_mainContent_11 As groupContainer.verticalAutoLayoutContainer:
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                ZIndex: =3

                Container23_11 As groupContainer.verticalAutoLayoutContainer:
                    Fill: =RGBA(241, 241, 241, 1)
                    LayoutAlignItems: =LayoutAlignItems.Stretch
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =20
                    PaddingLeft: =20
                    PaddingRight: =20
                    ZIndex: =6

                    cHeadersFlowSyncErrors_1 As groupContainer.horizontalAutoLayoutContainer:
                        FillPortions: =0.08
                        Height: =40
                        LayoutAlignItems: =LayoutAlignItems.Stretch
                        LayoutGap: =5
                        LayoutJustifyContent: =LayoutJustifyContent.End
                        LayoutMinHeight: =40
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingTop: =5
                        ZIndex: =1

                        Icon7 As icon.OfficeBuilding:
                            AlignInContainer: =AlignInContainer.Start
                            BorderColor: =RGBA(166, 166, 166, 1)
                            Color: =RGBA(105, 121, 126, 1)
                            DisabledBorderColor: =RGBA(0, 0, 0, 0)
                            DisabledColor: =RGBA(220, 220, 220, 1)
                            DisabledFill: =RGBA(0, 0, 0, 0)
                            FocusedBorderThickness: =4
                            Height: =40
                            HoverBorderColor: =RGBA(0, 0, 0, 0)
                            HoverColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                            HoverFill: =RGBA(0, 0, 0, 0)
                            Icon: =Icon.Reload
                            LayoutMinHeight: =40
                            LayoutMinWidth: =100
                            OnSelect: |-
                                =UpdateContext({showLoadingText: "Running CoE Metadata flow. This takes 3 - 4 minutes"});
                                UpdateContext({showLoading: true, RefreshDone: false, varStartTimer: true});
                                'Admin|SyncTemplatev3CoESolutionMetadata'.Run();
                            PaddingBottom: =5
                            PaddingLeft: =5
                            PaddingRight: =5
                            PaddingTop: =5
                            PressedBorderColor: =RGBA(0, 0, 0, 0)
                            PressedColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                            PressedFill: =RGBA(0, 0, 0, 0)
                            Tooltip: ="Refresh only needed if you have installed/updated/removed CoE solutions since data last gathered"
                            Width: =40
                            ZIndex: =1

                        Label2_1 As label:
                            AlignInContainer: =AlignInContainer.Start
                            BorderColor: =RGBA(0, 0, 0, 0)
                            BorderStyle: =BorderStyle.None
                            BorderThickness: =2
                            Color: =RGBA(51, 51, 51, 1)
                            DisabledBorderColor: =RGBA(0, 0, 0, 0)
                            DisabledColor: =RGBA(166, 166, 166, 1)
                            FillPortions: =1
                            FocusedBorderThickness: =4
                            Font: =Font.'Segoe UI'
                            Size: =13
                            Text: |-
                                ="Data last gathered: " & LastMetaDataRun
                            Tooltip: =Icon7.Tooltip
                            Width: =300
                            X: =15
                            Y: =30
                            ZIndex: =2

                        drp_FlowArea As dropdown:
                            AlignInContainer: =AlignInContainer.Start
                            BorderColor: =RGBA(166, 166, 166, 1)
                            ChevronBackground: =RGBA(255, 255, 255, 1)
                            ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                            ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                            ChevronFill: =RGBA(33, 33, 33, 1)
                            ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                            ChevronHoverFill: =RGBA(33, 33, 33, 1)
                            Color: =RGBA(51, 51, 51, 1)
                            DisabledBorderColor: =RGBA(0, 0, 0, 0)
                            DisabledColor: =RGBA(166, 166, 166, 1)
                            DisabledFill: =RGBA(244, 244, 244, 1)
                            Font: =Font.'Segoe UI'
                            HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                            HoverColor: =RGBA(51, 51, 51, 1)
                            HoverFill: =RGBA(212, 212, 212, 1)
                            Items: =DropDown_Area
                            PaddingBottom: =5
                            PaddingLeft: =12
                            PaddingRight: =5
                            PaddingTop: =5
                            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                            PressedColor: =RGBA(255, 255, 255, 1)
                            PressedFill: =RGBA(105, 121, 126, 1)
                            SelectionFill: =RGBA(105, 121, 126, 1)
                            Size: =12
                            Width: =170
                            X: =715
                            Y: =70
                            ZIndex: =3

                        drp_FlowSolution As dropdown:
                            AlignInContainer: =AlignInContainer.Start
                            BorderColor: =RGBA(166, 166, 166, 1)
                            ChevronBackground: =RGBA(255, 255, 255, 1)
                            ChevronDisabledBackground: =RGBA(244, 244, 244, 1)
                            ChevronDisabledFill: =RGBA(166, 166, 166, 1)
                            ChevronFill: =RGBA(33, 33, 33, 1)
                            ChevronHoverBackground: =RGBA(212, 212, 212, 1)
                            ChevronHoverFill: =RGBA(33, 33, 33, 1)
                            Color: =RGBA(51, 51, 51, 1)
                            DisabledBorderColor: =RGBA(0, 0, 0, 0)
                            DisabledColor: =RGBA(166, 166, 166, 1)
                            DisabledFill: =RGBA(244, 244, 244, 1)
                            Font: =Font.'Segoe UI'
                            HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                            HoverColor: =RGBA(51, 51, 51, 1)
                            HoverFill: =RGBA(212, 212, 212, 1)
                            Items: =DropDown_Solution
                            PaddingBottom: =5
                            PaddingLeft: =12
                            PaddingRight: =5
                            PaddingTop: =5
                            PressedBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                            PressedColor: =RGBA(255, 255, 255, 1)
                            PressedFill: =RGBA(105, 121, 126, 1)
                            SelectionFill: =RGBA(105, 121, 126, 1)
                            Size: =12
                            Width: =134
                            X: =517
                            Y: =70
                            ZIndex: =4

                        txt_FlowSearch As text:
                            AlignInContainer: =AlignInContainer.Start
                            BorderColor: =RGBA(166, 166, 166, 1)
                            BorderThickness: =2
                            Color: =RGBA(51, 51, 51, 1)
                            Default: =""
                            DisabledBorderColor: =RGBA(0, 0, 0, 0)
                            DisabledColor: =RGBA(166, 166, 166, 1)
                            DisabledFill: =RGBA(244, 244, 244, 1)
                            FocusedBorderThickness: =4
                            Font: =Font.'Segoe UI'
                            HintText: ="Search by Flow Name"
                            HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                            HoverColor: =RGBA(51, 51, 51, 1)
                            HoverFill: =RGBA(255, 255, 255, 1)
                            PressedBorderColor: =RGBA(105, 121, 126, 1)
                            PressedColor: =RGBA(51, 51, 51, 1)
                            PressedFill: =RGBA(255, 255, 255, 1)
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Size: =12
                            Width: =438
                            X: =21
                            Y: =70
                            ZIndex: =5

                        imgFlowSortAlpha As image:
                            AlignInContainer: =AlignInContainer.Start
                            BorderColor: =RGBA(0, 0, 0, 0)
                            BorderStyle: =BorderStyle.None
                            BorderThickness: =2
                            DisabledBorderColor: =RGBA(0, 0, 0, 0)
                            DisabledFill: =RGBA(0, 0, 0, 0)
                            FocusedBorderThickness: =4
                            Height: =40
                            HoverBorderColor: =RGBA(0, 0, 0, 0)
                            HoverFill: =RGBA(0, 0, 0, 0)
                            Image: |-
                                ="data:image/svg+xml;utf8, " & 
                                
                                If(flowSortOrder = "Descending",
                                
                                EncodeUrl("<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 2048'>
                                  <path d='M1216 1024h512l-320 640h320v128h-512l320-640h-320v-128zm-704 614l163-163 90 90-317 318-317-318 90-90 163 163V128h128v1510zm811-870l-43 128h-128l256-768h128l256 768h-128l-43-128h-298zm149-448l-107 320h214l-107-320z' />
                                </svg>"), EncodeUrl("<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 2048'>
                                  <path d='M1728 896h-512l320-640h-320V128h512l-320 640h320v128zM512 1638l163-163 90 90-317 318-317-318 90-90 163 163V128h128v1510zm1152 154l-43-128h-298l-43 128h-128l256-768h128l256 768h-128zm-299-256h214l-107-320-107 320z' />
                                </svg>"))
                            LayoutMinHeight: =40
                            OnSelect: |-
                                =UpdateContext({flowSortBy: "Name"});
                                If(flowSortOrder = "Ascending", UpdateContext({flowSortOrder: "Descending"}), UpdateContext({flowSortOrder: "Ascending"}));
                            PaddingBottom: =5
                            PaddingLeft: =5
                            PaddingRight: =5
                            PaddingTop: =5
                            PressedBorderColor: =RGBA(0, 0, 0, 0)
                            PressedFill: =RGBA(0, 0, 0, 0)
                            Tooltip: ="Sort by name"
                            Width: =40
                            X: =
                            Y: =
                            ZIndex: =6

                        imgFlowSortOrder As image:
                            AlignInContainer: =AlignInContainer.Start
                            BorderColor: =RGBA(0, 0, 0, 0)
                            BorderStyle: =BorderStyle.None
                            BorderThickness: =2
                            DisabledBorderColor: =RGBA(0, 0, 0, 0)
                            DisabledFill: =RGBA(0, 0, 0, 0)
                            FocusedBorderThickness: =4
                            Height: =40
                            HoverBorderColor: =RGBA(0, 0, 0, 0)
                            HoverFill: =RGBA(0, 0, 0, 0)
                            Image: |-
                                ="data:image/svg+xml;utf8, " & EncodeUrl("<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 2048'>
                                  <path d='M384 1638l163-163 90 90-317 318L3 1565l90-90 163 163V128h128v1510zm384-358v-128h512v128H768zm0-384V768h896v128H768zm0-512h1280v128H768V384z' />
                                </svg>")
                            LayoutMinHeight: =40
                            OnSelect: |-
                                =UpdateContext({flowSortBy: "SetupOrder"});
                                UpdateContext({flowSortOrder: "Ascending"});
                            PaddingBottom: =5
                            PaddingLeft: =5
                            PaddingRight: =5
                            PaddingTop: =5
                            PressedBorderColor: =RGBA(0, 0, 0, 0)
                            PressedFill: =RGBA(0, 0, 0, 0)
                            Tooltip: ="Sort by setup order"
                            Width: =40
                            X: =
                            Y: =
                            ZIndex: =7

                    gal_syncflowerrors_1 As gallery.galleryVertical:
                        BorderColor: =RGBA(166, 166, 166, 1)
                        Fill: =RGBA(255, 255, 255, 1)
                        Height: =525
                        Items: |-
                            =SortByColumns(Filter(
                            If("All" in drp_FlowSolution.SelectedText.Value,
                                If("All" in drp_FlowArea.SelectedText.Value,
                                        FlowsWithMetadata,
                                        Filter(FlowsWithMetadata, theArea = drp_FlowArea.SelectedText.Value)),
                                    If("All" in drp_FlowArea.SelectedText.Value,
                                        Filter(FlowsWithMetadata, theSolution = drp_FlowSolution.SelectedText.Value),
                                        Filter(FlowsWithMetadata, theSolution = drp_FlowSolution.SelectedText.Value && theArea = drp_FlowArea.SelectedText.Value)
                                    )
                            ), txt_FlowSearch.Text in theName), If(flowSortBy = "Name", "theName", "theSetupOrder"), If(flowSortOrder = "Ascending", Ascending, Descending))
                        Layout: =Layout.Vertical
                        LayoutMinHeight: =287
                        LayoutMinWidth: =320
                        OnSelect: =
                        TabIndex: =1
                        TemplatePadding: =0
                        TemplateSize: =If(Self.Layout = Layout.Horizontal, Min(60, Self.Width - 60), Min(60, Self.Height - 60))
                        Width: =1273
                        X: =16
                        ZIndex: =4

                        Container9_4 As groupContainer.horizontalAutoLayoutContainer:
                            Height: =60
                            LayoutAlignItems: =LayoutAlignItems.Stretch
                            LayoutMode: =LayoutMode.Auto
                            PaddingLeft: =20
                            Width: =Parent.Width
                            ZIndex: =1

                            lblFlowName_1 As label:
                                BorderColor: =RGBA(0, 0, 0, 0)
                                BorderStyle: =BorderStyle.None
                                BorderThickness: =2
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                FillPortions: =1
                                FocusedBorderThickness: =4
                                Font: =Font.'Segoe UI'
                                LayoutMinWidth: =180
                                Size: =11
                                Text: =ThisItem.theName
                                Width: =350
                                Wrap: =false
                                ZIndex: =1

                            lblEnvName_1 As label:
                                BorderColor: =RGBA(0, 0, 0, 0)
                                BorderStyle: =BorderStyle.None
                                BorderThickness: =2
                                Color: =RGBA(51, 51, 51, 1)
                                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                FillPortions: =1
                                FocusedBorderThickness: =4
                                Font: =Font.'Segoe UI'
                                LayoutMinWidth: =100
                                Size: =11
                                Text: =ThisItem.theArea
                                Width: =350
                                Wrap: =false
                                ZIndex: =2

                            lblFailedOn_1 As label:
                                BorderColor: =RGBA(0, 0, 0, 0)
                                BorderStyle: =BorderStyle.None
                                BorderThickness: =2
                                Color: =RGBA(51, 51, 51, 1)
                                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                FillPortions: =1
                                FocusedBorderThickness: =4
                                Font: =Font.'Segoe UI'
                                LayoutMinWidth: =100
                                Size: =11
                                Text: =ThisItem.theSolution
                                Wrap: =false
                                ZIndex: =3

                            icoFlag_1 As icon.Flag:
                                BorderColor: =RGBA(166, 166, 166, 1)
                                Color: |-
                                    =
                                    
                                    If(!IsBlank(ThisItem.theFlagNote), RGBA(255, 0, 0, 1), RGBA(255, 255, 255, 1))
                                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                DisabledColor: =RGBA(220, 220, 220, 1)
                                DisabledFill: =RGBA(0, 0, 0, 0)
                                FocusedBorderThickness: =4
                                Height: =42
                                HoverBorderColor: =RGBA(0, 0, 0, 0)
                                HoverColor: =Self.Color
                                HoverFill: =RGBA(0, 0, 0, 0)
                                Icon: =Icon.Flag
                                OnSelect: =
                                PaddingBottom: =5
                                PaddingTop: =5
                                PressedBorderColor: =RGBA(0, 0, 0, 0)
                                PressedColor: =Self.Color
                                PressedFill: =RGBA(0, 0, 0, 0)
                                Tooltip: =ThisItem.theFlagNote
                                Width: =24
                                X: =ThisItem.theArea
                                Y: =7
                                ZIndex: =4

                            icoUnmanaged As icon.LevelsLayersItems:
                                BorderColor: =RGBA(166, 166, 166, 1)
                                Color: =If(ThisItem.theFlowHasUnmanagedLayer, Red, White)
                                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                DisabledColor: =RGBA(220, 220, 220, 1)
                                DisabledFill: =RGBA(0, 0, 0, 0)
                                FocusedBorderThickness: =4
                                HoverBorderColor: =RGBA(0, 0, 0, 0)
                                HoverColor: =Self.Color
                                HoverFill: =RGBA(0, 0, 0, 0)
                                Icon: =Icon.LevelsLayersItems
                                OnSelect: |-
                                    =If(ThisItem.theFlowHasUnmanagedLayer, Launch(theAppMakerURL & "environments/" & CoE_Envt & "/solutions/" & ThisItem.theSolutionID & "/objects/workflow/" & ThisItem.theSoltuionGUID & "/layers"), false)
                                    
                                    /*
                                    Launch(
                                        "https://make.powerapps.com/environments/" & CoE_Envt & "/solutions/" & First(
                                            Filter(
                                                Solutions,
                                                uniquename = Switch(
                                                    ThisItem.theSolution,
                                                    "Core",
                                                    "CenterofExcellenceCoreComponents",
                                                    "Governance",
                                                    "CenterofExcellenceAuditComponents",
                                                    "Nurture",
                                                    "CenterofExcellenceNurtureComponents",
                                                    "Audit Log",
                                                    "CenterofExcellenceAuditLogs"
                                                )
                                            )
                                        ).'Solution Identifier' & "/objects/workflow/" & ThisItem.theSolutionGUID & "/layers"
                                    )*/
                                PaddingBottom: =5
                                PaddingLeft: =5
                                PaddingTop: =5
                                PressedBorderColor: =RGBA(0, 0, 0, 0)
                                PressedColor: =Self.Color
                                PressedFill: =RGBA(0, 0, 0, 0)
                                Tooltip: =If(ThisItem.theFlowHasUnmanagedLayer, "This flow has unmanaged layers. Remove them before an upgrade to receive the latest version", "")
                                Width: =42
                                ZIndex: =5

                            imgFlowState As image:
                                BorderColor: =RGBA(0, 0, 0, 0)
                                BorderStyle: =BorderStyle.None
                                BorderThickness: =2
                                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                DisabledFill: =RGBA(0, 0, 0, 0)
                                FocusedBorderThickness: =4
                                Height: =24
                                HoverBorderColor: =RGBA(0, 0, 0, 0)
                                HoverFill: =RGBA(0, 0, 0, 0)
                                Image: |-
                                    ="data:image/svg+xml;utf8, " & EncodeUrl("<svg width='25' height='24' viewBox='0 0 25 24' fill='none' xmlns='http://www.w3.org/2000/svg'>
                                      <path d='M8.62116 4.84312C9.12187 4.61008 9.71669 4.82707 9.94973 5.32778C10.1828 5.82849 9.96578 6.42331 9.46507 6.65635C7.01547 7.79644 5.41602 10.2547 5.41602 13.003C5.41602 16.8671 8.54993 19.9997 12.416 19.9997C16.2821 19.9997 19.416 16.8671 19.416 13.003C19.416 10.2604 17.8232 7.80631 15.3813 6.66304C14.8811 6.42887 14.6655 5.83355 14.8997 5.33337C15.1338 4.83319 15.7291 4.61756 16.2293 4.85173C19.3677 6.32109 21.416 9.47689 21.416 13.003C21.416 17.9719 17.3865 21.9997 12.416 21.9997C7.44555 21.9997 3.41602 17.9719 3.41602 13.003C3.41602 9.46957 5.47284 6.30841 8.62116 4.84312ZM12.416 1.99902C12.9289 1.99902 13.3515 2.38506 13.4093 2.8824L13.416 2.99902V10.0004C13.416 10.5527 12.9683 11.0004 12.416 11.0004C11.9032 11.0004 11.4805 10.6144 11.4227 10.1171L11.416 10.0004V2.99902C11.416 2.44674 11.8637 1.99902 12.416 1.99902Z' fill='" & If(ThisItem.theIsErrorState, "#ffffff", If(ThisItem.theState = "Started", "#008000", If(!ThisItem.thePublishedState, "#000000", "#ff0000"))) & "' />
                                    </svg>")
                                LayoutMinHeight: =50
                                OnSelect: |
                                    =UpdateContext({TurnOnOffTheGUID: ThisItem.theGUID});
                                    UpdateContext({TurnOnOffTheSolutionGUID: ThisItem.theSoltuionGUID});
                                    UpdateContext({JustPublished: If(ThisItem.thePublishedState, false, true)});
                                    
                                    //if draft, activate which will also turn on
                                    If(!ThisItem.thePublishedState,
                                        UpdateContext({showLoadingText: "Activating " & ThisItem.theName, showLoading: true});
                                        Patch(Processes, LookUp(Processes, 'Process Name' = ThisItem.theName), {Status: 'Status (Processes)'.Activated});
                                        UpdateIf('CoE Solution Metadata', ObjectSolutionGUID=TurnOnOffTheSolutionGUID, {ObjectGUID: "refetch"});
                                        UpdateIf(FlowsWithMetadata, theSoltuionGUID=TurnOnOffTheSolutionGUID, {theGUID: "refetch", thePublishedState: true, theIsErrorState: false, theState: "Started"});
                                    );
                                    
                                    //if still need GUID, fetch it
                                    If(TurnOnOffTheGUID = "refetch", 
                                        //get new GUID (name from connector)
                                        UpdateContext({showLoadingText: "Fetching ID for recently activated flow " & ThisItem.theName, showLoading: true});
                                        ClearCollect(TempFlowCollection, PowerAutomateManagement.ListFlowsInEnvironment(CoE_Envt).value);
                                        UpdateContext({TurnOnOffTheGUID: If(CountRows(TempFlowCollection)>0, First(Filter(TempFlowCollection, properties.displayName = ThisItem.theName)).name, "fail")});
                                        //update if successful
                                        If(TurnOnOffTheGUID <> "fail", 
                                            //if publish failed show error
                                            UpdateIf(FlowsWithMetadata, theSoltuionGUID=TurnOnOffTheSolutionGUID, {theIsErrorState: true}),
                                            //else update
                                            UpdateIf('CoE Solution Metadata', ObjectSolutionGUID=TurnOnOffTheSolutionGUID, {ObjectGUID: TurnOnOffTheGUID});
                                            UpdateIf(FlowsWithMetadata, theSoltuionGUID=TurnOnOffTheSolutionGUID, 
                                                {theGUID: If(IsBlank(TurnOnOffTheGUID), "refetch", TurnOnOffTheGUID), thePublishedState: true, theIsErrorState: false, theState: "Started"});
                                    ));
                                    
                                    //if was already published turn on or off
                                    If(!JustPublished,
                                        UpdateContext({showLoadingText: "Turning " & ThisItem.theName & If(ThisItem.theState = "Stopped", " on", " off"), showLoading: true});
                                    
                                        If(ThisItem.theState = "Stopped", 
                                        If('CommandCenterApp>SetCoEFlowsState'.Run(CoE_Envt, true, TurnOnOffTheGUID).return = "pass", 
                                            UpdateIf(FlowsWithMetadata, theSoltuionGUID=TurnOnOffTheSolutionGUID, {theState: "Started", theIsErrorState: false}), 
                                            UpdateIf(FlowsWithMetadata, theSoltuionGUID=TurnOnOffTheSolutionGUID, {theIsErrorState: true})),
                                        If('CommandCenterApp>SetCoEFlowsState'.Run(CoE_Envt, false, TurnOnOffTheGUID).return = "pass", 
                                            UpdateIf(FlowsWithMetadata, theSoltuionGUID=TurnOnOffTheSolutionGUID, {theState: "Stopped", theIsErrorState: false}),
                                            UpdateIf(FlowsWithMetadata, theSoltuionGUID=TurnOnOffTheSolutionGUID, {theIsErrorState: true})));
                                    );
                                    
                                    UpdateContext({showLoading: false});
                                PaddingBottom: =5
                                PaddingLeft: =5
                                PaddingRight: =5
                                PaddingTop: =5
                                PressedBorderColor: =RGBA(0, 0, 0, 0)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                Tooltip: =If(ThisItem.theState = "Started", "Started", If(ThisItem.thePublishedState && !ThisItem.theIsErrorState, "Stopped", If(!ThisItem.thePublishedState, "Draft", "")))
                                Width: =50
                                X: =
                                Y: =
                                ZIndex: =6

                            icoSettings_1 As icon.Link:
                                BorderColor: =RGBA(166, 166, 166, 1)
                                Color: =If(!ThisItem.theIsErrorState, RGBA(105, 121, 126, 1), Red)
                                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                DisabledColor: =RGBA(220, 220, 220, 1)
                                DisabledFill: =RGBA(0, 0, 0, 0)
                                FocusedBorderThickness: =4
                                Height: =42
                                HoverBorderColor: =RGBA(0, 0, 0, 0)
                                HoverColor: =Self.Color
                                HoverFill: =RGBA(0, 0, 0, 0)
                                Icon: =Icon.Settings
                                OnSelect: |-
                                    =//Launch(theFlowURL & CoE_Envt & "/flows/" & If(ThisItem.thePublishedState, ThisItem.theGUID, ThisItem.theSoltuionFlowGUID) & "/details")
                                    Launch(ThisItem.theFlowURL)
                                PaddingBottom: =5
                                PaddingLeft: =5
                                PaddingRight: =5
                                PaddingTop: =5
                                PressedBorderColor: =RGBA(0, 0, 0, 0)
                                PressedColor: =Self.Color
                                PressedFill: =RGBA(0, 0, 0, 0)
                                Tooltip: =If(!ThisItem.thePublishedState, "Flow never published, so must click here to turn on via Product UX", If(ThisItem.theIsErrorState, "Failed, click here to perform the action via Product UX instead", ""))
                                Width: =42
                                X: =
                                Y: =7
                                ZIndex: =7

                            icoBlank As icon.Link:
                                BorderColor: =RGBA(166, 166, 166, 1)
                                Color: =RGBA(105, 121, 126, 0)
                                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                                DisabledColor: =RGBA(220, 220, 220, 1)
                                DisabledFill: =RGBA(0, 0, 0, 0)
                                FocusedBorderThickness: =4
                                Height: =42
                                HoverBorderColor: =RGBA(0, 0, 0, 0)
                                HoverColor: =Self.Color
                                HoverFill: =RGBA(0, 0, 0, 0)
                                Icon: =Icon.Settings
                                PaddingBottom: =5
                                PaddingLeft: =5
                                PaddingRight: =5
                                PaddingTop: =5
                                PressedBorderColor: =RGBA(0, 0, 0, 0)
                                PressedColor: =Self.Color
                                PressedFill: =RGBA(0, 0, 0, 0)
                                Tooltip: =false
                                Width: =20
                                X: =
                                Y: =7
                                ZIndex: =8

                        Rectangle2_28 As rectangle:
                            BorderColor: =RGBA(0, 0, 0, 0)
                            BorderStyle: =BorderStyle.None
                            BorderThickness: =2
                            Fill: =RGBA(230, 230, 230, 1)
                            FocusedBorderThickness: =4
                            Height: =1
                            Width: =Parent.TemplateWidth
                            ZIndex: =3

    grpLoadingFlows As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =5

        rctLoading_4 As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Fill: =RGBA(255, 255, 255, 0.95)
            FocusedBorderThickness: =4
            Height: =scr_EditBookmarks.Height
            Visible: =showLoading
            Width: =scr_EditBookmarks.Width
            ZIndex: =2

        lblLoading_4 As label:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =57
            Size: =13
            Text: =showLoadingText
            Visible: =showLoading
            Width: =447
            X: =scr_EditBookmarks.Width / 2 - lblLoading_4.Width / 2
            Y: =scr_EditBookmarks.Height / 2 - lblLoading_4.Height / 2 + icoLoading_4.Height
            ZIndex: =3

        icoLoading_4 As icon.Clock:
            BorderColor: =RGBA(166, 166, 166, 1)
            Color: =RGBA(116, 39, 116, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(220, 220, 220, 1)
            DisabledFill: =RGBA(0, 0, 0, 0)
            FocusedBorderThickness: =4
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            HoverFill: =RGBA(0, 0, 0, 0)
            Icon: =Icon.Clock
            PressedBorderColor: =RGBA(0, 0, 0, 0)
            PressedColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
            PressedFill: =RGBA(0, 0, 0, 0)
            Visible: =showLoading
            X: =scr_EditBookmarks.Width / 2 - icoLoading_4.Width / 2
            Y: =scr_EditBookmarks.Height / 2 - icoLoading_4.Height / 2
            ZIndex: =4

    grpBlocked As group:
        Height: =5
        Width: =5
        X: =80
        Y: =80
        ZIndex: =14

        rctLoading_6 As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Fill: =RGBA(255, 255, 255, .99)
            FocusedBorderThickness: =4
            Height: =Parent.Height - lbl_mainheader_11.Height
            Visible: =showBlocked
            Width: =Parent.Width - Navigation_13.Width
            X: =Navigation_13.Width
            Y: =lbl_mainheader_11.Height
            ZIndex: =10

        lblLoading_6 As label:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =RGBA(51, 51, 51, 1)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =RGBA(166, 166, 166, 1)
            FocusedBorderThickness: =4
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =150
            Size: =13
            Text: =BlockedText
            Visible: =showBlocked
            Width: =1000
            X: =scr_EditBookmarks.Width / 2 - lblLoading_6.Width / 2
            Y: =Parent.Height / 2 - Self.Height
            ZIndex: =11

