Screen1 As screen:
    LoadingSpinnerColor: =RGBA(0, 120, 212, 1)
    OnVisible: |-
        =UpdateContext({ColorYes: "rgb(29, 228, 60)"});
        UpdateContext({ColorNo: "rgb(164, 164, 164)"});
        UpdateContext({ShowSpinner: false});
        UpdateContext({ShowPPADMINnote: false});
        
        // Switching on PowerAppUrl to find Power Platform Admin URL for Different Regions
        Set(PowerAppURL,LookUp('Environment Variable Values', 
            'Environment Variable Definition'.'Schema Name' = "admin_PowerAppEnvironmentVariable").Value);
        
        Switch(PowerAppURL,
        "https://make.powerapps.com/",
           Set(PowerPlatformAdminUrl,"https://admin.powerplatform.microsoft.com/"),
        "https://make.gov.powerapps.us/",
            Set(PowerPlatformAdminUrl,"https://gcc.admin.powerplatform.microsoft.us/"),
        "https://make.high.powerapps.us/",
            Set(PowerPlatformAdminUrl,"https://high.admin.powerplatform.microsoft.us/"),
        "https://make.apps.appsplatform.us/",
            Set(PowerPlatformAdminUrl,"https://admin.appsplatform.us/"),false
        );
        
        
        Select(RunFilterVars);

    MainContentContainer As groupContainer.verticalAutoLayoutContainer:
        Height: =Parent.Height
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        Width: =Parent.Width
        ZIndex: =1

        ActionHeader As groupContainer.horizontalAutoLayoutContainer:
            Fill: =RGBA(243, 242, 241, 1)
            FillPortions: =0
            Height: =44
            LayoutAlignItems: =LayoutAlignItems.Stretch
            LayoutGap: =10
            LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =32
            PaddingRight: =32
            ZIndex: =1

            "CommandBar As 'Fluent Command Bar (1.0.22)'.pcfdataset":
                AlignInContainer: =AlignInContainer.Center
                DisplayMode: =DisplayMode.Edit
                FillPortions: =1
                Height: =32
                Items: |-
                    =Table(
                        {
                            ItemKey: "back",
                            ItemDisplayName: "Back",
                            ItemIconName: "NavigateBack"
                        },
                        {
                            ItemKey: "note",
                            ItemDisplayName: "PPAdmin Role Note",
                            ItemIconName: "Lightbulb"
                        },
                        {
                            ItemKey: "remove",
                            ItemDisplayName: "Remove Direct Assignment",
                            ItemIconName: "UserRemove",
                            ItemEnabled: CountRows(SRList.SelectedItems) >= 1 && CountRows(Filter(SRList.SelectedItems, ThisRecord.'Assigned Via' = "Direct")) >=1
                        },
                        {
                            ItemKey: "links",
                            ItemDisplayName: "",
                            ItemIconName: "link",
                            ItemEnabled: CountRows(SRList.SelectedItems) = 1,
                            ItemSplit: true
                        },
                        {
                            ItemKey: "admin",
                            ItemDisplayName: "PPAC Envt Users",
                            ItemIconName: "Admin",
                            ItemEnabled: CountRows(SRList.SelectedItems) = 1,
                            ItemParentKey: "links"
                        },
                        {
                            ItemKey: "user",
                            ItemDisplayName: "User in Azure",
                            ItemIconName: "EditContact",
                            ItemEnabled: CountRows(SRList.SelectedItems) = 1 && !IsBlank(SRList.Selected.'User ID')
                                && SRList.Selected.UserType <> UserTypeChoices.'Microsoft Account',
                            ItemParentKey: "links"
                        },
                        {
                            ItemKey: "group",
                            ItemDisplayName: "Group in Azure",
                            ItemIconName: "Group",
                            ItemEnabled: CountRows(SRList.SelectedItems) = 1 && SRList.Selected.'Assigned Via' <> "Direct",
                            ItemParentKey: "links"
                        }
                    )
                LayoutMinHeight: =32
                LayoutMinWidth: =200
                OnChange: =false
                OnSelect: |-
                    =Switch(Self.Selected.ItemKey,
                    
                    "back", Back(),
                    "note", UpdateContext({ShowPPADMINnote: !ShowPPADMINnote});,
                    "admin", 
                        UpdateContext({OrgID: LookUp(Environments, Environment = SRList.Selected.Environment.Environment).'Organization ID'});
                        Launch(PowerPlatformAdminUrl & "environments/" & OrgID & "/" & SRList.Selected.Environment.Environment & "/users");,
                    "group",
                        Launch("https://portal.azure.com/#view/Microsoft_AAD_IAM/GroupDetailsMenuBlade/~/Overview/groupId/" 
                            & SRList.Selected.'Group ID');,
                    "user",
                        Launch(
                            "https://portal.azure.com/#view/Microsoft_AAD_UsersAndTenants/UserProfileMenuBlade/~/Groups/userId/"
                            & SRList.Selected.'User ID'),
                    "remove", 
                        UpdateContext({ShowSpinner: true});
                        UpdateContext({TempIsSysAdmin: If(SRList.Selected.'Security Role Name' = "System Administrator", true, false)});
                        UpdateContext({SelectionContainsGroup: If(CountRows(Filter(SRList.SelectedItems, ThisRecord.'Assigned Via' <> "Direct")) > 0, true, false)});
                        UpdateContext({hasSRTid: If(Len(SRList.Selected.'Security Role Template ID')>0, true, false)});
                        UpdateContext({deletionResult: 'HELPER-RemoveUserfromSecurityRole'.Run(
                            SRList.Selected.'User Name', SRList.Selected.'Security Role Name', 
                            If(hasSRTid, SRList.Selected.'Security Role Template ID', "unknown"), hasSRTid, 
                            SRList.Selected.'Business Unit Name', SRList.Selected.Environment.Environment).result});
                        If(deletionResult <> "pass", 
                            //did not pass, notify them
                            Notify("Failed to delete user from role: " & deletionResult, NotificationType.Error), 
                            //passed so notify removed and remove from collection
                            Notify("User removed from role", NotificationType.Success);
                            RemoveIf('Environment Security Role Permissions', 
                                'Environment Security Role Permission' = SRList.Selected.'Environment Security Role Permission');
                            //temp: also  if System Admin let them know that the user may come back
                            If(TempIsSysAdmin = true, Notify("If user is PPAdmin Role they will be re-added awaiting new PP feature", NotificationType.Information));
                        );
                        UpdateContext({ShowSpinner: false});
                    
                    
                    )
                Theme: =AppThemeJson
                Width: =200
                X: =0
                Y: =0
                ZIndex: =1

            MemberGuest As Combobox.pcfdataset:
                AlignInContainer: =AlignInContainer.Center
                Appearance: ="FilledDarker"
                BorderColor: =""
                BorderStyle: =""
                DefaultSelectedItems: =
                DisabledBorderColor: =""
                DisplayMode: =DisplayMode.Edit
                FocusedBorderColor: =""
                Height: =32
                HoverBorderColor: =""
                InputTextPlaceholder: ="User Type"
                IsSearchable: =false
                Items: =["All", "Member", "Guest", "App User", "Microsoft Account", "Unknown"]
                LayoutMinHeight: =32
                LayoutMinWidth: =320
                OnChange: =Select(RunFilterVars);
                PressedBorderColor: =""
                SelectMultiple: =false
                Width: =175
                X: =0
                Y: =0
                ZIndex: =2

                Value19 As pcfDataField.textualColumn:
                    FieldDisplayName: ="Value"
                    FieldName: ="Value"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =1
                    ZIndex: =25

            "SearchBox As 'Fluent SearchBox (1.0.22) Preview'":
                AlignInContainer: =AlignInContainer.Center
                DisplayMode: =DisplayMode.Edit
                Height: =33
                LayoutMinHeight: =32
                LayoutMinWidth: =200
                OnChange: =Select(RunFilterVars)
                PlaceHolderText: ="Search"
                Theme: =SearchBoxThemeJson
                Underlined: =true
                Visible: =true
                Width: =300
                X: =0
                Y: =0
                ZIndex: =4

        tempPPADMINnote As groupContainer.horizontalAutoLayoutContainer:
            DropShadow: =DropShadow.Light
            FillPortions: =0
            Height: =44
            LayoutMinHeight: =44
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =32
            PaddingRight: =32
            RadiusBottomLeft: =4
            RadiusBottomRight: =4
            RadiusTopLeft: =4
            RadiusTopRight: =4
            Visible: =ShowPPADMINnote
            ZIndex: =2

            Label2 As Label:
                AlignInContainer: =AlignInContainer.Center
                Color: =
                DisplayMode: =DisplayMode.Edit
                FillPortions: =1
                Height: =32
                LayoutMinHeight: =32
                LayoutMinWidth: =320
                OnChange: =false
                Text: ="Users with Power Platform Admin Role they will be re-added to System Admin role automatically awaiting this new Power Platform PIM feature"
                Width: =320
                X: =0
                Y: =0
                ZIndex: =1

            ButtonCanvas1 As Button:
                Align: =""
                AlignInContainer: =AlignInContainer.Center
                BasePaletteColor: =
                BorderColor: =""
                BorderStyle: =""
                DisabledBorderColor: =""
                DisplayMode: =DisplayMode.Edit
                FocusedBorderColor: =""
                FontColor: =
                Height: =32
                HoverBorderColor: =""
                Icon: =""
                IconRotation: =0
                IconStyle: ="Outline"
                Layout: ="Icon before"
                LayoutMinHeight: =32
                LayoutMinWidth: =96
                OnSelect: |-
                    =Launch("https://learn.microsoft.com/power-platform/admin/manage-high-privileged-admin-roles")
                PressedBorderColor: =""
                Text: ="View feature"
                VerticalAlign: =""
                Width: =120
                X: =0
                Y: =0
                ZIndex: =3

        HeaderDivider As rectangle:
            AlignInContainer: =AlignInContainer.Stretch
            BorderColor: =RGBA(166, 166, 166, 1)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            DisabledFill: =RGBA(166, 166, 166, 1)
            Fill: =RGBA(225, 223, 221, 1)
            FocusedBorderColor: =RGBA(0, 120, 212, 1)
            Height: =1
            HoverFill: =RGBA(225, 223, 221, 1)
            PressedFill: =RGBA(225, 223, 221, 1)
            Width: =1366
            Y: =72
            ZIndex: =3

        Header As groupContainer.verticalAutoLayoutContainer:
            FillPortions: =0
            Height: =100
            LayoutAlignItems: =LayoutAlignItems.Stretch
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =40
            PaddingRight: =40
            PaddingTop: =32
            ZIndex: =4

            "'header lbl' As Label":
                AutoHeight: =true
                Color: =
                DisplayMode: =DisplayMode.Edit
                FontSize: =18
                FontWeight: =FontWeight.Semibold
                Height: =43
                LayoutMinHeight: =32
                LayoutMinWidth: =320
                OnChange: =false
                PaddingStart: =0  
                Text: ="Security Role Permissions"
                Width: =320
                X: =35
                Y: =15
                ZIndex: =1

        PivotContainer As groupContainer.horizontalAutoLayoutContainer:
            FillPortions: =0
            Height: =45
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =32
            PaddingRight: =32
            ZIndex: =5

            "Pivot As 'Fluent Pivot (1.0.22)'.pcfdataset":
                DisplayMode: =DisplayMode.Edit
                Height: =32
                Items: |-
                    =Table(
                        {
                            ItemDisplayName: "All Users",
                            ItemKey: "all"
                        },
                        {
                            ItemDisplayName: "Assigned Directly",
                            ItemKey: "direct"
                        },
                        {
                            ItemDisplayName: "Assigned via Group",
                            ItemKey: "group"
                        }
                    )
                LayoutMinHeight: =200
                LayoutMinWidth: =200
                OnChange: =Select(RunFilterVars);
                RenderSize: ='PowerCAT.Pivot.RenderSize'.Normal
                RenderType: ='PowerCAT.Pivot.RenderType'.PivotLinks
                SelectedKey: ="all"
                Theme: =AppThemeJson
                Width: =948
                X: =417
                Y: =0
                ZIndex: =1

        BodyContainer As groupContainer.horizontalAutoLayoutContainer:
            LayoutGap: =20
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =40
            PaddingRight: =40
            PaddingTop: =10
            ZIndex: =6

            "SRList As 'Fluent Details List (1.0.22)'.pcfdataset":
                columns_Items: |-
                    =Table(
                        {ColName:"admin_securityrolename",ColDisplayName:"Security Role",ColWidth:200,ColRowHeader:true,ColResizable:true, ColSortable: true},
                        {ColName:"admin_businessunitname",ColDisplayName:"Business Unit",ColWidth:200,ColRowHeader:true,ColResizable:true, ColSortable: true},
                        {ColName:"admin_name",ColDisplayName:"User Name",ColWidth:200,ColRowHeader:true,ColResizable:true, ColSortable: true},
                        {ColName:"admin_environmentdisplayname",ColDisplayName:"Environment",ColWidth:200,ColRowHeader:true,ColResizable:true, ColSortable: true},
                        {ColName:"admin_groupname",ColDisplayName:"Group",ColWidth:200,ColRowHeader:true,ColResizable:true, ColSortable: true},
                        {ColName:"admin_usertype", ColDisplayName:"User Type",ColWidth:200,ColRowHeader:true,ColResizable:true, ColSortable: true},
                        {ColName:"admin_useridentityprovider", ColDisplayName:"Provider",ColWidth:200,ColRowHeader:true,ColResizable:true, ColSortable: true}
                        )
                        
                CurrentSortColumn: =ctxSortCol
                CurrentSortDirection: |-
                    =If(ctxSortAsc,
                        'PowerCAT.FluentDetailsList.CurrentSortDirection'.Ascending, 
                        'PowerCAT.FluentDetailsList.CurrentSortDirection'.Descending)
                DisplayMode: =DisplayMode.Edit
                FillPortions: =1
                Height: =Parent.Height-Parent.PaddingBottom-Parent.PaddingTop
                InputEvent: =""
                Items: |-
                    =LastN(
                        FirstN(
                            galPaging.AllItems,
                            ctxPage * ctxPageSize
                        ),
                        If(// If last page and records are not divisible by the page size
                            ctxPage = ctxTotalPages && IfError(Mod(ctxTotalRows, ctxPageSize), 0) > 0,
                            Mod(ctxTotalRows, ctxPageSize),
                            ctxPageSize
                        )
                    )
                LargeDatasetPaging: =true
                LayoutMinHeight: =200
                LayoutMinWidth: =200
                OnChange: |-
                    =If(Self.EventName="Sort",
                    UpdateContext({
                            ctxSortCol: Self.SortEventColumn,
                            ctxSortAsc: If(Self.SortEventDirection='PowerCAT.FluentDetailsList.SortEventDirection'.Ascending, true, false),
                            ctxPage: 1
                    });
                    );
                RecordKey: =""
                SelectionType: ='PowerCAT.FluentDetailsList.SelectionType'.Single
                Theme: =AppThemeJson
                Tooltip: =""
                Width: =1316
                X: =25
                Y: =127
                ZIndex: =2

                admin_assignedvia1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="admin_assignedvia"
                    FieldName: ="admin_assignedvia"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =1
                    ZIndex: =6

                admin_businessunitname1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="admin_businessunitname"
                    FieldName: ="admin_businessunitname"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =2
                    ZIndex: =7

                admin_groupname1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="admin_groupname"
                    FieldName: ="admin_groupname"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =4
                    ZIndex: =9

                admin_name1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="admin_name"
                    FieldName: ="admin_name"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =6
                    ZIndex: =11

                admin_securityrolename1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="admin_securityrolename"
                    FieldName: ="admin_securityrolename"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =7
                    ZIndex: =12

                admin_useridentityprovider1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="admin_useridentityprovider"
                    FieldName: ="admin_useridentityprovider"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =8
                    ZIndex: =13

                admin_userstatus1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="admin_userstatus"
                    FieldName: ="admin_userstatus"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =9
                    ZIndex: =14

                "'Environment Display Name1' As pcfDataField.textualColumn":
                    FieldDisplayName: ="Environment Display Name"
                    FieldName: ="admin_environmentdisplayname"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =9
                    ZIndex: =15

                admin_securityroletemplateid1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="admin_securityroletemplateid"
                    FieldName: ="admin_securityroletemplateid"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =10
                    ZIndex: =16

                admin_environmentsecurityrolepermissionid1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="admin_environmentsecurityrolepermissionid"
                    FieldName: ="admin_environmentsecurityrolepermissionid"
                    FieldType: ="g"
                    FieldVariantName: ="textualColumn"
                    Order: =11
                    ZIndex: =18

                admin_securityroleid1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="admin_securityroleid"
                    FieldName: ="admin_securityroleid"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =12
                    ZIndex: =19

                UserType1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="UserType"
                    FieldName: ="admin_usertype"
                    FieldType: ="l"
                    FieldVariantName: ="textualColumn"
                    Order: =12
                    ZIndex: =24

        PaginationControlContainer As groupContainer.horizontalAutoLayoutContainer:
            FillPortions: =0
            Height: =40
            LayoutMinHeight: =100
            LayoutMinWidth: =100
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =32
            PaddingRight: =32
            PaddingTop: =4
            RadiusBottomLeft: =4
            RadiusBottomRight: =4
            RadiusTopLeft: =4
            RadiusTopRight: =4
            ZIndex: =7

            Pagination_NumRecords As Label:
                Color: =
                DisplayMode: =DisplayMode.Edit
                FillPortions: =1
                Height: =32
                LayoutMinHeight: =32
                LayoutMinWidth: =100
                OnChange: =false
                Text: =If(ctxTotalRows = 99999, "50,000+ records", $"{ctxTotalRows} record(s)")
                Width: =320
                X: =0
                Y: =0
                ZIndex: =1

            "Pagination_FirstPage As 'Fluent Icon (1.0.22)'":
                DisplayMode: =If(ctxPage>1, DisplayMode.View, DisplayMode.Disabled)
                Height: =32
                IconName: ="Previous"
                IconType: ='PowerCAT.Icon.IconType'.ActionButton
                LayoutMinHeight: =200
                LayoutMinWidth: =200
                OnChange: |-
                    =UpdateContext({
                        ctxGridEvent: "LoadFirstPage" & Text(Rand()),
                        ctxPage: 1
                    })
                Theme: =AppThemeJson
                Tooltip: =""
                Width: =42
                X: =0
                Y: =0
                ZIndex: =2

            "Pagination_PrevPage As 'Fluent Icon (1.0.22)'":
                DisplayMode: =If(ctxPage>1, DisplayMode.View, DisplayMode.Disabled)
                Height: =32
                IconName: ="Back"
                IconType: ='PowerCAT.Icon.IconType'.ActionButton
                LayoutMinHeight: =200
                LayoutMinWidth: =200
                OnChange: |-
                    =UpdateContext({
                        ctxGridEvent: "LoadPreviousPage" & Text(Rand()),
                        ctxPage: ctxPage-1
                    })
                Theme: =AppThemeJson
                Tooltip: =""
                Width: =42
                X: =0
                Y: =0
                ZIndex: =3

            Pagination_CurrentPage As Label:
                Alignment: =Align.Center
                Color: =
                DisplayMode: =DisplayMode.Edit
                Height: =32
                LayoutMinHeight: =32
                LayoutMinWidth: =320
                OnChange: =false
                Text: =$"Page {ctxPage} of {ctxTotalPages}"
                Width: =96
                X: =0
                Y: =0
                ZIndex: =4

            "Pagination_NextPage As 'Fluent Icon (1.0.22)'":
                DisplayMode: =If(ctxPage < ctxTotalPages, DisplayMode.View, DisplayMode.Disabled)
                Height: =32
                IconName: ="Forward"
                IconType: ='PowerCAT.Icon.IconType'.ActionButton
                LayoutMinHeight: =200
                LayoutMinWidth: =200
                OnChange: |-
                    =UpdateContext({
                        ctxPage: ctxPage+1
                    })
                Theme: =AppThemeJson
                Tooltip: =""
                Width: =42
                X: =0
                Y: =0
                ZIndex: =5

    Spinner1 As Spinner:
        BasePaletteColor: =
        DisplayMode: =DisplayMode.Edit
        FontColor: =
        Height: =If(Self.Visible, App.Height, 0)
        Visible: =ShowSpinner
        Width: =If(Self.Visible, App.Width, 0)
        X: =0
        Y: =0
        ZIndex: =4

    Paging_logic As group:
        Height: =5
        Width: =5
        X: =80
        Y: =80
        ZIndex: =4

        galPaging As gallery.BrowseLayout_Vertical_TwoTextOneImageVariant_pcfCore:
            '#CopilotOverlayLabel': ="Filtered"
            BorderColor: =RGBA(166, 166, 166, 1)
            Default: =If(ctxPage*ctxPageSize > CountRows(Self.AllItems), Last(Self.AllItems))
            DelayItemLoading: =true
            Fill: =RGBA(238, 204, 204, 1)
            FocusedBorderColor: =RGBA(0, 120, 212, 1)
            FocusedBorderThickness: =2
            Height: =1
            Items: |-
                =Switch(ctxSortCol,
                "admin_securityrolename",
                Sort(
                    Filter('Environment Security Role Permissions', 
                    And(
                        Or(Pivot.SelectedKey = "all", 'Assigned Via' = Pivot.SelectedKey),
                        Or(IsBlankOrError(MemberGuest.Selected.Value), MemberGuest.Selected.Value = "All",
                        UserType = If(MemberGuest.Selected.Value = "Guest", UserTypeChoices.Guest, 
                                If(MemberGuest.Selected.Value = "Member", UserTypeChoices.Member, 
                                If(MemberGuest.Selected.Value = "App User", UserTypeChoices.'App User',
                                If(MemberGuest.Selected.Value = "Microsoft Account", UserTypeChoices.'Microsoft Account',
                                If(MemberGuest.Selected.Value = "Unknown", UserTypeChoices.Unknown)))))), 
                        Or(IsBlank(SearchBox.SearchText), SearchBox.SearchText in admin_securityrolename, SearchBox.SearchText in admin_name, SearchBox.SearchText in admin_groupname,
                            SearchBox.SearchText in admin_useridentityprovider, SearchBox.SearchText in admin_businessunitname, SearchBox.SearchText in admin_environmentdisplayname))),
                    'Security Role Name', If(ctxSortAsc, SortOrder.Ascending,SortOrder.Descending)),
                
                "admin_businessunitname",
                Sort(
                    Filter('Environment Security Role Permissions', 
                    And(
                        Or(Pivot.SelectedKey = "all", 'Assigned Via' = Pivot.SelectedKey),
                        Or(IsBlankOrError(MemberGuest.Selected.Value), MemberGuest.Selected.Value = "All",
                        UserType = If(MemberGuest.Selected.Value = "Guest", UserTypeChoices.Guest, 
                                If(MemberGuest.Selected.Value = "Member", UserTypeChoices.Member, 
                                If(MemberGuest.Selected.Value = "App User", UserTypeChoices.'App User',
                                If(MemberGuest.Selected.Value = "Microsoft Account", UserTypeChoices.'Microsoft Account',
                                If(MemberGuest.Selected.Value = "Unknown", UserTypeChoices.Unknown)))))), 
                        Or(IsBlank(SearchBox.SearchText), SearchBox.SearchText in admin_securityrolename, SearchBox.SearchText in admin_name, SearchBox.SearchText in admin_groupname,
                            SearchBox.SearchText in admin_useridentityprovider, SearchBox.SearchText in admin_businessunitname, SearchBox.SearchText in admin_environmentdisplayname))),
                    'Business Unit Name', If(ctxSortAsc, SortOrder.Ascending,SortOrder.Descending)),
                
                "admin_name",
                Sort(
                    Filter('Environment Security Role Permissions', 
                    And(
                        Or(Pivot.SelectedKey = "all", 'Assigned Via' = Pivot.SelectedKey),
                        Or(IsBlankOrError(MemberGuest.Selected.Value), MemberGuest.Selected.Value = "All",
                        UserType = If(MemberGuest.Selected.Value = "Guest", UserTypeChoices.Guest, 
                                If(MemberGuest.Selected.Value = "Member", UserTypeChoices.Member, 
                                If(MemberGuest.Selected.Value = "App User", UserTypeChoices.'App User',
                                If(MemberGuest.Selected.Value = "Microsoft Account", UserTypeChoices.'Microsoft Account',
                                If(MemberGuest.Selected.Value = "Unknown", UserTypeChoices.Unknown)))))), 
                        Or(IsBlank(SearchBox.SearchText), SearchBox.SearchText in admin_securityrolename, SearchBox.SearchText in admin_name, SearchBox.SearchText in admin_groupname,
                            SearchBox.SearchText in admin_useridentityprovider, SearchBox.SearchText in admin_businessunitname, SearchBox.SearchText in admin_environmentdisplayname))),
                    'User Name', If(ctxSortAsc, SortOrder.Ascending,SortOrder.Descending)),
                
                "admin_environmentdisplayname",
                Sort(
                    Filter('Environment Security Role Permissions', 
                    And(
                        Or(Pivot.SelectedKey = "all", 'Assigned Via' = Pivot.SelectedKey),
                        Or(IsBlankOrError(MemberGuest.Selected.Value), MemberGuest.Selected.Value = "All",
                        UserType = If(MemberGuest.Selected.Value = "Guest", UserTypeChoices.Guest, 
                                If(MemberGuest.Selected.Value = "Member", UserTypeChoices.Member, 
                                If(MemberGuest.Selected.Value = "App User", UserTypeChoices.'App User',
                                If(MemberGuest.Selected.Value = "Microsoft Account", UserTypeChoices.'Microsoft Account',
                                If(MemberGuest.Selected.Value = "Unknown", UserTypeChoices.Unknown)))))), 
                        Or(IsBlank(SearchBox.SearchText), SearchBox.SearchText in admin_securityrolename, SearchBox.SearchText in admin_name, SearchBox.SearchText in admin_groupname,
                            SearchBox.SearchText in admin_useridentityprovider, SearchBox.SearchText in admin_businessunitname, SearchBox.SearchText in admin_environmentdisplayname))),
                    'Environment Display Name', If(ctxSortAsc, SortOrder.Ascending,SortOrder.Descending)),
                
                "admin_groupname",
                Sort(
                    Filter('Environment Security Role Permissions', 
                    And(
                        Or(Pivot.SelectedKey = "all", 'Assigned Via' = Pivot.SelectedKey),
                        Or(IsBlankOrError(MemberGuest.Selected.Value), MemberGuest.Selected.Value = "All",
                        UserType = If(MemberGuest.Selected.Value = "Guest", UserTypeChoices.Guest, 
                                If(MemberGuest.Selected.Value = "Member", UserTypeChoices.Member, 
                                If(MemberGuest.Selected.Value = "App User", UserTypeChoices.'App User',
                                If(MemberGuest.Selected.Value = "Microsoft Account", UserTypeChoices.'Microsoft Account',
                                If(MemberGuest.Selected.Value = "Unknown", UserTypeChoices.Unknown)))))), 
                        Or(IsBlank(SearchBox.SearchText), SearchBox.SearchText in admin_securityrolename, SearchBox.SearchText in admin_name, SearchBox.SearchText in admin_groupname,
                            SearchBox.SearchText in admin_useridentityprovider, SearchBox.SearchText in admin_businessunitname, SearchBox.SearchText in admin_environmentdisplayname))),
                    'Group Name', If(ctxSortAsc, SortOrder.Ascending,SortOrder.Descending)),
                
                "admin_usertype",
                Sort(
                    Filter('Environment Security Role Permissions', 
                    And(
                        Or(Pivot.SelectedKey = "all", 'Assigned Via' = Pivot.SelectedKey),
                        Or(IsBlankOrError(MemberGuest.Selected.Value), MemberGuest.Selected.Value = "All",
                        UserType = If(MemberGuest.Selected.Value = "Guest", UserTypeChoices.Guest, 
                                If(MemberGuest.Selected.Value = "Member", UserTypeChoices.Member, 
                                If(MemberGuest.Selected.Value = "App User", UserTypeChoices.'App User',
                                If(MemberGuest.Selected.Value = "Microsoft Account", UserTypeChoices.'Microsoft Account',
                                If(MemberGuest.Selected.Value = "Unknown", UserTypeChoices.Unknown)))))), 
                        Or(IsBlank(SearchBox.SearchText), SearchBox.SearchText in admin_securityrolename, SearchBox.SearchText in admin_name, SearchBox.SearchText in admin_groupname,
                            SearchBox.SearchText in admin_useridentityprovider, SearchBox.SearchText in admin_businessunitname, SearchBox.SearchText in admin_environmentdisplayname))),
                    UserType, If(ctxSortAsc, SortOrder.Ascending,SortOrder.Descending)),
                
                "admin_useridentityprovider",
                Sort(
                    Filter('Environment Security Role Permissions', 
                    And(
                        Or(Pivot.SelectedKey = "all", 'Assigned Via' = Pivot.SelectedKey),
                        Or(IsBlankOrError(MemberGuest.Selected.Value), MemberGuest.Selected.Value = "All",
                        UserType = If(MemberGuest.Selected.Value = "Guest", UserTypeChoices.Guest, 
                                If(MemberGuest.Selected.Value = "Member", UserTypeChoices.Member, 
                                If(MemberGuest.Selected.Value = "App User", UserTypeChoices.'App User',
                                If(MemberGuest.Selected.Value = "Microsoft Account", UserTypeChoices.'Microsoft Account',
                                If(MemberGuest.Selected.Value = "Unknown", UserTypeChoices.Unknown)))))), 
                        Or(IsBlank(SearchBox.SearchText), SearchBox.SearchText in admin_securityrolename, SearchBox.SearchText in admin_name, SearchBox.SearchText in admin_groupname,
                            SearchBox.SearchText in admin_useridentityprovider, SearchBox.SearchText in admin_businessunitname, SearchBox.SearchText in admin_environmentdisplayname))),
                    'User Identity Provider', If(ctxSortAsc, SortOrder.Ascending,SortOrder.Descending)),
                
                
                //default to SRName
                Sort(
                    Filter('Environment Security Role Permissions', 
                    And(
                        Or(Pivot.SelectedKey = "all", 'Assigned Via' = Pivot.SelectedKey),
                        Or(IsBlankOrError(MemberGuest.Selected.Value), MemberGuest.Selected.Value = "All",
                        UserType = If(MemberGuest.Selected.Value = "Guest", UserTypeChoices.Guest, 
                                If(MemberGuest.Selected.Value = "Member", UserTypeChoices.Member, 
                                If(MemberGuest.Selected.Value = "App User", UserTypeChoices.'App User',
                                If(MemberGuest.Selected.Value = "Microsoft Account", UserTypeChoices.'Microsoft Account',
                                If(MemberGuest.Selected.Value = "Unknown", UserTypeChoices.Unknown)))))), 
                        Or(IsBlank(SearchBox.SearchText), SearchBox.SearchText in admin_securityrolename, SearchBox.SearchText in admin_name, SearchBox.SearchText in admin_groupname,
                            SearchBox.SearchText in admin_useridentityprovider, SearchBox.SearchText in admin_businessunitname, SearchBox.SearchText in admin_environmentdisplayname))),
                    'Security Role Name', If(ctxSortAsc, SortOrder.Ascending,SortOrder.Descending))
                )
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            TemplatePadding: =0
            TemplateSize: =48
            Visible: =false
            Width: =1
            ZIndex: =2

            Rectangle1 As rectangle:
                BorderColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(0,0,0,0)
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =RGBA(0, 120, 212, 1)
                Height: =Parent.TemplateHeight
                HoverFill: =RGBA(0,0,0,0)
                OnSelect: =Select(Parent)
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Width: =Parent.TemplateWidth
                ZIndex: =1

            Image1 As image:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                Height: =28
                HoverBorderColor: =RGBA(0, 0, 0, 0)
                HoverFill: =RGBA(0, 0, 0, 0)
                OnSelect: =Select(Parent)
                PressedBorderColor: =RGBA(0, 0, 0, 0)
                PressedFill: =RGBA(0, 0, 0, 0)
                Width: =28
                X: =12
                Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                ZIndex: =2

            Label1 As Label:
                Color: =
                DisplayMode: =DisplayMode.Edit
                Height: =30
                OnChange: =false
                OnSelect: =Select(Parent)
                Text: =ThisItem.'Assigned Via'
                Width: =118
                X: =58
                Y: =8
                ZIndex: =3

            Label1_1 As Label:
                Color: =
                DisplayMode: =DisplayMode.Edit
                Height: =28
                OnChange: =false
                OnSelect: =Select(Parent)
                Text: =ThisItem.'User Name'
                Width: =183
                X: =176
                Y: =10
                ZIndex: =4

            Label1_2 As Label:
                Color: =
                DisplayMode: =DisplayMode.Edit
                Height: =28
                OnChange: =false
                OnSelect: =Select(Parent)
                Text: =ThisItem.UserType
                Width: =288
                X: =414
                Y: =8
                ZIndex: =5

        RunFilterVars As Button:
            BorderColor: =
            DisabledBorderColor: =
            DisabledFillColor: =
            DisabledTextColor: =
            DisplayMode: =DisplayMode.Edit
            FillColor: =
            Height: =1
            HoverBorderColor: =
            HoverFillColor: =
            HoverTextColor: =
            OnChange: =false
            OnSelect: |
                =UpdateContext(
                    {
                        ctxSortCol: "admin_securityrolename",
                        ctxSortAsc: true,
                        ctxTotalRows: 
                            IfError(CountRows(
                                Search(
                                Filter('Environment Security Role Permissions', 
                                    And(
                                        Or(Pivot.SelectedKey = "all", 'Assigned Via' = Pivot.SelectedKey),
                                        Or(IsBlankOrError(MemberGuest.Selected.Value), MemberGuest.Selected.Value = "All",
                                        UserType = If(MemberGuest.Selected.Value = "Guest", UserTypeChoices.Guest, 
                                                If(MemberGuest.Selected.Value = "Member", UserTypeChoices.Member, 
                                                If(MemberGuest.Selected.Value = "App User", UserTypeChoices.'App User',
                                                If(MemberGuest.Selected.Value = "Microsoft Account", UserTypeChoices.'Microsoft Account',
                                                If(MemberGuest.Selected.Value = "Unknown", UserTypeChoices.Unknown)))))))
                                    ), 
                                SearchBox.SearchText, 'Security Role Name', 'User Name', 'Group Name',
                                    'User Identity Provider', 'Business Unit Name', 'Environment Display Name')), 99999),
                        ctxPageSize: 100,
                        ctxPage: 1,
                        ctxGridEvent: "LoadFirstPage" & Text(Rand())
                    }
                );
                //notify if delegation error
                If(ctxTotalRows = 99999, Notify("Too many records for true row count", NotificationType.Information, 3000));
                
                UpdateContext(
                    {
                        ctxTotalPages: RoundUp(
                            ctxTotalRows / ctxPageSize,
                            0
                        ) + If(
                            ctxTotalRows = 0,
                            1
                        )
                    }
                );
            PressedBorderColor: =
            PressedFillColor: =
            PressedTextColor: =
            TextColor: =
            Visible: =false
            Width: =1
            X: =10
            Y: =0
            ZIndex: =3

