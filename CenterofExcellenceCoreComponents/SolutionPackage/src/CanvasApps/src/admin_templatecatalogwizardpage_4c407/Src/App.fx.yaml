App As appinfo:
    BackEnabled: =false
    OnStart: |
        =Concurrent(
            // Set the app's theme.
            Set(
                AppTheme,
                /* START THEME OBJECT */
                {
                    palette: {
                        themePrimary: "#0078d4",
                        themeLighterAlt: "#eff6fc",
                        themeLighter: "#deecf9",
                        themeLight: "#c7e0f4",
                        themeTertiary: "#71afe5",
                        themeSecondary: "#2b88d8",
                        themeDarkAlt: "#106ebe",
                        themeDark: "#005a9e",
                        themeDarker: "#004578",
                        neutralLighterAlt: "#faf9f8",
                        neutralLighter: "#f3f2f1",
                        neutralLight: "#edebe9",
                        neutralQuaternaryAlt: "#e1dfdd",
                        neutralQuaternary: "#d0d0d0",
                        neutralTertiaryAlt: "#c8c6c4",
                        neutralTertiary: "#a19f9d",
                        neutralSecondary: "#605e5c",
                        neutralPrimaryAlt: "#3b3a39",
                        neutralPrimary:"#323130",
                        neutralDark: "#201f1e",
                        black: "#000000",
                        white: "#ffffff"
                    }
                }
                /* END THEME OBJECT */
            );
        
            Set(
                AppThemeJson,
                JSON(
                    AppTheme,
                    JSONFormat.IndentFour
                )
            ),
            Clear(colStepsCompleted),
        
            // Get config steps.
            ClearCollect(
                colSetupSteps,
                Table(
                        {
                ItemLabel: "Get started",
                ItemDescription: "Read the documentation to learn about the Template catalog components.",
                ItemKey: 1
            },
            {
                ItemLabel: "Share apps",
                ItemDescription: "If you have existing templates that you'd like to share with your makers (for example, template apps, brand guidelines, or app and flow samples), use the Nurture admin app to add your own templates. Share the Template Catalog with your makers so they can browse available templates.",
                ItemKey: 2
            }
                )
            ), 
            
            Set(configStep, 1),
        
            // Get current environment details.
            Set(coeEnv, 'SetupWizard>GetCurrentEnvironment'.Run().currentenv),
         
             // Get CoE Solution details.
            Set(coeSolution, LookUp(Solutions, uniquename = "CenterofExcellenceNurtureComponents").'Solution Identifier'),
            Set(unmanagedSolutionID, Text(First(Filter(Solutions, Name = "Active")).'Solution Identifier')),
            Set(appMakerUrlEnvVarDefinition, LookUp('Environment Variable Definitions', 'Schema Name'="admin_PowerAppEnvironmentVariable").'Environment Variable Definition');
        
        );
        
        Set(coeAppMakerURL, First(Filter('Environment Variable Values', 'Environment Variable Definition'.'Environment Variable Definition'=GUID(appMakerUrlEnvVarDefinition))).Value);
        If(IsBlank(coeAppMakerURL), Set(coeAppMakerURL, LookUp('Environment Variable Definitions', 'Environment Variable Definition'=GUID(appMakerUrlEnvVarDefinition)).'Default Value'));

