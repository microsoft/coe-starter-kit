App As appinfo:
    BackEnabled: =false
    OnStart: |
        =Concurrent(
            // Set the app's theme.
            Set(
                AppTheme,
                /* START THEME OBJECT */
                {
                    palette: {
                        themePrimary: "#0078d4",
                        themeLighterAlt: "#eff6fc",
                        themeLighter: "#deecf9",
                        themeLight: "#c7e0f4",
                        themeTertiary: "#71afe5",
                        themeSecondary: "#2b88d8",
                        themeDarkAlt: "#106ebe",
                        themeDark: "#005a9e",
                        themeDarker: "#004578",
                        neutralLighterAlt: "#faf9f8",
                        neutralLighter: "#f3f2f1",
                        neutralLight: "#edebe9",
                        neutralQuaternaryAlt: "#e1dfdd",
                        neutralQuaternary: "#d0d0d0",
                        neutralTertiaryAlt: "#c8c6c4",
                        neutralTertiary: "#a19f9d",
                        neutralSecondary: "#605e5c",
                        neutralPrimaryAlt: "#3b3a39",
                        neutralPrimary: "#323130",
                        neutralDark: "#201f1e",
                        black: "#000000",
                        white: "#ffffff"
                    }
                }
                /* END THEME OBJECT */
            );Set(
            SearchBoxTheme,
            {
          palette: {
            themePrimary: ColorValue("#0078d4"),
            themeLighterAlt: ColorValue("#eff6fc"),
            themeLighter: ColorValue("#deecf9"),
            themeLight: ColorValue("#c7e0f4"),
            themeTertiary: ColorValue("#71afe5"),
            themeSecondary: ColorValue("#2b88d8"),
            themeDarkAlt: ColorValue("#106ebe"),
            themeDark: ColorValue("#005a9e"),
            themeDarker: ColorValue("#004578"),
            neutralLighterAlt: ColorValue("#faf9f8"),
            neutralLighter: ColorValue("#f3f2f1"),
            neutralLight: ColorValue("#edebe9"),
            neutralQuaternaryAlt: ColorValue("#e1dfdd"),
            neutralQuaternary: ColorValue("#d0d0d0"),
            neutralTertiaryAlt: ColorValue("#c8c6c4"),
            neutralTertiary: ColorValue("#a19f9d"),
            neutralSecondary: ColorValue("#605e5c"),
            neutralPrimaryAlt: ColorValue("#3b3a39"),
            neutralPrimary:ColorValue("#323130"),
            neutralDark: ColorValue("#201f1e"),
            black: ColorValue("#000000"),
            white: ColorValue("#f3f2f1")
          }
          
            }
        );
            Set(
                AppThemeJson,
                JSON(
                    AppTheme,
                    JSONFormat.IndentFour
                )
            );
            Set(
            SearchBoxThemeJson,
            JSON(SearchBoxTheme)
        );
        
           Set(var_latestRelease, First(RSS.ListFeedItems("https://github.com/microsoft/coe-starter-kit/releases.atom")));
        Set(var_currentversion, LookUp(Solutions, uniquename = "CenterofExcellenceCoreComponents"));
        Set(var_latestRelease_Date, DateValue(Substitute(var_latestRelease.title, "CoE Starter Kit", ""))); 
        Set(var_releaseDiff, DateDiff(Coalesce(var_currentversion.'Updated On', var_currentversion.'Installed On'), var_latestRelease_Date, TimeUnit.Months));
           
        // Get CoE Solution details.
            Set(
                coeSolution,
                var_currentversion.'Solution Identifier'
            ),
            Set(
                appMakerUrlEnvVarDefinition,
                LookUp(
                    'Environment Variable Definitions',
                    'Schema Name' = "admin_PowerAppEnvironmentVariable"
                ).'Environment Variable Definition'
            );
            
        );
        
        Set(
            coeAppMakerURL,
            LookUp(
                'Environment Variable Values',
                'Environment Variable Definition'.'Environment Variable Definition' = GUID(appMakerUrlEnvVarDefinition)
            ).Value
        );
        If(
            IsBlank(coeAppMakerURL),
            Set(
                coeAppMakerURL,
                LookUp(
                    'Environment Variable Definitions',
                    'Environment Variable Definition' = GUID(appMakerUrlEnvVarDefinition)
                ).'Default Value'
            )
        );
        ClearCollect(JustForCount_CommandCenterConfigs, Filter('Command Center Configs', 'Command Center Configs (Views)'.'Active Command Center Configs'));
        If(
            CountRows(JustForCount_CommandCenterConfigs) = 0,
            Patch('Setup Wizard State metadata', Defaults('Setup Wizard State metadata'), {Name: "PopulateBookmarks", 'Last Completed Step': 1, 'Solution Name':"CenterofExcellenceCoreComponents"});
            Refresh('Command Center Configs');
           
        );
        
        Clear(col_AppsWithMetadata);
        ForAll(Filter(JustForCount_CommandCenterConfigs, 'Show in Admin Command Center' = 'Show in Admin Command Center (Command Center Configs)'.Yes),
        With({theApp: LookUp('CoE Solution Metadata', ObjectName = Name)},
            Collect(col_AppsWithMetadata,
                {
                    theName: Name,
                    theType: 'Resource Type',
                    theMetadataType: theApp.ObjectType,
                    theLink: Link,
                    theSolution: theApp.CoESolution,
                    theArea: theApp.CoESolutionArea,
                    theVideo: theApp.HelpLink,
                    thePersona: theApp.Persona,
                    theGUID: theApp.ObjectGUID,
                    theDescription: ""
                }
            ))
        );
        
        UpdateIf(col_AppsWithMetadata, true,
            {theDescription: LookUp('PowerApps Apps', 'Record GUID as String' = theGUID).'App Description'});
        
        Clear(col_Solution);
        Collect(col_Solution, "All solutions");
        ForAll(
            ForAll(Distinct(col_AppsWithMetadata, theSolution), {Result: ThisRecord.Value}),
            Collect(col_Solution, Result)
        );
        RemoveIf(col_Solution, IsBlank(Value));
        
        Clear(col_Area);
        Collect(col_Area, {ItemKey: "allSolutions", ItemDisplayName: "All solution areas"});
        ForAll(
            ForAll(Distinct(col_AppsWithMetadata, theArea), {Result: ThisRecord.Value}),
            Collect(col_Area, {ItemKey: Result, ItemDisplayName: Result} )
        );
        RemoveIf(col_Area, IsBlank(ItemKey));

    Host As hostControl.DefaultHostControlVariant:
        OnCancel: =false
        OnEdit: =false
        OnNew: =false
        OnSave: =false
        OnView: =false

