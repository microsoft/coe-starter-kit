App As appinfo:
    BackEnabled: =false
    OnStart: |-
        =Concurrent(
            // Set the app's theme.
            Set(
                AppTheme,
                /* START THEME OBJECT */
                {
                    palette: {
                        themePrimary: "#0078d4",
                        themeLighterAlt: "#eff6fc",
                        themeLighter: "#deecf9",
                        themeLight: "#c7e0f4",
                        themeTertiary: "#71afe5",
                        themeSecondary: "#2b88d8",
                        themeDarkAlt: "#106ebe",
                        themeDark: "#005a9e",
                        themeDarker: "#004578",
                        neutralLighterAlt: "#faf9f8",
                        neutralLighter: "#f3f2f1",
                        neutralLight: "#edebe9",
                        neutralQuaternaryAlt: "#e1dfdd",
                        neutralQuaternary: "#d0d0d0",
                        neutralTertiaryAlt: "#c8c6c4",
                        neutralTertiary: "#a19f9d",
                        neutralSecondary: "#605e5c",
                        neutralPrimaryAlt: "#3b3a39",
                        neutralPrimary: "#323130",
                        neutralDark: "#201f1e",
                        black: "#000000",
                        white: "#ffffff"
                    }
                }
                /* END THEME OBJECT */
            ),Set(
            SearchBoxTheme,
            {
          palette: {
            themePrimary: ColorValue("#0078d4"),
            themeLighterAlt: ColorValue("#eff6fc"),
            themeLighter: ColorValue("#deecf9"),
            themeLight: ColorValue("#c7e0f4"),
            themeTertiary: ColorValue("#71afe5"),
            themeSecondary: ColorValue("#2b88d8"),
            themeDarkAlt: ColorValue("#106ebe"),
            themeDark: ColorValue("#005a9e"),
            themeDarker: ColorValue("#004578"),
            neutralLighterAlt: ColorValue("#faf9f8"),
            neutralLighter: ColorValue("#f3f2f1"),
            neutralLight: ColorValue("#edebe9"),
            neutralQuaternaryAlt: ColorValue("#e1dfdd"),
            neutralQuaternary: ColorValue("#d0d0d0"),
            neutralTertiaryAlt: ColorValue("#c8c6c4"),
            neutralTertiary: ColorValue("#a19f9d"),
            neutralSecondary: ColorValue("#605e5c"),
            neutralPrimaryAlt: ColorValue("#3b3a39"),
            neutralPrimary:ColorValue("#323130"),
            neutralDark: ColorValue("#201f1e"),
            black: ColorValue("#000000"),
            white: ColorValue("#f3f2f1")
          }
          
            }
        ),
        ClearCollect( tenantApps, Filter( 'PowerApps Apps', 'In App Catalog' = 'In App Catalog (PowerApps Apps)'.Yes)),
        //ClearCollect(col_Area, RenameColumns(Choices('App Category'), "Value", "ItemDisplayName")),
        Set(defaultEnvironment, First(Filter(Environments, 'Environment Sku' = "Default")).Environment);
            
        );
        
        Clear(col_Area);
        Collect(col_Area, {ItemKey: "allCategory", ItemDisplayName: "All"});
        ForAll(
            Choices('App Category'),
            Collect(col_Area, {ItemKey: Text(Value), ItemDisplayName: Text(Value)} )
        );
        RemoveIf(col_Area, IsBlank(ItemKey));
        
            Set(
                AppThemeJson,
                JSON(
                    AppTheme,
                    JSONFormat.IndentFour
                )
            );
            Set(
            SearchBoxThemeJson,
            JSON(SearchBoxTheme));
        //get app url
        Set(EnvVarDefnID, LookUp('Environment Variable Definitions', 'Schema Name'="admin_PowerAppEnvironmentVariable").'Environment Variable Definition');
        Set(theAppMakerURL, First(Filter('Environment Variable Values', 'Environment Variable Definition'.'Environment Variable Definition'=GUID(EnvVarDefnID))).Value);
        If(IsBlank(theAppMakerURL), Set(theAppMakerURL, LookUp('Environment Variable Definitions', 'Environment Variable Definition'=GUID(EnvVarDefnID)).'Default Value'));
        
        //get app player url
        Set(EnvVarDefnID, LookUp('Environment Variable Definitions', 'Schema Name'="admin_PowerAppPlayerEnvironmentVariable").'Environment Variable Definition');
        Set(theAppPlayerURL, First(Filter('Environment Variable Values', 'Environment Variable Definition'.'Environment Variable Definition'=GUID(EnvVarDefnID))).Value);
        If(IsBlank(theAppPlayerURL), Set(theAppPlayerURL, LookUp('Environment Variable Definitions', 'Environment Variable Definition'=GUID(EnvVarDefnID)).'Default Value'));
        
        //get tenant ID
        Set(EnvVarDefnID, LookUp('Environment Variable Definitions', 'Schema Name'="admin_TenantID").'Environment Variable Definition');
        Set(EnvVarTenantID, First(Filter('Environment Variable Values', 'Environment Variable Definition'.'Environment Variable Definition'=GUID(EnvVarDefnID))).Value);
        If(IsBlank(EnvVarTenantID), Set(EnvVarTenantID, LookUp('Environment Variable Definitions', 'Environment Variable Definition'=GUID(EnvVarDefnID)).'Default Value'));
        
        ClearCollect( allConnectors, PowerAppsforMakers.GetConnectors({'$filter':"environment eq 'Default-" & defaultEnvironment & "'"}).value);
    Theme: =PowerAppsTheme

    Host As hostControl.DefaultHostControlVariant:
        OnCancel: =false
        OnEdit: =false
        OnNew: =false
        OnSave: =false
        OnView: =false

