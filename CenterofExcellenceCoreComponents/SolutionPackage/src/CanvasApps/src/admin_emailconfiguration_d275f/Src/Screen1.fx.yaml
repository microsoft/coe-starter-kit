Screen1 As screen:
    LoadingSpinnerColor: =RGBA(0, 120, 212, 1)
    OnVisible: |-
        =//get base mail that will be editted / configured
        Set(ShowSaveDialog, false);
        Set(ShowSavingUX, false);
        Set(BaseMailToConfigure,
        //Set(MailToEdit,
            If(IsBlank(Param("recordId")),
                First('Customized Emails'),
                LookUp('Customized Emails','Customized Email' = GUID(Param("recordId")))));
        //DEBUG
        //Set(BaseMailToConfigure, LookUp('Customized Emails','Customized Email' = GUID("253a3c62-8c80-ed11-81ac-0022480813ff"))); 
        
        //will start with english version to edit
        Set(BaseMailGUID, BaseMailToConfigure.'Customized Email');
        Set(BackTo, "en-US");
        Set(MailToEdit, BaseMailToConfigure);
        UpdateContext({EditMailVisible: true, LocalizeMailsVisible: false,
                        isDefaultBody: If(MailToEdit.'Default Body'='Default Body (Customized Emails)'.Yes, true, false),
                        isDefaultSubject: If(MailToEdit.'Default Subject'='Default Subject (Customized Emails)'.Yes, true, false),
                        resetDefaultBody: false, resetDefaultSubject: false,
                        PreviewMailTo: User().Email,
                        bodyIsHTML: If(MailToEdit.CommunicationType = "Mail", true, false),
                        showProgressIndicator: false,
                        isNewLocale: false,
                        isEnglish: true});
        
        //create language dropdown
        Clear(mailLanguages);
        Collect(mailLanguages, "en-US");
        ForAll(SortByColumns(Filter('Customized Emails', BasedOn = MailToEdit.BasedOn && Language <> "en-US"), "admin_language"), 
            Collect(mailLanguages, Language));
        Collect(mailLanguages, "new language");
        Collect(mailLanguages, "all languages");
        UpdateContext({selectedLanguageDropdown: First(mailLanguages)});

    MainContentContainer As groupContainer.verticalAutoLayoutContainer:
        Height: =Parent.Height
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        Width: =Parent.Width
        ZIndex: =1

        TopBarContainer As groupContainer.verticalAutoLayoutContainer:
            Fill: =RGBA(243, 242, 241, 1)
            FillPortions: =0
            Height: =44
            LayoutAlignItems: =LayoutAlignItems.Stretch
            LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =32
            PaddingRight: =32
            ZIndex: =1

            "CommandBarTopBar As 'Fluent Command Bar (1.0.20)'.pcfdataset":
                AlignInContainer: =AlignInContainer.Start
                DisplayMode: =DisplayMode.Edit
                FillPortions: =1
                Height: =45
                Items: |-
                    =Table(
                        {
                            ItemKey: "back",
                            ItemDisplayName: "Back",
                            ItemIconName: "NavigateBack",
                            ItemVisible: true
                    
                        },
                        {
                            ItemKey: "newLocalizedMail",
                            ItemDisplayName: "New language",
                            ItemIconName: "AddOnlineMeeting",
                            ItemVisible: If(LocalizeMailsVisible = true, true, false)
                        },
                        {
                            ItemKey: "editMail",
                            ItemDisplayName: "Edit",
                            ItemIconName: "EditMail",
                            ItemEnabled: If(CountRows(LocalizedList.SelectedItems) = 1, true, false),
                            ItemVisible: If(LocalizeMailsVisible = true, true, false)
                        },
                        {
                            ItemKey: "deleteMail",
                            ItemDisplayName: "Delete language",
                            ItemIconName: "delete",
                            ItemEnabled: If(CountRows(LocalizedList.SelectedItems) = 1, true, false),
                            ItemVisible: If(LocalizeMailsVisible = true, true, false)
                        },
                        {
                            ItemKey: "previewMail",
                            ItemDisplayName: "Preview mail",
                            ItemIconName: "MailCheck",
                            ItemEnabled: If(CountRows(LocalizedList.SelectedItems) = 1 && bodyIsHTML=true, true, false),
                            ItemVisible: If(LocalizeMailsVisible = true, true, false)
                        }
                    )
                LayoutMinHeight: =200
                LayoutMinWidth: =200
                OnSelect: |-
                    =Switch(Self.Selected.ItemKey,
                    
                    "back", 
                        //if editing english, and back to is english, go back to model driven app
                        If(EditMailVisible && Language.Value = "en-US" && BackTo = "en-US", Back(),
                    
                        //else if back to is list, and not already on list, go to list
                        If(BackTo = "List" && !LocalizeMailsVisible, 
                            UpdateContext({EditMailVisible: false, LocalizeMailsVisible: true, isNewLocale: false}),
                        
                        //else catch all, go back to English Edit screen
                        Set(MailToEdit, BaseMailToConfigure);
                        UpdateContext({isDefaultBody: If(MailToEdit.'Default Body'='Default Body (Customized Emails)'.Yes, true, false),
                            isDefaultSubject: If(MailToEdit.'Default Subject'='Default Subject (Customized Emails)'.Yes, true, false),
                            resetDefaultBody: false, resetDefaultSubject: false,
                            bodyIsHTML: If(MailToEdit.CommunicationType = "Mail", true, false),
                            showProgressIndicator: false,
                            isNewLocale: false,
                            isEnglish: true});
                        Set(BackTo, "en-US");
                        UpdateContext({selectedLanguageDropdown: First(mailLanguages)});
                        UpdateContext({EditMailVisible: true, LocalizeMailsVisible: false});
                        Reset(Subject);Reset(EditEmail);Reset(EditEmailMarkdown);Reset(Language);Reset(CC);
                        Reset(ReplyTo);Reset(SendOnBehalf);Reset(Importance);Reset(LanguagePicker)));, 
                    
                    
                    "newLocalizedMail", 
                        //set to new locale
                        Set(BackTo, "List");
                        UpdateContext({isDefaultBody: false,
                                    isDefaultSubject: false,
                                    resetDefaultBody: false, resetDefaultSubject: false,
                                    bodyIsHTML: If(BaseMailToConfigure.CommunicationType = "Mail", true, false),
                                    showProgressIndicator: false,
                                    isNewLocale: true,
                                    isEnglish: false});
                        //browse and reset
                        UpdateContext({EditMailVisible: true, LocalizeMailsVisible: false});
                        Notify("We've started you with the values for the en-US version of the mail", NotificationType.Information, 6000);
                        Reset(Subject);Reset(EditEmail);Reset(EditEmailMarkdown);Reset(Language);Reset(CC);Reset(ReplyTo);Reset(SendOnBehalf);Reset(Importance);,
                    
                    "editMail", 
                        //set to selected language, update variables, and reset controls
                        Set(BackTo, "List");
                        Set(MailToEdit, First(Filter('Customized Emails', Language = LocalizedList.Selected.Language && BasedOn = BaseMailToConfigure.BasedOn)));
                        UpdateContext({isDefaultBody: false, isDefaultSubject: false,
                                resetDefaultBody: false, resetDefaultSubject: false,
                                bodyIsHTML: If(MailToEdit.CommunicationType = "Mail", true, false),
                                isNewLocale: false,
                                isEnglish: false});
                        UpdateContext({selectedLanguageDropdown: First(Filter(mailLanguages, Value = LocalizedList.Selected.Language))});
                        Reset(Subject);Reset(EditEmail);Reset(EditEmailMarkdown);Reset(Language);Reset(CC);Reset(ReplyTo);Reset(SendOnBehalf);Reset(Importance);Reset(LanguagePicker);
                        UpdateContext({EditMailVisible: true, LocalizeMailsVisible: false});,
                    
                    "deleteMail", 
                        If(!isEnglish, //should never be english here but safe guard
                        RemoveIf(mailLanguages, Value = LocalizedList.Selected.Language);
                        RemoveIf('Customized Emails', 'Customized Email' = LocalizedList.Selected.'Customized Email');
                        Reset(LanguagePicker));,
                    
                    "previewMail", 
                            UpdateContext({sendMailPassed: 'HELPER-SendEmail'.Run(PreviewMailTo, 
                                LocalizedList.Selected.Subject, LocalizedList.Selected.Body, 
                                If(IsBlank(LocalizedList.Selected.CC), "", LocalizedList.Selected.CC), 
                                If(IsBlank(LocalizedList.Selected.'Send On Behalf'), "", LocalizedList.Selected.'Send On Behalf'), 
                                If(IsBlank(LocalizedList.Selected.ReplyTo), "", LocalizedList.Selected.ReplyTo), LocalizedList.Selected.Importance).thereturnstring});
                            If(sendMailPassed = "pass", Notify("Preview email sent to " & PreviewMailTo, NotificationType.Success, 4000), Notify(sendMailPassed, NotificationType.Error, 10000));
                    
                    )
                Theme: =AppThemeJson
                Width: =200
                X: =0
                Y: =0
                ZIndex: =1

            "SearchBoxTopBar As 'Fluent SearchBox (1.0.20) Preview'":
                AlignInContainer: =AlignInContainer.Center
                DisplayMode: =DisplayMode.Edit
                Height: =33
                LayoutMinHeight: =45
                LayoutMinWidth: =200
                PlaceHolderText: ="Search"
                Theme: =SearchBoxThemeJson
                Underlined: =true
                Visible: =LocalizeMailsVisible
                Width: =300
                X: =0
                Y: =0
                ZIndex: =2

            "ProgressIndicator1 As 'Fluent Progress Indicator (1.0.20) Preview'":
                DisplayMode: =DisplayMode.Edit
                Height: =20
                LayoutMinHeight: =45
                LayoutMinWidth: =200
                Theme: =SearchBoxThemeJson
                TypeofIndicator: ='PowerCAT.ProgressIndicator.TypeofIndicator'.IndeterminateIndicator
                Visible: =showProgressIndicator
                Width: =200
                X: =0
                Y: =0
                ZIndex: =3

        HeaderDivider As rectangle:
            AlignInContainer: =AlignInContainer.Stretch
            BorderColor: =RGBA(166, 166, 166, 1)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            DisabledFill: =RGBA(166, 166, 166, 1)
            Fill: =RGBA(225, 223, 221, 1)
            FocusedBorderColor: =RGBA(0, 120, 212, 1)
            Height: =1
            HoverFill: =RGBA(225, 223, 221, 1)
            PressedFill: =RGBA(225, 223, 221, 1)
            Width: =1366
            Y: =72
            ZIndex: =2

        HeaderContainer As groupContainer.verticalAutoLayoutContainer:
            FillPortions: =0
            Height: =100
            LayoutAlignItems: =LayoutAlignItems.Stretch
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =40
            PaddingRight: =40
            PaddingTop: =32
            ZIndex: =3

            Header As Label:
                AutoHeight: =true
                Color: =
                DisplayMode: =DisplayMode.Edit
                FontSize: =18
                FontWeight: =FontWeight.Semibold
                Height: =43
                LayoutMinHeight: =32
                LayoutMinWidth: =320
                OnChange: =false
                PaddingStart: =0  
                Text: |-
                    =If(isEnglish && EditMailVisible, "Edit mail: " & BaseMailToConfigure.'Action Name', 
                        If(isNewLocale, "New localized language for : " & BaseMailToConfigure.'Action Name',
                        If(EditMailVisible, "Edit " & Language.Value & " mail: " & BaseMailToConfigure.'Action Name',
                        If(LocalizeMailsVisible, "Localized mails for: " & BaseMailToConfigure.'Action Name', ""))))
                Width: =320
                X: =35
                Y: =15
                ZIndex: =1

        EditEmailScreen As groupContainer.horizontalAutoLayoutContainer:
            LayoutGap: =20
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =40
            PaddingRight: =40
            Visible: =EditMailVisible
            ZIndex: =6

            EditEmailSettingsContainer As groupContainer.verticalAutoLayoutContainer:
                FillPortions: =0.75
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =5
                PaddingRight: =5
                ZIndex: =1

                SubjectIsDefaultContainer As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    FillPortions: =0
                    Height: =32
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Width: =Parent.Width-Parent.PaddingLeft-Parent.PaddingRight
                    ZIndex: =1

                    SubjectIsDefault As Label:
                        Color: =
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =320
                        OnChange: =false
                        Text: =If(isEnglish, If(isDefaultSubject, "Email subject is default", "Email subject is customized"), "Subject")
                        Width: =175
                        X: =0
                        Y: =0
                        ZIndex: =1

                    "SubjectIsDefaultIcon As 'Fluent Icon (1.0.20)'":
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        IconName: ="ClearFormatting"
                        IconType: ='PowerCAT.Icon.IconType'.ActionButton
                        LayoutMinHeight: =200
                        LayoutMinWidth: =200
                        OnChange: |-
                            =UpdateContext({resetDefaultSubject: true});
                        Text: =If(resetDefaultSubject, "Will reset on save", "Reset to standard")
                        Tooltip: ="Subject will be reset after save"
                        Visible: =If(isEnglish, If(!isDefaultSubject, true, false), false)
                        Width: =200
                        X: =0
                        Y: =0
                        ZIndex: =2

                "Subject As 'Text box'":
                    ColorBackground: =
                    ColorText: =
                    DisplayMode: =DisplayMode.Edit
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    OnChange: |-
                        =If(isEnglish, UpdateContext({isDefaultSubject: false}))
                    Value: =If(isNewLocale, BaseMailToConfigure.Subject, MailToEdit.Subject)
                    Width: =Parent.Width-Parent.PaddingLeft-Parent.PaddingRight
                    X: =0
                    Y: =0
                    ZIndex: =2

                Language_label As Label:
                    Color: =If(IsBlank(Language.Value), Color.Red)
                    DisplayMode: =DisplayMode.Edit
                    Height: =45
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    OnChange: =false
                    Text: ="Language"
                    VerticalAlignment: =VerticalAlign.Bottom
                    Visible: =!isEnglish
                    Width: =Parent.Width-Parent.PaddingLeft-Parent.PaddingRight
                    X: =0
                    Y: =0
                    ZIndex: =3

                "Language As 'Text box'":
                    ColorBackground: =
                    ColorText: =
                    DisplayMode: =DisplayMode.Edit
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    Value: =If(isNewLocale, "", MailToEdit.Language)
                    Visible: =!isEnglish
                    Width: =Parent.Width-Parent.PaddingLeft-Parent.PaddingRight
                    X: =0
                    Y: =0
                    ZIndex: =4

                CC_label As Label:
                    AlignInContainer: =AlignInContainer.Start
                    Color: =
                    DisplayMode: =DisplayMode.Edit
                    Height: =45
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    OnChange: =false
                    Text: ="CC"
                    VerticalAlignment: =VerticalAlign.Bottom
                    Width: =Parent.Width-Parent.PaddingLeft-Parent.PaddingRight
                    X: =0
                    Y: =0
                    ZIndex: =5

                "CC As 'Text box'":
                    ColorBackground: =
                    ColorText: =
                    DisplayMode: =DisplayMode.Edit
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    Value: =If(isNewLocale, BaseMailToConfigure.CC, MailToEdit.CC)
                    Width: =Parent.Width-Parent.PaddingLeft-Parent.PaddingRight
                    X: =0
                    Y: =0
                    ZIndex: =6

                ReplyTo_Label As Label:
                    Color: =
                    DisplayMode: =DisplayMode.Edit
                    Height: =45
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    OnChange: =false
                    Text: ="Reply To"
                    VerticalAlignment: =VerticalAlign.Bottom
                    Width: =Parent.Width-Parent.PaddingLeft-Parent.PaddingRight
                    X: =0
                    Y: =0
                    ZIndex: =7

                "ReplyTo As 'Text box'":
                    ColorBackground: =
                    ColorText: =
                    DisplayMode: =DisplayMode.Edit
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    Value: =If(isNewLocale, BaseMailToConfigure.ReplyTo, MailToEdit.ReplyTo)
                    Width: =Parent.Width-Parent.PaddingLeft-Parent.PaddingRight
                    X: =0
                    Y: =0
                    ZIndex: =8

                SendOnBehalf_Label As Label:
                    Color: =
                    DisplayMode: =DisplayMode.Edit
                    Height: =45
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    OnChange: =false
                    Text: ="Send on behalf"
                    VerticalAlignment: =VerticalAlign.Bottom
                    Width: =Parent.Width-Parent.PaddingLeft-Parent.PaddingRight
                    X: =0
                    Y: =0
                    ZIndex: =9

                "SendOnBehalf As 'Text box'":
                    ColorBackground: =
                    ColorText: =
                    DisplayMode: =DisplayMode.Edit
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    Value: =If(isNewLocale, BaseMailToConfigure.'Send On Behalf', MailToEdit.'Send On Behalf')
                    Width: =Parent.Width-Parent.PaddingLeft-Parent.PaddingRight
                    X: =0
                    Y: =0
                    ZIndex: =10

                Importance_Label As Label:
                    Color: =
                    DisplayMode: =DisplayMode.Edit
                    Height: =45
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    OnChange: =false
                    Text: ="Importance"
                    VerticalAlignment: =VerticalAlign.Bottom
                    Width: =Parent.Width-Parent.PaddingLeft-Parent.PaddingRight
                    X: =0
                    Y: =0
                    ZIndex: =11

                "Importance As 'Combo box'.pcfdataset":
                    DefaultSelectedItems: |-
                        =If(isNewLocale, If(IsBlank(BaseMailToConfigure.Importance), ["Normal"], [BaseMailToConfigure.Importance]), 
                            If(IsBlank(MailToEdit.Importance), ["Normal"], [MailToEdit.Importance]))
                    DisplayMode: =DisplayMode.Edit
                    Height: =32
                    Items: =["Normal", "Low", "High"]
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    Width: =Parent.Width-Parent.PaddingLeft-Parent.PaddingRight
                    X: =0
                    Y: =0
                    ZIndex: =12

                    Value1 As pcfDataField.textualColumn:
                        FieldDisplayName: ="Value"
                        FieldName: ="Value"
                        FieldType: ="s"
                        FieldVariantName: ="textualColumn"
                        Order: =1
                        ZIndex: =16

            EditEmailBodyContainer As groupContainer.verticalAutoLayoutContainer:
                FillPortions: =1.25
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                ZIndex: =2

                BodyIsDefaultContainer As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    FillPortions: =0
                    Height: =32
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingRight: =5
                    Width: =Parent.Width
                    ZIndex: =1

                    BodyIsDefault As Label:
                        Color: =
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =175
                        OnChange: =false
                        Text: =If(isEnglish, If(isDefaultBody, "Email body is default", "Email body is customized"), "Body")
                        Width: =175
                        X: =0
                        Y: =0
                        ZIndex: =1

                    "BodyIsDefaultIcon As 'Fluent Icon (1.0.20)'":
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        IconName: ="ClearFormatting"
                        IconType: ='PowerCAT.Icon.IconType'.ActionButton
                        LayoutMinHeight: =200
                        LayoutMinWidth: =150
                        OnChange: |-
                            =UpdateContext({resetDefaultBody: true});
                        Text: =If(resetDefaultBody, "Will reset on save", "Reset to standard")
                        Tooltip: ="Body will be reset after save"
                        Visible: =If(isEnglish, If(!isDefaultBody, true, false), false)
                        Width: =150 
                        X: =0
                        Y: =0
                        ZIndex: =2

                    BodyIsDefaultBuffer As Label:
                        Alignment: =Align.Left
                        Color: =
                        DisplayMode: =DisplayMode.Edit
                        FillPortions: =1
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Normal
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =100
                        OnChange: =false
                        Overflow: ='Label.Overflow'.Hidden
                        Text: =""
                        TextRole: ='Label.TextRole'.Default
                        VerticalAlignment: =VerticalAlign.Middle
                        Width: =100 
                        X: =0
                        Y: =0
                        ZIndex: =4

                    "LanguagePicker As 'Combo box'.pcfdataset":
                        AlignInContainer: =AlignInContainer.End
                        DefaultSelectedItems: =selectedLanguageDropdown
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        Items: =mailLanguages
                        LayoutMinHeight: =32
                        LayoutMinWidth: =150
                        OnChange: |-
                            =Switch(Self.Selected.Value, 
                            "en-US", 
                                //set to English, update variables, and reset controls
                                Set(MailToEdit, BaseMailToConfigure);
                                UpdateContext({isDefaultBody: If(MailToEdit.'Default Body'='Default Body (Customized Emails)'.Yes, true, false),
                                            isDefaultSubject: If(MailToEdit.'Default Subject'='Default Subject (Customized Emails)'.Yes, true, false),
                                            resetDefaultBody: false, resetDefaultSubject: false,
                                            bodyIsHTML: If(MailToEdit.CommunicationType = "Mail", true, false),
                                            showProgressIndicator: false,
                                            isNewLocale: false,
                                            isEnglish: true});
                                Reset(Subject);Reset(EditEmail);Reset(EditEmailMarkdown);Reset(Language);Reset(CC);Reset(ReplyTo);Reset(SendOnBehalf);Reset(Importance);,
                            
                            "new language", 
                                //set to new locale
                                Set(BackTo, "en-Us");
                                UpdateContext({isDefaultBody: false,
                                            isDefaultSubject: false,
                                            resetDefaultBody: false, resetDefaultSubject: false,
                                            bodyIsHTML: If(BaseMailToConfigure.CommunicationType = "Mail", true, false),
                                            showProgressIndicator: false,
                                            isNewLocale: true,
                                            isEnglish: false});
                                Notify("We've started you with the values for the en-US version of the mail", NotificationType.Information, 6000);
                                Reset(Subject);Reset(EditEmail);Reset(EditEmailMarkdown);Reset(Language);Reset(CC);Reset(ReplyTo);Reset(SendOnBehalf);Reset(Importance);,
                            
                            
                            "all languages", 
                                Set(BackTo, "en-Us");
                                UpdateContext({EditMailVisible: false, LocalizeMailsVisible: true, isNewLocale: false});, 
                                
                            
                            //default
                                //set to selected language, update variables, and reset controls
                                Set(MailToEdit, First(Filter('Customized Emails', Language = Self.Selected.Value && BasedOn = BaseMailToConfigure.BasedOn)));
                                UpdateContext({isDefaultBody: If(MailToEdit.'Default Body'='Default Body (Customized Emails)'.Yes, true, false),
                                        isDefaultSubject: If(MailToEdit.'Default Subject'='Default Subject (Customized Emails)'.Yes, true, false),
                                        resetDefaultBody: false, resetDefaultSubject: false,
                                        bodyIsHTML: If(MailToEdit.CommunicationType = "Mail", true, false),
                                        showProgressIndicator: false,
                                        isNewLocale: false,
                                        isEnglish: false});
                                Reset(Subject);Reset(EditEmail);Reset(EditEmailMarkdown);Reset(Language);Reset(CC);Reset(ReplyTo);Reset(SendOnBehalf);Reset(Importance);
                            )
                        OnSelect: =false
                        Text: =""
                        Width: =150
                        X: =0
                        Y: =0
                        ZIndex: =5

                        Value2 As pcfDataField.textualColumn:
                            FieldDisplayName: ="Value"
                            FieldName: ="Value"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =1
                            ZIndex: =30

                "'buffer below dropdown' As Label":
                    Color: =
                    DisplayMode: =DisplayMode.Edit
                    Height: =5
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    OnChange: =false
                    Width: =Parent.Width
                    X: =0
                    Y: =0
                    ZIndex: =2

                EditEmail As richTextEditor:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    Default: =If(isNewLocale, BaseMailToConfigure.Body, MailToEdit.Body)
                    FillPortions: =1
                    Height: =509
                    OnChange: |-
                        =If(isEnglish, UpdateContext({isDefaultBody: false}))
                    Visible: =EditMailVisible && bodyIsHTML
                    Width: =Parent.Width-5
                    Y: =20
                    ZIndex: =3

                MarkdownNote As Label:
                    Color: =
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =8
                    FontWeight: =FontWeight.Lighter
                    Height: =25
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    OnChange: =false
                    Text: ="Approvals must be written in markdown, not HTML, and are not available for preview"
                    VerticalAlignment: =VerticalAlign.Bottom
                    Visible: =EditMailVisible && !bodyIsHTML
                    Width: =Parent.Width
                    X: =0
                    Y: =0
                    ZIndex: =4

                "EditEmailMarkdown As 'Text box'":
                    ColorBackground: =
                    ColorText: =
                    DisplayMode: =DisplayMode.Edit
                    FillPortions: =1
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =320
                    Mode: ='TextBox.Mode'.Multiline
                    OnChange: |-
                        =UpdateContext({isDefaultBody: false})
                    Value: =If(isNewLocale, BaseMailToConfigure.Body, MailToEdit.Body)
                    Visible: =EditMailVisible && !bodyIsHTML
                    Width: =Parent.Width
                    X: =0
                    Y: =0
                    ZIndex: =5

        LocalizeListScreen As groupContainer.horizontalAutoLayoutContainer:
            LayoutGap: =20
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =40
            PaddingRight: =40
            Visible: =LocalizeMailsVisible
            ZIndex: =7

            "LocalizedList As 'Fluent Details List (1.0.20)'.pcfdataset":
                columns_Items: |-
                    =Table(
                        {ColName:"admin_language",ColDisplayName:"Language",ColWidth:75,ColRowHeader:true,ColResizable:true, ColSortable:true},
                        {ColName:"admin_importance",ColDisplayName:"Importance",ColWidth:100, ColRowHeader:true,ColResizable:true, ColSortable:true},
                        {ColName:"admin_cc",ColDisplayName:"CC",ColWidth:300, ColRowHeader:true,ColResizable:true, ColSortable:true},
                        {ColName:"admin_replyto",ColDisplayName:"Reply To",ColWidth:300, ColRowHeader:true,ColResizable:true, ColSortable:true},
                        {ColName:"admin_sendonbehalf",ColDisplayName:"Send on Behalf",ColWidth:300, ColRowHeader:true,ColResizable:true, ColSortable:true}
                        )
                Compact: =false
                DisplayMode: =DisplayMode.Edit
                FillPortions: =1
                Height: =Parent.Height
                Items: |-
                    =Filter('Customized Emails', BasedOn = BaseMailToConfigure.BasedOn && Language <> "en-US" && 
                        (SearchBoxTopBar.SearchText in admin_language || SearchBoxTopBar.SearchText in admin_importance || SearchBoxTopBar.SearchText in admin_replyto || SearchBoxTopBar.SearchText in admin_sendonbehalf || SearchBoxTopBar.SearchText in admin_cc))
                LayoutMinHeight: =200
                LayoutMinWidth: =200
                Theme: =AppThemeJson
                Width: =200
                X: =0
                Y: =0
                ZIndex: =1

                Language2 As pcfDataField.textualColumn:
                    FieldDisplayName: ="Language"
                    FieldName: ="admin_language"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =6
                    ZIndex: =25

                CC1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="CC"
                    FieldName: ="admin_cc"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =2
                    ZIndex: =26

                "'Send On Behalf1' As pcfDataField.textualColumn":
                    FieldDisplayName: ="Send On Behalf"
                    FieldName: ="admin_sendonbehalf"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =3
                    ZIndex: =27

                ReplyTo1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="ReplyTo"
                    FieldName: ="admin_replyto"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =4
                    ZIndex: =28

                Importance2 As pcfDataField.textualColumn:
                    FieldDisplayName: ="Importance"
                    FieldName: ="admin_importance"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =5
                    ZIndex: =29

        ButtonContainer As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.End
            FillPortions: =0
            Height: =44
            LayoutGap: =10
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =40
            PaddingRight: =40
            Visible: =EditMailVisible
            Width: =Parent.Width
            ZIndex: =9

            ButtonContainerBuffer As Label:
                AlignInContainer: =AlignInContainer.Stretch
                Color: =
                DisplayMode: =DisplayMode.Edit
                FillPortions: =1
                Height: =32
                LayoutMinHeight: =32
                LayoutMinWidth: =320
                OnChange: =false
                Text: =""
                Width: =320
                X: =0
                Y: =0
                ZIndex: =1

            Delete As Button:
                AlignInContainer: =AlignInContainer.Center
                BorderColor: =
                ButtonType: ="Standard"
                DisabledBorderColor: =
                DisabledFillColor: =
                DisabledTextColor: =
                DisplayMode: =If(EditMailVisible && !isEnglish && !isNewLocale, DisplayMode.Edit, DisplayMode.Disabled)
                FillColor: =
                Height: =32
                HoverBorderColor: =
                HoverFillColor: =
                HoverTextColor: =
                LayoutMinHeight: =32
                LayoutMinWidth: =96
                OnChange: =false
                OnSelect: |+
                    =//delete if not english
                    If(!isEnglish,
                    RemoveIf(mailLanguages, Value = Language.Value);
                    RemoveIf('Customized Emails', 'Customized Email' = LocalizedList.Selected.'Customized Email'));
                    
                    //reset to english and notify user
                    UpdateContext({selectedLanguageDropdown: First(mailLanguages)});
                    Set(MailToEdit, BaseMailToConfigure);
                    UpdateContext({EditMailVisible: true, LocalizeMailsVisible: false,
                                    isDefaultBody: If(MailToEdit.'Default Body'='Default Body (Customized Emails)'.Yes, true, false),
                                    isDefaultSubject: If(MailToEdit.'Default Subject'='Default Subject (Customized Emails)'.Yes, true, false),
                                    resetDefaultBody: false, resetDefaultSubject: false,
                                    PreviewMailTo: User().Email,
                                    bodyIsHTML: If(MailToEdit.CommunicationType = "Mail", true, false),
                                    showProgressIndicator: false,
                                    isNewLocale: false,
                                    isEnglish: true});
                    Reset(Subject);Reset(EditEmail);Reset(EditEmailMarkdown);Reset(Language);Reset(CC);Reset(ReplyTo);Reset(SendOnBehalf);Reset(Importance);
                    Reset(LanguagePicker);
                    Notify("Language deleted", NotificationType.Success);
                    
                PressedBorderColor: =
                PressedFillColor: =
                PressedTextColor: =
                Text: ="Delete"
                TextColor: =
                Visible: =If(EditMailVisible && !isEnglish && !isNewLocale, true, false)
                Width: =98
                X: =1199
                Y: =0
                ZIndex: =2

            "'Send preview' As Button":
                AlignInContainer: =AlignInContainer.Center
                BorderColor: =
                ButtonType: =If(EditMailVisible && bodyIsHTML, DisplayMode.Edit, DisplayMode.Disabled)
                DisabledBorderColor: =
                DisabledFillColor: =
                DisabledTextColor: =
                DisplayMode: =DisplayMode.Edit
                FillColor: =
                Height: =32
                HoverBorderColor: =
                HoverFillColor: =
                HoverTextColor: =
                LayoutMinHeight: =32
                LayoutMinWidth: =96
                OnChange: =false
                OnSelect: |-
                    =UpdateContext({sendMailPassed: 
                    'HELPER-SendEmail'.Run(PreviewMailTo, Subject.Value, EditEmail.HtmlText, If(IsBlank(CC.Value), "", CC.Value), If(IsBlank(SendOnBehalf.Value), "", SendOnBehalf.Value), 
                    If(IsBlank(ReplyTo.Value), "", ReplyTo.Value), Importance.Selected.Value).thereturnstring});
                    
                    If(sendMailPassed = "pass", Notify("Preview email sent to " & PreviewMailTo, NotificationType.Success, 4000), Notify(sendMailPassed, NotificationType.Error, 10000));
                PressedBorderColor: =
                PressedFillColor: =
                PressedTextColor: =
                Text: ="Preview"
                TextColor: =
                Width: =98
                X: =1199
                Y: =0
                ZIndex: =3

            ShowSave As Button:
                AlignInContainer: =AlignInContainer.Center
                BorderColor: =
                ButtonType: ='Button.ButtonType'.Primary
                DisabledBorderColor: =
                DisabledFillColor: =
                DisabledTextColor: =
                DisplayMode: =If(IsBlank(Language), DisplayMode.Disabled, DisplayMode.Edit)
                FillColor: =
                Height: =32
                HoverBorderColor: =
                HoverFillColor: =
                HoverTextColor: =
                LayoutMinHeight: =32
                LayoutMinWidth: =96
                OnChange: =false
                OnSelect: |-
                    =UpdateContext({SaveSuccess: "pass"});
                    UpdateContext({LanguageToSave: Language.Value});
                    Set(ShowSaveDialog, true);
                PressedBorderColor: =
                PressedFillColor: =
                PressedTextColor: =
                Text: ="Save"
                TextColor: =
                Width: =98
                X: =1199
                Y: =0
                ZIndex: =4

    SaveMailDialog As Dialog:
        Buttons: |-
            =Table({Label: "Cancel", ButtonType:'Button.ButtonType'.Standard } ,{Label: "Save", ButtonType:'Button.ButtonType'.Primary})
        Description: ="Are you sure you want to save?"
        DialogHeight: =220
        DialogWidth: =500
        Fill: =SaveMailDialog.OverlayColor
        Height: =If(Self.Visible, App.Height, 0)
        OnButtonSelect: |-
            =If(Self.SelectedButton.Label = "Save",
                UpdateContext({ShowSavingUX: true});
                UpdateContext({SaveSuccess: "pass"});
                UpdateContext({LanguageToSave: Language.Value});
                UpdateContext({EditMailGUID: Patch('Customized Emails', If(isNewLocale, Defaults('Customized Emails'), MailToEdit), 
                            {
                            //all the basics
                            Name: BaseMailToConfigure.'Flow Name' & "--" & BaseMailToConfigure.'Action Name' & "--" & Language.Value,
                            BasedOn: BaseMailToConfigure.BasedOn,
                            'Target Audiance': BaseMailToConfigure.'Target Audiance',
                            Language: Language.Value,
                            Solution: BaseMailToConfigure.Solution,
                            'Solution Area': BaseMailToConfigure.'Solution Area',
                            'Flow Name': BaseMailToConfigure.'Flow Name',
                            'Action Name': BaseMailToConfigure.'Action Name',
                            CommunicationType: BaseMailToConfigure.CommunicationType,
            
                            //the configurables
                            Subject: Subject.Value,
                            Body: If(bodyIsHTML, EditEmail.HtmlText, EditEmailMarkdown.Value),
                            'Default Body': If(!isEnglish, 'Default Body (Customized Emails)'.No, 
                                If(isDefaultBody || resetDefaultBody, 'Default Body (Customized Emails)'.Yes, 'Default Body (Customized Emails)'.No)),
                            'Default Subject': If(!isEnglish, 'Default Subject (Customized Emails)'.No,
                                If(isDefaultSubject || resetDefaultSubject, 'Default Subject (Customized Emails)'.Yes, 'Default Subject (Customized Emails)'.No)),
                            CC: CC.Value,
                            ReplyTo: ReplyTo.Value,
                            'Send On Behalf': SendOnBehalf.Value,
                            Importance: Importance.Selected.Value
                            })});
            
                //if english
                If(resetDefaultBody || resetDefaultSubject, 
                    //call the flow to update
                    UpdateContext({showProgressIndicator: true});
                    UpdateContext({SaveSuccess: 'Admin|SyncTemplatev3ConfigureEmails'.Run(false, 
                        {boolean_1: resetDefaultSubject, boolean_2: resetDefaultBody, text: BaseMailToConfigure.BasedOn}).return});
                    Refresh('Customized Emails');
                    If(resetDefaultBody, Reset(EditEmail));
                    If(resetDefaultBody, Reset(EditEmailMarkdown));
                    If(resetDefaultSubject, Reset(Subject));
                    UpdateContext({isDefaultSubject: If(resetDefaultSubject, true, false), isDefaultBody: If(resetDefaultBody, true, false)});
                    UpdateContext({resetDefaultSubject: false, resetDefaultBody: false});); //end reset scope
            
                UpdateContext({showProgressIndicator: false});
                If(SaveSuccess = "pass", Notify("Saved", NotificationType.Success, 4000), Notify("Save failed", NotificationType.Error, 4000));
            
                //IF NEW LOCAL, add to language collection and select
                If(isNewLocale, Collect(mailLanguages, LanguageToSave);
                UpdateContext({isNewLocale: false});
                UpdateContext({selectedLanguageDropdown: First(Filter(mailLanguages, Value = LanguageToSave))})
                );
            
                //refetch the variables. 
                Set(MailToEdit, LookUp('Customized Emails', 'Customized Email' = EditMailGUID.'Customized Email'));
                Set(BaseMailToConfigure, LookUp('Customized Emails', 'Customized Email' = BaseMailGUID));
            ); //close Save Actions
            
            //always close dialog
            UpdateContext({ShowSavingUX: false});
            Set(ShowSaveDialog, false);
        OnCloseSelect: =Set(ShowSaveDialog, false);
        OverlayColor: =RGBA(0, 0, 0, 0.2)
        SubTitle: ="Are you sure you want to save?"
        Title: ="Save mail"
        Visible: =ShowSaveDialog
        Width: =If(Self.Visible, App.Width, 0)
        ZIndex: =2

    "Spinner1 As 'Fluent Spinner (1.0.20) Preview'":
        BackgroundColor: |-
            ="#00000033"
        DisplayMode: =DisplayMode.Edit
        Height: =If(Self.Visible, App.Height, 0)
        Label: ="Saving"
        LabelPosition: ='PowerCAT.Spinner.LabelPosition'.Bottom
        SpinnerAlignment: ='PowerCAT.Spinner.SpinnerAlignment'.Center
        SpinnerSize: ='PowerCAT.Spinner.SpinnerSize'.Small
        Theme: =AppThemeJson
        Visible: =ShowSavingUX
        Width: =If(Self.Visible, App.Width, 0)
        X: =0
        Y: =0
        ZIndex: =3

