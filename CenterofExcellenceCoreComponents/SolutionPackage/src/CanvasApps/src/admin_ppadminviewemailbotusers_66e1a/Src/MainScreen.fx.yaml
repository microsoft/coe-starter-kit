MainScreen As screen:
    LoadingSpinnerColor: =RGBA(0, 120, 212, 1)
    OnVisible: |-
        =Set(var_ShowSpinner, true);
        UpdateContext(
                {
                    var_ShowEditors: true, 
                    var_ShowViewers: false,
                    var_ShowEditorsCheckbox: true,
                    var_ShowViewersCheckbox: true
                }
            );
        
        Concurrent(
        //get flow details
            Set(SelectedRecordID,
                If(IsBlank(Param("recordId")),
                    First(Filter('PVA Bots', 'Bot Deleted' ='Bot Deleted (PVA Bots)'.No)).PVA,
                    LookUp('PVA Bots', PVA = GUID(Param("recordId"))).PVA)),
            Set(EnvironmentName,
                If(
                    IsBlank(Param("recordId")),
                    First(Filter('PVA Bots', 'Bot Deleted' ='Bot Deleted (PVA Bots)'.No)).'Bot Environment'.Environment,
                    LookUp('PVA Bots', PVA = GUID(Param("recordId"))).'Bot Environment'.Environment)),
            Set(SelectedFlowID,
                If(IsBlank(Param("recordId")),
                    First(Filter('PVA Bots', 'Bot Deleted' ='Bot Deleted (PVA Bots)'.No)).PVA,
                    LookUp('PVA Bots', PVA = GUID(Param("recordId"))).PVA))
        ); //end Concurrent
        
        //DEBUG
        //Set(SelectedRecordID, GUID("e794fa20-8250-40c2-a634-05889d158f06"));
        //Set(EnvironmentName, LookUp(Flows, Flow = SelectedRecordID).'Flow Environment'.Name);
        //Set(SelectedFlowID, SelectedRecordID);
        //Set(WorkflowEntityId, LookUp(Flows, Flow = SelectedRecordID).WorkflowEntityId); //end debug
        Set(SelectedFlow, LookUp('PVA Bots', PVA = GUID(Param("recordId"))));
        Set(SelectFlowLink, "https://web.powerva.microsoft.com/environments/" &  SelectedFlow.'Bot Environment'.Environment & "/bots/" & SelectedFlow.PVA);
        //Set(IsSolutionFlow, If(!IsBlankOrError(WorkflowEntityId), true, false));
        
        UpdateContext({var_ShowEditorsCheckbox: false, var_ShowViewersCheckbox: false});//end for solution aware flows
        
        //fill the ToLineUsers collection with editors by default
        //Clear(DefaultToLineUsers);
        ClearCollect(DefaultToLineUsers, {PersonaKey: SelectedFlow.'Bot Owner'.'User Email', PersonaName: SelectedFlow.'Bot Owner'.'Display Name', PersonaImgUrl: SelectedFlow.'Bot Owner'.admin_PhotoObjectId, PersonaRole: "Editor"});
        
        Set(var_ShowSpinner, false);

    MainContentContainer As groupContainer.verticalAutoLayoutContainer:
        Height: =Parent.Height
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutDirection: =LayoutDirection.Vertical
        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
        LayoutMode: =LayoutMode.Auto
        PaddingBottom: =20
        PaddingLeft: =35
        PaddingRight: =35
        PaddingTop: =10
        Width: =Parent.Width
        ZIndex: =3

        ToLineLabelContainer As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            FillPortions: =0
            Height: =45
            LayoutAlignItems: =LayoutAlignItems.End
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            Width: =
            ZIndex: =2

            Label_ToLine As Label:
                DisplayMode: =DisplayMode.Edit
                FillPortions: =1
                Height: =32
                LayoutMinHeight: =32
                LayoutMinWidth: =100
                Text: ="To"
                Width: =100
                X: =385
                Y: =124
                ZIndex: =7

        "ToLine As 'Fluent PeoplePicker (1.0.20) Preview'.pcfdataset":
            AccessibilityLabel: ="Send To Line"
            DisplayMode: =DisplayMode.Edit
            Error: =false
            Height: =32 + If(RoundDown(CountRows(ToLine.SelectedPeople)/4, 0)>0, 8, 0) + (RoundDown(CountRows(ToLine.SelectedPeople)/4, 0) * 32)
            Items: =DefaultToLineUsers
            LayoutMinHeight: =200
            LayoutMinWidth: =200
            MaxPeople: =100
            OnChange: =false
            OnSearch: |-
                =ClearCollect(
                    UserCollection,
                    AddColumns(
                            Office365Users.SearchUser(
                                {
                                    searchTerm: Self.SearchText,
                                    top: 500
                                }
                            ),
                        "SuggestionImgUrl",
                        Substitute(
                            JSON(
                                Office365Users.UserPhotoV2(Id),
                                JSONFormat.IncludeBinaryData
                            ),
                            """",
                            ""
                        ),
                        "SuggestionKey",
                        UserPrincipalName,
                        "SuggestionName",
                        DisplayName,
                        "SuggestionRole",
                        ""
                    )
                )
            OnSelect: =false
            PeoplePickerType: ='PowerCAT.PeoplePicker.PeoplePickerType'.NormalPeoplePicker
            ShowSecondaryText: =false
            Suggestions_Items: =UserCollection
            Theme: =AppThemeJson
            Tooltip: ="Select mail recipients"
            Width: =Parent.Width-Parent.PaddingLeft
            X: =385
            Y: =156
            ZIndex: =3

        Label_Subject As Label:
            DisplayMode: =DisplayMode.Edit
            Height: =45
            LayoutMinHeight: =32
            LayoutMinWidth: =250
            Text: ="Subject"
            VerticalAlignment: =VerticalAlign.Bottom
            Width: =320
            X: =385
            Y: =220
            ZIndex: =4

        "SubjectLine As 'Text box'":
            ColorText: =
            DisplayMode: =DisplayMode.Edit
            Height: =32
            LayoutMinHeight: =32
            LayoutMinWidth: =250
            Value: |-
                ="Concerning bot: " & SelectedFlow.'Bot Display Name'
            Width: =Parent.Width
            X: =385
            Y: =252
            ZIndex: =5

        Label_Message As Label:
            DisplayMode: =DisplayMode.Edit
            Height: =45
            LayoutMinHeight: =32
            LayoutMinWidth: =250
            Text: ="Message"
            VerticalAlignment: =VerticalAlign.Bottom
            Width: =320
            X: =385
            Y: =311
            ZIndex: =6

        RichTextEditor1 As richTextEditor:
            BorderColor: =RGBA(166, 166, 166, 1)
            Default: |-
                ="<strong>Link to custom connector: </strong> <a href=" & SelectFlowLink & ">" & SelectedFlow.'Bot Display Name' & "</a>"
            FillPortions: =1
            LayoutMinWidth: =250
            Width: =Parent.Width
            X: =385
            Y: =365
            ZIndex: =7

        EmailCommandBarContainer As groupContainer.verticalAutoLayoutContainer:
            FillPortions: =0
            Height: =40
            LayoutAlignItems: =LayoutAlignItems.End
            LayoutGap: =10
            LayoutJustifyContent: =LayoutJustifyContent.End
            LayoutMinHeight: =43
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingTop: =10
            Width: =
            ZIndex: =8

            "SendMail As 'Fluent Icon (1.0.20)'":
                DisplayMode: =DisplayMode.Edit
                FillColor: =AppTheme.palette.themePrimary
                FontColor: =AppTheme.palette.white
                Height: =42
                IconName: ="Send"
                IconType: ='PowerCAT.Icon.IconType'.ActionButton
                LayoutMinHeight: =200
                LayoutMinWidth: =200
                OnChange: |-
                    =ForAll(ToLine.SelectedPeople, 
                            Office365Outlook.SendEmailV2(
                               PersonaKey,
                                SubjectLine.Value, 
                                RichTextEditor1.HtmlText, 
                                {Importance:"Normal"}
                                )
                    );
                    
                    Notify("The custom connector maker has been emailed successfully.", NotificationType.Success);
                Text: ="Send"
                TextAlignment: ='PowerCAT.Icon.TextAlignment'.Center
                Theme: =AppThemeJson
                Tooltip: ="Send mail"
                Visible: =true
                Width: =82
                X: =1243
                Y: =0
                ZIndex: =3

    "Spinner As 'Fluent Spinner (1.0.20) Preview'":
        BackgroundColor: |-
            ="#ffffff"
        DisplayMode: =DisplayMode.Edit
        Height: =Parent.Height
        Label: =""
        LabelPosition: ='PowerCAT.Spinner.LabelPosition'.Bottom
        SpinnerAlignment: ='PowerCAT.Spinner.SpinnerAlignment'.Center
        SpinnerSize: ='PowerCAT.Spinner.SpinnerSize'.Large
        Theme: =AppThemeJson
        Tooltip: ="Loading"
        Visible: =var_ShowSpinner
        Width: =Parent.Width
        X: =0
        Y: =0
        ZIndex: =4

