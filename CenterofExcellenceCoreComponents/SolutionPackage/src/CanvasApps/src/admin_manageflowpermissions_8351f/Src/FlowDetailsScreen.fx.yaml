FlowDetailsScreen As screen:
    LoadingSpinnerColor: =RGBA(0, 120, 212, 1)
    OnVisible: |
        =Clear(colFlowRoles);
        
        UpdateContext(
            {
                ctx_ShowSpinner: true,
                ctx_SpinnerLabel: ""
            }
        );
        Clear(colFlowRoles);
        If(
            !IsBlankOrError(SelectedFlow.'Flow Environment'),
            ClearCollect(
                flowRoles,
                PowerAutomateforAdmins.GetAdminFlowOwnerRole(
                    SelectedFlow.'Flow Environment'.Name,
                    SelectedFlow.Flow
                ).value
            )
        );
        Select(refreshFlowRoles);
        UpdateContext(
            {
                showAddUsers: false,
                showEmailPanel: false
            }
        );
        UpdateContext(
            {
                var_ShowEditors: true,
                var_ShowViewers: false
            }
        );
        UpdateContext({ctx_ShowSpinner: false});

    refreshFlowRoles As Button:
        AccessibleLabel: ="Button to refresh Flow Roles"
        Align: =""
        BasePaletteColor: =
        BorderColor: =""
        BorderStyle: =""
        DisabledBorderColor: =""
        DisplayMode: =DisplayMode.Edit
        FocusedBorderColor: =""
        FontColor: =
        Height: =20
        HoverBorderColor: =""
        Icon: =""
        IconRotation: =0
        IconStyle: ="Outline"
        Layout: ="Icon before"
        OnSelect: |
            =//UpdateContext({var_ShowShimmer: true});
            Clear(colFlowRoles);
            UpdateContext(
                {
                    ctx_ShowSpinner: true,
                    ctx_SpinnerLabel: ""
                }
            );
            
            If(
                !IsBlankOrError(SelectedFlow.'Flow Environment'),
                ClearCollect(
                    flowRoles,
                    PowerAutomateforAdmins.GetAdminFlowOwnerRole(
                        SelectedFlow.'Flow Environment'.Name,
                        SelectedFlow.Flow
                    ).value
                );
                ClearCollect(
                    colFlowRoles,
                    ForAll(
                        ShowColumns(
                            flowRoles,
                            properties,
                            id,
                            name,
                            type
                        ),
                        {
                            RoleName: If(
                                ThisRecord.properties.principal.id = Text(FlowDerivedOwner),
                                "Owner",
                                If(
                                    ThisRecord.properties.roleName = "Owner",
                                    "Creator",
                                    ThisRecord.properties.roleName
                                )
                            ),
                            UserId: GUID(properties.principal.id),
                            UserName: If(
                                ThisRecord.properties.principal.type = "Group",
                                ThisRecord.properties.principal.type,
                                First(
                                    Search(
                                        'Power Platform Users',
                                        properties.principal.id,
                                        'Record GUID as String'
                                    )
                                ).'Display Name'
                            ),
                            UserEmail: If(
                                ThisRecord.properties.principal.type = "Group",
                                Blank(),
                                First(
                                    Search(
                                        'Power Platform Users',
                                        properties.principal.id,
                                        'Record GUID as String'
                                    )
                                ).'User Email'
                            ),
                            UserIcon: If(
                                properties.principal.type <> "User",
                                Substitute(
                                    JSON(
                                        PersonPlaceholder,
                                        JSONFormat.IncludeBinaryData
                                    ),
                                    """",
                                    ""
                                ),
                                If(
                                    IsBlankOrError(
                                        First(
                                            Search(
                                                'Power Platform Users',
                                                properties.principal.id,
                                                'Record GUID as String'
                                            )
                                        ).PhotoObject.Value
                                    ),
                                    Substitute(
                                        JSON(
                                            PersonPlaceholder,
                                            JSONFormat.IncludeBinaryData
                                        ),
                                        """",
                                        ""
                                    ),
                                    Substitute(
                                        JSON(
                                            First(
                                                Search(
                                                    'Power Platform Users',
                                                    properties.principal.id,
                                                    'Record GUID as String'
                                                )
                                            ).PhotoObject.Value,
                                            JSONFormat.IncludeBinaryData
                                        ),
                                        """",
                                        ""
                                    )
                                )
                            ),
                            WarningMsg: If(
                                ThisRecord.properties.principal.id = Text(FlowDerivedOwner),
                                "Type Owner: Cannot change permissions for owner until you assign a new owner",
                                If(
                                    ThisRecord.properties.principal.type <> "User",
                                    "Type " & ThisRecord.properties.principal.type & ": Cannot change permissions for this type in the app, please go to App Setting and change there"
                                )
                            ),
                            PrincipalType: ThisRecord.properties.principal.type,
                            UserType: If(
                                properties.principal.type = "User",
                                IfError(
                                    Office365Users.UserProfileV2(properties.principal.id).userType,
                                    Blank()
                                )
                            )
                        }
                    )
                );
                
            );
            UpdateContext({ctx_ShowSpinner: false});
        PressedBorderColor: =""
        Text: ="Refresh Roles"
        VerticalAlign: =""
        Visible: =false
        Width: =140
        X: =231
        Y: =273
        ZIndex: =3

    MainFlowScreenContainer As groupContainer.horizontalAutoLayoutContainer:
        ContentLanguage: =Parent.Width
        DropShadow: =DropShadow.Light
        Height: =Parent.Height
        LayoutMode: =LayoutMode.Auto
        RadiusBottomLeft: =4
        RadiusBottomRight: =4
        RadiusTopLeft: =4
        RadiusTopRight: =4
        Width: =Parent.Width
        ZIndex: =10

        LeftFlowScreenContainer As groupContainer.verticalAutoLayoutContainer:
            BorderStyle: =BorderStyle.None
            Fill: =RGBA(122, 138, 143, 0.12)
            FillPortions: =2
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =App.ActiveScreen.Width * 0.01
            PaddingRight: =App.ActiveScreen.Width * 0.01
            RadiusBottomLeft: =4
            RadiusBottomRight: =4
            RadiusTopLeft: =4
            RadiusTopRight: =4
            ZIndex: =1

            ActionFlowContainer As groupContainer.horizontalAutoLayoutContainer:
                BorderStyle: =BorderStyle.None
                FillPortions: =0
                Height: =50
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                ZIndex: =2

                "commandBarApp As 'Fluent Command Bar (1.1.29)'.pcfdataset":
                    AccessibilityLabel: ="Flow Details Command Bar "
                    DisplayMode: =DisplayMode.Edit
                    FillPortions: =    
                    Height: =50
                    ItemOverflow: =""
                    Items: |-
                        =Table(
                            {
                                ItemKey: "back",
                                ItemDisplayName: "Back to dashboard",
                                ItemIconName: "Back"
                            },
                            {
                                ItemKey: "flowsettings",
                                ItemDisplayName: "Flow settings",
                                ItemIconName: "Settings"
                            },
                            {
                                ItemKey: "emailusers",
                                ItemDisplayName: "Email users",
                                ItemIconName: "Mail"
                            },
                            {
                                ItemKey: "addnewusers",
                                ItemDisplayName: "Add new users",
                                ItemIconName: "PeopleAdd"
                            },
                            {
                                ItemKey: "makeowner",
                                ItemDisplayName: "Make owner",
                                ItemIconName: "PermissionsSolid",
                                ItemEnabled: If(
                                    (dlFlowRoles.Selected.RoleName <> "Owner" && dlFlowRoles.Selected.RoleName <> "CanView" && dlFlowRoles.Selected.PrincipalType = "User"),
                                    true,
                                    false
                                ),
                                ItemVisible: If(
                                    (dlFlowRoles.Selected.RoleName <> "Owner" && dlFlowRoles.Selected.RoleName <> "CanView" && dlFlowRoles.Selected.PrincipalType = "User"),
                                    true,
                                    false
                                )
                            },
                            {
                                ItemKey: "changetoviewer",
                                ItemDisplayName: "Make viewer",
                                ItemIconName: "View",
                                ItemEnabled: If(
                                    (dlFlowRoles.Selected.RoleName <> "Owner" && dlFlowRoles.Selected.RoleName <> "Creator" && dlFlowRoles.Selected.PrincipalType = "User" && dlFlowRoles.Selected.RoleName = "CanEdit"),
                                    true,
                                    false
                                ),
                                ItemVisible: If(
                                    (dlFlowRoles.Selected.RoleName <> "Owner" && dlFlowRoles.Selected.RoleName <> "Creator" && dlFlowRoles.Selected.PrincipalType = "User" && dlFlowRoles.Selected.RoleName = "CanEdit"),
                                    true,
                                    false
                                )
                            },
                            {
                                ItemKey: "changetoeditor",
                                ItemDisplayName: "Make editor",
                                ItemIconName: "EditContact",
                                ItemEnabled: If(
                                    (dlFlowRoles.Selected.RoleName <> "Owner" && dlFlowRoles.Selected.RoleName <> "Creator" && dlFlowRoles.Selected.PrincipalType = "User" && dlFlowRoles.Selected.RoleName = "CanView"),
                                    true,
                                    false
                                ),
                                ItemVisible: If(
                                    (dlFlowRoles.Selected.RoleName <> "Owner" && dlFlowRoles.Selected.RoleName <> "Creator" && dlFlowRoles.Selected.PrincipalType = "User" && dlFlowRoles.Selected.RoleName = "CanView"),
                                    true,
                                    false
                                )
                            },
                            {
                                ItemKey: "removepermission",
                                ItemDisplayName: "Remove permission",
                                ItemIconName: "UserRemove",
                                ItemEnabled: If(
                                    (CountRows(dlFlowRoles.SelectedItems) = 1) && (dlFlowRoles.Selected.RoleName <> "Owner") && (dlFlowRoles.Selected.RoleName <> "Creator") && (dlFlowRoles.Selected.PrincipalType = "User"),
                                    true,
                                    false
                                ),
                                ItemVisible: If(
                                    (CountRows(dlFlowRoles.SelectedItems) = 1) && (dlFlowRoles.Selected.RoleName <> "Owner") && (dlFlowRoles.Selected.RoleName <> "Creator") && (dlFlowRoles.Selected.PrincipalType = "User"),
                                    true,
                                    false
                                )
                            },
                            {
                                ItemKey: "refresh",
                                ItemDisplayName: "Refresh",
                                ItemIconName: "refresh",
                                ItemEnabled: true,
                                ItemVisible: true
                            }
                        )
                    LayoutMinHeight: =200
                    LayoutMinWidth: =800
                    OnSelect: |-
                        =Switch(
                            Self.Selected.ItemKey,
                            "back",
                            Back(),
                            "flowsettings",
                            Launch(theFlowURL & SelectedFlow.'Flow Environment'.Name & "/flows/" & SelectedFlow.Flow & "/details"),
                            "emailusers",
                            UpdateContext({var_ShowSpinner: true});
                            ClearCollect(
                                DefaultToLineUsers,
                                ForAll(
                                    colFlowRoles,
                                    If(
                                        ThisRecord.UserName <> "Group" && ThisRecord.RoleName <> "CanView",
                                        {
                                            PersonaKey: ThisRecord.UserEmail,
                                            PersonaName: ThisRecord.UserName,
                                            PersonaRole: "Editor"
                                        }
                                    )
                                )
                            );
                            Set(
                                theFlowMakerURL,
                                First(
                                    Filter(
                                        'Environment Variable Values',
                                        'Environment Variable Definition'.'Environment Variable Definition' = GUID(EnvVarDefnID)
                                    )
                                ).Value
                            );
                            If(
                                IsBlank(theFlowMakerURL),
                                Set(
                                    theFlowMakerURL,
                                    LookUp(
                                        'Environment Variable Definitions',
                                        'Environment Variable Definition' = GUID(EnvVarDefnID)
                                    ).'Default Value'
                                )
                            );
                            Set(
                                SelectFlowLink,
                                theFlowMakerURL & SelectedFlow.'Flow Environment'.Name & "/flows/" & SelectedFlow.Flow & "/details"
                            );
                            UpdateContext(
                                {
                                    showEmailPanel: true,
                                    showAddUsers: false
                                }
                            );
                            UpdateContext({var_ShowSpinner: false});
                            ,
                            "addnewusers",
                            UpdateContext(
                                {
                                    showAddUsers: true,
                                    showEmailPanel: false,
                                    var_pivotkey: "tabMembers"
                                }
                            );
                            ,
                            "makeowner",
                            UpdateContext(
                                {
                                    ctx_SpinnerLabel: "Changing Owner...",
                                    ctx_ShowSpinner: true
                                }
                            );
                            If(
                                'HELPER-ObjectOperations'.Run(
                                    TargetUserID,
                                    SelectedFlow.Flow,
                                    SelectedFlow.'Flow Environment'.Name,
                                    "assign",
                                    "flow"
                                ).thereturnstring = "pass",
                                UpdateContext({ctx_ShowSpinner: false});
                                
                        //if success, refresh data in app
                        Notify(
                                    "User has been changed to Owner successfully",
                                    NotificationType.Success,
                                    1000
                                );
                                //Refresh('Power Platform Users');
                        //Refresh(Makers);
                        Refresh(Flows);
                                Set(
                                    SelectedFlow,
                                    LookUp(
                                        Flows,
                                        Flow = SelectedFlow.Flow
                                    )
                                );
                                ClearCollect(
                                    flowRoles,
                                    PowerAutomateforAdmins.GetAdminFlowOwnerRole(
                                        SelectedFlow.'Flow Environment'.Name,
                                        SelectedFlow.Flow
                                    ).value
                                );
                                Select(refreshFlowRoles);
                                ,
                                UpdateContext({ctx_ShowSpinner: false});
                                Notify(
                                    "Changing owner failed, try to set via product UX",
                                    NotificationType.Error,
                                    1000
                                );
                            ),
                            "removepermission",
                            UpdateContext(
                                {
                                    ctx_ShowSpinner: true,
                                    ctx_SpinnerLabel: "Removing Permission..."
                                }
                            );
                            If(
                                'HELPER-ObjectOperations'.Run(
                                    TargetUserID,
                                    SelectedFlow.Flow,
                                    SelectedFlow.'Flow Environment'.Name,
                                    "removeuser",
                                    "flow"
                                ).thereturnstring = "pass",
                        //if success, refresh data in app
                                Refresh(Flows);
                                ClearCollect(
                                    flowRoles,
                                    PowerAutomateforAdmins.GetAdminFlowOwnerRole(
                                        SelectedFlow.'Flow Environment'.Name,
                                        SelectedFlow.Flow
                                    ).value
                                );
                                UpdateContext({ctx_ShowSpinner: false});
                                Select(refreshFlowRoles);
                                ,
                                Notify(
                                    "Removing permissions failed, try to remove via product UX",
                                    NotificationType.Error,
                                    1000
                                );
                                UpdateContext({ctx_ShowSpinner: false});
                            ),
                            "changetoeditor",
                            UpdateContext(
                                {
                                    ctx_SpinnerLabel: "Changing to Editor...",
                                    ctx_ShowSpinner: true
                                }
                            );
                            If(
                                'HELPER-ObjectOperations'.Run(
                                    TargetUserID,
                                    SelectedFlow.Flow,
                                    SelectedFlow.'Flow Environment'.Name,
                                    "addeditor",
                                    "flow"
                                ).thereturnstring = "pass",
                        //if success, refresh data in app
                        //Refresh('Power Platform Users');
                        //Refresh(Makers);
                                Refresh(Flows);
                                Set(
                                    SelectedFlow,
                                    LookUp(
                                        Flows,
                                        Flow = SelectedFlow.Flow
                                    )
                                );
                                ClearCollect(
                                    flowRoles,
                                    PowerAutomateforAdmins.GetAdminFlowOwnerRole(
                                        SelectedFlow.'Flow Environment'.Name,
                                        SelectedFlow.Flow
                                    ).value
                                );
                                Notify(
                                    "User has been changed to editor successfully",
                                    NotificationType.Success,
                                    1000
                                );
                                Select(refreshFlowRoles);
                                ,
                                Notify(
                                    "Change to editor failed, try to set via product UX",
                                    NotificationType.Error,
                                    1000
                                )
                            );
                            UpdateContext({ctx_ShowSpinner: false});
                            ,
                            "changetoviewer",
                            UpdateContext(
                                {
                                    ctx_SpinnerLabel: "Changing to Viewer...",
                                    ctx_ShowSpinner: true
                                }
                            );
                            If(
                                'HELPER-ObjectOperations'.Run(
                                    TargetUserID,
                                    SelectedFlow.Flow,
                                    SelectedFlow.'Flow Environment'.Name,
                                    "addviewer",
                                    "flow"
                                ).thereturnstring = "pass",
                                Set(
                                    SelectedFlow,
                                    LookUp(
                                        Flows,
                                        Flow = SelectedFlow.Flow
                                    )
                                );
                                ClearCollect(
                                    flowRoles,
                                    PowerAutomateforAdmins.GetAdminFlowOwnerRole(
                                        SelectedFlow.'Flow Environment'.Name,
                                        SelectedFlow.Flow
                                    ).value
                                );
                                Notify(
                                    "User has been changed to viewer successfully",
                                    NotificationType.Success,
                                    1000
                                );
                                Select(refreshFlowRoles);
                                ,
                                Notify(
                                    "Change to viewer failed, try to set via product UX",
                                    NotificationType.Error,
                                    1000
                                )
                            );
                            UpdateContext({ctx_ShowSpinner: false});
                            ,
                            "refresh",
                            UpdateContext({var_ShowShimmer: true});
                            If(
                                !IsBlankOrError(SelectedFlow.'Flow Environment'),
                                ClearCollect(
                                    flowRoles,
                                    PowerAutomateforAdmins.GetAdminFlowOwnerRole(
                                        SelectedFlow.'Flow Environment'.Name,
                                        SelectedFlow.Flow
                                    ).value
                                )
                            );
                            Select(refreshFlowRoles);
                            UpdateContext({var_ShowShimmer: false});
                            
                        )
                    Theme: =AppThemeJson
                    Width: =Parent.Width
                    X: =0
                    Y: =0
                    ZIndex: =1

            DetailsFlowContainer As groupContainer.verticalAutoLayoutContainer:
                DropShadow: =DropShadow.Light
                Fill: =RGBA(255, 255, 255, 1)
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                ZIndex: =3

                conAppDetails As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    BorderStyle: =BorderStyle.None
                    Height: =150
                    LayoutMinHeight: =150
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =10
                    PaddingLeft: =10
                    PaddingRight: =10
                    PaddingTop: =10
                    RadiusBottomLeft: =4
                    RadiusBottomRight: =4
                    RadiusTopLeft: =4
                    RadiusTopRight: =4
                    Width: =Parent.Width
                    ZIndex: =1

                    conApp As groupContainer.verticalAutoLayoutContainer:
                        BorderStyle: =BorderStyle.None
                        FillPortions: =0
                        Height: =150
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingRight: =10
                        Width: =Parent.Width*0.3
                        ZIndex: =1

                        lblAppDetails As Label:
                            AlignInContainer: =AlignInContainer.Start
                            Alignment: =Align.Left
                            Color: =
                            DisplayMode: =DisplayMode.Edit
                            FontSize: =14
                            FontWeight: =FontWeight.Semibold
                            Height: =32
                            LayoutMinHeight: =32
                            LayoutMinWidth: =320
                            OnChange: =false
                            PaddingStart: =20
                            Text: ="Flow overview"
                            VerticalAlignment: =VerticalAlign.Middle
                            Width: =Parent.Width
                            Wrap: =false
                            X: =0
                            Y: =0
                            ZIndex: =1

                        Rectangle3_3 As rectangle:
                            BorderColor: =RGBA(166, 166, 166, 1)
                            BorderStyle: =BorderStyle.None
                            DisabledFill: =RGBA(166, 166, 166, 1)
                            Fill: =RGBA(230, 230, 230, 1)
                            FocusedBorderColor: =RGBA(0, 120, 212, 1)
                            Height: =1
                            HoverFill: =RGBA(230, 230, 230, 1)
                            PressedFill: =RGBA(230, 230, 230, 1)
                            Width: =Parent.Width
                            ZIndex: =2

                        lblAppName_2 As Label:
                            AlignInContainer: =AlignInContainer.Start
                            Alignment: =Align.Justify
                            AutoHeight: =true
                            Color: =
                            DisplayMode: =DisplayMode.Edit
                            FontSize: =12
                            FontWeight: =FontWeight.Semibold
                            Height: =Parent.Height
                            LayoutMinHeight: =32
                            LayoutMinWidth: =200
                            OnChange: =false
                            PaddingStart: =20
                            Text: =SelectedFlow.'Display Name'
                            VerticalAlignment: =VerticalAlign.Middle
                            Width: =Parent.Width
                            Wrap: =true
                            X: =0
                            Y: =0
                            ZIndex: =3

                    conDetails As groupContainer.horizontalAutoLayoutContainer:
                        BorderStyle: =BorderStyle.None
                        Height: =150
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        PaddingLeft: =5
                        ZIndex: =2

                        lblDetails_2 As Label:
                            AlignInContainer: =AlignInContainer.Start
                            Alignment: =Align.Justify
                            AutoHeight: =false
                            Color: =RGBA(0, 0, 0, 1)
                            DisplayMode: =DisplayMode.Edit
                            FontSize: =14
                            FontWeight: =FontWeight.Semibold
                            Height: =32
                            LayoutMinHeight: =32
                            LayoutMinWidth: =320
                            OnChange: =false
                            Text: ="Details"
                            Width: =Parent.Width
                            Wrap: =false
                            X: =0
                            Y: =0
                            ZIndex: =1

                        Rectangle3_4 As rectangle:
                            BorderColor: =RGBA(166, 166, 166, 1)
                            BorderStyle: =BorderStyle.None
                            DisabledFill: =RGBA(166, 166, 166, 1)
                            Fill: =RGBA(230, 230, 230, 1)
                            FocusedBorderColor: =RGBA(0, 120, 212, 1)
                            Height: =1
                            HoverFill: =RGBA(230, 230, 230, 1)
                            PressedFill: =RGBA(230, 230, 230, 1)
                            Width: =Parent.Width
                            ZIndex: =2

                        conAppDates_2 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.Start
                            BorderStyle: =BorderStyle.None
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =4
                            RadiusBottomRight: =4
                            RadiusTopLeft: =4
                            RadiusTopRight: =4
                            Width: =Parent.Width*1.0-10
                            ZIndex: =3

                            conCreatedOn_2 As groupContainer.verticalAutoLayoutContainer:
                                BorderStyle: =BorderStyle.None
                                Fill: =RGBA(255, 255, 255, 1)
                                FillPortions: =0
                                Height: =Parent.Height
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutMinHeight: =100
                                LayoutMinWidth: =100
                                LayoutMode: =LayoutMode.Auto
                                Width: =Parent.Width*0.2
                                ZIndex: =1

                                lblCreatedOn_2 As Label:
                                    Alignment: =Align.Justify
                                    Color: =
                                    DisplayMode: =DisplayMode.Edit
                                    FontWeight: =FontWeight.Semibold
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =320
                                    OnChange: =false
                                    Text: ="Created on"
                                    Width: =100
                                    Wrap: =false
                                    X: =0
                                    Y: =0
                                    ZIndex: =1

                                lblCreatedOnValue_2 As Label:
                                    AutoHeight: =true
                                    Color: =
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =320
                                    OnChange: =false
                                    Text: =Text(SelectedFlow.'Flow Created On' ,"[$-en-US]dd-mmm-yyyy")
                                    Width: =Parent.Width
                                    X: =0
                                    Y: =0
                                    ZIndex: =3

                            conModifiedOn_2 As groupContainer.verticalAutoLayoutContainer:
                                BorderStyle: =BorderStyle.None
                                Fill: =RGBA(255, 255, 255, 1)
                                FillPortions: =0
                                Height: =Parent.Height
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutMinHeight: =100
                                LayoutMinWidth: =90
                                LayoutMode: =LayoutMode.Auto
                                Width: =Parent.Width*0.2
                                ZIndex: =2

                                lblModifiedOn_2 As Label:
                                    Alignment: =Align.Justify
                                    Color: =
                                    DisplayMode: =DisplayMode.Edit
                                    FontWeight: =FontWeight.Semibold
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =320
                                    OnChange: =false
                                    Text: ="Modified On"
                                    Width: =Parent.Width
                                    X: =0
                                    Y: =0
                                    ZIndex: =1

                                lblModifiedOnValue_2 As Label:
                                    Color: =
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =320
                                    OnChange: =false
                                    Text: =Text(SelectedFlow.'Flow Modified On' ,"[$-en-US]dd-mmm-yyyy")
                                    Width: =Parent.Width
                                    Wrap: =false
                                    X: =0
                                    Y: =0
                                    ZIndex: =3

                            conDescription_2 As groupContainer.verticalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                BorderStyle: =BorderStyle.None
                                Fill: =RGBA(255, 255, 255, 1)
                                FillPortions: =0
                                Height: =Parent.Height
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                Width: =Parent.Width*0.6
                                ZIndex: =5

                                lblDescription_2 As Label:
                                    AlignInContainer: =AlignInContainer.Stretch
                                    Alignment: =Align.Justify
                                    Color: =
                                    DisplayMode: =DisplayMode.Edit
                                    FontWeight: =FontWeight.Semibold
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =320
                                    OnChange: =false
                                    Text: ="Description"
                                    Width: =320
                                    Wrap: =false
                                    X: =0
                                    Y: =0
                                    ZIndex: =1

                                lblDescriptionValue_2 As Label:
                                    AlignInContainer: =AlignInContainer.Start
                                    Alignment: =Align.Justify
                                    AutoHeight: =true
                                    Color: =
                                    DisplayMode: =DisplayMode.Edit
                                    FillPortions: =1
                                    Height: =Parent.Height
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =320
                                    OnChange: =false
                                    PaddingEnd: =10
                                    Text: =SelectedFlow.'Flow Description'
                                    VerticalAlignment: =VerticalAlign.Top
                                    Width: =320
                                    Wrap: =true
                                    X: =0
                                    Y: =0
                                    ZIndex: =3

                conSolFlowRoles_1 As groupContainer.verticalAutoLayoutContainer:
                    FillPortions: =2
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    RadiusBottomLeft: =4
                    RadiusBottomRight: =4
                    RadiusTopLeft: =4
                    RadiusTopRight: =4
                    ZIndex: =2

                    Rectangle3_5 As rectangle:
                        BorderColor: =RGBA(166, 166, 166, 1)
                        BorderStyle: =BorderStyle.None
                        DisabledFill: =RGBA(166, 166, 166, 1)
                        Fill: =RGBA(230, 230, 230, 1)
                        FocusedBorderColor: =RGBA(0, 120, 212, 1)
                        Height: =1
                        HoverFill: =RGBA(230, 230, 230, 1)
                        PressedFill: =RGBA(230, 230, 230, 1)
                        Width: =Parent.Width
                        ZIndex: =1

                    "dlFlowRoles As 'Fluent Details List (1.1.29)'.pcfdataset":
                        AccessibilityLabel: ="Flow Roles List"
                        AlignInContainer: =AlignInContainer.Stretch
                        columns_Items: |-
                            =Table(
                                {
                                    ColName: "UserIcon",
                                    ColDisplayName: "",
                                    ColCellType: "image",
                                    ColWidth: 40,
                                    //Parent.Width/6-200,
                                    ColResizable: true
                                },
                                {
                                    ColName: "UserName",
                                    ColDisplayName: "",
                                    ColWidth: Parent.Width / 6 - 70,
                                    ColResizable: true,
                                    ColRowHeader: true
                                },
                                {
                                    ColName: "RoleName",
                                    ColDisplayName: "",
                                    ColWidth: Parent.Width / 6 - 70,
                                    ColResizable: true
                                },
                                {
                                    ColName: "UserEmail",
                                    ColDisplayName: "",
                                    ColWidth: Parent.Width / 6 + 70,
                                    ColResizable: true
                                },
                                {
                                    ColName: "WarningMsg",
                                    ColDisplayName: "",
                                    ColWidth: Parent.Width / 6 + 150,
                                    ColResizable: true
                                },
                                {
                                    ColName: "UserType",
                                    ColDisplayName: "",
                                    ColWidth: Parent.Width /5,
                                    ColResizable: true
                                }
                            )
                        Compact: =true
                        DisplayMode: =DisplayMode.Edit
                        FillPortions: =1
                        HeaderVisible: =true
                        Height: =200
                        Items: =Sort(colFlowRoles,UserName)
                        LayoutMinHeight: =200
                        LayoutMinWidth: =200
                        OnChange: |-
                            =UpdateContext({TargetUserID: Self.Selected.UserId});
                            //UpdateContext({UserToUpdate: Self.Selected.UserEmail});
                            /*If(
                                (Self.EventName = "OnRowSelectionChange" && Self.Selected.RoleName <> "Owner" && Self.Selected.UserName <> "Group"),
                                UpdateContext({TargetUserID: Self.Selected.UserId});
                                UpdateContext({UserToUpdate: Self.Selected.UserEmail});
                                //If the selected user is a viewer, Remove Permission and Owner buttons will be added.
                            If(
                                    Self.Selected.RoleName = "CanView",
                                    ClearCollect(
                                        colCommandBarItems,
                                        colDefaultCommandItems
                                    );
                                    Collect(
                                        colCommandBarItems,
                                        {
                                            ItemKey: "changetoeditor",
                                            ItemDisplayName: "Make Editor",
                                            ItemIconName: "EditContact",
                                            ItemVisible: If(
                                                Self.Selected.UserId = GUID(FlowDerivedOwner) || Self.Selected.RoleName = "Owner" || Self.Selected.RoleName <> "User",
                                                false,
                                                true
                                            ),
                                            ItemEnabled: If(
                                                Self.Selected.UserId = GUID(FlowDerivedOwner) || Self.Selected.RoleName = "Owner" || Self.Selected.RoleName <> "User",
                                                false,
                                                true
                                            )
                                        },
                                        {
                                            ItemKey: "removepermission",
                                            ItemDisplayName: "Remove Permission",
                                            ItemIconName: "UserRemove"
                                        }
                                    ),
                                    ClearCollect(
                                        colCommandBarItems,
                                        colDefaultCommandItems
                                    );
                                    Collect(
                                        colCommandBarItems,
                                        {
                                            ItemKey: "makeowner",
                                            ItemDisplayName: "Make Owner",
                                            ItemIconName: "PermissionsSolid"
                                        },
                                        {
                                            ItemKey: "changetoviewer",
                                            ItemDisplayName: "Make Viewer",
                                            ItemIconName: "View"
                                        },
                                        {
                                            ItemKey: "removepermission",
                                            ItemDisplayName: "Remove Permission",
                                            ItemIconName: "UserRemove"
                                        }
                                    );
                                ),
                                ClearCollect(
                                    colCommandBarItems,
                                    colDefaultCommandItems
                                );
                                
                            )*/
                        OnSelect: =
                        RaiseOnRowSelectionChangeEvent: =true
                        SelectRowsOnFocus: =true
                        Theme: =AppThemeJson
                        Width: =200
                        X: =0
                        Y: =0
                        ZIndex: =2

                        UserId As pcfDataField.textualColumn:
                            FieldDisplayName: ="name"
                            FieldName: ="UserId"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =1
                            ZIndex: =3

                        RoleName As pcfDataField.textualColumn:
                            FieldDisplayName: ="type"
                            FieldName: ="RoleName"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =3
                            ZIndex: =5

                        UserName As pcfDataField.textualColumn:
                            FieldDisplayName: ="id"
                            FieldName: ="UserName"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =4
                            ZIndex: =6

                        UserIcon As pcfDataField.textualColumn:
                            FieldDisplayName: ="UserIcon"
                            FieldName: ="UserIcon"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =5
                            ZIndex: =9

                        WarningMsg1 As pcfDataField.textualColumn:
                            FieldDisplayName: ="WarningMsg"
                            FieldName: ="WarningMsg"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =5
                            ZIndex: =10

                        PrincipalType1 As pcfDataField.textualColumn:
                            FieldDisplayName: ="PrincipalType"
                            FieldName: ="PrincipalType"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =6
                            ZIndex: =11

                        UserEmail2 As pcfDataField.textualColumn:
                            FieldDisplayName: ="UserEmail"
                            FieldName: ="UserEmail"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =7
                            ZIndex: =62

                        UserType3 As pcfDataField.textualColumn:
                            FieldDisplayName: ="UserType"
                            FieldName: ="UserType"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =8
                            ZIndex: =63

            lblInfo_1 As label:
                Align: =Align.Justify
                BorderColor: =RGBA(0, 18, 107, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Fill: =RGBA(244, 244, 244, 1)
                Font: =Font.'Segoe UI'
                Height: =50
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =10
                Text: |-
                    ="Changing flow ownership is not possible in the product, so changing it here only changes it in the context of your CoE Toolkit. It is stored and used as a property of the CoE Flow table: DerivedOwner"
                Width: =Parent.Width-20
                Y: =1041
                ZIndex: =4

        MailFlowScreenContainer As groupContainer.verticalAutoLayoutContainer:
            BorderStyle: =BorderStyle.None
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingBottom: =20
            PaddingLeft: =20
            PaddingRight: =20
            PaddingTop: =20
            RadiusBottomLeft: =4
            RadiusBottomRight: =4
            RadiusTopLeft: =4
            RadiusTopRight: =4
            Visible: =showEmailPanel
            Width: |-
                =//If(App.ActiveScreen.Size > ScreenSize.Small, 350, Parent.Width)
                350
            ZIndex: =2

            mailSpinner As Spinner:
                BasePaletteColor: =
                DisplayMode: =DisplayMode.Edit
                FontColor: =
                Height: =Parent.Height
                Label: =var_Spinnerlabel
                LayoutMinHeight: =200
                LayoutMinWidth: =200
                Visible: =var_ShowSpinner
                Width: =Parent.Width
                X: =0
                Y: =0
                ZIndex: =1

            MailContentContainer As groupContainer.verticalAutoLayoutContainer:
                BorderStyle: =BorderStyle.None
                Height: =100
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                Width: =Parent.Width
                ZIndex: =2

                Container8_1 As groupContainer.horizontalAutoLayoutContainer:
                    BorderStyle: =BorderStyle.None
                    FillPortions: =0
                    Height: =32
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    RadiusBottomLeft: =4
                    RadiusBottomRight: =4
                    RadiusTopLeft: =4
                    RadiusTopRight: =4
                    Width: |
                        =500
                    ZIndex: =1

                    TextCanvas1_1 As Text:
                        BorderColor: =""
                        BorderStyle: =""
                        DisplayMode: =DisplayMode.Edit
                        FillPortions: =1
                        FontColor: =
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =16
                        Text: ="Send Email"
                        Weight: ='TextCanvas.Weight'.Bold
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =1

                    "Icon1_2 As 'Fluent Icon (1.1.29)'":
                        AlignInContainer: =AlignInContainer.Start
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        IconName: ="Cancel"
                        LayoutMinHeight: =200
                        LayoutMinWidth: =200
                        OnChange: |-
                            =UpdateContext({showEmailPanel: false});
                        Theme: =AppThemeJson
                        Tooltip: ="Close"
                        Width: =32
                        X: =0
                        Y: =0
                        ZIndex: =2

                ToLineLabelContainer As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    FillPortions: =0
                    Height: =35
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Width: =Parent.Width-20 
                    ZIndex: =2

                    Label_ToLine As Label:
                        Color: =
                        DisplayMode: =DisplayMode.Edit
                        FillPortions: =1
                        FontWeight: =FontWeight.Semibold
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =100
                        OnChange: =false
                        Text: ="To"
                        Width: =100
                        X: =385
                        Y: =124
                        ZIndex: =7

                    "Checkbox_Editors As 'Check box'":
                        BoxSide: ='Checkbox.BoxSide'.Start
                        Checked: =var_ShowEditors
                        CheckedCheckboxBackgroundFill: =//ColorValue(AppTheme.palette.themePrimary)
                        CheckedCheckboxBorderColor: =
                        CheckmarkFill: =
                        Color: =
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        HoverCheckboxBackgroundFill: =
                        HoverCheckboxBorderColor: =
                        Label: ="Owners"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =100
                        OnCheck: |
                            =ClearCollect(
                                DefaultToLineUsers,
                                ToLine.SelectedPeople
                            );
                            /*ForAll(Filter(roleAssignmentsCollection, Role <> "CanView"), 
                                Collect(DefaultToLineUsers, {PersonaKey: Email,  PersonaName: Name, PersonaImgUrl: Image, PersonaRole: "Editor"}));*/
                            ForAll(
                                Filter(
                                    colFlowRoles,
                                    RoleName <> "CanView"
                                ),
                                Collect(
                                    DefaultToLineUsers,
                                    {
                                        PersonaKey: UserEmail,
                                        PersonaName: UserName,
                                        PersonaImgUrl: UserIcon,
                                        PersonaRole: "Editor"
                                    }
                                )
                            );
                        OnUncheck: |-
                            =ClearCollect(DefaultToLineUsers, ToLine.SelectedPeople);
                            RemoveIf(DefaultToLineUsers, PersonaRole="Editor");
                        UncheckedCheckboxBackgroundFill: =
                        UncheckedCheckboxBorderColor: =
                        Visible: =true
                        Width: =100
                        X: =0
                        Y: =124
                        ZIndex: =8

                    "Checkbox_Viewers As 'Check box'":
                        BoxSide: ='Checkbox.BoxSide'.Start
                        Checked: =var_ShowViewers
                        CheckedCheckboxBackgroundFill: |-
                            =ColorValue("#0078d4")
                        CheckedCheckboxBorderColor: =
                        CheckmarkFill: =
                        Color: =
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        HoverCheckboxBackgroundFill: =
                        HoverCheckboxBorderColor: =
                        Label: ="Users"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =100
                        OnCheck: |
                            =ClearCollect(DefaultToLineUsers, ToLine.SelectedPeople);
                            ForAll(Filter(colFlowRoles, RoleName = "CanView"), 
                                Collect(DefaultToLineUsers, {PersonaKey: UserEmail, PersonaName: UserName, PersonaImgUrl: UserIcon, PersonaRole: "Viewer"}));
                        OnUncheck: |-
                            =ClearCollect(DefaultToLineUsers, ToLine.SelectedPeople);
                            RemoveIf(DefaultToLineUsers, PersonaRole="Viewer");
                        UncheckedCheckboxBackgroundFill: =
                        UncheckedCheckboxBorderColor: =
                        Visible: =true
                        Width: =75
                        X: =0
                        Y: =124
                        ZIndex: =9

                "ToLine As 'Fluent PeoplePicker (1.1.29) Preview'.pcfdataset":
                    AccessibilityLabel: ="Send To Line"
                    DisplayMode: =DisplayMode.Edit
                    Error: =false
                    Height: |-
                        =32 + If(
                            RoundDown(
                                CountRows(ToLine.SelectedPeople) / 2,
                                0
                            ) > 0,
                            8,
                            0
                        ) + RoundDown(
                            CountRows(ToLine.SelectedPeople) / 2,
                            0
                        ) * 32
                    Items: =DefaultToLineUsers
                    LayoutMinHeight: =200
                    LayoutMinWidth: =200
                    MaxPeople: =100
                    OnBlur: =false
                    OnChange: =false
                    OnFocus: =false
                    OnSearch: |-
                        =ClearCollect(
                            UserCollection,
                            AddColumns(
                                    Office365Users.SearchUser(
                                        {
                                            searchTerm: Self.SearchText,
                                            top: 500
                                        }
                                    ),
                                SuggestionImgUrl,
                                Substitute(
                                    JSON(
                                        Office365Users.UserPhotoV2(Id),
                                        JSONFormat.IncludeBinaryData
                                    ),
                                    """",
                                    ""
                                ),
                                SuggestionKey,
                                UserPrincipalName,
                                SuggestionName,
                                DisplayName,
                                SuggestionRole,
                                ""
                            )
                        )
                    OnSelect: =false
                    PeoplePickerType: ='PowerCAT.PeoplePicker.PeoplePickerType'.NormalPeoplePicker
                    ShowSecondaryText: =false
                    Suggestions_Items: =UserCollection
                    Theme: =AppThemeJson
                    Tooltip: ="Select mail recipients"
                    Width: =Parent.Width-20
                    X: =385
                    Y: =156
                    ZIndex: =3

                Label_Subject As Label:
                    Color: =
                    DisplayMode: =DisplayMode.Edit
                    Height: =45
                    LayoutMinHeight: =32
                    LayoutMinWidth: =250
                    OnChange: =false
                    Text: ="Subject"
                    VerticalAlignment: =VerticalAlign.Bottom
                    Width: =Parent.Width
                    X: =385
                    Y: |
                        =//220
                        ToLine.Y+ToLine.Height+10
                    ZIndex: =4

                "SubjectLine As 'Text box'":
                    ColorBackground: =
                    ColorText: =
                    DisplayMode: =DisplayMode.Edit
                    Height: =32
                    LayoutMinHeight: =32
                    LayoutMinWidth: =250
                    Value: |-
                        ="Concerning Flow: " & SelectedFlow.'Display Name'
                    Width: =Parent.Width-20
                    X: =385
                    Y: =252
                    ZIndex: =5

                Label_Message As Label:
                    Color: =
                    DisplayMode: =DisplayMode.Edit
                    Height: =45
                    LayoutMinHeight: =32
                    LayoutMinWidth: =250
                    OnChange: =false
                    Text: ="Message"
                    VerticalAlignment: =VerticalAlign.Bottom
                    Width: =Parent.Width
                    X: =385
                    Y: =311
                    ZIndex: =6

                RichTextEditor1 As richTextEditor:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    Default: |-
                        ="<strong>Link to Flow: </strong> <a href=" & SelectFlowLink & ">" & SelectedFlow.'Display Name' & "</a>"
                    FillPortions: =1
                    LayoutMinWidth: =250
                    Width: =Parent.Width-20
                    X: =385
                    Y: =365
                    ZIndex: =7

                EmailCommandBarContainer As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    FillPortions: =0
                    Height: =50
                    LayoutAlignItems: =LayoutAlignItems.End
                    LayoutGap: =10
                    LayoutJustifyContent: =LayoutJustifyContent.End
                    LayoutMinHeight: =43
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Width: =Parent.Width-20 
                    ZIndex: =8

                    ButtonCanvas1_1 As Button:
                        Align: =""
                        AlignInContainer: =AlignInContainer.End
                        Appearance: ='ButtonCanvas.Appearance'.Primary
                        BasePaletteColor: =
                        BorderColor: =""
                        BorderStyle: =""
                        DisabledBorderColor: =""
                        DisplayMode: |-
                            =If(
                                CountRows(ToLine.SelectedPeople) > 0,
                                DisplayMode.Edit,
                                DisplayMode.Disabled
                            )
                        FocusedBorderColor: =""
                        FontColor: =
                        Height: =32
                        HoverBorderColor: =""
                        Icon: =""
                        IconRotation: =0
                        IconStyle: ="Outline"
                        Layout: ="Icon before"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |+
                            =UpdateContext({var_ShowSpinner: true,var_Spinnerlabel:"Sending Mail"});
                            ForAll(
                                ToLine.SelectedPeople,
                                Office365Outlook.SendEmailV2(
                                    PersonaKey,
                                    SubjectLine.Value,
                                    RichTextEditor1.HtmlText,
                                    {Importance: "Normal"}
                                )
                            );
                            Notify(
                                "The app users have been emailed successfully.",
                                NotificationType.Success
                            );
                            UpdateContext({var_ShowSpinner: false});
                            
                        PressedBorderColor: =""
                        Text: ="Send"
                        VerticalAlign: =""
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =4

        ManagePermissionContainer As groupContainer.verticalAutoLayoutContainer:
            DropShadow: =DropShadow.Light
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingBottom: =20
            PaddingLeft: =20
            PaddingRight: =20
            PaddingTop: =20
            RadiusBottomLeft: =4
            RadiusBottomRight: =4
            RadiusTopLeft: =4
            RadiusTopRight: =4
            Visible: =showAddUsers
            Width: =If(App.ActiveScreen.Size > ScreenSize.Small, 420, Parent.Width)
            ZIndex: =4

            spinnerPermSol_1 As Spinner:
                BasePaletteColor: =
                DisplayMode: =DisplayMode.Edit
                FontColor: =
                Height: =Parent.Height
                Label: =var_Spinnerlabel
                LayoutMinHeight: =200
                LayoutMinWidth: =200
                Visible: |
                    =var_ShowSpinner
                Width: =Parent.Width
                X: =0   
                Y: =0
                ZIndex: =1

            conAddPermissionsFlowDetails As groupContainer.verticalAutoLayoutContainer:
                Height: =100
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =8
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                ZIndex: =2

                SubtitleContainer_1 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    FillPortions: =0
                    Height: =32
                    LayoutGap: =5
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Width: =Parent.Width
                    X: |-
                        =//40
                        0
                    Y: |-
                        =//40
                        0
                    ZIndex: =2

                    "icoBackPrev_1 As 'Fluent Icon (1.1.29)'":
                        DisplayMode: =DisplayMode.Edit
                        FontSize: =18
                        Height: =32
                        IconName: ="Back"
                        IconSize: =18
                        IconType: ='PowerCAT.Icon.IconType'.IconButon
                        LayoutMinHeight: =200
                        LayoutMinWidth: =200
                        OnChange: |+
                            =UpdateContext({var_pivotkey: "tabMembers"});
                            
                        Theme: =AppThemeJson
                        Tooltip: ="Back"
                        Visible: =If(var_pivotkey = "tabAddUser" || var_pivotkey = "tabAddGroup",true,false)
                        Width: =32
                        X: =40
                        Y: =40
                        ZIndex: =1

                    lblPanelSubtitle_1 As Label:
                        Alignment: =Align.Justify
                        Color: =
                        DisplayMode: =DisplayMode.Edit
                        FillPortions: =1
                        FontSize: =12
                        FontWeight: =FontWeight.Semibold
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =10
                        OnChange: =false
                        Text: |-
                            =If(
                                var_pivotkey = "tabAddUser",
                                "Grant permission to a user",
                                If(
                                    var_pivotkey = "tabAddGroup",
                                    "Grant permission to a group",
                                    "List of members"
                                )
                            )
                        Width: =Parent.Width - Parent.PaddingLeft
                        X: =0
                        Y: =0
                        ZIndex: =2

                    "Icon1_3 As 'Fluent Icon (1.1.29)'":
                        AlignInContainer: =AlignInContainer.Start
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        IconName: ="Cancel"
                        LayoutMinHeight: =200
                        LayoutMinWidth: =200
                        OnChange: |-
                            =UpdateContext({showEmailPanel: false,showAddUsers: false});
                        Theme: =AppThemeJson
                        Tooltip: ="Close"
                        Width: =32
                        X: =0
                        Y: =0
                        ZIndex: =3

                Container10 As groupContainer.verticalAutoLayoutContainer:
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    RadiusBottomLeft: =4
                    RadiusBottomRight: =4
                    RadiusTopLeft: =4
                    RadiusTopRight: =4
                    Visible: |+
                        =If(
                            var_pivotkey = "tabMembers" && !var_ShowShimmer,
                            true,
                            false
                        )
                        
                    ZIndex: =3

                    "AddEditUserCommandBar_1 As 'Fluent Command Bar (1.1.29)'.pcfdataset":
                        DisplayMode: =DisplayMode.Edit
                        Height: =40  
                        Items: |-
                            =/*If(
                                PermissionsDetailsList_1.Visible && IsBlankOrError(WorkflowEntityId),
                                Table(
                                    {
                                        ItemKey: "addedituser",
                                        ItemDisplayName: If(
                                            !IsBlankOrError(WorkflowEntityId),
                                            "Add Owner",
                                            If(
                                                !IsBlank(SelectedUserID) && PermissionsDetailsList_1.Selected.RoleName <> "Owner",
                                                "Change Permission",
                                                "Add"
                                            )
                                        ),
                                        ItemIconName: "AddFriend"
                                    },
                                    {
                                        ItemKey: "removeuser",
                                        ItemDisplayName: "Remove",
                                        ItemIconName: "UserRemove",
                                        ItemEnabled: If(
                                            !IsBlankOrError(WorkflowEntityId),
                                            false,
                                            If(
                                                (!IsBlank(SelectedUserID) && PermissionsDetailsList_1.Selected.RoleName <> "Owner"),
                                                true,
                                                false
                                            )
                                        )
                                    }
                                )
                            )*/
                            If(
                                PermissionsDetailsList_1.Visible,
                                Table(
                                    {
                                        ItemKey: "addedituser",
                                        ItemDisplayName: If(
                                            !IsBlank(SelectedUserID) && PermissionsDetailsList_1.Selected.RoleName <> "Owner",
                                            "Change Permission",
                                            "Add"
                                        ),
                                        ItemIconName: "AddFriend"
                                    },
                                    {
                                        ItemKey: "removeuser",
                                        ItemDisplayName: "Remove",
                                        ItemIconName: "UserRemove",
                                        ItemEnabled: If(
                                            (!IsBlank(SelectedUserID) && PermissionsDetailsList_1.Selected.RoleName <> "Owner"),
                                            true,
                                            false
                                        )
                                    }
                                )
                            )
                        LayoutMinHeight: =200
                        LayoutMinWidth: =200
                        OnSelect: |
                            =Switch(
                                Self.Selected.ItemKey,
                                "addedituser",
                                If(
                                    !IsBlank(SelectedUserID) && PermissionsDetailsList_1.Selected.PrincipalType = "Group",
                            //if group
                            //Reset(SelectGroup_1);
                                    UpdateContext({var_pivotkey: "tabAddGroup"});
                                    ,
                                    //not group
                                    If(
                                        IsBlank(SelectedUserID) || PermissionsDetailsList_1.Selected.RoleName = "Owner",
                                        ClearCollect(
                                            DefaultUserCollection,
                                            User()
                                        );
                                        ClearCollect(
                                            DefaultUserCollection,
                                            Blank()
                                        ),
                                        ClearCollect(
                                            DefaultUserTempCollection,
                                            Office365Users.UserProfile(SelectedUserID)
                                        );
                                        ClearCollect(
                                            DefaultUserCollection,
                                            AddColumns(
                                                DefaultUserTempCollection,
                                                PersonaKey,
                                                Mail,
                                                PersonaRole,
                                                JobTitle,
                                                PersonaName,
                                                DisplayName,
                                                PersonaImgUrl,
                                    //Get base64 image data
                                                Substitute(
                                                    JSON(
                                                        Office365Users.UserPhotoV2(SelectedUserID),
                                                        JSONFormat.IncludeBinaryData
                                                    ),
                                                    """",
                                                    ""
                                                )
                                            )
                                        );
                                    );
                                    UpdateContext({var_pivotkey: "tabAddUser"});
                                );
                                ,
                                "addgroup",
                                UpdateContext({var_pivotkey: "tabAddGroup"});
                                ,
                                "removeuser",
                                UpdateContext(
                                    {
                                        var_Spinnerlabel: "Removing User...",
                                        var_ShowSpinner: true
                                    }
                                );
                                UpdateContext(
                                    {
                                        var_ResponseMessage: 'HELPER-ObjectOperations'.Run(
                                            SelectedUserID,
                                            SelectedFlow.Flow,
                                            SelectedFlow.'Flow Environment'.Environment,
                                            "removeuser",
                                            "flow"
                                        ).thereturnstring
                                    }
                                );
                                If(
                                    var_ResponseMessage <> "pass",
                                    Notify(
                                        var_ResponseMessage,
                                        NotificationType.Error
                                    ),
                                    Notify(
                                        "Permission removed",
                                        NotificationType.Success
                                    );
                                );
                                // Update Permission detail list
                            UpdateContext(
                                    {
                                        var_ShowSpinner: false,
                                        var_ShowShimmer: true
                                    }
                                );
                                If(
                                    var_ResponseMessage = "pass",
                                    //update permissions table
                                    Select(refreshFlowRoles);
                                );
                                UpdateContext({var_ShowShimmer: false});
                                
                            );
                        Theme: =AppThemeJson
                        Visible: |-
                            =PermissionsDetailsList_1.Visible
                            /*If(
                                var_pivotkey = "tabAddGroup" || var_pivotkey = "tabAddUser",
                                false,
                                true
                            )*/
                        Width: |-
                            =Parent.Width
                            //PermissionsDetailsList_1.Width
                        X: =0
                        Y: |-
                            =//Parent.Height - Self.Height+10
                            Parent.Height - Self.Height-5
                            //pagingContainer_1.Y+pagingContainer_1.Height+5
                        ZIndex: =1

                    Rectangle2_1 As rectangle:
                        AlignInContainer: =AlignInContainer.Stretch
                        BorderColor: =RGBA(166, 166, 166, 1)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        DisabledFill: =RGBA(166, 166, 166, 1)
                        Fill: =RGBA(122, 138, 143, 0.12)
                        FocusedBorderColor: =RGBA(0, 120, 212, 1)
                        Height: =1
                        HoverFill: =RGBA(0, 120, 212, 1)
                        PressedFill: =RGBA(0, 120, 212, 1)
                        ZIndex: =2

                    "PermissionsDetailsList_1 As 'Fluent Details List (1.1.29)'.pcfdataset":
                        AlternateRowColor: =
                        columns_Items: |-
                            =Table(
                                {
                                    ColName: "UserType",
                                    ColDisplayName: "UserType",
                                    ColIsBold: true,
                                    ColWidth: 50
                                },
                                {
                                    ColName: "UserIcon",
                                    ColDisplayName: "",
                                    ColImageWidth: 37,
                                    ColWidth: 30,
                                    ColPaddingTop: 5,
                                    ColCellType: "image"
                                },
                                {
                                    ColName: "UserName",
                                    ColDisplayName: "Name",
                                    ColWidth: Parent.Width - 200,
                                    ColIsBold: true,
                                    ColSortable: true,
                                    ColPaddingTop: 5
                                },
                                {
                                    ColName: "RoleName",
                                    ColDisplayName: "Role",
                                    ColIsBold: false,
                                    ColSortable: true,
                                    ColSubTextRow: true,
                                    ColShowAsSubTextOf: "UserName"
                                },
                                {
                                    ColName: "UserEmail",
                                    ColDisplayName: "Email",
                                    ColIsBold: false,
                                    ColSortable: true,
                                    ColSubTextRow: false,
                                    ColShowAsSubTextOf: "UserName"
                                }
                            )
                        Compact: =true
                        CurrentSortColumn: =ctxSortCol
                        CurrentSortDirection: |-
                            =If(ctxSortAsc,
                                'PowerCAT.FluentDetailsList.CurrentSortDirection'.Ascending,
                                'PowerCAT.FluentDetailsList.CurrentSortDirection'.Descending) 
                        DisplayMode: =DisplayMode.Edit
                        FillPortions: =1
                        HeaderVisible: =false
                        Height: =100
                        InputEvent: =varGridEvent
                        Items: |-
                            =SortByColumns(
                                colFlowRoles,
                                ctxSortCol,
                                If(
                                    ctxSortAsc,
                                    SortOrder.Ascending,
                                    SortOrder.Descending
                                )
                            )
                        LargeDatasetPaging: =false
                        LayoutMinHeight: =200
                        LayoutMinWidth: =200
                        OnChange: |
                            =/* Runs when selected row changes and control property 'Raise OnRowSelection event' is true */
                            If(
                                Self.EventName = "OnRowSelectionChange",
                                If(
                                    !IsBlank(Self.EventRowKey),
                                    UpdateContext({SelectedUserID: PermissionsDetailsList_1.Selected.UserId}),
                                    UpdateContext({SelectedUserID: Blank()})
                                );
                                
                            );
                            If(
                                Self.EventName = "Sort",
                                UpdateContext(
                                    {
                                        ctxSortCol: Self.SortEventColumn,
                                        ctxSortAsc: If(
                                            Self.SortEventDirection = 'PowerCAT.FluentDetailsList.SortEventDirection'.Ascending,
                                            true,
                                            false
                                        )
                                    }
                                )
                            );
                        PageSize: =14
                        RaiseOnRowSelectionChangeEvent: =true
                        RecordKey: =""
                        SelectionAlwaysVisible: =true
                        SelectionType: ='PowerCAT.FluentDetailsList.SelectionType'.Single
                        SelectRowsOnFocus: =false
                        Theme: =AppThemeJson
                        Visible: |+
                            =If(
                                var_pivotkey = "tabMembers" && !var_ShowShimmer,
                                true,
                                false
                            )
                            
                        Width: |
                            =Parent.Width - Parent.PaddingLeft/1.4
                        X: =0
                        Y: =0
                        ZIndex: =3

                        UserIcon1 As pcfDataField.textualColumn:
                            FieldDisplayName: ="UserIcon"
                            FieldName: ="UserIcon"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =4
                            ZIndex: =57

                        UserEmail1 As pcfDataField.textualColumn:
                            FieldDisplayName: ="UserEmail"
                            FieldName: ="UserEmail"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =7
                            ZIndex: =58

                        UserName1 As pcfDataField.textualColumn:
                            FieldDisplayName: ="UserName"
                            FieldName: ="UserName"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =5
                            ZIndex: =59

                        RoleName1 As pcfDataField.textualColumn:
                            FieldDisplayName: ="RoleName"
                            FieldName: ="RoleName"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =6
                            ZIndex: =60

                        UserType2 As pcfDataField.textualColumn:
                            FieldDisplayName: ="UserType"
                            FieldName: ="UserType"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =5
                            ZIndex: =61

                        PrincipalType2 As pcfDataField.textualColumn:
                            FieldDisplayName: ="PrincipalType"
                            FieldName: ="PrincipalType"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =6
                            ZIndex: =64

                        UserId2 As pcfDataField.textualColumn:
                            FieldDisplayName: ="UserId"
                            FieldName: ="UserId"
                            FieldType: ="g"
                            FieldVariantName: ="textualColumn"
                            Order: =7
                            ZIndex: =65

                        WarningMsg2 As pcfDataField.textualColumn:
                            FieldDisplayName: ="WarningMsg"
                            FieldName: ="WarningMsg"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =8
                            ZIndex: =66

                    pagingContainer_1 As groupContainer.horizontalAutoLayoutContainer:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        DropShadow: =DropShadow.Light
                        FillPortions: =0
                        Height: =35
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        LayoutMode: =LayoutMode.Auto
                        RadiusBottomLeft: =4
                        RadiusBottomRight: =4
                        RadiusTopLeft: =4
                        RadiusTopRight: =4
                        Visible: =PermissionsDetailsList_1.Visible
                        Width: =PermissionsDetailsList_1.Width
                        X: |-
                            =//PermissionsDetailsList.Width + PermissionsDetailsList.X - Self.Width
                            0
                        ZIndex: =4

                        "icoFirst_1 As 'Fluent Icon (1.1.29)'":
                            DisplayMode: =If(PermissionsDetailsList_1.HasPreviousPage,DisplayMode.Edit,DisplayMode.Disabled)
                            Height: =35
                            IconName: ="Previous"
                            LayoutMinHeight: =200
                            LayoutMinWidth: =200
                            OnChange: =Set(varGridEvent,"LoadFirstPage" & Text(Rand()));
                            Theme: =AppThemeJson
                            Tooltip: ="First Page"
                            Width: =35
                            X: =0
                            Y: =0
                            ZIndex: =1

                        "icoBack_1 As 'Fluent Icon (1.1.29)'":
                            DisplayMode: |-
                                =If(
                                    PermissionsDetailsList_1.HasPreviousPage,
                                    DisplayMode.Edit,
                                    DisplayMode.Disabled
                                )
                            Height: =35
                            IconName: ="Back"
                            LayoutMinHeight: =200
                            LayoutMinWidth: =200
                            OnChange: =Set(varGridEvent,"LoadPreviousPage" & Text(Rand()));
                            Theme: =AppThemeJson
                            Tooltip: ="Previous"
                            Width: =35
                            X: =icoFirst_1.X+icoFirst_1.Width
                            Y: =0
                            ZIndex: =2

                        lblPageCount_1 As label:
                            Align: =Align.Center
                            AlignInContainer: =AlignInContainer.Stretch
                            BorderColor: =RGBA(0, 0,0,0)
                            BorderStyle: =BorderStyle.None
                            Color: =//ColorValue(AppTheme.palette.neutralPrimary)
                            DisabledColor: =RGBA(166, 166, 166, 1)
                            FillPortions: =1
                            Font: =Font.'Segoe UI'
                            Height: =24
                            LayoutMinHeight: =24
                            Size: =8
                            Text: ="Page " & PermissionsDetailsList_1.PageNumber
                            Visible: =PermissionsDetailsList_1.Visible
                            Width: =35  
                            X: =icoBack_1.X+icoBack_1.Width
                            ZIndex: =3

                        "icoNext_1 As 'Fluent Icon (1.1.29)'":
                            DisplayMode: |-
                                =If(
                                    PermissionsDetailsList_1.HasNextPage,
                                    DisplayMode.Edit,
                                    DisplayMode.Disabled
                                )
                            Height: =35
                            IconName: ="Forward"
                            LayoutMinHeight: =200
                            LayoutMinWidth: =200
                            OnChange: =Set(varGridEvent,"LoadNextPage" & Text(Rand()));
                            Theme: =AppThemeJson
                            Tooltip: ="Next Page"
                            Width: =35
                            X: =lblPageCount_1.X + lblPageCount_1.Width
                            Y: =0
                            ZIndex: =4

                        "icoNext_2 As 'Fluent Icon (1.1.29)'":
                            DisplayMode: |-
                                =If(
                                    PermissionsDetailsList_1.HasNextPage,
                                    DisplayMode.Edit,
                                    DisplayMode.Disabled
                                )
                            Height: =35
                            IconName: ="Next"
                            LayoutMinHeight: =200
                            LayoutMinWidth: =200
                            OnChange: =Set(varGridEvent,"LoadNextPage" & Text(Rand()));
                            Theme: =AppThemeJson
                            Tooltip: ="Next Page"
                            Width: =35
                            X: =lblPageCount_1.X + lblPageCount_1.Width
                            Y: =0
                            ZIndex: =5

                    "PermissionsDetailsListShimmer_1 As 'Fluent Shimmer (1.1.29) Preview'.pcfdataset":
                        DisplayMode: =DisplayMode.Edit
                        Height: =PermissionsDetailsList_1.Height
                        Items: |-
                            =Table({
                                    ItemWidth: "14",
                                    ItemHeight: 12,
                                    ItemType: "line"
                                },
                                {
                                    ItemWidth: "5",
                                    ItemHeight: 10,
                                    ItemType: "gap"
                                },
                                {
                                    ItemWidth: "120",
                                    ItemHeight: 5,
                                    ItemType: "line"
                                }
                            )
                        LayoutMinHeight: =200
                        LayoutMinWidth: =200
                        RowCount: =3
                        SpacebetweenShimmer: ='PowerCAT.Shimmer.SpacebetweenShimmer'.'0px'
                        Theme: =AppThemeJson
                        Visible: =If(var_pivotkey = "tabMembers" && var_ShowShimmer,true,false)   
                        Width: =PermissionsDetailsList_1.Width
                        X: |-
                            =//PermissionsDetailsList.X
                            0
                        Y: =PermissionsDetailsList_1.Y
                        ZIndex: =5

                AddUsersContainer_1 As groupContainer.verticalAutoLayoutContainer:
                    Height: =Parent.Height
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutGap: =5
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Visible: =If(var_pivotkey = "tabAddUser",true,false)
                    Width: =Parent.Width
                    ZIndex: =4

                    lblAddUsers_5 As Label:
                        Color: =
                        DisplayMode: =DisplayMode.Edit
                        FontSize: =11
                        FontWeight: =FontWeight.Semibold
                        Height: =30
                        LayoutMinHeight: =32
                        LayoutMinWidth: =320
                        OnChange: =false
                        Text: ="Select user"
                        Width: =Parent.Width - Parent.PaddingLeft * 2
                        X: =24
                        Y: =102
                        ZIndex: =2

                    "PeoplePickerFlowDetails As 'Fluent PeoplePicker (1.1.29) Preview'.pcfdataset":
                        AlignInContainer: =AlignInContainer.Stretch
                        DisplayMode: =DisplayMode.Edit
                        Error: =false
                        Height: =60
                        Items: =DefaultUserCollection
                        LayoutMinHeight: =200
                        LayoutMinWidth: =200
                        MaxPeople: =1
                        OnBlur: =false
                        OnFocus: =false
                        OnSearch: |
                            =IfError(
                                Office365Users.SearchUserV2(
                                    {
                                        searchTerm: Self.SearchText,
                                        top: 500
                                    }
                                ),
                                Error(FirstError)
                            );
                            ClearCollect(
                                UserCollection,
                                AddColumns(
                                    Office365Users.SearchUserV2(
                                        {
                                            searchTerm: Self.SearchText,
                                            top: 500
                                        }
                                    ).value,
                                    SuggestionImgUrl,
                                    Substitute(
                                        JSON(
                                            Office365Users.UserPhotoV2(Id),
                                            JSONFormat.IncludeBinaryData
                                        ),
                                        """",
                                        ""
                                    ),
                                    SuggestionKey,
                                    Id,
                                    SuggestionName,
                                    DisplayName,
                                    SuggestionRole,
                                    JobTitle
                                )
                            );
                        ShowSecondaryText: =true
                        Suggestions_Items: =UserCollection
                        Theme: =AppThemeJson
                        Width: =320
                        X: =20
                        Y: =0
                        ZIndex: =3

                        DisplayName5_2 As pcfDataField.textualColumn:
                            FieldDisplayName: ="DisplayName"
                            FieldName: ="DisplayName"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =3
                            ZIndex: =55

                        Email2_2 As pcfDataField.textualColumn:
                            FieldDisplayName: ="Email"
                            FieldName: ="Email"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =2
                            ZIndex: =56

                    lblSelectedUserRole_3 As Label:
                        Color: =
                        DisplayMode: =DisplayMode.Edit
                        FontSize: =11
                        FontWeight: =FontWeight.Semibold
                        Height: =35
                        LayoutMinHeight: =32
                        LayoutMinWidth: =320
                        OnChange: =false
                        Text: ="Select user role"
                        Width: =Parent.Width - Parent.PaddingLeft * 2
                        X: =24
                        Y: =88
                        ZIndex: =4

                    ddUserRole_1 As Dropdown.pcfdataset:
                        AlignInContainer: =AlignInContainer.Stretch
                        Appearance: ="FilledDarker"
                        BorderColor: =""
                        BorderStyle: =""
                        DefaultSelectedItems: =["Can View"]
                        DisabledBorderColor: =""
                        DisplayMode: =DisplayMode.Edit
                        FocusedBorderColor: =""
                        Height: =32
                        HoverBorderColor: =""
                        Items: |-
                            =[
                                "Can View",
                                "Can Edit",
                                "Owner"
                            ]
                        LayoutMinHeight: =32
                        LayoutMinWidth: =320
                        PressedBorderColor: =""
                        Width: =320
                        X: =0
                        Y: =0
                        ZIndex: =5

                    PanelFooterContainer_3 As groupContainer.manualLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        Height: =Parent.Height - Self.Y
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        Width: =Parent.Width - Parent.PaddingLeft * 2
                        ZIndex: =6

                        icoFooterDivider_3 As rectangle:
                            BorderColor: =//ColorValue(AppTheme.palette.neutralLight)
                            BorderThickness: =0.1
                            DisabledFill: =RGBA(166, 166, 166, 1)
                            Fill: =RGBA(0, 120, 212, 1)
                            FocusedBorderColor: =RGBA(0, 120, 212, 1)
                            Height: =0.1
                            HoverFill: =RGBA(0, 120, 212, 1)
                            PressedFill: =RGBA(0, 120, 212, 1)
                            Width: =Parent.Width
                            Y: =btnAddUser_1.Y - 10
                            ZIndex: =2

                        btnAddUser_1 As Button:
                            Align: =""
                            BasePaletteColor: =
                            BorderColor: =""
                            BorderStyle: =""
                            DisabledBorderColor: =""
                            DisplayMode: |-
                                =If(
                                    !IsBlank(ddUserRole_1.Selected.Value) && !IsBlankOrError(First(PeoplePickerFlowDetails.SelectedPeople)),
                                    DisplayMode.Edit,
                                    DisplayMode.Disabled
                                )
                            FocusedBorderColor: =""
                            Font: ="'Segoe UI', 'Open Sans', sans-serif"
                            FontColor: =
                            FontSize: =12
                            FontWeight: =FontWeight.Normal
                            Height: =32
                            HoverBorderColor: =""
                            Icon: =""
                            IconRotation: =0
                            IconStyle: ="Outline"
                            Layout: ="Icon before"
                            OnSelect: |
                                =UpdateContext(
                                    {
                                        var_Spinnerlabel: "Assigning Permission...",
                                        var_ShowSpinner: true,
                                        var_RoleAssignment: ddUserRole_1.Selected.Value
                                    }
                                );
                                Set(
                                    var_selectedUser,
                                    First(PeoplePickerFlowDetails.SelectedPeople).PersonaKey
                                );
                                Set(
                                    var_selectedUserID,
                                    Office365Users.UserProfileV2(var_selectedUser).id
                                );
                                //if viewer or editor
                                If(
                                    var_RoleAssignment <> "Owner",
                                    UpdateContext(
                                        {
                                            var_ResponseMessage: 'HELPER-ObjectOperations'.Run(
                                                var_selectedUserID,
                                                SelectedFlow.Flow,
                                                SelectedFlow.'Flow Environment'.Name,
                                                If(
                                                    var_RoleAssignment = "Can View",
                                                    "addviewer",
                                                    "addeditor"
                                                ),
                                                "flow"
                                            ).thereturnstring
                                        }
                                    );
                                    If(
                                        var_ResponseMessage <> "pass",
                                        Notify(
                                            var_ResponseMessage,
                                            NotificationType.Error
                                        ),
                                        Notify(
                                            "Permission granted to " & First(PeoplePickerFlowDetails.SelectedPeople).PersonaName,
                                            NotificationType.Success
                                        );
                                        // Workaround for now to reset people picker
                                    );
                                    ,
                                    //else owner
                                    UpdateContext(
                                        {
                                            var_ResponseMessage: 'HELPER-ObjectOperations'.Run(
                                                var_selectedUserID,
                                                SelectedFlow.Flow,
                                                SelectedFlow.'Flow Environment'.Name,
                                                "assign",
                                                "flow"
                                            ).thereturnstring
                                        }
                                    );
                                    If(
                                        var_ResponseMessage <> "pass",
                                        Notify(
                                            var_ResponseMessage,
                                            NotificationType.Error
                                        ),
                                        Notify(
                                            "Permission granted to " & First(PeoplePickerFlowDetails.SelectedPeople).PersonaName,
                                            NotificationType.Success
                                        );
                                        /* Code for resetting IsOrphaned Flag to false.*/
                                If(
                                            SelectedFlow.'Flow is Orphaned' = "Yes",
                                            Patch(
                                                Flows,
                                                LookUp(
                                                    Flows,
                                                    Flow = SelectedFlow.Flow
                                                ),
                                                {'Flow is Orphaned': "No"}
                                            )
                                        );
                                    )
                                );
                                UpdateContext({var_ShowSpinner: false});
                                If(
                                    var_ResponseMessage = "pass",
                                    Refresh('Power Platform Users');
                                    Refresh(Makers);
                                    Refresh(Flows);
                                    Set(
                                        SelectedFlow,
                                        LookUp(
                                            Flows,
                                            Flow = SelectedFlow.Flow
                                        )
                                    );
                                    If(
                                        var_RoleAssignment = "Owner",
                                        Set(
                                            FlowDerivedOwner,
                                            var_selectedUserID
                                        )
                                    );
                                    //update permissions table
                                If(
                                        !IsBlankOrError(SelectedFlow.'Flow Environment'),
                                        ClearCollect(
                                            flowRoles,
                                            PowerAutomateforAdmins.GetAdminFlowOwnerRole(
                                                SelectedFlow.'Flow Environment'.Name,
                                                SelectedFlow.Flow
                                            ).value
                                        )
                                    );
                                    Select(refreshFlowRoles);
                                    //Select(Hidden_UpdateTable_FlowDetails);
                                );
                                ClearCollect(
                                    DefaultUserCollection,
                                    User()
                                );
                                ClearCollect(
                                    DefaultUserCollection,
                                    Blank()
                                );
                                UpdateContext({var_ShowShimmer: false});
                            PressedBorderColor: =""
                            Text: =If(IsBlank(SelectedUserID) || PermissionsDetailsList_1.Selected.RoleName = "Owner","Add User","Update permission")
                            VerticalAlign: =""
                            Width: =If(Self.Text="Update permission",126,80)
                            X: =0
                            Y: =Parent.Height - Self.Height -10
                            ZIndex: =3

    SpinnerLeft As Spinner:
        Appearance: ='Spinner.Appearance'.Primary
        BasePaletteColor: =
        DisplayMode: =DisplayMode.Edit
        FontColor: =
        Height: =Parent.Height
        Label: =ctx_SpinnerLabel
        Visible: =ctx_ShowSpinner
        Width: =Parent.Width
        X: =0
        Y: =0
        ZIndex: =11

