FlowDetailsScreen_Solutions As screen:
    LoadingSpinnerColor: =RGBA(0, 120, 212, 1)
    OnVisible: |
        =/*Notify(
            "Flows in Solution have limited programmatic capability. Can only show owner below.
        For full functionality take ownership and drive through the product UX",
            NotificationType.Warning,
            600000
        );*/
        UpdateContext({showAddUsersSol:false,showEmailPanelSol:false});
        ClearCollect(
            colSolFlowRoles,
            LookUp(
                'Power Platform Users',
                'Power Platform User' = GUID(FlowDerivedOwner)
            )
        );
        ClearCollect(
            colSolFlowRolesAdded,
            ShowColumns(
                AddColumns(
                    colSolFlowRoles,
                    UserIcon,
                    If(
                        !IsBlankOrError(
                            LookUp(
                                'Power Platform Users',
                                'Power Platform User' = GUID(FlowDerivedOwner)
                            ).PhotoObject
                        ),
                        Substitute(
                            JSON(
                                Office365Users.UserPhotoV2(GUID(FlowDerivedOwner)),
                                JSONFormat.IncludeBinaryData
                            ),
                            """",
                            ""
                        ),
                        Substitute(
                            JSON(
                                PersonPlaceholder,
                                JSONFormat.IncludeBinaryData
                            ),
                            """",
                            ""
                        )
                    ),
                    Role,
                    "Owner",
                    PermissionsMsg,
                    If(
                        ThisRecord.'Record GUID as String' = Text(FlowDerivedOwner),
                        "Type Owner: Cannot change permissions for owner until you assign a new owner",
                        ""
                    ),
                    UserId,
                    Text(FlowDerivedOwner),
                    PrincipalType,
                    Office365Users.UserProfileV2(GUID(FlowDerivedOwner)).userType
                ),
                'Display Name',
                UserIcon,
                'User Email',
                Role,
                PermissionsMsg,
                UserId,
                PrincipalType
            )
        );
        UpdateContext(
            {
                var_ShowEditors: true,
                var_ShowViewers: false,
                var_ShowSpinner: false,
                showEmailPanelSol: false
            }
        );

    "SpinnerFlowDetails_1 As 'Fluent Spinner (1.1.29) Preview'":
        AccessibilityLabel: ="Loading Flow Details"
        BackgroundColor: |-
            ="#00000010"
        DisplayMode: =DisplayMode.Edit
        Height: =Parent.Height
        Label: =ctx_SpinnerLabel
        Theme: =AppThemeJson
        Visible: =ctx_ShowSpinner
        Width: =Parent.Width
        X: =0   
        Y: =0   
        ZIndex: =7

    refreshFlowRolesSol As Button:
        AccessibleLabel: ="Button to refresh Flow Roles"
        Align: =""
        BasePaletteColor: =
        BorderColor: =""
        BorderStyle: =""
        DisabledBorderColor: =""
        DisplayMode: =DisplayMode.Edit
        FocusedBorderColor: =""
        FontColor: =
        Height: =32
        HoverBorderColor: =""
        Icon: =""
        IconRotation: =0
        IconStyle: ="Outline"
        Layout: ="Icon before"
        OnSelect: |
            =//set the derived owner
            UpdateContext({var_ShowShimmer: true});
            Set(
                FlowDerivedOwner,
                LookUp(
                    Flows,
                    Flow = SelectedFlow.Flow
                ).DerivedOwner.Maker
            );
            If(
                IsBlank(FlowDerivedOwner),
                Set(
                    FlowDerivedOwner,
                    LookUp(
                        Flows,
                        Flow = SelectedFlow.Flow
                    ).Maker.Maker
                )
            );
            UpdateContext(
                {
                    FlowDerivedOwnerName: LookUp(
                        'Power Platform Users',
                        'Power Platform User' = GUID(FlowDerivedOwner)
                    ).'Display Name'
                }
            );
            UpdateContext(
                {
                    OwnerIsServicePrinciple: LookUp(
                        Makers,
                        Maker = GUID(FlowDerivedOwner)
                    ).UserIsServicePrinciple
                }
            );
            UpdateContext(
                {
                    OwnerIsOrphan: LookUp(
                        Makers,
                        Maker = GUID(FlowDerivedOwner)
                    ).'Maker Is Orphaned'
                }
            );
            //create owner table
            If(
                !IsBlank(FlowDerivedOwnerName),
                ClearCollect(
                    colSolFlowRoles,
                    LookUp(
                        'Power Platform Users',
                        'Power Platform User' = GUID(FlowDerivedOwner)
                    )
                );
                ClearCollect(
                    colSolFlowRolesAdded,
                    ShowColumns(
                        AddColumns(
                            colSolFlowRoles,
                            UserIcon,
                            If(
                                !IsBlankOrError(
                                    LookUp(
                                        'Power Platform Users',
                                        'Power Platform User' = GUID(FlowDerivedOwner)
                                    ).PhotoObject
                                ),
                                Substitute(
                                    JSON(
                                        Office365Users.UserPhotoV2(GUID(FlowDerivedOwner)),
                                        JSONFormat.IncludeBinaryData
                                    ),
                                    """",
                                    ""
                                ),
                                Substitute(
                                    JSON(
                                        PersonPlaceholder,
                                        JSONFormat.IncludeBinaryData
                                    ),
                                    """",
                                    ""
                                )
                            ),
                            Role,
                            "Owner",
                            PermissionsMsg,
                            "Type Owner: Cannot change permissions for owner until you assign a new owner",
                            UserId,
                            FlowDerivedOwner
                        ),
                        'Display Name',
                        UserIcon,
                        'User Email',
                        Role,
                        PermissionsMsg
                    )
                );
                
            );
        PressedBorderColor: =""
        Text: ="Refresh Roles"
        VerticalAlign: =""
        Visible: =false
        Width: =96
        X: =40
        Y: =40
        ZIndex: =8

    Hidden_UpdateTable_SolutionFlow As Button:
        BorderColor: =
        ButtonType: ='Button.ButtonType'.Standard
        DisabledBorderColor: =
        DisabledFillColor: =
        DisabledTextColor: =
        DisplayMode: =DisplayMode.Edit
        FillColor: =
        Height: =0
        HoverBorderColor: =
        HoverFillColor: =
        HoverTextColor: =
        OnChange: =false
        OnSelect: |-
            =//set the derived owner
            UpdateContext({var_ShowShimmer: true});
            Set(
                FlowDerivedOwner,
                LookUp(
                    Flows,
                    Flow = SelectedFlow.Flow
                ).DerivedOwner.Maker
            );
            If(
                IsBlank(FlowDerivedOwner),
                Set(
                    FlowDerivedOwner,
                    LookUp(
                        Flows,
                        Flow = SelectedFlow.Flow
                    ).Maker.Maker
                )
            );
            UpdateContext(
                {
                    FlowDerivedOwnerName: LookUp(
                        'Power Platform Users',
                        'Power Platform User' = GUID(FlowDerivedOwner)
                    ).'Display Name'
                }
            );
            UpdateContext(
                {
                    OwnerIsServicePrinciple: LookUp(
                        Makers,
                        Maker = GUID(FlowDerivedOwner)
                    ).UserIsServicePrinciple
                }
            );
            UpdateContext(
                {
                    OwnerIsOrphan: LookUp(
                        Makers,
                        Maker = GUID(FlowDerivedOwner)
                    ).'Maker Is Orphaned'
                }
            );
            //create owner table
            If(
                !IsBlank(FlowDerivedOwnerName),
                ClearCollect(
                    colRoleAssignmentsFlowSol,
                    Table(
                        {
                            RowKey: FlowDerivedOwner,
                            Name: FlowDerivedOwnerName,
                            Image: If(
                                OwnerIsServicePrinciple || OwnerIsOrphan,
                                Substitute(
                                    JSON(
                                        PersonPlaceholder,
                                        JSONFormat.IncludeBinaryData
                                    ),
                                    """",
                                    ""
                                ),
                                If(
                                    IfError(
                                        Office365Users.UserPhotoMetadata(FlowDerivedOwner).HasPhoto,
                                        false
                                    ),
                                    Substitute(
                                        JSON(
                                            Office365Users.UserPhotoV2(FlowDerivedOwner),
                                            JSONFormat.IncludeBinaryData
                                        ),
                                        """",
                                        ""
                                    ),
                                    Substitute(
                                        JSON(
                                            LookUp(
                                                'Power Platform Users',
                                                'Power Platform User' = GUID(FlowDerivedOwner)
                                            ).admin_PhotoObjectId,
                                            JSONFormat.IncludeBinaryData
                                        ),
                                        """",
                                        ""
                                    )
                                )
                            ),
                            Role: "Owner",
                            Email: LookUp(
                                Makers,
                                Maker = GUID(FlowDerivedOwner)
                            ).'User Principal Name'
                        }
                    )
                );
                
            );
            UpdateContext({var_ShowShimmer: false});
            //end for solution aware flows
        PressedBorderColor: =
        PressedFillColor: =
        PressedTextColor: =
        Text: ="Soln"
        TextColor: =
        Visible: =false
        Width: =0
        X: =100
        Y: =100
        ZIndex: =14

    MainScreenContainer As groupContainer.horizontalAutoLayoutContainer:
        DropShadow: =DropShadow.Light
        Height: =Parent.Height
        LayoutMode: =LayoutMode.Auto
        RadiusBottomLeft: =4
        RadiusBottomRight: =4
        RadiusTopLeft: =4
        RadiusTopRight: =4
        Width: =Parent.Width
        ZIndex: =16

        LeftScreenContainer As groupContainer.verticalAutoLayoutContainer:
            DropShadow: =DropShadow.Light
            Fill: =RGBA(122, 138, 143, 0.12)
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =App.ActiveScreen.Width * 0.01
            PaddingRight: =App.ActiveScreen.Width * 0.01
            RadiusBottomLeft: =4
            RadiusBottomRight: =4
            RadiusTopLeft: =4
            RadiusTopRight: =4
            ZIndex: =1

            ActionContainer As groupContainer.verticalAutoLayoutContainer:
                FillPortions: =0
                Height: =50
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                ZIndex: =1

                "commandBarApp_1 As 'Fluent Command Bar (1.1.29)'.pcfdataset":
                    AccessibilityLabel: ="Command Bar for Flow Details"
                    DisplayMode: =DisplayMode.Edit
                    FillPortions: =1
                    Height: =Parent.Height
                    ItemOverflow: =""
                    Items: |-
                        =Table(
                            {
                                ItemKey: "back",
                                ItemDisplayName: "Back to dashboard",
                                ItemIconName: "Back"
                            },
                            {
                                ItemKey: "flowsettings",
                                ItemDisplayName: "Flow settings",
                                ItemIconName: "Settings"
                            },
                            {
                                ItemKey: "emailowner",
                                ItemDisplayName: "Email owner",
                                ItemIconName: "Mail"
                            },
                            {
                                ItemKey: "addnewowner",
                                ItemDisplayName: "Add new owner",
                                ItemIconName: "PeopleAdd"
                            },
                            {
                                ItemKey: "changetoviewer",
                                ItemDisplayName: "Make viewer",
                                ItemIconName: "View",
                                ItemEnabled: If(
                                    (dlFlowRolesSol.Selected.Role <> "Owner" && dlFlowRolesSol.Selected.Role <> "Creator" && dlFlowRolesSol.Selected.Role = "CanEdit"),
                                    true,
                                    false
                                ),
                                ItemVisible: If(
                                    (dlFlowRolesSol.Selected.Role <> "Owner" && dlFlowRolesSol.Selected.Role <> "Creator" && dlFlowRolesSol.Selected.Role = "CanEdit"),
                                    true,
                                    false
                                )
                            },
                            {
                                ItemKey: "changetoeditor",
                                ItemDisplayName: "Make editor",
                                ItemIconName: "EditContact",
                                ItemEnabled: If(
                                    (dlFlowRolesSol.Selected.Role <> "Owner" && dlFlowRolesSol.Selected.Role <> "Creator" && dlFlowRolesSol.Selected.Role = "CanView"),
                                    true,
                                    false
                                ),
                                ItemVisible: If(
                                    (dlFlowRolesSol.Selected.Role <> "Owner" && dlFlowRolesSol.Selected.Role <> "Creator" && dlFlowRolesSol.Selected.Role = "CanView"),
                                    true,
                                    false
                                )
                            },
                            {
                                ItemKey: "removepermission",
                                ItemDisplayName: "Remove permission",
                                ItemIconName: "UserRemove",
                                ItemEnabled: If(
                                    (CountRows(dlFlowRolesSol.SelectedItems) = 1) && (dlFlowRolesSol.Selected.Role <> "Owner") && (dlFlowRolesSol.Selected.Role <> "Creator"),
                                    true,
                                    false
                                ),
                                ItemVisible: If(
                                    (CountRows(dlFlowRolesSol.SelectedItems) = 1) && (dlFlowRolesSol.Selected.Role <> "Owner") && (dlFlowRolesSol.Selected.Role <> "Creator") && (dlFlowRoles.Selected.PrincipalType = "User"),
                                    true,
                                    false
                                )
                            },
                            {
                                ItemKey: "refresh",
                                ItemDisplayName: "Refresh",
                                ItemIconName: "refresh",
                                ItemEnabled: true,
                                ItemVisible: true
                            }
                        )
                    LayoutMinHeight: =200
                    LayoutMinWidth: =200
                    OnChange: =
                    OnSelect: |-
                        =Switch(
                            Self.Selected.ItemKey,
                            "back",
                            Back(),
                            "flowsettings",
                            Launch(theFlowURL & SelectedFlow.'Flow Environment'.Name & "/flows/" & SelectedFlow.Flow & "/details"),
                            "emailowner",
                            Set(
                                SelectFlowLink,
                                theFlowMakerURL & SelectedFlow.'Flow Environment'.Name & "/flows/" & SelectedFlow.Flow & "/details"
                            );
                            UpdateContext(
                                {
                                    showEmailPanelSol: true,
                                    showAddUsersSol: false
                                }
                            );
                            Notify(
                                "Flows in Solution have limited programmatic capability for finding it's users.",
                                NotificationType.Warning
                            );
                            UpdateContext({var_ShowSpinner: true});
                            ClearCollect(
                                DefaultToLineUsers,
                                ForAll(
                                    colSolFlowRolesAdded,
                                    If(
                                        ThisRecord.admin_displayname <> "Group",
                                        {
                                            PersonaKey: ThisRecord.admin_useremail,
                                            PersonaName: ThisRecord.admin_displayname,
                                            PersonaRole: "Editor"
                                        }
                                    )
                                )
                            );
                            Set(
                                theFlowMakerURL,
                                First(
                                    Filter(
                                        'Environment Variable Values',
                                        'Environment Variable Definition'.'Environment Variable Definition' = GUID(EnvVarDefnID)
                                    )
                                ).Value
                            );
                            If(
                                IsBlank(theFlowMakerURL),
                                Set(
                                    theFlowMakerURL,
                                    LookUp(
                                        'Environment Variable Definitions',
                                        'Environment Variable Definition' = GUID(EnvVarDefnID)
                                    ).'Default Value'
                                )
                            );
                            UpdateContext({var_ShowSpinner: false});
                            ,
                            "addnewowner",
                            Select(Hidden_UpdateTable_SolutionFlow);
                            UpdateContext(
                                {
                                    var_pivotkey: "tabMembers",
                                    showAddUsersSol: true,
                                    showEmailPanelSol: false
                                }
                            );
                            ,
                            "makeowner",
                            UpdateContext(
                                {
                                    ctx_SpinnerLabel: "Changing Owner...",
                                    ctx_ShowSpinner: true
                                }
                            );
                            If(
                                'HELPER-ObjectOperations'.Run(
                                    UserId,
                                    SelectedFlow.Flow,
                                    SelectedFlow.'Flow Environment'.Name,
                                    "assign",
                                    "flow"
                                ).thereturnstring = "pass",
                                UpdateContext({ctx_ShowSpinner: false});
                                
                        //if success, refresh data in app
                        Notify(
                                    "User has been changed to Owner successfully",
                                    NotificationType.Success
                                );
                                Refresh('Power Platform Users');
                                Refresh(Makers);
                                Refresh(Flows);
                                Set(
                                    SelectedFlow,
                                    LookUp(
                                        Flows,
                                        Flow = SelectedFlow.Flow
                                    )
                                );
                                Set(
                                    FlowDerivedOwner,
                                    UserId
                                );
                                ClearCollect(
                                    flowRoles,
                                    PowerAutomateforAdmins.GetAdminFlowOwnerRole(
                                        SelectedFlow.'Flow Environment'.Name,
                                        SelectedFlow.Flow
                                    ).value
                                );
                                ,
                                UpdateContext({ctx_ShowSpinner: false});
                                Notify(
                                    "Changing owner failed, try to set via product UX",
                                    NotificationType.Error,
                                    2000
                                );
                            ),
                            "removepermission",
                            UpdateContext(
                                {
                                    ctx_ShowSpinner: true,
                                    ctx_SpinnerLabel: "Removing Permission..."
                                }
                            );
                            If(
                                'HELPER-ObjectOperations'.Run(
                                    UserId,
                                    SelectedFlow.Flow,
                                    SelectedFlow.'Flow Environment'.Name,
                                    "removeuser",
                                    "flow"
                                ).thereturnstring = "pass",
                        //if success, refresh data in app
                                Refresh(Flows);
                                ClearCollect(
                                    flowRoles,
                                    PowerAutomateforAdmins.GetAdminFlowOwnerRole(
                                        SelectedFlow.'Flow Environment'.Name,
                                        SelectedFlow.Flow
                                    ).value
                                );
                                UpdateContext({ctx_ShowSpinner: false});
                                ,
                                Notify(
                                    "Removing permissions failed, try to remove via product UX",
                                    NotificationType.Error,
                                    2000
                                );
                                UpdateContext({ctx_ShowSpinner: false});
                            ),
                            "changetoeditor",
                            UpdateContext(
                                {
                                    ctx_SpinnerLabel: "Changing to Editor...",
                                    ctx_ShowSpinner: true
                                }
                            );
                            If(
                                'HELPER-ObjectOperations'.Run(
                                    UserId,
                                    SelectedFlow.Flow,
                                    SelectedFlow.'Flow Environment'.Name,
                                    "addeditor",
                                    "flow"
                                ).thereturnstring = "pass",
                        //if success, refresh data in app
                                Refresh('Power Platform Users');
                                Refresh(Makers);
                                Refresh(Flows);
                                Set(
                                    SelectedFlow,
                                    LookUp(
                                        Flows,
                                        Flow = SelectedFlow.Flow
                                    )
                                );
                                ClearCollect(
                                    flowRoles,
                                    PowerAutomateforAdmins.GetAdminFlowOwnerRole(
                                        SelectedFlow.'Flow Environment'.Name,
                                        SelectedFlow.Flow
                                    ).value
                                );
                                Notify(
                                    "User has been changed to editor successfully",
                                    NotificationType.Success,
                                    2000
                                );
                                ,
                                Notify(
                                    "Change to editor failed, try to set via product UX",
                                    NotificationType.Error
                                )
                            );
                            UpdateContext({ctx_ShowSpinner: false});
                            ,
                            "changetoviewer",
                            UpdateContext(
                                {
                                    ctx_SpinnerLabel: "Changing to Viewer...",
                                    ctx_ShowSpinner: true
                                }
                            );
                            If(
                                'HELPER-ObjectOperations'.Run(
                                    UserId,
                                    SelectedFlow.Flow,
                                    SelectedFlow.'Flow Environment'.Name,
                                    "addviewer",
                                    "flow"
                                ).thereturnstring = "pass",
                        //if success, refresh data in app
                                Refresh('Power Platform Users');
                                Refresh(Makers);
                                Refresh(Flows);
                                Set(
                                    SelectedFlow,
                                    LookUp(
                                        Flows,
                                        Flow = SelectedFlow.Flow
                                    )
                                );
                                ClearCollect(
                                    flowRoles,
                                    PowerAutomateforAdmins.GetAdminFlowOwnerRole(
                                        SelectedFlow.'Flow Environment'.Name,
                                        SelectedFlow.Flow
                                    ).value
                                );
                                Notify(
                                    "User has been changed to viewer successfully",
                                    NotificationType.Success,
                                    2000
                                );
                                ,
                                Notify(
                                    "Change to viewer failed, try to set via product UX",
                                    NotificationType.Error,
                                    2000
                                )
                            );
                            UpdateContext({ctx_ShowSpinner: false});
                            ,
                            "refresh",
                            UpdateContext({var_ShowShimmer: true});
                            Select(refreshFlowRolesSol);
                            UpdateContext({var_ShowShimmer: false});
                            
                        )
                    Theme: =AppThemeJson
                    Visible: =true
                    Width: =400
                    X: =0
                    Y: =0
                    ZIndex: =1

                    ItemDisplayName1 As pcfDataField.textualColumn:
                        FieldDisplayName: ="ItemDisplayName"
                        FieldName: ="ItemDisplayName"
                        FieldType: ="s"
                        FieldVariantName: ="textualColumn"
                        Order: =1
                        ZIndex: =10

            DetailsContainer As groupContainer.verticalAutoLayoutContainer:
                BorderStyle: =BorderStyle.None
                Fill: =RGBA(255, 255, 255, 1)
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =5
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                ZIndex: =2

                conAppDetails_1 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    BorderStyle: =BorderStyle.None
                    Height: |-
                        =//Parent.Height*0.20
                        lblDescriptionValue_1.Height
                    LayoutGap: =5
                    LayoutMinHeight: =150
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingBottom: =10
                    PaddingLeft: =10
                    PaddingRight: =10
                    PaddingTop: =10
                    RadiusBottomLeft: =4
                    RadiusBottomRight: =4
                    RadiusTopLeft: =4
                    RadiusTopRight: =4
                    Width: =Parent.Width
                    ZIndex: =2

                    conApp_1 As groupContainer.verticalAutoLayoutContainer:
                        BorderStyle: =BorderStyle.None
                        FillPortions: =0
                        Height: =Parent.Height
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMinHeight: =100
                        LayoutMinWidth: =200
                        LayoutMode: =LayoutMode.Auto
                        PaddingRight: =10
                        Width: =Parent.Width*0.35
                        ZIndex: =1

                        lblAppDetails_1 As Label:
                            Alignment: =Align.Justify
                            AutoHeight: =false
                            Color: =
                            DisplayMode: =DisplayMode.Edit
                            FontSize: =14
                            FontWeight: =FontWeight.Semibold
                            Height: =32
                            LayoutMinHeight: =32
                            LayoutMinWidth: =320
                            OnChange: =false
                            PaddingStart: =20
                            Text: ="Flow overview"
                            VerticalAlignment: =VerticalAlign.Middle
                            Width: =Parent.Width
                            Wrap: =false
                            X: =0
                            Y: =0
                            ZIndex: =1

                        Rectangle3_1 As rectangle:
                            BorderColor: =RGBA(166, 166, 166, 1)
                            BorderStyle: =BorderStyle.None
                            DisabledFill: =RGBA(166, 166, 166, 1)
                            Fill: =RGBA(230, 230, 230, 1)
                            FocusedBorderColor: =RGBA(0, 120, 212, 1)
                            Height: =1
                            HoverFill: =RGBA(230, 230, 230, 1)
                            PressedFill: =RGBA(230, 230, 230, 1)
                            Width: =Parent.Width
                            ZIndex: =2

                        lblAppName_1 As Label:
                            AlignInContainer: =AlignInContainer.Start
                            Alignment: =Align.Justify
                            AutoHeight: =true
                            Color: =
                            DisplayMode: =DisplayMode.Edit
                            FontSize: =12
                            FontWeight: =FontWeight.Semibold
                            Height: =Parent.Height
                            LayoutMinHeight: =32
                            LayoutMinWidth: =200
                            OnChange: =false
                            PaddingStart: =20
                            Text: =SelectedFlow.'Display Name'
                            VerticalAlignment: =VerticalAlign.Middle
                            Width: =Parent.Width
                            Wrap: =true
                            X: =0
                            Y: =0
                            ZIndex: =3

                    conDetails_1 As groupContainer.horizontalAutoLayoutContainer:
                        BorderStyle: =BorderStyle.None
                        Height: =Parent.Height
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMinHeight: =100
                        LayoutMinWidth: =DetailsContainer.Width-Parent.Width
                        LayoutMode: =LayoutMode.Auto
                        PaddingLeft: =10
                        ZIndex: =2

                        lblDetails_1 As Label:
                            AlignInContainer: =AlignInContainer.Start
                            Alignment: =Align.Justify
                            AutoHeight: =false
                            Color: =RGBA(0, 0, 0, 1)
                            DisplayMode: =DisplayMode.Edit
                            FontSize: =14
                            FontWeight: =FontWeight.Semibold
                            Height: =32
                            LayoutMinHeight: =32
                            LayoutMinWidth: =320
                            OnChange: =false
                            Text: ="Details"
                            Width: =Parent.Width
                            Wrap: =false
                            X: =0
                            Y: =0
                            ZIndex: =1

                        Rectangle3 As rectangle:
                            BorderColor: =RGBA(166, 166, 166, 1)
                            BorderStyle: =BorderStyle.None
                            DisabledFill: =RGBA(166, 166, 166, 1)
                            Fill: =RGBA(230, 230, 230, 1)
                            FocusedBorderColor: =RGBA(0, 120, 212, 1)
                            Height: =1
                            HoverFill: =RGBA(230, 230, 230, 1)
                            PressedFill: =RGBA(230, 230, 230, 1)
                            Width: =Parent.Width
                            ZIndex: =2

                        conAppDates_1 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.Start
                            BorderStyle: =BorderStyle.None
                            LayoutMinHeight: =100
                            LayoutMinWidth: =250
                            LayoutMode: =LayoutMode.Auto
                            RadiusBottomLeft: =4
                            RadiusBottomRight: =4
                            RadiusTopLeft: =4
                            RadiusTopRight: =4
                            Width: =Parent.Width-10
                            ZIndex: =3

                            conCreatedOn_1 As groupContainer.verticalAutoLayoutContainer:
                                BorderStyle: =BorderStyle.None
                                Fill: =RGBA(255, 255, 255, 1)
                                FillPortions: =0
                                Height: =Parent.Height
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutMinHeight: =100
                                LayoutMinWidth: =100
                                LayoutMode: =LayoutMode.Auto
                                Width: =Parent.Width*0.2
                                ZIndex: =1

                                lblCreatedOn_1 As Label:
                                    Alignment: =Align.Justify
                                    Color: =
                                    DisplayMode: =DisplayMode.Edit
                                    FontWeight: =FontWeight.Semibold
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =320
                                    OnChange: =false
                                    Text: ="Created on"
                                    Width: =100
                                    Wrap: =false
                                    X: =0
                                    Y: =0
                                    ZIndex: =1

                                lblCreatedOnValue_1 As Label:
                                    AutoHeight: =true
                                    Color: =
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =320
                                    OnChange: =false
                                    Text: =Text(SelectedFlow.'Flow Created On' ,"[$-en-US]dd-mmm-yyyy")
                                    Width: =Parent.Width
                                    X: =0
                                    Y: =0
                                    ZIndex: =3

                            conModifiedOn_1 As groupContainer.verticalAutoLayoutContainer:
                                BorderStyle: =BorderStyle.None
                                Fill: =RGBA(255, 255, 255, 1)
                                FillPortions: =0
                                Height: =Parent.Height
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutMinHeight: =100
                                LayoutMinWidth: =90
                                LayoutMode: =LayoutMode.Auto
                                Width: =Parent.Width*0.2
                                ZIndex: =2

                                lblModifiedOn_1 As Label:
                                    Alignment: =Align.Justify
                                    Color: =
                                    DisplayMode: =DisplayMode.Edit
                                    FontWeight: =FontWeight.Semibold
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =320
                                    OnChange: =false
                                    Text: ="Modified On"
                                    Width: =Parent.Width
                                    X: =0
                                    Y: =0
                                    ZIndex: =1

                                lblModifiedOnValue_1 As Label:
                                    Color: =
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =320
                                    OnChange: =false
                                    Text: =Text(SelectedFlow.'Flow Modified On' ,"[$-en-US]dd-mmm-yyyy")
                                    Width: =Parent.Width
                                    Wrap: =false
                                    X: =0
                                    Y: =0
                                    ZIndex: =3

                            conDescription_1 As groupContainer.verticalAutoLayoutContainer:
                                AlignInContainer: =AlignInContainer.SetByContainer
                                BorderStyle: =BorderStyle.None
                                Fill: =RGBA(255, 255, 255, 1)
                                FillPortions: =0
                                Height: =Parent.Height
                                LayoutDirection: =LayoutDirection.Vertical
                                LayoutMinHeight: =100
                                LayoutMinWidth: =250
                                LayoutMode: =LayoutMode.Auto
                                Width: =Parent.Width*0.6
                                ZIndex: =5

                                lblDescription_1 As Label:
                                    AlignInContainer: =AlignInContainer.Stretch
                                    Alignment: =Align.Justify
                                    Color: =
                                    DisplayMode: =DisplayMode.Edit
                                    FontWeight: =FontWeight.Semibold
                                    Height: =32
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =320
                                    OnChange: =false
                                    Text: ="Description"
                                    Width: =320
                                    Wrap: =false
                                    X: =0
                                    Y: =0
                                    ZIndex: =1

                                lblDescriptionValue_1 As Label:
                                    AlignInContainer: =AlignInContainer.Start
                                    Alignment: =Align.Justify
                                    AutoHeight: =true
                                    Color: =
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =Parent.Height
                                    LayoutMinHeight: =32
                                    LayoutMinWidth: =320
                                    OnChange: =false
                                    PaddingEnd: =10
                                    Text: =SelectedFlow.'Flow Description'
                                    VerticalAlignment: =VerticalAlign.Top
                                    Width: =320
                                    Wrap: =true
                                    X: =0
                                    Y: =0
                                    ZIndex: =3

                conSolFlowRoles As groupContainer.verticalAutoLayoutContainer:
                    FillPortions: =2
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    RadiusBottomLeft: =4
                    RadiusBottomRight: =4
                    RadiusTopLeft: =4
                    RadiusTopRight: =4
                    ZIndex: =3

                    Rectangle3_2 As rectangle:
                        BorderColor: =RGBA(166, 166, 166, 1)
                        BorderStyle: =BorderStyle.None
                        DisabledFill: =RGBA(166, 166, 166, 1)
                        Fill: =RGBA(230, 230, 230, 1)
                        FocusedBorderColor: =RGBA(0, 120, 212, 1)
                        Height: =1
                        HoverFill: =RGBA(230, 230, 230, 1)
                        PressedFill: =RGBA(230, 230, 230, 1)
                        Width: =Parent.Width
                        ZIndex: =1

                    "dlFlowRolesSol As 'Fluent Details List (1.1.29)'.pcfdataset":
                        AccessibilityLabel: ="Flow Roles List"
                        AlignInContainer: =AlignInContainer.Stretch
                        columns_Items: |-
                            =Table(
                                {
                                    ColName: "UserIcon",
                                    ColDisplayName: "",
                                    ColCellType: "image",
                                    ColWidth: 40,
                                    ColResizable: true
                                },
                                {
                                    ColName: "admin_displayname",
                                    ColDisplayName: "",
                                    ColWidth: Parent.Width / 4 - 100,
                                    ColResizable: true,
                                    ColRowHeader: true,
                                    ColVerticalAlign: Align.Center
                                },
                                {
                                    ColName: "Role",
                                    ColDisplayName: "",
                                    ColWidth: Parent.Width / 4 - 150,
                                    ColResizable: true,
                                    ColVerticalAlign: Align.Center
                                },
                                {
                                    ColName: "PermissionsMsg",
                                    ColDisplayName: "",
                                    ColWidth: Parent.Width / 4 + 160,
                                    ColResizable: true,
                                    ColVerticalAlign: Align.Center
                                },
                                {
                                    ColName: "PrincipalType",
                                    ColDisplayName: "",
                                    ColWidth: Parent.Width / 4,
                                    ColResizable: true,
                                    ColVerticalAlign: Align.Center
                                }
                            )
                        DisplayMode: =DisplayMode.Edit
                        FillPortions: =1
                        HeaderVisible: =true
                        Height: =200
                        Items: =colSolFlowRolesAdded
                        LayoutMinHeight: =200
                        LayoutMinWidth: =200
                        OnChange: |-
                            =UpdateContext({UserId:Self.Selected.UserId})
                        OnSelect: =
                        RaiseOnRowSelectionChangeEvent: =true
                        SelectionAlwaysVisible: =false
                        SelectRowsOnFocus: =true
                        Theme: =AppThemeJson
                        Width: =200
                        X: =0
                        Y: =0
                        ZIndex: =2

                        admin_displayname2 As pcfDataField.textualColumn:
                            FieldDisplayName: ="admin_displayname"
                            FieldName: ="admin_displayname"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =1
                            ZIndex: =11

                        admin_useremail2 As pcfDataField.textualColumn:
                            FieldDisplayName: ="admin_useremail"
                            FieldName: ="admin_useremail"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =2
                            ZIndex: =12

                        Role1 As pcfDataField.textualColumn:
                            FieldDisplayName: ="Role"
                            FieldName: ="Role"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =3
                            ZIndex: =13

                        UserIcon3 As pcfDataField.textualColumn:
                            FieldDisplayName: ="UserIcon"
                            FieldName: ="UserIcon"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =4
                            ZIndex: =14

                        PermissionsMsg1 As pcfDataField.textualColumn:
                            FieldDisplayName: ="PermissionsMsg"
                            FieldName: ="PermissionsMsg"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =5
                            ZIndex: =15

                        UserId1 As pcfDataField.textualColumn:
                            FieldDisplayName: ="UserId"
                            FieldName: ="UserId"
                            FieldType: ="g"
                            FieldVariantName: ="textualColumn"
                            Order: =6
                            ZIndex: =16

                        PrincipalType3 As pcfDataField.textualColumn:
                            FieldDisplayName: ="PrincipalType"
                            FieldName: ="PrincipalType"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =7
                            ZIndex: =57

            lblInfo As label:
                Align: =Align.Justify
                BorderColor: =RGBA(0, 18, 107, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Fill: =RGBA(244, 244, 244, 1)
                Font: =Font.'Segoe UI'
                Height: =50
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =10
                Text: |-
                    ="Changing flow ownership is not possible in the product, so changing it here only changes it in the context of your CoE Toolkit. It is stored and used as a property of the CoE Flow table: DerivedOwner"
                Width: =Parent.Width-20
                Y: =1041
                ZIndex: =3

        MailScreenContainer As groupContainer.verticalAutoLayoutContainer:
            BorderStyle: =BorderStyle.None
            FillPortions: =0
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingBottom: =20
            PaddingLeft: =20
            PaddingRight: =20
            PaddingTop: =20
            RadiusBottomLeft: =4
            RadiusBottomRight: =4
            RadiusTopLeft: =4
            RadiusTopRight: =4
            Visible: =showEmailPanelSol
            Width: =If(App.ActiveScreen.Size > ScreenSize.Small, 420, Parent.Width)
            ZIndex: =2

            mailSpinner_1 As Spinner:
                BasePaletteColor: =
                DisplayMode: =DisplayMode.Edit
                FontColor: =
                Height: =Parent.Height
                Label: =var_Spinnerlabel
                LayoutMinHeight: =200
                LayoutMinWidth: =200
                Visible: =var_ShowSpinner
                Width: =Parent.Width
                X: =0
                Y: =0
                ZIndex: =1

            MailContentContainerSol As groupContainer.verticalAutoLayoutContainer:
                BorderStyle: =BorderStyle.None
                Height: =Parent.Height
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =10
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                Width: =Parent.Width
                ZIndex: =2

                Container8 As groupContainer.horizontalAutoLayoutContainer:
                    BorderStyle: =BorderStyle.None
                    FillPortions: =0
                    Height: =32
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    RadiusBottomLeft: =4
                    RadiusBottomRight: =4
                    RadiusTopLeft: =4
                    RadiusTopRight: =4
                    Width: =Parent.Width
                    ZIndex: =1

                    TextCanvas1 As Text:
                        BorderColor: =""
                        BorderStyle: =""
                        DisplayMode: =DisplayMode.Edit
                        FillPortions: =1
                        FontColor: =
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        Size: =16
                        Text: ="Send Email"
                        Weight: ='TextCanvas.Weight'.Bold
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =1

                    "Icon1 As 'Fluent Icon (1.1.29)'":
                        AlignInContainer: =AlignInContainer.Start
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        IconName: ="Cancel"
                        LayoutMinHeight: =200
                        LayoutMinWidth: =200
                        OnChange: |-
                            =UpdateContext({showEmailPanelSol: false});
                        Tooltip: ="Close"
                        Width: =32
                        X: =0
                        Y: =0
                        ZIndex: =2

                ToLineLabelContainer_1 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    FillPortions: =0
                    Height: =30
                    LayoutGap: =10
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Width: =Parent.Width
                    ZIndex: =3

                    Label_ToLine_1 As Label:
                        Alignment: =Align.Justify
                        AutoHeight: =true
                        Color: =RGBA(0, 0, 0, 1)
                        DisplayMode: =DisplayMode.Edit
                        FillPortions: =7
                        FontWeight: =FontWeight.Semibold
                        Height: =30
                        LayoutMinHeight: =32
                        LayoutMinWidth: =50
                        OnChange: =false
                        Text: ="To"
                        Width: =100
                        X: =385
                        Y: =124
                        ZIndex: =7

                "ToLine_1 As 'Fluent PeoplePicker (1.1.29) Preview'.pcfdataset":
                    AccessibilityLabel: ="Send To Line"
                    AlignInContainer: =AlignInContainer.Start
                    DisplayMode: =DisplayMode.Edit
                    Error: =false
                    Height: |-
                        =If(CountRows(ToLine_1.SelectedPeople)>0,0,32)+If(
                            RoundDown(
                                CountRows(ToLine_1.SelectedPeople),
                                0
                            ) > 0,
                            10,
                            0
                        ) + RoundDown(
                            CountRows(ToLine_1.SelectedPeople),
                            0
                        ) * 32
                    Items: =DefaultToLineUsers
                    LayoutMinHeight: =30
                    LayoutMinWidth: =200
                    MaxPeople: =100
                    OnBlur: =false
                    OnChange: =false
                    OnFocus: =false
                    OnSearch: |-
                        =ClearCollect(
                            UserCollection,
                            AddColumns(
                                    Office365Users.SearchUser(
                                        {
                                            searchTerm: Self.SearchText,
                                            top: 500
                                        }
                                    ),
                                SuggestionImgUrl,
                                Substitute(
                                    JSON(
                                        Office365Users.UserPhotoV2(Id),
                                        JSONFormat.IncludeBinaryData
                                    ),
                                    """",
                                    ""
                                ),
                                SuggestionKey,
                                UserPrincipalName,
                                SuggestionName,
                                DisplayName,
                                SuggestionRole,
                                ""
                            )
                        )
                    OnSelect: =false
                    PeoplePickerType: ='PowerCAT.PeoplePicker.PeoplePickerType'.NormalPeoplePicker
                    ShowSecondaryText: =false
                    Suggestions_Items: =UserCollection
                    Theme: =AppThemeJson
                    Tooltip: ="Select mail recipients"
                    Width: =Parent.Width
                    X: =385
                    Y: =156
                    ZIndex: =4

                Label_Subject_1 As Label:
                    Color: =
                    DisplayMode: =DisplayMode.Edit
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    LayoutMinHeight: =32
                    LayoutMinWidth: =250
                    OnChange: =false
                    Text: ="Subject"
                    VerticalAlignment: =VerticalAlign.Bottom
                    Width: =Parent.Width
                    X: =385
                    Y: |-
                        =//2206
                        ToLine_1.Y+ToLine_1.Height+10
                    ZIndex: =5

                "SubjectLine_1 As 'Text box'":
                    ColorBackground: =
                    ColorText: =
                    DisplayMode: =DisplayMode.Edit
                    Height: =30
                    LayoutMinHeight: =32
                    LayoutMinWidth: =250
                    Value: |-
                        ="Concerning Flow: " & SelectedFlow.'Display Name'
                    Width: =Parent.Width
                    X: =385
                    Y: =252
                    ZIndex: =6

                Label_Message_1 As Label:
                    Color: =
                    DisplayMode: =DisplayMode.Edit
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    LayoutMinHeight: =32
                    LayoutMinWidth: =250
                    OnChange: =false
                    Text: ="Message"
                    VerticalAlignment: =VerticalAlign.Bottom
                    Width: =320
                    X: =385
                    Y: =311
                    ZIndex: =7

                RichTextEditor1_1 As richTextEditor:
                    BorderColor: =RGBA(166, 166, 166, 1)
                    Default: |-
                        ="<strong>Link to Flow: </strong> <a href=" & SelectFlowLink & ">" & SelectedFlow.'Display Name' & "</a>"
                    FillPortions: =1
                    LayoutMinWidth: =250
                    Width: =Parent.Width
                    X: =385
                    Y: =365
                    ZIndex: =8

                EmailCommandBarContainer_1 As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    FillPortions: =0
                    Height: =50
                    LayoutAlignItems: =LayoutAlignItems.End
                    LayoutGap: =10
                    LayoutJustifyContent: =LayoutJustifyContent.End
                    LayoutMinHeight: =43
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Width: =Parent.Width
                    ZIndex: =9

                    ButtonCanvas1 As Button:
                        Align: =""
                        Appearance: ='ButtonCanvas.Appearance'.Primary
                        BasePaletteColor: =
                        BorderColor: =""
                        BorderStyle: =""
                        DisabledBorderColor: =""
                        DisplayMode: |-
                            =If(
                                CountRows(ToLine_1.SelectedPeople) > 0,
                                DisplayMode.Edit,
                                DisplayMode.Disabled
                            )
                        FocusedBorderColor: =""
                        FontColor: =
                        Height: =32
                        HoverBorderColor: =""
                        Icon: =""
                        IconRotation: =0
                        IconStyle: ="Outline"
                        Layout: ="Icon before"
                        LayoutMinHeight: =32
                        LayoutMinWidth: =96
                        OnSelect: |
                            =UpdateContext(
                                {
                                    var_ShowSpinner: true,
                                    var_Spinnerlabel: "Sending Mail"
                                }
                            );
                            ForAll(
                                ToLine_1.SelectedPeople,
                                Office365Outlook.SendEmailV2(
                                    PersonaKey,
                                    SubjectLine_1.Value,
                                    RichTextEditor1_1.HtmlText,
                                    {Importance: "Normal"}
                                )
                            );
                            Notify(
                                "The app users have been emailed successfully.",
                                NotificationType.Success
                            );
                            UpdateContext({var_ShowSpinner: false});
                        PressedBorderColor: =""
                        Text: ="Send"
                        VerticalAlign: =""
                        Width: =96
                        X: =0
                        Y: =0
                        ZIndex: =4

        ListMembersContainer As groupContainer.verticalAutoLayoutContainer:
            BorderStyle: =BorderStyle.None
            FillPortions: =0
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingBottom: =20
            PaddingLeft: =20
            PaddingRight: =20
            PaddingTop: =20
            RadiusBottomLeft: =4
            RadiusBottomRight: =4
            RadiusTopLeft: =4
            RadiusTopRight: =4
            Visible: =showAddUsersSol
            Width: =If(App.ActiveScreen.Size > ScreenSize.Small, 420, Parent.Width)
            ZIndex: =3

            spinnerPermSol As Spinner:
                BasePaletteColor: =
                DisplayMode: =DisplayMode.Edit
                FontColor: =
                Height: =Parent.Height
                Label: =var_Spinnerlabel
                LayoutMinHeight: =200
                LayoutMinWidth: =200
                Visible: |
                    =var_ShowSpinner
                Width: =Parent.Width
                X: =0   
                Y: =0
                ZIndex: =1

            conAddPermissions_2 As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                Height: =Parent.Height
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutDirection: =LayoutDirection.Vertical
                LayoutGap: =8
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width-40
                ZIndex: =2

                SubtitleContainer_2 As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.Start
                    FillPortions: =0
                    Height: =32
                    LayoutGap: =5
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    Width: =Parent.Width
                    X: =40
                    Y: |-
                        =//40
                        0
                    ZIndex: =2

                    "icoBackPrev_2 As 'Fluent Icon (1.1.29)'":
                        DisplayMode: =DisplayMode.Edit
                        FontSize: =18
                        Height: =32
                        IconName: ="Back"
                        IconSize: =18
                        IconType: ='PowerCAT.Icon.IconType'.IconButon
                        LayoutMinHeight: =200
                        LayoutMinWidth: =200
                        OnChange: |+
                            =UpdateContext({var_pivotkey: "tabMembers"});
                            
                        Theme: =AppThemeJson
                        Tooltip: ="Back"
                        Visible: =If(var_pivotkey = "tabAddUser" || var_pivotkey = "tabAddGroup",true,false)
                        Width: =32
                        X: =40
                        Y: =40
                        ZIndex: =1

                    lblPanelSubtitle_2 As Label:
                        Alignment: =Align.Justify
                        Color: =
                        DisplayMode: =DisplayMode.Edit
                        FillPortions: =1
                        FontSize: =12
                        FontWeight: =FontWeight.Semibold
                        Height: =32
                        LayoutMinHeight: =32
                        LayoutMinWidth: =300
                        OnChange: =false
                        Text: |-
                            =/*If(
                                var_pivotkey = "tabAddUser",
                                "Grant permission to a user",
                                If(
                                    var_pivotkey = "tabAddGroup",
                                    "Grant permission to a group",
                                    "List of members"
                                )
                            )*/
                            "Grant permission to a user"
                        Width: =Parent.Width - Parent.PaddingLeft
                        X: =0
                        Y: =0
                        ZIndex: =2

                    "Icon1_1 As 'Fluent Icon (1.1.29)'":
                        AlignInContainer: =AlignInContainer.Start
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        IconName: ="Cancel"
                        LayoutMinHeight: =200
                        LayoutMinWidth: =200
                        OnChange: |-
                            =UpdateContext({showEmailPanelSol: false,showAddUsersSol: false});
                        Tooltip: ="Close"
                        Width: =32
                        X: =0
                        Y: =0
                        ZIndex: =3

                AddUsersContainer_2 As groupContainer.verticalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    Height: =Parent.Height
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutGap: =10
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingLeft: =5
                    PaddingRight: =5
                    Visible: |-
                        =//If(var_pivotkey = "tabAddUser",true,false)
                        true
                    Width: =Parent.Width
                    ZIndex: =3

                    lblAddUsers_6 As Label:
                        Color: =
                        DisplayMode: =DisplayMode.Edit
                        FontSize: =11
                        FontWeight: =FontWeight.Semibold
                        Height: =30
                        LayoutMinHeight: =32
                        LayoutMinWidth: =320
                        OnChange: =false
                        Text: ="Select user"
                        Width: =Parent.Width
                        X: =24
                        Y: =102
                        ZIndex: =1

                    "PeoplePickerFlowSol As 'Fluent PeoplePicker (1.1.29) Preview'.pcfdataset":
                        AlignInContainer: =AlignInContainer.Stretch
                        DisplayMode: =DisplayMode.Edit
                        Error: =false
                        Height: |-
                            =If(CountRows(ToLine_1.SelectedPeople)>0,0,32)+If(
                                RoundDown(
                                    CountRows(ToLine_1.SelectedPeople),
                                    0
                                ) > 0,
                                10,
                                0
                            ) + RoundDown(
                                CountRows(ToLine_1.SelectedPeople),
                                0
                            ) * 32
                        Items: =DefaultUserCollection
                        LayoutMinHeight: =200
                        LayoutMinWidth: =200
                        MaxPeople: =1
                        OnBlur: =false
                        OnFocus: =false
                        OnSearch: |
                            =IfError(
                                Office365Users.SearchUserV2(
                                    {
                                        searchTerm: Self.SearchText,
                                        top: 500
                                    }
                                ),
                                Error(FirstError)
                            );
                            ClearCollect(
                                UserCollection,
                                AddColumns(
                                    Office365Users.SearchUserV2(
                                        {
                                            searchTerm: Self.SearchText,
                                            top: 500
                                        }
                                    ).value,
                                    SuggestionImgUrl,
                                    Substitute(
                                        JSON(
                                            Office365Users.UserPhotoV2(Id),
                                            JSONFormat.IncludeBinaryData
                                        ),
                                        """",
                                        ""
                                    ),
                                    SuggestionKey,
                                    Id,
                                    SuggestionName,
                                    DisplayName,
                                    SuggestionRole,
                                    JobTitle
                                )
                            );
                        ShowSecondaryText: =true
                        Suggestions_Items: =UserCollection
                        Theme: =AppThemeJson
                        Width: =200
                        X: =20
                        Y: =0
                        ZIndex: =2

                        DisplayName5_3 As pcfDataField.textualColumn:
                            FieldDisplayName: ="DisplayName"
                            FieldName: ="DisplayName"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =3
                            ZIndex: =55

                        Email2_3 As pcfDataField.textualColumn:
                            FieldDisplayName: ="Email"
                            FieldName: ="Email"
                            FieldType: ="s"
                            FieldVariantName: ="textualColumn"
                            Order: =2
                            ZIndex: =56

                    PanelFooterContainer_4 As groupContainer.manualLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        Height: =Parent.Height - Self.Y
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        Width: =Parent.Width - Parent.PaddingLeft * 2
                        ZIndex: =7

                        icoFooterDivider_4 As rectangle:
                            BorderColor: =//ColorValue(AppTheme.palette.neutralLight)
                            BorderThickness: =0.1
                            DisabledFill: =RGBA(166, 166, 166, 1)
                            Fill: =RGBA(0, 120, 212, 1)
                            FocusedBorderColor: =RGBA(0, 120, 212, 1)
                            Height: =0.1
                            HoverFill: =RGBA(0, 120, 212, 1)
                            PressedFill: =RGBA(0, 120, 212, 1)
                            Width: =Parent.Width
                            Y: =btnAddUserAppDetails.Y - 10
                            ZIndex: =2

                        btnAddUserAppDetails As Button:
                            Align: =""
                            BasePaletteColor: =
                            BorderColor: =""
                            BorderStyle: =""
                            DisabledBorderColor: =""
                            DisplayMode: |-
                                =If(
                                    !IsBlankOrError(First(PeoplePickerFlowSol.SelectedPeople)),
                                    DisplayMode.Edit,
                                    DisplayMode.Disabled
                                )
                            FocusedBorderColor: =""
                            Font: ="'Segoe UI', 'Open Sans', sans-serif"
                            FontColor: =
                            FontSize: =12
                            FontWeight: =FontWeight.Normal
                            Height: =32  
                            HoverBorderColor: =""
                            Icon: =""
                            IconRotation: =0
                            IconStyle: ="Outline"
                            Layout: ="Icon before"
                            OnSelect: |
                                =UpdateContext(
                                    {
                                        var_ShowSpinner: true,
                                        var_Spinnerlabel: "Assigning Permission..."
                                    }
                                );
                                Set(
                                    var_selectedUser,
                                    First(PeoplePickerFlowSol.SelectedPeople).PersonaKey
                                );
                                Set(
                                    var_selectedUserID,
                                    Office365Users.UserProfileV2(var_selectedUser).id
                                );
                                Set(
                                    var_selectedUserName,
                                    Office365Users.UserProfileV2(var_selectedUser).displayName
                                );
                                UpdateContext(
                                    {
                                        var_ResponseMessage: 'HELPER-ObjectOperations'.Run(
                                            var_selectedUserID,
                                            SelectedFlow.Flow,
                                            SelectedFlow.'Flow Environment'.Name,
                                            "assign",
                                            "flow"
                                        ).thereturnstring
                                    }
                                );
                                UpdateContext({var_ShowSpinner: false});
                                If(
                                    var_ResponseMessage <> "pass",
                                    Notify(
                                        var_ResponseMessage,
                                        NotificationType.Error
                                    ),
                                    Notify(
                                        "Permission granted to " & var_selectedUserName,
                                        NotificationType.Success
                                    );
                                    UpdateContext({var_ShowShimmer: true});
                                    //Select(Hidden_UpdateTable_SolutionFlow);
                                Select(refreshFlowRolesSol);
                                    
                                );
                                ClearCollect(
                                    DefaultUserCollection,
                                    User()
                                );
                                ClearCollect(
                                    DefaultUserCollection,
                                    Blank()
                                );
                                UpdateContext({var_ShowShimmer: false});
                            PressedBorderColor: =""
                            Text: ="Assign as owner"
                            VerticalAlign: =""
                            Width: =115
                            X: =0
                            Y: =Parent.Height - Self.Height -10
                            ZIndex: =4

