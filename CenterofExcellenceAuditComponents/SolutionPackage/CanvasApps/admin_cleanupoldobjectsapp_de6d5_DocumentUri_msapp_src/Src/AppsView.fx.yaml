AppsView As screen:
    OnVisible: |-
        =//FIRST LOAD ONLY
        If(FirstLoad,
        
        //loading gif
        UpdateContext({ShowLoading: true});
        Set(FirstLoad, false);
        
        //settings for links
        Set(Settings, First('COE Settings'));
        Set(CurrentArchiveItem, First('Archive Approvals'));
        
        //who to show in the table
        Set(theMaker, LookUp(Makers, 'User Principal Name'=theLoggedInUserEmail));
        Set(theMakerID, theMaker.Maker);
        
        //Get archive records into collections
        ClearCollect(theAppsApprovedForDeletes, Filter('Archive Approvals', 'Archive Approvals (Views)'.'APPS  - approved'));
        ClearCollect(theFlowsApprovedForDeletes, Filter('Archive Approvals', 'Archive Approvals (Views)'.'FLOWS - approved'));
        ClearCollect(theAppsRejectedForDeletes, Filter('Archive Approvals', 'Archive Approvals (Views)'.'APPS  - rejected and excused'));
        Collect(theAppsRejectedForDeletes, Filter('Archive Approvals', 'Archive Approvals (Views)'.'APPS  - rejected but not yet excused'));
        ClearCollect(theFlowsRejectedForDeletes, Filter('Archive Approvals', 'Archive Approvals (Views)'.'FLOWS - rejected and excused'));
        Collect(theFlowsRejectedForDeletes, Filter('Archive Approvals', 'Archive Approvals (Views)'.'FLOWS - rejected but not yet excused'));
        
        //Get the users apps that are in the archival system
        ClearCollect(theApps,
            AddColumns(Filter('PowerApps Apps', 'App Owner'.Maker=theMakerID && 'App Type'= 'PowerApps Type'.Canvas && 'App Deleted'<>'App Deleted (PowerApps Apps)'.Yes),
            "envDisplayName", 'App Environment'.'Display Name',
            "envName", 'App Environment'.Name,
            "DisplayName", DisplayName,
            "theGUID", App,
            "requestsIgnoredSince", 'App Archive Request Ignored Since',
            "Excused", If('App Excused From Archival' = 'App Excused From Archival (PowerApps Apps)'.Yes, true, false),
            "approvedForDelete", If(CountRows(Filter(theAppsApprovedForDeletes, Name=Text(App)))>0, true, false),
            "rejectedForDelete", If(CountRows(Filter(theAppsRejectedForDeletes, Name=Text(App)))>0, true, false),
            "lastModified", AppLastModified,
            "lastLaunched", 'App Last Launched On',
            "activeUsers", 'Monthly Active Usage',
            "sharedUsers", 'Shared Total',
            "inArchivalSystem", If(IsBlank('App Archive Request Ignored Since') 
                       && CountRows(Filter(theAppsApprovedForDeletes, Name=Text(App))) <= 0
                       && CountRows(Filter(theAppsRejectedForDeletes, Name=Text(App))) <= 0, false, true)));
        RemoveIf(theApps, inArchivalSystem=false);
        
        //Get the users flows that are in the archival system
        ClearCollect(theFlows,
            AddColumns(Filter(Flows, DerivedOwner.Maker=theMakerID && 'Flow Deleted'<>'Flow Deleted (Flows)'.Yes),
            "envDisplayName", 'Flow Environment'.'Display Name',
            "envName", 'Flow Environment'.Name,
            "DisplayName", DisplayName,
            "theGUID", Flow,
            "requestsIgnoredSince", 'Flow Archive Request Ignored Since',
            "Excused", If('Flow Excused From Archival' = 'Flow Excused From Archival (Flows)'.Yes, true, false),
            "approvedForDelete", If(CountRows(Filter(theFlowsApprovedForDeletes, Name=Text(Flow)))>0, true, false),
            "rejectedForDelete", If(CountRows(Filter(theFlowsRejectedForDeletes, Name=Text(Flow)))>0, true, false),
            "inArchivalSystem", If(IsBlank('Flow Archive Request Ignored Since') 
                       && CountRows(Filter(theFlowsApprovedForDeletes, Name=Text(Flow))) <= 0
                       && CountRows(Filter(theFlowsRejectedForDeletes, Name=Text(Flow))) <= 0, false, true)));
        RemoveIf(theFlows, inArchivalSystem=false);
        
        );//end first run only
        
        //Get first Seleted App
        UpdateContext({SelectedApp: First(theApps)});
        UpdateContext({AppApprovedComment: LookUp(theAppsApprovedForDeletes, Name=Text(SelectedApp.App)).'Approval Comment'});
        UpdateContext({AppRejectedComment: LookUp(theAppsRejectedForDeletes, Name=Text(SelectedApp.App)).'Approval Comment'});
        UpdateContext({SelectedAppComment: If(!IsBlank(AppApprovedComment), AppApprovedComment, If(!IsBlank(AppRejectedComment), AppRejectedComment, "none"))});
        
        //Set visiable variables
        UpdateContext({ShowVerifyDelete: false});
        UpdateContext({ShowSendReject: false});
        UpdateContext({ShowSendApprove: false});
        UpdateContext({ShowBurgerMenu: false});
        UpdateContext({AppsToShow: CountRows(theApps)>0});
        UpdateContext({ShowLoading: false});

    AppList As gallery.galleryVertical:
        Height: =664
        Items: =theApps
        Layout: =Layout.Vertical
        OnSelect: |-
            =UpdateContext({SelectedApp: ThisItem});
            UpdateContext({AppApprovedComment: LookUp(theAppsApprovedForDeletes, Name=Text(SelectedApp.App)).'Approval Comment'});
            UpdateContext({AppRejectedComment: LookUp(theAppsRejectedForDeletes, Name=Text(SelectedApp.App)).'Approval Comment'});
            UpdateContext({SelectedAppComment: If(!IsBlank(AppApprovedComment), AppApprovedComment, If(!IsBlank(AppRejectedComment), AppRejectedComment, "none"))});
        TemplateFill: =If(ThisItem.IsSelected, RGBA(112, 39, 117, .05))
        TemplateSize: =56
        Visible: =CountRows(theApps)>0
        Width: =Parent.Width*(2/3)
        Y: =102
        ZIndex: =17

        AppInfo As label:
            Color: =AppEnvtName.Color
            Fill: =If(ThisItem.approvedForDelete || ThisItem.rejectedForDelete, RGBA(204,255,179, .2), RGBA(0,0,0,0))
            Height: =Parent.TemplateHeight
            OnSelect: =Select(Parent)
            Text: =If(ThisItem.approvedForDelete, "Approved for Delete", If(ThisItem.rejectedForDelete, "Rejected for Delete", "No Response"))
            Width: =Parent.Width/3
            X: =AppName.X+AppName.Width
            ZIndex: =1

        AppName As label:
            Color: =AppEnvtName.Color
            Height: =Parent.TemplateHeight
            OnSelect: =Select(Parent)
            Text: =ThisItem.'App Display Name'
            Width: =Parent.Width/3
            X: =AppEnvtName.X+AppEnvtName.Width
            ZIndex: =2

        AppEnvtName As label:
            Color: =Black
            Height: =Parent.TemplateHeight
            OnSelect: =Select(Parent)
            Text: =ThisItem.'App Environment'.admin_displayname
            Width: =Parent.Width/3
            ZIndex: =3

    AppStatusLabel As label:
        FontWeight: =Bold
        Text: ="Status"
        Visible: =CountRows(theApps)>0
        X: =AppInfo.X
        Y: =57
        ZIndex: =18

    AppNameLabel As label:
        FontWeight: =Bold
        Text: ="App"
        Visible: =CountRows(theApps)>0
        X: =AppName.X
        Y: =57
        ZIndex: =19

    AppEnvtLabel As label:
        FontWeight: =Bold
        Text: ="Environment"
        Visible: =CountRows(theApps)>0
        X: =AppList.X
        Y: =57
        ZIndex: =20

    VerifyDelete As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =28

        VerifyDeleteBG As rectangle:
            BorderColor: =RGBA(112, 39, 117, 1)
            BorderThickness: =3
            Fill: =RGBA(255, 255, 255, 1)
            Height: =If(Self.Visible, 215, 0)
            Visible: =ShowVerifyDelete
            Width: =If(Self.Visible, 450, 0)
            X: =If(Self.Visible, 500, 0)
            Y: =If(Self.Visible, 300, 0)
            ZIndex: =21

        VerifyDeleteText As label:
            Height: =If(Self.Visible, VerifyDeleteBG.Height*.4, 0)
            Text: |-
                ="Are you sure you want to delete? 
                This cannot be undone. "
            Visible: =ShowVerifyDelete
            Width: =If(Self.Visible, VerifyDeleteBG.Width*.8, 0)
            X: =If(Self.Visible, VerifyDeleteBG.X+80, 0)
            Y: =If(Self.Visible, VerifyDeleteBG.Y+40, 0)
            ZIndex: =22

        VerifyDeleteCancel1 As icon.CancelBadge:
            Color: =RGBA(112, 39, 117, 1)
            Height: =If(Self.Visible, 35, 0)
            Icon: =Icon.CancelBadge
            OnSelect: |-
                =UpdateContext({ShowVerifyDelete: false});
            Visible: =ShowVerifyDelete
            Width: =If(Self.Visible, 35, 0)
            X: =If(Self.Visible, VerifyDeleteBG.X+VerifyDeleteBG.Width-40, 0)
            Y: =If(Self.Visible, VerifyDeleteBG.Y+5, 0)
            ZIndex: =23

        VerifyDeleteOK As button:
            Fill: =RGBA(112, 39, 117, 1)
            Height: =If(Self.Visible, VerifyDeleteBG.Height*.2, 0)
            OnSelect: |-
                =PowerAppsforAdmins.RemoveAdminApp(SelectedApp.envName, SelectedApp.theGUID, {'api-version': "2016-11-01"});
                Patch('PowerApps Apps', LookUp('PowerApps Apps', App=SelectedApp.theGUID), {'App Deleted': true, 'App Deleted On': Now()});
                RemoveIf(theApps, theGUID=SelectedApp.theGUID);
                UpdateContext({ShowVerifyDelete: false});
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: ="Delete"
            Visible: =ShowVerifyDelete
            Width: =If(Self.Visible, VerifyDeleteBG.Width*.4, 0)
            X: =If(Self.Visible, VerifyDeleteBG.X+50, 0)
            Y: =If(Self.Visible, VerifyDeleteBG.Y+150, 0)
            ZIndex: =24

        VerifyDeleteCancel2 As button:
            Fill: =RGBA(112, 39, 117, 1)
            Height: =VerifyDeleteOK.Height
            OnSelect: |-
                =UpdateContext({ShowVerifyDelete: false});
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: ="Cancel"
            Visible: =ShowVerifyDelete
            Width: =VerifyDeleteOK.Width
            X: =If(Self.Visible, VerifyDeleteBG.X+250, 0)
            Y: =If(Self.Visible, VerifyDeleteBG.Y+150, 0)
            ZIndex: =25

    VerifySendApproval As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =34

        VerifySendApprovalBG As rectangle:
            BorderColor: =RGBA(112, 39, 117, 1)
            BorderThickness: =3
            Fill: =RGBA(255, 255, 255, 1)
            Height: =If(Self.Visible, 215, 0)
            Visible: =ShowSendApprove
            Width: =If(Self.Visible, 450, 0)
            X: =If(Self.Visible, 500, 0)
            Y: =If(Self.Visible, 300, 0)
            ZIndex: =26

        VerifySendApprovalCancel1 As icon.CancelBadge:
            Color: =RGBA(112, 39, 117, 1)
            Height: =Self.Width
            Icon: =Icon.CancelBadge
            OnSelect: |-
                =UpdateContext({ShowSendApprove: false});
            Visible: =ShowSendApprove
            Width: =VerifySendApprovalBG.Width*.07
            X: =If(Self.Visible, VerifySendApprovalBG.X+VerifySendApprovalBG.Width-Self.Width-5, 0)
            Y: =If(Self.Visible, VerifySendApprovalBG.Y+5, 0)
            ZIndex: =27

        VerifySendApprovalSubmit As button:
            Fill: =RGBA(112, 39, 117, 1)
            Height: =If(Self.Visible, VerifySendApprovalBG.Height*.2, 0)
            HoverBorderColor: =Self.BorderColor
            HoverColor: =Self.Color
            HoverFill: =Self.Fill
            OnSelect: |-
                =//loading dialog
                UpdateContext({ShowLoading: true});
                
                //update data on backend
                Set(CurrentArchiveItem, Patch('Archive Approvals', First(SortByColumns(Filter('Archive Approvals', Name=Text(SelectedApp.theGUID)), "createdon", Descending)), {'Approval Response': "Approve", 'Approval Comment':VerifySendApprovalInput.Text, 'Approval Response Date': Now()}));
                UpdateIf('PowerApps Apps', App=SelectedApp.theGUID, {'App Archive Request Ignored Since': Blank()});
                UpdateIf(theApps, App=SelectedApp.theGUID, {'App Archive Request Ignored Since': Blank()});
                Remove('Archive Approvals', Filter('Archive Approvals', 'Archive Approval ' <> CurrentArchiveItem.'Archive Approval ' &&  Name=Text(SelectedApp.theGUID)));
                Refresh('Archive Approvals');
                
                //update collections
                UpdateIf(theApps, App=SelectedApp.theGUID, {rejectedForDelete: false, approvedForDelete: true, requestsIgnoredSince: Blank()});
                RemoveIf(theAppsRejectedForDeletes, Name=Text(SelectedApp.theGUID));
                If(CountRows(Filter(theAppsApprovedForDeletes, Name=Text(SelectedApp.theGUID)))<1, Collect(theAppsApprovedForDeletes, CurrentArchiveItem));
                UpdateContext({SelectedAppComment: VerifySendApprovalInput.Text});
                
                //close dialog
                UpdateContext({ShowSendApprove: false});
                UpdateContext({ShowLoading: false});
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: ="Approve"
            Visible: =ShowSendApprove
            Width: =If(Self.Visible, VerifySendApprovalBG.Width*.4, 0)
            X: =If(Self.Visible, VerifySendApprovalBG.X+50, 0)
            Y: =If(Self.Visible, VerifySendApprovalBG.Y+VerifySendApprovalBG.Height-Self.Height-15, 0)
            ZIndex: =28

        VerifySendApprovalCancel2 As button:
            Fill: =RGBA(112, 39, 117, 1)
            Height: =VerifySendApprovalSubmit.Height
            HoverBorderColor: =Self.BorderColor
            HoverColor: =Self.Color
            HoverFill: =Self.Fill
            OnSelect: |-
                =UpdateContext({ShowSendApprove: false});
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: ="Cancel"
            Visible: =ShowSendApprove
            Width: =VerifySendApprovalSubmit.Width
            X: =If(Self.Visible, VerifySendApprovalBG.X+250, 0)
            Y: =If(Self.Visible, VerifySendApprovalBG.Y+VerifySendApprovalBG.Height-Self.Height-15, 0)
            ZIndex: =29

        VerifySendApprovalInput As text:
            BorderColor: =RGBA(0, 18, 107, .25)
            Default: =""
            Height: =If(Self.Visible, VerifySendApprovalBG.Height*.4, 0)
            HintText: ="Enter comment about approval"
            HoverBorderColor: =Self.BorderColor
            HoverColor: =Self.Color
            HoverFill: =Self.Fill
            Visible: =ShowSendApprove
            Width: =If(Self.Visible, VerifySendApprovalBG.Width*.8, 0)
            X: =If(Self.Visible, (VerifySendApprovalBG.Width-Self.Width)/2 + VerifySendApprovalBG.X, 0)
            Y: =If(Self.Visible, VerifySendApprovalBG.Y+40, 0)
            ZIndex: =30

    AppTitleBar As label:
        Align: =Center
        Color: =RGBA(255, 255, 255, 1)
        Fill: =RGBA(112, 39, 117, 1)
        FontWeight: =Bold
        Height: =50
        Text: ="Archive Request Clean Up -- " & theMaker.'Display Name' & " -- APPS"
        Width: =Parent.Width
        ZIndex: =36

    AppBurger As icon.Hamburger:
        Color: =RGBA(255, 255, 255, 1)
        Height: =AppTitleBar.Height
        Icon: =Icon.Hamburger
        OnSelect: |-
            =UpdateContext({ShowBurgerMenu: !ShowBurgerMenu})
        Width: =Self.Height
        X: =Parent.Width-Self.Width-5
        ZIndex: =37

    VerifySendReject As group:
        Height: =5
        Width: =5
        X: =520
        Y: =320
        ZIndex: =39

        VerifySendRejectlBG As rectangle:
            BorderColor: =RGBA(112, 39, 117, 1)
            BorderThickness: =3
            Fill: =RGBA(255, 255, 255, 1)
            Height: =If(Self.Visible, 215, 0)
            Visible: =ShowSendReject
            Width: =If(Self.Visible, 450, 0)
            X: =If(Self.Visible, 500, 0)
            Y: =If(Self.Visible, 300, 0)
            ZIndex: =31

        VerifySendRejectCancel1 As icon.CancelBadge:
            Color: =RGBA(112, 39, 117, 1)
            Height: =Self.Width
            Icon: =Icon.CancelBadge
            OnSelect: |-
                =UpdateContext({ShowSendReject: false});
            Visible: =ShowSendReject
            Width: =VerifySendRejectlBG.Width*.07
            X: =If(Self.Visible, VerifySendRejectlBG.X+VerifySendRejectlBG.Width-Self.Width-5, 0)
            Y: =If(Self.Visible, VerifySendRejectlBG.Y+5, 0)
            ZIndex: =32

        VerifySendRejectSubmit As button:
            Fill: =RGBA(112, 39, 117, 1)
            Height: =If(Self.Visible, VerifySendRejectlBG.Height*.2, 0)
            HoverBorderColor: =Self.BorderColor
            HoverColor: =Self.Color
            HoverFill: =Self.Fill
            OnSelect: |-
                =//loading dialog
                UpdateContext({ShowLoading: true});
                
                //update data on backend
                Set(CurrentArchiveItem, Patch('Archive Approvals', First(SortByColumns(Filter('Archive Approvals', Name=Text(SelectedApp.theGUID)), "createdon", Descending)), {'Approval Response': "Reject", 'Approval Comment':VerifySendRejectInput.Text, 'Approval Response Date': Now()}));
                UpdateIf('PowerApps Apps', App=SelectedApp.theGUID, {'App Archive Request Ignored Since': Blank()});
                UpdateIf(theApps, App=SelectedApp.theGUID, {'App Archive Request Ignored Since': Blank()});
                Remove('Archive Approvals', Filter('Archive Approvals', 'Archive Approval ' <> CurrentArchiveItem.'Archive Approval ' &&  Name=Text(SelectedApp.theGUID)));
                Refresh('Archive Approvals');
                
                //update collections
                UpdateIf(theApps, App=SelectedApp.theGUID, {rejectedForDelete: true, approvedForDelete: false, requestsIgnoredSince: Blank()});
                RemoveIf(theAppsApprovedForDeletes, Name=Text(SelectedApp.theGUID));
                If(CountRows(Filter(theAppsRejectedForDeletes, Name=Text(SelectedApp.theGUID)))<1, Collect(theAppsRejectedForDeletes, CurrentArchiveItem));
                UpdateContext({SelectedAppComment: VerifySendApprovalInput.Text});
                
                //close dialog
                UpdateContext({ShowSendReject: false});
                UpdateContext({ShowLoading: false});
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: ="Reject"
            Visible: =ShowSendReject
            Width: =If(Self.Visible, VerifySendRejectlBG.Width*.4, 0)
            X: =If(Self.Visible, VerifySendRejectlBG.X+50, 0)
            Y: =If(Self.Visible, VerifySendRejectlBG.Y+VerifySendRejectlBG.Height-Self.Height-15, 0)
            ZIndex: =33

        VerifySendRejectCancel2 As button:
            Fill: =RGBA(112, 39, 117, 1)
            Height: =VerifySendRejectSubmit.Height
            HoverBorderColor: =Self.BorderColor
            HoverColor: =Self.Color
            HoverFill: =Self.Fill
            OnSelect: |-
                =UpdateContext({ShowSendReject: false});
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: ="Cancel"
            Visible: =ShowSendReject
            Width: =VerifySendRejectSubmit.Width
            X: =If(Self.Visible, VerifySendRejectlBG.X+250, 0)
            Y: =If(Self.Visible, VerifySendRejectlBG.Y+VerifySendRejectlBG.Height-Self.Height-15, 0)
            ZIndex: =34

        VerifySendRejectInput As text:
            BorderColor: =RGBA(0, 18, 107, .25)
            Default: =""
            Height: =If(Self.Visible, VerifySendRejectlBG.Height*.4, 0)
            HintText: ="Enter comment about rejection"
            HoverBorderColor: =Self.BorderColor
            HoverColor: =Self.Color
            HoverFill: =Self.Fill
            Reset: =true
            Visible: =ShowSendReject
            Width: =If(Self.Visible, VerifySendRejectlBG.Width*.8, 0)
            X: =If(Self.Visible, (VerifySendRejectlBG.Width-Self.Width)/2 + VerifySendRejectlBG.X, 0)
            Y: =If(Self.Visible, VerifySendRejectlBG.Y+40, 0)
            ZIndex: =35

    ActOnThisApp As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =39

        AppHelperNote As label:
            Height: =102
            Text: |-
                ="Approval will delete the app in 3 weeks
                Rejection will exempt you from asks for 4 weeks
                For longer exemption, about 6 months, please launch or resave the app"
            Visible: =AppsToShow
            Width: =Parent.Width/3
            X: =Parent.Width *(2/3)
            Y: =RejectDeleteApp.Y+RejectDeleteApp.Height+20
            ZIndex: =1

        RejectDeleteApp As button:
            Fill: =RGBA(112, 39, 117, 1)
            Height: =55
            OnSelect: |-
                =Reset(VerifySendRejectInput);
                UpdateContext({ShowSendReject: true});
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Text: ="Reject deletion"
            Visible: =AppsToShow
            Width: =(Parent.Width/7)*2
            X: =ApproveDeleteApp.X
            Y: =ApproveDeleteApp.Y+ApproveDeleteApp.Height+15
            ZIndex: =2

        ApproveDeleteApp As button:
            Fill: =RGBA(112, 39, 117, 1)
            Height: =55
            OnSelect: |-
                =Reset(VerifySendApprovalInput);
                UpdateContext({ShowSendApprove: true});
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Text: ="Approve deletion"
            Visible: =AppsToShow
            Width: =(Parent.Width/7)*2
            X: =AppLastModified.X
            Y: =AppComment.Y+AppComment.Height+20
            ZIndex: =3

        AppCommentResponse As label:
            Align: =Center
            Height: =50
            Text: =SelectedAppComment
            Tooltip: =SelectedAppComment
            Visible: =AppsToShow
            Width: =AppLastModified.Width
            X: =AppLastModifiedResult.X
            Y: =AppComment.Y
            ZIndex: =4

        AppComment As label:
            Height: =50
            Text: |-
                ="Approval Comment:"
            Visible: =AppsToShow
            Width: =AppLastModified.Width
            X: =AppLastModified.X
            Y: =AppIgnoredDate.Y+AppIgnoredDate.Height+5
            ZIndex: =5

        AppIgnoredDateResult As label:
            Align: =Center
            Height: =50
            Text: =Text(SelectedApp.'App Archive Request Ignored Since', ShortDate)
            Visible: =AppsToShow
            Width: =AppLastModified.Width
            X: =AppLastModifiedResult.X
            Y: =AppIgnoredDate.Y
            ZIndex: =6

        AppIgnoredDate As label:
            Height: =50
            Text: |-
                ="Approvals Ignored Since:"
            Visible: =AppsToShow
            Width: =AppLastModified.Width
            X: =AppLastModified.X
            Y: =AppMAU.Y+AppMAU.Height+5
            ZIndex: =7

        AppMAUResult As label:
            Align: =Center
            Height: =50
            Text: =If(IsBlank(SelectedApp.'Monthly Active Usage'), "unknown", SelectedApp.'Monthly Active Usage')
            Visible: =AppsToShow
            Width: =AppLastModified.Width
            X: =AppLastModifiedResult.X
            Y: =AppMAU.Y
            ZIndex: =8

        AppMAU As label:
            Height: =50
            Text: |-
                ="Monthly Active Users:"
            Visible: =AppsToShow
            Width: =AppLastModified.Width
            X: =AppLastModified.X
            Y: =AppLastLaunched.Y+AppLastLaunched.Height+5
            ZIndex: =9

        AppLastLaunchedResult As label:
            Align: =Center
            Height: =50
            Text: =If(IsBlank(SelectedApp.'App Last Launched On'), "unknown", Text(SelectedApp.'App Last Launched On', ShortDate))
            Visible: =AppsToShow
            Width: =AppLastModified.Width
            X: =AppLastModifiedResult.X
            Y: =AppLastLaunched.Y
            ZIndex: =10

        AppLastLaunched As label:
            Height: =50
            Text: |-
                ="Last Launched:"
            Visible: =AppsToShow
            Width: =AppLastModified.Width
            X: =AppLastModified.X
            Y: =AppLastModified.Y+AppLastModified.Height+5
            ZIndex: =11

        AppLastModifiedResult As label:
            Align: =Center
            Height: =50
            Text: =If(IsBlank(SelectedApp.'App Modified On'), "unknown", Text(SelectedApp.'App Modified On', ShortDate))
            Visible: =AppsToShow
            Width: =AppLastModified.Width
            X: =AppLastModified.X+AppLastModified.Width
            Y: =AppLastModified.Y
            ZIndex: =12

        AppLastModified As label:
            Height: =50
            Text: |-
                ="Last Modified:"
            Visible: =AppsToShow
            Width: =(Parent.Width/7)
            X: =AppNameAgain.X+10 
            Y: =188
            ZIndex: =13

        DeleteApp As icon.Settings:
            Height: =SettingsApp.Height
            Icon: =Icon.Trash
            OnSelect: |-
                =UpdateContext({ShowVerifyDelete: true});
            Tooltip: ="Delete App"
            Visible: =AppsToShow
            Width: =Self.Height
            X: =SettingsApp.X+SettingsApp.Width+5
            Y: =SettingsApp.Y
            ZIndex: =14

        SettingsApp As icon.Settings:
            Height: =AppNameAgain.Height*2/3
            Icon: =Icon.Settings
            OnSelect: =Launch(Settings.'Maker URL' &  "/environments/" & SelectedApp.envName & "/apps/" & SelectedApp.theGUID & "/details")
            Tooltip: ="Go to App Settings"
            Visible: =AppsToShow
            Width: =Self.Height
            X: =AppNameAgain.X+AppNameAgain.Width+5
            Y: =AppNameAgain.Y+5
            ZIndex: =15

        AppNameAgain As label:
            FontWeight: =Bold
            Height: =60 
            Text: =SelectedApp.'App Display Name'
            Visible: =AppsToShow
            Width: =(Parent.Width/3)*3/4
            X: =AppList.X+AppList.Width+10
            Y: =AppList.Y
            ZIndex: =16

    NoApps As label:
        Align: =Center
        Color: =RGBA(112, 39, 117, 1)
        Height: =If(Self.Visible, 60, 0)
        Text: ="No Apps to Display"
        Visible: =!AppsToShow
        Width: =If(Self.Visible, Parent.Width, 0)
        Y: =If(Self.Visible, Parent.Height/2-Self.Height, 0)
        ZIndex: =42

    BurgerMenu As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =42

        MenuBG As rectangle:
            Fill: =RGBA(112, 39, 117, 1)
            Height: =If(Self.Visible, 150, 0)
            Visible: =ShowBurgerMenu
            Width: =If(Self.Visible, 150, 0)
            X: =If(Self.Visible, Parent.Width-Self.Width, 0)
            Y: =If(Self.Visible, AppBurger.Y+AppBurger.Height, 0)
            ZIndex: =38

        MenuSelectUser As label:
            Color: =RGBA(255, 255, 255, 1)
            FontWeight: =Semibold
            Height: =If(Self.Visible, 50, 0)
            OnSelect: =Navigate(SelectUser)
            Text: ="Select User"
            Visible: =ShowBurgerMenu
            Width: =MenuBG.Width
            X: =MenuBG.X
            Y: =If(Self.Visible, AppBurger.Y+AppBurger.Height+(Self.Height*2), 0)
            ZIndex: =39

        MenuFlows As label:
            Color: =RGBA(255, 255, 255, 1)
            FontWeight: =Semibold
            Height: =If(Self.Visible, 50, 0)
            OnSelect: =Navigate(FlowsView)
            Text: ="Flows View"
            Visible: =ShowBurgerMenu
            Width: =MenuBG.Width
            X: =MenuBG.X
            Y: =If(Self.Visible, AppBurger.Y+AppBurger.Height+(Self.Height*1), 0)
            ZIndex: =40

        MenuApps As label:
            Color: =RGBA(255, 255, 255, 1)
            FontWeight: =Semibold
            Height: =If(Self.Visible, 50, 0)
            OnSelect: =Navigate(AppsView)
            Text: ="Apps View"
            Visible: =ShowBurgerMenu
            Width: =MenuBG.Width
            X: =MenuBG.X
            Y: =If(Self.Visible, AppBurger.Y+AppBurger.Height+(Self.Height*0), 0)
            ZIndex: =41

    LoadingGif_1 As image:
        Height: =Self.Width
        Image: =Loading
        Visible: =ShowLoading
        Width: =If(Self.Visible, 300, 0)
        X: =If(Self.Visible, Parent.Width/2-Self.Width/2, 0)
        Y: =If(Self.Visible, Parent.Height/2-Self.Height/2, 0)
        ZIndex: =43

