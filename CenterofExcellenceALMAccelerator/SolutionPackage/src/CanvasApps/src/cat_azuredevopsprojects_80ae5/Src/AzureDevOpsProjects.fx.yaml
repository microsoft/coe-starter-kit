AzureDevOpsProjects As screen:
    Fill: =RGBA(230, 230, 230, 1)
    LoadingSpinnerColor: =RGBA(0, 120, 212, 1)
    OnVisible: |+
        =UpdateContext({_colOrganizations: IfError(CustomAzureDevOps.GetOrganizations(), Table())});
        If(IsEmpty(_colOrganizations),
            UpdateContext({
                infoTitle: "Error connecting to Azure DevOps",
                infoText: "There was an issue connecting to Azure DevOps.\n\nHave you configured the CustomAzureDevOps connector? If not please configure the CustomAzureDevOps connector and try again.\n\nIf you have configured the CustomAzureDevOps connector please try refresh the browser.",
                infoTextHeight: 100
            });
            UpdateContext({showInfoDialog: true});
        );
        
        
        ClearCollect(colReleaseTags, 'Release Histories');
        If(Not(showInfoDialog),
            If(CountRows(colReleaseTags) < 1,
                UpdateContext({showReleaseTagDialog: true});
            )
        );
        
        

    RootLayout As groupContainer.horizontalAutoLayoutContainer:
        Height: =Parent.Height
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowY: =LayoutOverflow.Scroll
        PaddingBottom: =20
        PaddingLeft: =10
        PaddingRight: =10
        PaddingTop: =20
        Width: =Parent.Width
        ZIndex: =2

        cntHeaderContainer As groupContainer.manualLayoutContainer:
            FillPortions: =0
            Height: =80
            LayoutMinHeight: =70
            LayoutMinWidth: =Parent.Width - 20
            ZIndex: =2

            "HeaderElevation As 'Fluent Elevation (1.0.9)'":
                Depth: ='PowerCAT.Elevation.Depth'.Depth4
                DisplayMode: =DisplayMode.Edit
                Height: =70
                Width: |
                    =Parent.Width - 20
                X: =8
                Y: =0
                ZIndex: =1

            HeaderLayout As groupContainer.verticalAutoLayoutContainer:
                Height: =80
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMode: =LayoutMode.Auto
                PaddingBottom: =8
                Width: =Parent.Width - Parent.PaddingRight - 10
                ZIndex: =2

                cntHeader As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    LayoutMinHeight: =80
                    LayoutMinWidth: =250
                    Width: =Parent.Width
                    ZIndex: =3

                    recSeperator As rectangle:
                        BorderColor: =RGBA(230, 230, 230, 1)
                        Fill: =RGBA(204, 204, 204, 1)
                        Height: =1
                        Width: =Parent.Width - 30
                        X: =18
                        Y: =60
                        ZIndex: =1

                    lblAppHeader As label:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 18, 107, 1)
                        Color: =RGBA(0, 0, 0, 1)
                        DisabledColor: =RGBA(166, 166, 166, 1)
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Semibold
                        Height: =lblAppHeader.AutoHeight
                        Size: =18
                        Text: ="Azure DevOps Projects"
                        Width: =400
                        X: =18
                        Y: =15
                        ZIndex: =2

                    "cbHeader As 'Fluent Command Bar (1.0.9)'.pcfdataset":
                        DisplayMode: =DisplayMode.Edit
                        Height: =32
                        Items: |-
                            =Table(
                                // Far Items
                                {ItemKey:"Info",ItemDisplayName:"Info",ItemIconName:"Info",ItemIconOnly:true,ItemFarItem:true},
                                {ItemKey:"Issues",ItemDisplayName:"Search Issues",ItemIconName:"SearchIssue",ItemIconOnly:true,ItemFarItem:true}
                            )
                        OnSelect: |-
                            =Switch(Self.Selected.ItemKey,
                                "Info",
                                Launch("https://aka.ms/aa4ppadmindocs");
                                ,
                                "Issues",
                                Launch("https://github.com/microsoft/coe-starter-kit/issues");
                            )
                        Width: =100
                        X: =Parent.Width - Self.Width
                        Y: =18
                        ZIndex: =4

        MainLayout As groupContainer.verticalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.Start
            Height: =App.Height - HeaderLayout.Height - 40
            LayoutAlignItems: =LayoutAlignItems.Stretch
            LayoutDirection: =If(App.Width < 1000, LayoutDirection.Vertical, LayoutDirection.Horizontal)
            LayoutMinHeight: =500
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            LayoutOverflowX: =LayoutOverflow.Scroll
            LayoutOverflowY: =LayoutOverflow.Scroll
            Width: =App.Width - 20
            ZIndex: =3

            cntLeft As groupContainer.manualLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                Height: =Parent.Height - Parent.PaddingBottom
                LayoutMinHeight: =If(App.Width < 1000, 350, 500)
                LayoutMinWidth: =250
                X: =60
                Y: =60
                ZIndex: =1

                "Elevation1 As 'Fluent Elevation (1.0.9)'":
                    DisplayMode: =DisplayMode.Edit
                    Height: =If(App.Width < 1000, 350, Parent.Height)
                    PaddingBottom: =8
                    PaddingLeft: =8
                    PaddingRight: =8
                    PaddingTop: =8
                    Width: =Parent.Width
                    X: =0
                    Y: =0
                    ZIndex: =1

                RootContainerLayout As groupContainer.verticalAutoLayoutContainer:
                    Height: =If(App.Width < 1000, 350, Parent.Height)
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutMode: =LayoutMode.Auto
                    LayoutOverflowY: =LayoutOverflow.Scroll
                    Width: =Parent.Width
                    ZIndex: =2

                    OrganizationContainer As groupContainer.horizontalAutoLayoutContainer:
                        FillPortions: =0
                        Height: =60
                        LayoutMinHeight: =30
                        LayoutMinWidth: =500
                        LayoutMode: =LayoutMode.Auto
                        PaddingLeft: =20
                        PaddingRight: =20
                        PaddingTop: =20
                        ZIndex: =2

                        lblOrganizatoin As label:
                            BorderColor: =RGBA(0, 18, 107, 1)
                            Color: =RGBA(0, 0, 0, 1)
                            DisabledColor: =RGBA(166, 166, 166, 1)
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Lighter
                            Height: =32
                            Size: =10.5
                            Text: ="Azure DevOps Organization"
                            Width: =180
                            X: =Parent.Width - pnlNewProject.DialogWidth + 20
                            Y: =105
                            ZIndex: =1

                        "ddOrganization As 'Combo box'.pcfdataset":
                            AccessibleLabel: ="Align"
                            DefaultSelectedItems: =
                            DisplayMode: =DisplayMode.Edit
                            Height: =32
                            Items: =Sort(CustomAzureDevOps.GetOrganizations(), AccountName, SortOrder.Ascending)
                            LayoutMinHeight: =32
                            LayoutMinWidth: =320
                            OnChange: |-
                                =If(Not(IsBlank(Self.Selected)),
                                    UpdateContext({currentOrganization: ddOrganization.Selected,
                                        createProjectPermission: First(CustomAzureDevOps.HasPermissions(ddOrganization.Selected.AccountName, "3e65f728-f8bc-4ecd-8764-7e378b19bfa7", "4", {token:"NAMESPACE:"}).value).Value        
                                    });
                                    
                                    ClearCollect(colProjects, AddColumns(CustomAzureDevOps.GetProjects(currentOrganization.AccountName, { 'api-version': "7.0" }).value, "ModifiedOn", DateValue(lastUpdateTime, "en-US")));
                                    Set(varSortProjects,"name");
                                    ,
                                    UpdateContext({currentOrganization: {}});
                                    Clear(colProjects);
                                    Clear(colProjectTeamMemberIdentities);
                                    Clear(colProjectPipelines);
                                    Clear(colProjectRepos);
                                    Clear(colProjectVariableGroups);
                                    Clear(colProjectServiceConnections);
                                );
                            OnSelect: =
                            Text: =""
                            Visible: =true
                            Width: =180
                            X: =Parent.Width - pnlNewProject.DialogWidth + 20
                            Y: =32
                            ZIndex: =2

                            AccountName1 As pcfDataField.textualColumn:
                                FieldDisplayName: ="AccountName"
                                FieldName: ="AccountName"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =2
                                ZIndex: =12

                        icoUpdateReleaseTagsNewRepo_1 As icon.Reload:
                            BorderColor: =RGBA(0, 0, 0, 0)
                            Color: =RGBA(0, 120, 212, 1)
                            DisabledBorderColor: =RGBA(166, 166, 166, 1)
                            DisabledColor: =RGBA(220, 220, 220, 1)
                            DisabledFill: =RGBA(0, 0, 0, 0)
                            Height: =32
                            HoverBorderColor: =RGBA(0, 0, 0, 0)
                            HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                            HoverFill: =RGBA(0, 0, 0, 0)
                            Icon: =Icon.Reload
                            OnSelect: |-
                                =IfError(UpdateContext({colOrganizations: CustomAzureDevOps.GetOrganizations()}),
                                    UpdateContext({
                                        infoTitle: "Error connecting to Azure DevOps",
                                        infoText: "There was an issue connecting to Azure DevOps.\n\nHave you configured the CustomAzureDevOps connector?\n\nTry refresh the browser."
                                    });
                                    UpdateContext({showInfoDialog: true});
                                );
                            PaddingBottom: =3
                            PaddingLeft: =7
                            PaddingRight: =3
                            PaddingTop: =3
                            PressedBorderColor: =RGBA(0, 0, 0, 0)
                            PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                            PressedFill: =RGBA(0, 0, 0, 0)
                            Width: =26
                            X: =1314
                            Y: =350
                            ZIndex: =3

                    MainContainer As groupContainer.horizontalAutoLayoutContainer:
                        Height: =300
                        LayoutAlignItems: =LayoutAlignItems.Stretch
                        LayoutMinHeight: =200
                        LayoutMinWidth: =500
                        LayoutMode: =LayoutMode.Auto
                        ZIndex: =6

                        ProjectsContainer As groupContainer.manualLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            Height: =400
                            LayoutMinHeight: =250
                            LayoutMinWidth: =500
                            PaddingBottom: =20
                            PaddingLeft: =20
                            PaddingRight: =30
                            PaddingTop: =2
                            X: =40
                            Y: =40
                            ZIndex: =1

                            "fdProjects As 'Fluent Details List (1.0.9)'.pcfdataset":
                                ColSortable: =""
                                columns_Items: |-
                                    =With({
                                                    // If there is a selection column, we remove the width and the padding
                                                    availableWidth:Self.Width, //-If(ddSelectionMode.Selected.Name<>"None",32+16),
                                                    padding:32,
                                                    scrollWidth:20,
                                                    collapsedModifiedOn:true,
                                                    multiLineDescription: true
                                                    },
                                                Table(
                                                    {
                                                        ColName:"name",ColDisplayName:"Name",ColSortable:true,ColWidth:200,ColRowHeader:true,
                                                        ColResizable:true
                                                    },
                                                    {
                                                        ColName:"description",ColDisplayName:"Description",ColSortable:true,
                                                        ColWidth:200,ColResizable:true
                                                    },
                                                    {
                                                        ColName:"ModifiedOn",ColDisplayName:"Date Modified",ColSortable:true,
                                                        ColWidth:120, ColRowHeader:true
                                                    }
                                                )
                                                )
                                CurrentSortColumn: =varSortProjects
                                CurrentSortDirection: =If(varSortProjectsAsc,'PowerCAT.FluentDetailsList.CurrentSortDirection'.Ascending,'PowerCAT.FluentDetailsList.CurrentSortDirection'.Descending)
                                DisplayMode: =DisplayMode.Edit
                                Height: =Parent.Height - lblProjectHeading.Height - cbProjects.Height - Parent.PaddingBottom
                                Items: |-
                                    =SortByColumns(
                                        colProjects,
                                        varSortProjects,
                                        If(varSortProjectsAsc, SortOrder.Ascending, SortOrder.Descending)
                                    )
                                OnChange: |-
                                    =If(
                                        Self.EventName = "Sort",
                                        Set(varSortProjects, Self.SortEventColumn);
                                        Set(varSortProjectsAsc, Self.SortEventDirection = 'PowerCAT.FluentDetailsList.SortEventDirection'.Ascending);
                                    );
                                    
                                    Switch(CountRows(fdProjects.SelectedItems),
                                        1,
                                        Clear(colProjectTeamMemberIdentities);
                                        Clear(colProjectPipelines);
                                        Clear(colProjectRepos);
                                        Clear(colProjectServiceConnections);
                                        Clear(colProjectVariableGroups);
                                    
                                        UpdateContext({currentProject: CustomAzureDevOps.GetProject(ddOrganization.Selected.AccountName, fdProjects.Selected.name, {'api-version': "6.0"})});
                                        UpdateContext({manageTeamMembership: First(CustomAzureDevOps.HasPermissions(ddOrganization.Selected.AccountName, "5a27515b-ccd7-42c9-84f1-54c998f03866", "8", {token: $"$PROJECT:vstfs:///Classification/TeamProject/{fdProjects.Selected.id}"}).value).Value});
                                        Concurrent(
                                            // Get Team Members (Project Default Team)
                                            ClearCollect(colProjectTeamMembers, CustomAzureDevOps.GetProjectTeamMembers(ddOrganization.Selected.AccountName, currentProject.name, currentProject.defaultTeam.id, {'api-version': "6.0"}).value);
                                            Clear(colProjectTeamMemberIdentities);
                                            ForAll(colProjectTeamMembers,
                                                Collect(colProjectTeamMemberIdentities, { id: identity.id, displayName: identity.displayName, email: identity.uniqueName, isAdmin: If(isTeamAdmin, "Yes", "") });
                                            ),
                                            
                                            // Get Pipelines
                                            ClearCollect(colProjectPipelines, CustomAzureDevOps.GetPipelines(ddOrganization.Selected.AccountName, currentProject.name, {'api-version': "6.0"}).value),
                                    
                                            // Get Repositories
                                            ClearCollect(colProjectRepos, CustomAzureDevOps.GetGitRepos(ddOrganization.Selected.AccountName, currentProject.name, { 'api-version': "6.0" }).value),
                                            
                                            // Get Variable Groups
                                            ClearCollect(colProjectVariableGroups, CustomAzureDevOps.GetVariableGroups(ddOrganization.Selected.AccountName, currentProject.name, {'api-version': "6.0"}).value),
                                    
                                            // Get Service Connections,
                                            ClearCollect(colProjectServiceConnections, CustomAzureDevOps.GetServiceEndpoints(ddOrganization.Selected.AccountName, currentProject.name, { 'api-version': "6.0" }).value)
                                        ),
                                    
                                        //Default result
                                        UpdateContext({currentProject: {}});
                                        Clear(colProjectTeamMemberIdentities);
                                        Clear(colProjectPipelines);
                                        Clear(colProjectRepos);
                                        Clear(colProjectVariableGroups);
                                        Clear(colProjectServiceConnections);
                                    )
                                OnSelect: |-
                                    =If(CountRows(fdProjects.SelectedItems) = 1,
                                        UpdateContext({currentProject: CustomAzureDevOps.GetProject(ddOrganization.Selected.AccountName, fdProjects.Selected.name, {'api-version': "6.0"})})
                                    )
                                PageSize: =2000
                                RaiseOnRowSelectionChangeEvent: =true
                                RecordSelected: =
                                SelectionAlwaysVisible: =true
                                SelectionType: ='PowerCAT.FluentDetailsList.SelectionType'.Multiple
                                Width: =Parent.Width - Parent.PaddingRight
                                X: =20
                                Y: =74
                                ZIndex: =1

                                name2 As pcfDataField.textualColumn:
                                    FieldDisplayName: ="name"
                                    FieldName: ="name"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =1
                                    ZIndex: =1

                                description1 As pcfDataField.textualColumn:
                                    FieldDisplayName: ="description"
                                    FieldName: ="description"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =2
                                    ZIndex: =2

                                ModifiedOn1 As pcfDataField.textualColumn:
                                    FieldDisplayName: ="ModifiedOn"
                                    FieldName: ="ModifiedOn"
                                    FieldType: ="D"
                                    FieldVariantName: ="textualColumn"
                                    Order: =3
                                    ZIndex: =13

                            "cbProjects As 'Fluent Command Bar (1.0.9)'.pcfdataset":
                                DisplayMode: =DisplayMode.Edit
                                Height: =32
                                Items: |-
                                    =Table(
                                        {ItemKey:"New",ItemDisplayName:"New",ItemIconName:"Add", ItemEnabled: Not(IsBlankOrError(currentOrganization.AccountName))},
                                        {ItemKey:"ALMAccProject",ItemDisplayName:"Project Wizard",ItemIconName:"ProjectCollection", ItemParentKey:"New"},    
                                        {ItemKey:"Project",ItemDisplayName:"Project",ItemIconName:"NewTeamProject", ItemParentKey:"New"},
                                        
                                        {ItemKey:"Delete",ItemDisplayName:"Delete",ItemIconName:"Delete", ItemEnabled:Not(IsBlankOrError(currentOrganization.AccountName)) And (CountRows(fdProjects.SelectedItems) > 0)},
                                    
                                        {ItemKey:"Refresh",ItemDisplayName:"Refresh",ItemIconName:"Refresh", ItemEnabled:Not(IsBlankOrError(currentOrganization.AccountName))},
                                    
                                        // Far Items
                                        {ItemKey:"Info",ItemDisplayName:"Info",ItemIconName:"Info",ItemIconOnly:true,ItemFarItem:true}
                                    )
                                OnSelect: |-
                                    =Switch(
                                        cbProjects.Selected.ItemKey,
                                        "Refresh",
                                        ClearCollect(
                                            colProjects,
                                            AddColumns(
                                                CustomAzureDevOps.GetProjects(
                                                    ddOrganization.Selected.AccountName,
                                                    {'api-version': "7.0"}
                                                ).value,
                                                "ModifiedOn",
                                                DateValue(
                                                    lastUpdateTime,
                                                    "en-US"
                                                )
                                            )
                                        ),
                                        "Project",
                                        ClearCollect(
                                            colReleaseTags,
                                            'Release Histories'
                                        );
                                        If(
                                            CountRows(colReleaseTags) < 1,
                                            UpdateContext({showReleaseTagDialog: true}),
                                            UpdateContext({showNewProjectPanel: true})
                                        );
                                        ,
                                        "ALMAccProject",
                                        ClearCollect(
                                            colReleaseTags,
                                            'Release Histories'
                                        );
                                        Reset(tglEnablePreviewFeatures);
                                        If(
                                            CountRows(colReleaseTags) < 1,
                                            UpdateContext({showReleaseTagDialog: true}),
                                            ClearCollect(
                                                colEnvironments,
                                                PowerAppsforMakers.GetEnvironments().value
                                            );
                                            Clear(colEnvironmentsDetails);
                                            ForAll(
                                                colEnvironments,
                                                Collect(
                                                    colEnvironmentsDetails,
                                                    {
                                                        name: ThisRecord.properties.linkedEnvironmentMetadata.friendlyName,
                                                        url: ThisRecord.properties.linkedEnvironmentMetadata.instanceUrl,
                                                        nameTypeUrl: $"{ThisRecord.properties.linkedEnvironmentMetadata.friendlyName} ({Substitute(
                                                            ThisRecord.properties.environmentSku,
                                                            "NotSpecified",
                                                            "Microsoft Teams"
                                                        )}) ({Substitute(
                                                            Substitute(
                                                                ThisRecord.properties.linkedEnvironmentMetadata.instanceUrl,
                                                                "https://",
                                                                ""
                                                            ),
                                                            "/",
                                                            ""
                                                        )})"
                                                    }
                                                );
                                            );
                                            If(
                                                createProjectPermission,
                                                ClearCollect(
                                                    colProjectProcesses,
                                                    CustomAzureDevOps.ListWorkProcesses(currentOrganization.AccountName).value
                                                );
                                                Patch(
                                                    colProjectProcesses,
                                                    LookUp(
                                                        colProjectProcesses,
                                                        isEnabled = true And isDefault = true
                                                    ),
                                                    {
                                                        name: LookUp(
                                                            colProjectProcesses,
                                                            isEnabled = true And isDefault = true
                                                        ).name & " (Default)"
                                                    }
                                                );
                                                UpdateContext(
                                                    {
                                                        newALMAccProjectCurrentStep: 1,
                                                        //showNewALMAccProjectDialog: true,
                                                        showNewALMAccProjectPanel: true,
                                                        newPipelineTemplateVersion: First(
                                                            Sort(
                                                                colReleaseTags,
                                                                Published,
                                                                SortOrder.Descending
                                                            )
                                                        ).Tag
                                                    }
                                                ),
                                                UpdateContext(
                                                    {
                                                        newALMAccProjectCurrentStep: 1,
                                                        //showNewALMAccProjectDialog: true,
                                                        showNewALMAccProjectPanel: true,
                                                        createProjectError: "You do not have the required permissions to create a project. Select an existing project"
                                                    }
                                                )
                                            );
                                        );
                                        ,
                                        "Delete",
                                        UpdateContext({showDeleteProjectDialog: true}),
                                        "RunDiagnostics",
                                        UpdateContext({diagnosticsInfo: ""});
                                        UpdateContext({showRunDiagnosticsDialog: true}),
                                        "Info",
                                        UpdateContext(
                                            {
                                                infoTitle: "Azure DevOps Projects",
                                                infoText: "Projects are containers of source code. A project can host one or more Power Platform Solutions. For a project to be valid for ALM Accelerator it must have the following configured: Repositories, Service Connections, Pipelines",
                                                infoTextHeight: 60,
                                                showInfoDialog: true
                                            }
                                        );
                                        
                                    )
                                Width: =Parent.Width - Parent.PaddingRight
                                X: =Parent.PaddingLeft
                                Y: =lblProjectHeading.Height
                                ZIndex: =2

                            lblProjectHeading As label:
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Semibold
                                Height: =32
                                Text: ="Projects"
                                Width: =560
                                X: =Parent.PaddingLeft
                                ZIndex: =3

            cntRight As groupContainer.manualLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                Height: =If(App.Width < 1000, App.Height, Parent.Height - Parent.PaddingBottom)
                LayoutMinHeight: =500
                LayoutMinWidth: =250
                X: =60
                Y: =60
                ZIndex: =2

                RootContainerLayout_1 As groupContainer.verticalAutoLayoutContainer:
                    Height: =If(App.Width < 1000, 1500, Parent.Height - 10)
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutMode: =LayoutMode.Auto
                    LayoutOverflowY: =If(App.Width < 1000, LayoutOverflow.Hide, LayoutOverflow.Scroll)
                    PaddingRight: =10
                    Width: =Parent.Width
                    Y: =8
                    ZIndex: =2

                    TeamMembersContainer As groupContainer.manualLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        Height: =300
                        LayoutMinHeight: =304
                        LayoutMinWidth: =500
                        PaddingBottom: =8
                        PaddingLeft: =20
                        PaddingRight: =8
                        PaddingTop: =8
                        Width: =Parent.Width - 10
                        ZIndex: =1

                        "eleTeamMembers As 'Fluent Elevation (1.0.9)'":
                            DarkOverlay: =false
                            DisplayMode: =DisplayMode.Edit
                            FillColor: |-
                                ="#FFFFFF"
                            Height: |
                                =Parent.Height
                            PaddingBottom: =8
                            PaddingLeft: =8
                            PaddingRight: =8
                            PaddingTop: =0
                            Width: =Parent.Width
                            X: =0
                            Y: =0
                            ZIndex: =1

                        lblTeamMembers As label:
                            BorderColor: =RGBA(0, 18, 107, 1)
                            Color: =RGBA(0, 0, 0, 1)
                            DisabledColor: =RGBA(166, 166, 166, 1)
                            Fill: =RGBA(255, 255, 255, 1)
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =48
                            PaddingTop: =20
                            Text: ="Team Members"
                            Width: =560
                            X: =Parent.PaddingLeft
                            ZIndex: =2

                        "fdTeamMembers As 'Fluent Details List (1.0.9)'.pcfdataset":
                            columns_Items: |-
                                =With({
                                        // If there is a selection column, we remove the width and the padding
                                        availableWidth:Self.Width, //-If(ddSelectionMode.Selected.Name<>"None",32+16),
                                        padding:32,
                                        scrollWidth:20,
                                        collapsedModifiedOn:true,
                                        multiLineDescription: true
                                        },
                                    Table(
                                        {
                                            ColName:"displayName",ColDisplayName:"Name",ColSortable:true,ColWidth:200,ColRowHeader:true,
                                            ColResizable:true
                                        },
                                        {
                                            ColName:"email",ColDisplayName:"Email",ColSortable:true,ColWidth:200,ColRowHeader:true,
                                            ColResizable:true
                                        },
                                        {
                                            ColName:"isAdmin", ColDisplayName:"Is Team Admin",ColSortable:true,ColWidth:100,ColRowHeader:true,
                                            ColResizable:true
                                        }
                                    )
                                )
                            CurrentSortColumn: ="Name"
                            CurrentSortDirection: ='PowerCAT.FluentDetailsList.CurrentSortDirection'.Ascending
                            DisplayMode: =DisplayMode.Edit
                            Height: =200
                            Items: =Sort(colProjectTeamMemberIdentities, displayName)
                            OnSelect: =false
                            PageSize: =2000
                            SelectionAlwaysVisible: =true
                            SelectionType: ='PowerCAT.FluentDetailsList.SelectionType'.Multiple
                            Width: =Parent.Width - Parent.PaddingRight - 20
                            X: =Parent.PaddingLeft
                            Y: =lblTeamMembers.Height + cbTeamMembers.Height
                            ZIndex: =3

                            displayName1 As pcfDataField.textualColumn:
                                FieldDisplayName: ="displayName"
                                FieldName: ="displayName"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =1
                                ZIndex: =16

                            isAdmin1 As pcfDataField.textualColumn:
                                FieldDisplayName: ="isAdmin"
                                FieldName: ="isAdmin"
                                FieldType: ="b"
                                FieldVariantName: ="textualColumn"
                                Order: =2
                                ZIndex: =17

                            email1 As pcfDataField.textualColumn:
                                FieldDisplayName: ="email"
                                FieldName: ="email"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =3
                                ZIndex: =28

                            id1 As pcfDataField.textualColumn:
                                FieldDisplayName: ="id"
                                FieldName: ="id"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =4
                                ZIndex: =29

                        "cbTeamMembers As 'Fluent Command Bar (1.0.9)'.pcfdataset":
                            DisplayMode: =DisplayMode.Edit
                            Height: =32
                            Items: |-
                                =Table(
                                    {ItemKey:"Add",ItemDisplayName:"Add",ItemIconName:"Add", ItemEnabled:(CountRows(fdProjects.SelectedItems) = 1 And LookUp(colProjectTeamMemberIdentities, email = User().Email).isAdmin = "Yes")},
                                
                                    {ItemKey:"Remove",ItemDisplayName:"Remove",ItemIconName:"Remove", ItemEnabled:(CountRows(fdTeamMembers.SelectedItems) > 0 And LookUp(colProjectTeamMemberIdentities, email = User().Email).isAdmin = "Yes")},
                                
                                    {ItemKey:"Refresh",ItemDisplayName:"Refresh",ItemIconName:"Refresh", ItemEnabled:(CountRows(fdProjects.SelectedItems) = 1)},
                                
                                    // Far Items
                                    {ItemKey:"info",ItemDisplayName:"Info",ItemIconName:"Info",ItemIconOnly:true,ItemFarItem:true}
                                )
                            OnSelect: |-
                                =Switch(
                                    cbTeamMembers.Selected.ItemKey,
                                    "Refresh",
                                    // Get Team Members (Project Default Team)
                                    ClearCollect(
                                        colProjectTeamMembers,
                                        CustomAzureDevOps.GetProjectTeamMembers(
                                            ddOrganization.Selected.AccountName,
                                            currentProject.name,
                                            currentProject.defaultTeam.id,
                                            {'api-version': "6.0"}
                                        ).value
                                    );
                                    Clear(colProjectTeamMemberIdentities);
                                    ForAll(
                                        colProjectTeamMembers,
                                        Collect(
                                            colProjectTeamMemberIdentities,
                                            {
                                                id: identity.id,
                                                displayName: identity.displayName,
                                                email: identity.uniqueName,
                                                isAdmin: If(
                                                    isTeamAdmin,
                                                    "Yes",
                                                    ""
                                                )
                                            }
                                        );
                                    ),
                                    "Add",
                                    ClearCollect(
                                        colAdoUsers,
                                        AddColumns(
                                            CustomAzureDevOps.GetUsers(
                                                currentOrganization.AccountName,
                                                {
                                                    'api-version': "6.0-preview",
                                                    subjectTypes: "aad"
                                                }
                                            ).value,
                                            "userAndEmail",
                                            displayName & " (" & mailAddress & ")"
                                        )
                                    );
                                    UpdateContext({showAddTeamMemberPanel: true}),
                                    "Remove",
                                    ForAll(
                                        fdTeamMembers.SelectedItems,
                                        CustomAzureDevOps.RemovMemberFromGroup(
                                            currentOrganization.AccountName,
                                            currentProject.defaultTeam.id,
                                            ThisRecord.id,
                                            {'api-version': "6.0"}
                                        )
                                    );
                                    ClearCollect(
                                        colProjectTeamMembers,
                                        CustomAzureDevOps.GetProjectTeamMembers(
                                            ddOrganization.Selected.AccountName,
                                            currentProject.name,
                                            currentProject.defaultTeam.id,
                                            {'api-version': "6.0"}
                                        ).value
                                    );
                                    Clear(colProjectTeamMemberIdentities);
                                    ForAll(
                                        colProjectTeamMembers,
                                        Collect(
                                            colProjectTeamMemberIdentities,
                                            {
                                                id: identity.id,
                                                displayName: identity.displayName,
                                                email: identity.uniqueName,
                                                isAdmin: If(
                                                    isTeamAdmin,
                                                    "Yes",
                                                    ""
                                                )
                                            }
                                        );
                                    ),
                                    "Info",
                                    "Info",
                                    UpdateContext(
                                        {
                                            infoTitle: "Team Members",
                                            infoText: "Users that are members of the Project Team have permissions to access the Project, contribute to the Project and run Pipelines in the Project",
                                            infoTextHeight: 40,
                                            showInfoDialog: true
                                        }
                                    );
                                    
                                )
                            Width: =Parent.Width - Parent.PaddingRight - 20
                            X: =Parent.PaddingLeft
                            Y: =lblTeamMembers.Height
                            ZIndex: =4

                    PipelinesContainer As groupContainer.manualLayoutContainer:
                        Height: =300
                        LayoutMinHeight: =300
                        LayoutMinWidth: =Parent.Width - 10
                        PaddingBottom: =8
                        PaddingLeft: =20
                        PaddingRight: =8
                        PaddingTop: =8
                        ZIndex: =2

                        "elePipelines As 'Fluent Elevation (1.0.9)'":
                            DarkOverlay: =false
                            DisplayMode: =DisplayMode.Edit
                            FillColor: |-
                                ="#FFFFFF"
                            Height: |
                                =Parent.Height
                            PaddingBottom: =8
                            PaddingLeft: =8
                            PaddingRight: =8
                            PaddingTop: =0
                            Width: =Parent.Width
                            X: =0
                            Y: =0
                            ZIndex: =1

                        lblPipelines As label:
                            BorderColor: =RGBA(0, 18, 107, 1)
                            Color: =RGBA(0, 0, 0, 1)
                            DisabledColor: =RGBA(166, 166, 166, 1)
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =48
                            PaddingTop: =20
                            Text: ="Pipelines"
                            Width: =560
                            X: =Parent.PaddingLeft
                            ZIndex: =2

                        "fdPipelines As 'Fluent Details List (1.0.9)'.pcfdataset":
                            columns_Items: |-
                                =With({
                                    // If there is a selection column, we remove the width and the padding
                                    availableWidth:Self.Width, //-If(ddSelectionMode.Selected.Name<>"None",32+16),
                                    padding:32,
                                    scrollWidth:20,
                                    collapsedModifiedOn:true,
                                    multiLineDescription: true
                                    },
                                    Table(
                                        {
                                            ColName:"name",ColDisplayName:"Name",ColSortable:true,ColWidth:200,ColRowHeader:true,
                                            ColResizable:true
                                        },
                                        {
                                            ColName:"folder",ColDisplayName:"Path",ColSortable:true,
                                            ColWidth:300,ColResizable:true
                                        }
                                    )
                                )
                            CurrentSortColumn: ="Name"
                            CurrentSortDirection: ='PowerCAT.FluentDetailsList.CurrentSortDirection'.Ascending
                            DisplayMode: =DisplayMode.Edit
                            Height: =200
                            Items: =colProjectPipelines
                            OnSelect: =false
                            PageSize: =2000
                            SelectionAlwaysVisible: =true
                            SelectionType: ='PowerCAT.FluentDetailsList.SelectionType'.Multiple
                            Width: =Parent.Width - Parent.PaddingRight - 20
                            X: =Parent.PaddingLeft
                            Y: =lblPipelines.Height + cbPipelines.Height
                            ZIndex: =3

                            name4_1 As pcfDataField.textualColumn:
                                FieldDisplayName: ="name"
                                FieldName: ="name"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =1
                                ZIndex: =20

                            description2_1 As pcfDataField.textualColumn:
                                FieldDisplayName: ="description"
                                FieldName: ="description"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =2
                                ZIndex: =21

                            folder1 As pcfDataField.textualColumn:
                                FieldDisplayName: ="folder"
                                FieldName: ="folder"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =3
                                ZIndex: =22

                        "cbPipelines As 'Fluent Command Bar (1.0.9)'.pcfdataset":
                            DisplayMode: =DisplayMode.Edit
                            Height: =32
                            Items: |-
                                =Table(
                                    {ItemKey:"View",ItemDisplayName:"View",ItemIconName:"View", ItemEnabled:(CountRows(fdPipelines.SelectedItems) = 1 And CountRows(fdProjects.SelectedItems) = 1)},
                                
                                    {ItemKey:"Refresh",ItemDisplayName:"Refresh",ItemIconName:"Refresh", ItemEnabled:(CountRows(fdProjects.SelectedItems) = 1)},
                                
                                    // Far Items
                                    {ItemKey:"Info",ItemDisplayName:"Info",ItemIconName:"Info",ItemIconOnly:true,ItemFarItem:true}
                                )
                            OnSelect: |-
                                =Switch(cbPipelines.Selected.ItemKey,
                                    "Refresh",
                                    ClearCollect(colProjectPipelines, CustomAzureDevOps.GetPipelines(ddOrganization.Selected.AccountName, currentProject.name, {'api-version': "6.0"}).value),
                                
                                    "View",
                                    Launch($"https://dev.azure.com/{currentOrganization.AccountName}/{currentProject.name}/_build?definitionId={fdPipelines.Selected.id}"),
                                    
                                    "Info",
                                    UpdateContext({
                                        infoTitle: "Azure DevOps Pipelines",
                                        infoText: "Pipelines are the configuration of automation. An ALM Project should as a minimum have the following pipelines configured: export-solution-to-git, import-unmanaged-to-dev-environment and delete-unmanaged-solution-and-components",
                                        infoTextHeight: 60,
                                        showInfoDialog: true
                                    }),
                                        
                                    false
                                )
                            Width: =Parent.Width - Parent.PaddingRight - 20
                            X: =Parent.PaddingLeft
                            Y: =lblPipelines.Height
                            ZIndex: =4

                    RepositoriesContainer As groupContainer.manualLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        Height: =300
                        LayoutMinHeight: =300
                        LayoutMinWidth: =250
                        PaddingBottom: =8
                        PaddingLeft: =20
                        PaddingRight: =8
                        PaddingTop: =8
                        Width: =Parent.Width - 10
                        ZIndex: =3

                        "eleRepositories As 'Fluent Elevation (1.0.9)'":
                            DarkOverlay: =false
                            DisplayMode: =DisplayMode.Edit
                            FillColor: |-
                                ="#FFFFFF"
                            Height: |
                                =Parent.Height
                            PaddingBottom: =8
                            PaddingLeft: =8
                            PaddingRight: =8
                            PaddingTop: =0
                            Width: =Parent.Width
                            X: =0
                            Y: =0
                            ZIndex: =1

                        lblRepositories As label:
                            BorderColor: =RGBA(0, 18, 107, 1)
                            Color: =RGBA(0, 0, 0, 1)
                            DisabledColor: =RGBA(166, 166, 166, 1)
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =48
                            PaddingTop: =20
                            Text: ="Repositories"
                            Width: =560
                            X: =Parent.PaddingLeft
                            ZIndex: =2

                        "fdRepositories As 'Fluent Details List (1.0.9)'.pcfdataset":
                            columns_Items: |-
                                =With({
                                        // If there is a selection column, we remove the width and the padding
                                        availableWidth:Self.Width, //-If(ddSelectionMode.Selected.Name<>"None",32+16),
                                        padding:32,
                                        scrollWidth:20,
                                        collapsedModifiedOn:true,
                                        multiLineDescription: true
                                        },
                                    Table(
                                        {
                                            ColName:"name",ColDisplayName:"Name",ColSortable:true,ColWidth:200,ColRowHeader:true,
                                            ColResizable:true
                                        },
                                        {
                                            ColName:"defaultBranch",ColDisplayName:"Default Branch",ColSortable:true,ColWidth:300,ColRowHeader:true,
                                            ColResizable:true
                                        }
                                    )
                                )
                            CurrentSortColumn: ="Name"
                            CurrentSortDirection: ='PowerCAT.FluentDetailsList.CurrentSortDirection'.Ascending
                            DisplayMode: =DisplayMode.Edit
                            Height: =200
                            Items: =colProjectRepos
                            OnChange: |-
                                =If(IsBlank(Self.Selected),
                                    UpdateContext({isTemplateRepo: false, repoContent: Blank()});
                                    ,
                                    UpdateContext({ isTemplateRepo: Not(IsError(CustomAzureDevOps.GetFile(ddOrganization.Selected.AccountName, fdProjects.Selected.name, Self.Selected.id, { path: "/Pipelines/export-solution-to-git.yml", 'api-version': "7.1-preview"})) )});
                                    
                                    UpdateContext({
                                        repoContent: If(isTemplateRepo, 
                                            IfError(CustomAzureDevOps.GetFile(ddOrganization.Selected.AccountName, fdProjects.Selected.name, Self.Selected.id, { path: "/version.json", 'api-version': "7.1-preview"}).content, JSON({
                                  version: "Unknown",
                                  published: "",
                                  content: "coe-alm-accelerator-templates"
                                }))
                                    , JSON({ version: "" }))
                                    });
                                );
                            OnSelect: =false
                            PageSize: =2000
                            RaiseOnRowSelectionChangeEvent: =true
                            SelectionAlwaysVisible: =true
                            SelectionType: ='PowerCAT.FluentDetailsList.SelectionType'.Single
                            Width: =Parent.Width - Parent.PaddingRight - 20
                            X: =Parent.PaddingLeft
                            Y: =lblRepositories.Height + cbRepositories.Height
                            ZIndex: =3

                            name1 As pcfDataField.textualColumn:
                                FieldDisplayName: ="name"
                                FieldName: ="name"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =1
                                ZIndex: =14

                            defaultBranch1 As pcfDataField.textualColumn:
                                FieldDisplayName: ="defaultBranch"
                                FieldName: ="defaultBranch"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =2
                                ZIndex: =15

                        "cbRepositories As 'Fluent Command Bar (1.0.9)'.pcfdataset":
                            DisplayMode: =DisplayMode.Edit
                            Height: =32
                            Items: |-
                                =Table(
                                    {ItemKey:"New",ItemDisplayName:"New",ItemIconName:"Add", ItemEnabled:(CountRows(fdProjects.SelectedItems) = 1)},
                                
                                    {ItemKey:"View",ItemDisplayName:"View",ItemIconName:"View", ItemEnabled:(CountRows(fdRepositories.SelectedItems) = 1 And CountRows(fdProjects.SelectedItems) = 1)},
                                
                                    {ItemKey:"Upgrade",ItemDisplayName:"Upgrade",ItemIconName:"SyncStatus", ItemEnabled:(isTemplateRepo) And CountRows(fdRepositories.SelectedItems) = 1 And CountRows(fdProjects.SelectedItems) = 1},
                                
                                    {ItemKey:"Refresh",ItemDisplayName:"Refresh",ItemIconName:"Refresh", ItemEnabled:(CountRows(fdProjects.SelectedItems) = 1)},
                                
                                    // Far Items
                                    {ItemKey:"Info",ItemDisplayName:"Info",ItemIconName:"Info",ItemIconOnly:true,ItemFarItem:true}
                                )
                            OnSelect: |-
                                =Switch(Self.Selected.ItemKey,
                                    "Refresh",
                                    ClearCollect(colProjectRepos, CustomAzureDevOps.GetGitRepos(currentOrganization.AccountName, currentProject.name, { 'api-version': "6.0" }).value);
                                    ,
                                    "New",
                                    ClearCollect(colReleaseTags, 'Release Histories');
                                    If(CountRows(colReleaseTags) < 1,
                                        UpdateContext({showReleaseTagDialog: true}),
                                        UpdateContext({showNewRepositoryPanel: true});
                                    );
                                    ,
                                    "View",
                                    Launch($"https://dev.azure.com/{currentOrganization.AccountName}/{currentProject.name}/_git/{fdRepositories.Selected.name}");
                                    ,
                                    "Upgrade",
                                    UpdateContext({almProjectSyncPipelineId: If(IsBlank(LookUp(colProjectPipelines, name = "sync-pipeline-repo")), -1, LookUp(colProjectPipelines, name = "sync-pipeline-repo").id)});
                                    UpdateContext({showUpgradePipelineRepoPanel: true});
                                    ,
                                    "Info",
                                    UpdateContext({
                                        infoTitle: "Azure DevOps Repositories",
                                        infoText: "Repositories are containers of source code. A project can have one or more repositories configured",
                                        infoTextHeight: 40,
                                        showInfoDialog: true});
                                    
                                    ,
                                    false
                                    
                                )
                            Width: =Parent.Width - Parent.PaddingRight - 20
                            X: =Parent.PaddingLeft
                            Y: =lblRepositories.Height
                            ZIndex: =4

                    ServiceConnectionsContainer As groupContainer.manualLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        Height: =300
                        LayoutMinHeight: =300
                        LayoutMinWidth: =250
                        PaddingBottom: =8
                        PaddingLeft: =20
                        PaddingRight: =8
                        PaddingTop: =8
                        Width: =Parent.Width - 10
                        ZIndex: =4

                        "eleServiceConnections As 'Fluent Elevation (1.0.9)'":
                            DarkOverlay: =false
                            DisplayMode: =DisplayMode.Edit
                            FillColor: |-
                                ="#FFFFFF"
                            Height: |
                                =Parent.Height
                            PaddingBottom: =8
                            PaddingLeft: =8
                            PaddingRight: =8
                            PaddingTop: =0
                            Width: =Parent.Width
                            X: =0
                            Y: =0
                            ZIndex: =1

                        lblServiceConnections As label:
                            BorderColor: =RGBA(0, 18, 107, 1)
                            Color: =RGBA(0, 0, 0, 1)
                            DisabledColor: =RGBA(166, 166, 166, 1)
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =48
                            PaddingTop: =20
                            Text: ="Service Connections"
                            Width: =560
                            X: =Parent.PaddingLeft
                            ZIndex: =2

                        "fdServiceConnections As 'Fluent Details List (1.0.9)'.pcfdataset":
                            columns_Items: |-
                                =With({
                                    // If there is a selection column, we remove the width and the padding
                                    availableWidth:Self.Width, //-If(ddSelectionMode.Selected.Name<>"None",32+16),
                                    padding:32,
                                    scrollWidth:20,
                                    collapsedModifiedOn:true,
                                    multiLineDescription: true
                                    },
                                    Table(
                                        {
                                            ColName:"name",ColDisplayName:"Name",ColSortable:true,ColWidth:200,ColRowHeader:true,
                                            ColResizable:true
                                        },
                                        {
                                            ColName:"url",ColDisplayName:"Environment URL",ColSortable:true,
                                            ColWidth:300,ColResizable:true
                                        }
                                    )
                                )
                            CurrentSortColumn: ="Name"
                            CurrentSortDirection: ='PowerCAT.FluentDetailsList.CurrentSortDirection'.Ascending
                            DisplayMode: =DisplayMode.Edit
                            Height: =200
                            Items: =colProjectServiceConnections
                            OnSelect: =false
                            PageSize: =2000
                            SelectionAlwaysVisible: =true
                            SelectionType: ='PowerCAT.FluentDetailsList.SelectionType'.Multiple
                            Width: =Parent.Width - Parent.PaddingRight - 20
                            X: =Parent.PaddingLeft
                            Y: =lblServiceConnections.Height + cbServiceConnections.Height
                            ZIndex: =3

                            name3 As pcfDataField.textualColumn:
                                FieldDisplayName: ="name"
                                FieldName: ="name"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =1
                                ZIndex: =18

                            url1 As pcfDataField.textualColumn:
                                FieldDisplayName: ="url"
                                FieldName: ="url"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =2
                                ZIndex: =19

                        "cbServiceConnections As 'Fluent Command Bar (1.0.9)'.pcfdataset":
                            DisplayMode: =DisplayMode.Edit
                            Height: =32
                            Items: |-
                                =Table(
                                    {ItemKey:"New",ItemDisplayName:"New",ItemIconName:"Add", ItemEnabled:(CountRows(fdProjects.SelectedItems) = 1)},
                                
                                    {ItemKey:"Edit",ItemDisplayName:"Edit",ItemIconName:"Edit", ItemEnabled:(CountRows(fdServiceConnections.SelectedItems) > 0)},
                                
                                    {ItemKey:"Delete",ItemDisplayName:"Delete",ItemIconName:"Delete", ItemEnabled:(CountRows(fdServiceConnections.SelectedItems) > 0)},
                                
                                    {ItemKey:"Refresh",ItemDisplayName:"Refresh",ItemIconName:"Refresh", ItemEnabled:(CountRows(fdProjects.SelectedItems) = 1)},
                                
                                    // Far Items
                                    {ItemKey:"Info",ItemDisplayName:"Info",ItemIconName:"Info",ItemIconOnly:true,ItemFarItem:true}
                                )
                            OnSelect: |
                                =Switch(
                                    cbServiceConnections.Selected.ItemKey,
                                    "Refresh",
                                    ClearCollect(
                                        colProjectServiceConnections,
                                        CustomAzureDevOps.GetServiceEndpoints(
                                            ddOrganization.Selected.AccountName,
                                            currentProject.name,
                                            {'api-version': "6.0"}
                                        ).value
                                    ),
                                    "New",
                                    UpdateContext(
                                        {
                                            serviceConnectionOperation: "create",
                                            showProjectServiceConnectionPanel: true
                                        }
                                    );
                                    ,
                                    "Edit",
                                    UpdateContext(
                                        {
                                            serviceConnectionOperation: "edit",
                                            selectedServiceConnectionName: Concat(
                                                fdServiceConnections.SelectedItems,
                                                name,
                                                ", "
                                            ),
                                            selectedServiceConnectionClientId: First(fdServiceConnections.SelectedItems).authorization.parameters.applicationId,
                                            selectedServiceConnectionTenantId: First(fdServiceConnections.SelectedItems).authorization.parameters.tenantId,
                                            selectedServiceConnectionShared: CustomAzureDevOps.GetServiceEndpointShared(
                                                currentOrganization.AccountName,
                                                currentProject.name,
                                                First(fdServiceConnections.SelectedItems).id,
                                                {'api-version': "6.0-preview"}
                                            ).allPipelines.authorized,
                                            tenantIdSingleValue: true,
                                            clientIdSingleValue: true,
                                            sharedSingleValue: true
                                        }
                                    );
                                    If(
                                        CountRows(fdServiceConnections.SelectedItems) > 1,
                                        Clear(colClientIdSingleValue);
                                        Clear(colTenantIdSingleValue);
                                        Clear(colSharedSingleValue);
                                        ForAll(
                                            fdServiceConnections.SelectedItems,
                                            If(
                                                Not(ThisRecord.authorization.parameters.applicationId = selectedServiceConnectionClientId),
                                                Collect(
                                                    colClientIdSingleValue,
                                                    {value: "false"}
                                                )
                                            );
                                            If(
                                                Not(ThisRecord.authorization.parameters.tenantId = selectedServiceConnectionTenantId),
                                                Collect(
                                                    colTenantIdSingleValue,
                                                    {value: "false"}
                                                )
                                            );
                                            If(
                                                Not(
                                                    CustomAzureDevOps.GetServiceEndpointShared(
                                                        currentOrganization.AccountName,
                                                        currentProject.name,
                                                        ThisRecord.id,
                                                        {'api-version': "6.0-preview"}
                                                    ).allPipelines.authorized = selectedServiceConnectionShared
                                                ),
                                                Collect(
                                                    colSharedSingleValue,
                                                    {value: false}
                                                )
                                            );
                                        );
                                        UpdateContext(
                                            {
                                                tenantIdSingleValue: If(
                                                    CountRows(colTenantIdSingleValue) > 0,
                                                    false,
                                                    true
                                                ),
                                                clientIdSingleValue: If(
                                                    CountRows(colClientIdSingleValue) > 0,
                                                    false,
                                                    true
                                                ),
                                                sharedSingleValue: If(
                                                    CountRows(colSharedSingleValue) > 0,
                                                    false,
                                                    true
                                                )
                                            }
                                        );
                                    );
                                    UpdateContext(
                                        {
                                            showProjectServiceConnectionPanel: true,
                                            selectedServiceConnection: fdServiceConnections.Selected
                                        }
                                    );
                                    ,
                                    "Delete",
                                    ForAll(
                                        fdServiceConnections.SelectedItems,
                                        If(
                                            IsError(
                                                CustomAzureDevOps.DeleteServiceEndpoint(
                                                    currentOrganization.AccountName,
                                                    ThisRecord.id,
                                                    {
                                                        'api-version': "7.0",
                                                        projectIds: currentProject.id
                                                    }
                                                )
                                            ),
                                            ""
                                        )
                                    );
                                    ClearCollect(
                                        colProjectServiceConnections,
                                        CustomAzureDevOps.GetServiceEndpoints(
                                            ddOrganization.Selected.AccountName,
                                            currentProject.name,
                                            {'api-version': "6.0"}
                                        ).value
                                    );
                                    ,
                                    "Info",
                                    UpdateContext(
                                        {
                                            infoTitle: "Azure DevOps Service Connections",
                                            infoText: "Service Connections are configurations of how to access Power Platform Environments. A project should have at least one Service Connections configured. Remember that there must also be an Application User configured in the target environment",
                                            infoTextHeight: 60,
                                            showInfoDialog: true
                                        }
                                    );
                                    
                                );
                            Width: =Parent.Width - Parent.PaddingRight - 20
                            X: =Parent.PaddingLeft
                            Y: =lblServiceConnections.Height
                            ZIndex: =4

                    VariableGroups As groupContainer.manualLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        Height: =300
                        LayoutMinHeight: =300
                        LayoutMinWidth: =250
                        PaddingBottom: =8
                        PaddingLeft: =20
                        PaddingRight: =8
                        PaddingTop: =8
                        Width: =Parent.Width - 10
                        ZIndex: =5

                        "eleVariableGroup As 'Fluent Elevation (1.0.9)'":
                            DarkOverlay: =false
                            DisplayMode: =DisplayMode.Edit
                            FillColor: |-
                                ="#FFFFFF"
                            Height: |
                                =Parent.Height
                            PaddingBottom: =8
                            PaddingLeft: =8
                            PaddingRight: =8
                            PaddingTop: =0
                            Width: =Parent.Width
                            X: =0
                            Y: =0
                            ZIndex: =1

                        lblVariableGroup As label:
                            BorderColor: =RGBA(0, 18, 107, 1)
                            Color: =RGBA(0, 0, 0, 1)
                            DisabledColor: =RGBA(166, 166, 166, 1)
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =48
                            PaddingTop: =20
                            Text: ="Variable Groups"
                            Width: =560
                            X: =Parent.PaddingLeft
                            ZIndex: =2

                        "fdVariableGroup As 'Fluent Details List (1.0.9)'.pcfdataset":
                            columns_Items: |-
                                =With({
                                    // If there is a selection column, we remove the width and the padding
                                    availableWidth:Self.Width, //-If(ddSelectionMode.Selected.Name<>"None",32+16),
                                    padding:32,
                                    scrollWidth:20,
                                    collapsedModifiedOn:true,
                                    multiLineDescription: true
                                    },
                                    Table(
                                        {
                                            ColName:"name",ColDisplayName:"Name",ColSortable:true,ColWidth:200,ColRowHeader:true,
                                            ColResizable:true
                                        },
                                        {
                                            ColName:"description",ColDisplayName:"Description",ColSortable:true,
                                            ColWidth:300,ColResizable:true
                                        }
                                    )
                                )
                            CurrentSortColumn: ="Name"
                            CurrentSortDirection: ='PowerCAT.FluentDetailsList.CurrentSortDirection'.Ascending
                            DisplayMode: =DisplayMode.Edit
                            Height: =200
                            Items: =colProjectVariableGroups
                            OnSelect: =false
                            PageSize: =2000
                            SelectionAlwaysVisible: =true
                            SelectionType: ='PowerCAT.FluentDetailsList.SelectionType'.Multiple
                            Width: =Parent.Width - Parent.PaddingRight - 20
                            X: =Parent.PaddingLeft
                            Y: =lblVariableGroup.Height + cbVariableGrop.Height
                            ZIndex: =3

                            name4 As pcfDataField.textualColumn:
                                FieldDisplayName: ="name"
                                FieldName: ="name"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =1
                                ZIndex: =20

                            description2 As pcfDataField.textualColumn:
                                FieldDisplayName: ="description"
                                FieldName: ="description"
                                FieldType: ="s"
                                FieldVariantName: ="textualColumn"
                                Order: =2
                                ZIndex: =21

                        "cbVariableGrop As 'Fluent Command Bar (1.0.9)'.pcfdataset":
                            DisplayMode: =DisplayMode.Edit
                            Height: =32
                            Items: |-
                                =Table(
                                    {ItemKey:"View",ItemDisplayName:"View",ItemIconName:"View", ItemEnabled:(CountRows(fdVariableGroup.SelectedItems) = 1)},
                                    {ItemKey:"Refresh",ItemDisplayName:"Refresh",ItemIconName:"Refresh", ItemEnabled:(CountRows(fdProjects.SelectedItems) = 1)},
                                
                                    // Far Items
                                    {ItemKey:"Info",ItemDisplayName:"Info",ItemIconName:"Info",ItemIconOnly:true,ItemFarItem:true}
                                )
                            OnSelect: |-
                                =Switch(cbVariableGrop.Selected.ItemKey,
                                    "Refresh",
                                    ClearCollect(colProjectVariableGroups, CustomAzureDevOps.GetVariableGroups(ddOrganization.Selected.AccountName, currentProject.name, {'api-version': "6.0"}).value),
                                    "View",
                                    Launch($"https://dev.azure.com/{currentOrganization.AccountName}/{currentProject.name}/_library?itemType=VariableGroups&view=VariableGroupView&variableGroupId={fdVariableGroup.Selected.id}&path={fdVariableGroup.Selected.name}")    ,
                                    "Info",
                                    
                                    UpdateContext(
                                        {
                                            infoTitle: "Azure DevOps Variable Groups",
                                            infoText: "Variable groups store values and secrets that you might want to be passed into a YAML pipeline or make available across multiple pipelines. You can share and use variable groups in multiple pipelines in the same project.
                                
                                Secret variables in Variables groups are protected resources. You can add combinations of approvals, checks, and pipeline permissions to limit access to secret variables in a variable group. Access to non-secret variables is not limited by approvals, checks, and pipeline permissions.",
                                            infoTextHeight: 60,
                                            showInfoDialog: true
                                        }
                                    );
                                
                                    
                                )
                            Width: =Parent.Width - Parent.PaddingRight - 20
                            X: =Parent.PaddingLeft
                            Y: =lblVariableGroup.Height
                            ZIndex: =4

    dlgDeleteProjects As Dialog:
        Buttons: |-
            =Table({Label: "Cancel", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Standard } ,{Label: "Delete", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Primary})
        DialogHeight: =300
        Fill: =dlgDeleteProjects.OverlayColor
        Height: =App.Height
        OnButtonSelect: |-
            =Switch(
                Self.SelectedButton.Label,
                "Delete",
                ForAll(
                    fdProjects.SelectedItems,
                    CustomAzureDevOps.DeleteProject(
                        ddOrganization.Selected.AccountName,
                        ThisRecord.id,
                        {'api-version': "6.0"}
                    )
                );
                UpdateContext({showDeleteProjectDialog: false});
                ClearCollect(
                    colProjects,
                    AddColumns(
                        CustomAzureDevOps.GetProjects(
                            ddOrganization.Selected.AccountName,
                            {'api-version': "7.0"}
                        ).value,
                        "ModifiedOn",
                        DateValue(
                            lastUpdateTime,
                            "en-US"
                        )
                    )
                ),
                "Cancel",
                UpdateContext({showDeleteProjectDialog: false});
                
            )
        OnCloseSelect: |-
            =UpdateContext({showDeleteProjectDialog: false});
        SubTitle: |-
            =$"Are you sure you want to delete {CountRows(fdProjects.SelectedItems)} project{If(CountRows(fdProjects.SelectedItems) > 1, "s")} in the {ddOrganization.Selected.AccountName} organizaton?
            
            Deleted projects are available to restore for 28 days from the time of deletion.
            
            Go to https://dev.azure.com/{ddOrganization.Selected.AccountName}_settings/projects to restore deleted projects
            "
        Title: =$"Delete {CountRows(fdProjects.SelectedItems)} DevOps Project{If(CountRows(fdProjects.SelectedItems) > 1, "s")}?"
        Visible: =showDeleteProjectDialog
        Width: =App.Width
        ZIndex: =19

    dlgRunDiagnostics As Dialog:
        DialogHeight: =600
        Fill: =dlgRunDiagnostics.OverlayColor
        Height: =768
        OnButtonSelect: |-
            =Switch(Self.SelectedButton.Label,
                "Ok",
                UpdateContext({showRunDiagnosticsDialog: false});    
                "Cancel",
                UpdateContext({showRunDiagnosticsDialog: false});
            )
        SubTitle: |-
            =Concatenate($"Running Diagnostics will check that {fdProjects.Selected.name} is configured correctly", "
            ", diagnosticsInfo)
        Title: =$"Run Diagnostics for {fdProjects.Selected.name}"
        Visible: =showRunDiagnosticsDialog
        Width: =1366
        ZIndex: =20

    tmrProjectWizardCreateRepoLoop As timer:
        BorderColor: =RGBA(0, 120, 212, 1)
        BorderStyle: =BorderStyle.None
        DisabledBorderColor: =RGBA(244, 244, 244, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Duration: =2000
        Fill: =RGBA(0, 120, 212, 1)
        FocusedBorderThickness: =2
        Font: =Font.'Segoe UI'
        HoverBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -10%)
        HoverColor: =RGBA(255, 255, 255, 1)
        HoverFill: =ColorFade(RGBA(0, 120, 212, 1), -10%)
        OnTimerStart: |+
            =If(createNewAlmProjectRepoLoop,
                Switch(createNewAlmProjectRepoOperation,
            
                    "CreateRepo",
                    // Get repos
                    ClearCollect(colNewAlmProjectRepos, CustomAzureDevOps.GetGitRepos(newAlmProjectOrganization, newAlmProjectName, { 'api-version': "6.0"}).value);
                    If(Not(IsBlank(LookUp(colNewAlmProjectRepos, name = newAlmProjectPipelineTemplateRepository).id)),
                        
                        // Authorize export pipeline access to repo
                        CustomAzureDevOps.AuthorizeAllPipelineAccessToRepository(newAlmProjectOrganization, newAlmProjectId, Concatenate(newAlmProjectId, ".", LookUp(colNewAlmProjectRepos, name = newAlmProjectPipelineTemplateRepository).id), {
                            'api-version': "6.0-preview",
                            allPipelines: {
                                authorized: true
                            }
                        });
            
                        UpdateContext({newAlmProjectRepoStatus: $"Getting {newAlmProjectName} Build Service {newAlmProjectOrganization} identity"});
                        // Get build service identity
                        ClearCollect(
                            projectBuildServiceAccount,
                            CustomAzureDevOps.GetIdentities(
                                newAlmProjectOrganization,
                                {
                                    'api-version': "7.1-preview.1",
                                    searchFilter: "General",
                                    filterValue: Concatenate(
                                        newAlmProjectName,
                                        " Build Service (",
                                        newAlmProjectOrganization,
                                        ")"
                                    )
                                }
                            ).value
                        );
                        
                        // Set Permissions
                        UpdateContext({newAlmProjectRepoStatus: $"Setting repository permissions for {newAlmProjectName} Build Service {newAlmProjectOrganization}"});        
                        CustomAzureDevOps.SetPermissions(
                            ddOrganization.Selected.AccountName,
                            "2e9eb7ed-3c0a-47d4-87c1-0ffdd275fd87",
                            {
                                'api-version': "6.0",
                                token: "repoV2/" & newAlmProjectId & "/" & LookUp(
                                    colNewAlmProjectRepos,
                                    name = newAlmProjectPipelineTemplateRepository
                                ).id,
                                merge: true,
                                accessControlEntries: {
                                    descriptor: First(projectBuildServiceAccount).descriptor,
                                    allow: 16404,
                                    deny: 0
                                }
                            }
                        );
                        
                        UpdateContext({newAlmProjectRepoStatus: $"Creating sync-pipeline-repo.yml file"});
            
                        UpdateContext({fileContent: GetGithubFileContent.Run(newPipelineTemplateVersion).filecontent});
                        
                        CustomAzureDevOps.CreateFile(
                            ddOrganization.Selected.AccountName,
                            LookUp(colNewAlmProjectRepos, name = newAlmProjectPipelineTemplateRepository).id,
                            {
                                'api-version': "7.0",
                                refUpdates: Table(
                                    {
                                        name: "refs/heads/main",
                                        oldObjectId: "0000000000000000000000000000000000000000"
                                    }
                                ),
                                commits: Table(
                                    {
                                        comment: "Initial commit.",
                                        changes: {
                                            changeType: "add",
                                            item: {path: "Pipelines/sync-pipeline-repo.yml"},
                                            newContent: {
                                                content: fileContent,
                                                contentType: "base64Encoded"
                                            }
                                        }
                                    }
                                )
                            }
                        );
            
            
                        UpdateContext({newAlmProjectRepoStatus: $"Creating sync-pipeline-repo pipeline"});        
                        UpdateContext({newAlmProjectSyncPipeline: CustomAzureDevOps.CreatePipeline(newAlmProjectOrganization, newAlmProjectName, {
                                'api-version': "6.0",
                                folder: "ALM Accelerator Templates",
                                name: "sync-pipeline-repo",
                                configuration: {
                                    type: "yaml",
                                    path: "/Pipelines/sync-pipeline-repo.yml",
                                    repository: {
                                        id: LookUp(colNewAlmProjectRepos, name = newAlmProjectPipelineTemplateRepository).id,
                                        name: newAlmProjectPipelineTemplateRepository,
                                        type: "azureReposGit"
                                    }
                                }
                            }
                        ).id});
            
                        UpdateContext({newAlmProjectRepoStatus: $"Running sync-pipeline-repo pipeline"});        
                        UpdateContext({syncPipelineRun: CustomAzureDevOps.RunSyncPipeline(newAlmProjectOrganization, newAlmProjectName, newAlmProjectSyncPipeline, {
                            'api-version': "6.0",
                            definition: {
                                id: newAlmProjectSyncPipeline
                            },
                            templateParameters: {
                                BranchToCreate: "initialSync",
                                TargetBranch: "main",
                                SyncFrom: "Tag",
                                SourceBranchOrTag: newAlmProjectPipelineTemplateVersion,
                                AutoCompletePR: true,
                                deleteSourceBranch: true
                            }
                        })}); 
            
                        // removed - it requires that custom connector is preinstalled in order to install the ALM Acc. solution. Need to find a solution for this
                        //GetPipelineRunResult.Run(currentOrganization.AccountName, newAlmProjectName, syncPipelineRun.pipeline.id, syncPipelineRun.id, User().Email);
            
                        UpdateContext({createNewAlmProjectRepoOperation: "WaitingForSyncPipelineToComplete"});
                        UpdateContext({
                            newALMAccProjectCurrentStep: If(newALMAccProjectCurrentStep = 2, newALMAccProjectCurrentStep + 1),
                            wizardShowSpinner: false
                        });
                    ),
                
                    "WaitingForSyncPipelineToComplete",
                    UpdateContext({newAlmProjectSyncPipelineChecks: newAlmProjectSyncPipelineChecks + 1});
                    UpdateContext({newAlmProjectRepoStatus: $"Checking sync-pipeline-repo result ({newAlmProjectSyncPipelineChecks})"});
            
                        
                    ClearCollect(colNewAlmProjectSyncPipelineRuns, CustomAzureDevOps.GetPipelineRuns(newAlmProjectOrganization, newAlmProjectName, newAlmProjectSyncPipeline, {'api-version':"6.0"}).value);
                    Switch(First(colNewAlmProjectSyncPipelineRuns).state,
                        "completed",
                            UpdateContext({
                                createNewAlmProjectRepoLoop: false,
                                createNewAlmProjectSyncComplete: true,
                                createNewAlmProjectSyncResult: First(colNewAlmProjectSyncPipelineRuns).result
                            }),
                        "inProgress",
                            UpdateContext({
                                createNewAlmProjectSyncComplete: false
                            })    
                    ),
                    false
                    
                );    
            );
            
        PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =ColorFade(RGBA(0, 120, 212, 1), -30%)
        Repeat: =createNewAlmProjectRepoLoop
        Size: =10.5
        Start: =createNewAlmProjectRepoLoop
        Visible: =false
        X: =78
        Y: =256
        ZIndex: =51

    cntWizard As groupContainer.manualLayoutContainer:
        Height: =App.Height
        Visible: =showNewALMAccProjectPanel
        Width: =App.Width
        ZIndex: =61

        Panel_1 As Panel:
            Buttons: |-
                =//Table({Label: "Next", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Primary})
            DialogWidth: =900
            Fill: =Panel_1.OverlayColor
            OnCloseSelect: =Select(btnCloseWizard);
            Subtitle: ="Follow the steps below to setup a complete ALM Accelerator Project"
            Title: ="Setup new ALM Accelerator Project"
            Width: =App.Width
            ZIndex: =1

        layoutWizard As groupContainer.horizontalAutoLayoutContainer:
            Height: =App.Height - Self.Y - 50
            LayoutMode: =LayoutMode.Auto
            Width: =Panel_1.ContentWidth + 20
            X: =Panel_1.ContentX -20
            Y: =111
            ZIndex: =2

            cntTimeLine As groupContainer.manualLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                BorderColor: =RGBA(237, 237, 237, 1)
                BorderThickness: =1
                FillPortions: =2
                Height: =Parent.Height
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                ZIndex: =1

                grpTimelineStep2 As group:
                    Height: =5
                    Width: =5
                    X: =100
                    Y: =100
                    ZIndex: =22

                    rectangleStep2 As rectangle:
                        BorderColor: =RGBA(179, 179, 179, 1)
                        BorderStyle: =BorderStyle.None
                        DisabledFill: =RGBA(166, 166, 166, 1)
                        Fill: =If(newALMAccProjectCurrentStep < 2, RGBA(179, 179, 179, 1), RGBA(0, 120, 212, 1))
                        FocusedBorderColor: =RGBA(0, 120, 212, 1)
                        Height: =36
                        HoverFill: =
                        PressedFill: =
                        Width: =2
                        X: =39
                        Y: =60
                        ZIndex: =2

                    lblStep2 As Label:
                        DisplayMode: =DisplayMode.Edit
                        FontSize: =12
                        FontWeight: =FontWeight.Semibold
                        Height: =32
                        PaddingStart: =12  
                        Text: ="Pipeline Templates"
                        Width: =168
                        X: =circleCurrentStep2.X + 16
                        Y: =91
                        ZIndex: =3

                    circleCurrentStep2 As circle:
                        BorderColor: =RGBA(179, 179, 179, 1)
                        BorderStyle: =BorderStyle.None
                        DisabledFill: =
                        Fill: =RGBA(0, 120, 212, 1)
                        Height: =16
                        HoverFill: =
                        PressedFill: =
                        Visible: =newALMAccProjectCurrentStep > 1
                        Width: =16
                        X: =32
                        Y: =99
                        ZIndex: =5

                    circleStep2 As circle:
                        BorderColor: =RGBA(179, 179, 179, 1)
                        BorderThickness: =2
                        DisabledFill: =
                        Fill: =RGBA(0, 0, 0, 0)
                        Height: =14
                        HoverFill: =
                        PressedFill: =
                        Visible: =newALMAccProjectCurrentStep < 2
                        Width: =14
                        X: =33
                        Y: =101
                        ZIndex: =16

                    icoCompletedStep2 As icon.CheckBadge:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        Color: =RGBA(255, 255, 255, 1)
                        DisabledBorderColor: =RGBA(166, 166, 166, 1)
                        DisabledColor: =RGBA(220, 220, 220, 1)
                        DisabledFill: =RGBA(0, 0, 0, 0)
                        Height: =20
                        HoverBorderColor: =RGBA(0, 0, 0, 0)
                        HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                        HoverFill: =RGBA(0, 0, 0, 0)
                        Icon: =Icon.CheckBadge
                        PressedBorderColor: =RGBA(0, 0, 0, 0)
                        PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                        PressedFill: =RGBA(0, 0, 0, 0)
                        Visible: =newALMAccProjectCurrentStep > 2
                        Width: =20
                        X: =30
                        Y: =97
                        ZIndex: =21

                grpTimelineStep3 As group:
                    Height: =5
                    Width: =5
                    X: =100
                    Y: =100
                    ZIndex: =23

                    lblStep3 As Label:
                        DisplayMode: =DisplayMode.Edit
                        FontSize: =12
                        FontWeight: =FontWeight.Semibold
                        Height: =32
                        PaddingStart: =12  
                        Text: ="Service Connections"
                        Width: =168
                        X: =circleCurrentStep3.X + 16
                        Y: =150
                        ZIndex: =6

                    circleCurrentStep3 As circle:
                        BorderColor: =RGBA(179, 179, 179, 1)
                        BorderStyle: =BorderStyle.None
                        DisabledFill: =RGBA(0, 120, 212, 1)
                        Fill: =RGBA(0, 120, 212, 1)
                        Height: =16
                        HoverFill: =
                        PressedFill: =
                        Visible: =newALMAccProjectCurrentStep > 2
                        Width: =16
                        X: =32
                        Y: =158
                        ZIndex: =7

                    rectangleStep3 As rectangle:
                        BorderColor: =RGBA(166, 166, 166, 1)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        DisabledFill: =RGBA(166, 166, 166, 1)
                        Fill: =If(newALMAccProjectCurrentStep < 3, RGBA(179, 179, 179, 1), RGBA(0, 120, 212, 1))
                        FocusedBorderColor: =RGBA(0, 120, 212, 1)
                        Height: =36
                        HoverFill: =
                        PressedFill: =
                        Width: =2
                        X: =39
                        Y: =119
                        ZIndex: =10

                    circleStep3 As circle:
                        BorderColor: =RGBA(179, 179, 179, 1)
                        BorderThickness: =2
                        DisabledFill: =
                        Fill: =RGBA(0, 0, 0, 0)
                        Height: =14
                        HoverFill: =
                        PressedFill: =
                        Visible: =newALMAccProjectCurrentStep < 3
                        Width: =14
                        X: =33
                        Y: =160
                        ZIndex: =17

                    icoCompletedStep3 As icon.CheckBadge:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        Color: =RGBA(255, 255, 255, 1)
                        DisabledBorderColor: =RGBA(166, 166, 166, 1)
                        DisabledColor: =RGBA(220, 220, 220, 1)
                        DisabledFill: =RGBA(0, 0, 0, 0)
                        Height: =20
                        HoverBorderColor: =RGBA(0, 0, 0, 0)
                        HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                        HoverFill: =RGBA(0, 0, 0, 0)
                        Icon: =Icon.CheckBadge
                        PressedBorderColor: =RGBA(0, 0, 0, 0)
                        PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                        PressedFill: =RGBA(0, 0, 0, 0)
                        Visible: =newALMAccProjectCurrentStep > 3
                        Width: =20
                        X: =30
                        Y: =156
                        ZIndex: =22

                grpTimelineStep1 As group:
                    Height: =5
                    Width: =5
                    X: =40
                    Y: =40
                    ZIndex: =24

                    lblStep1 As Label:
                        DisplayMode: =DisplayMode.Edit
                        FontSize: =12
                        FontWeight: =FontWeight.Semibold
                        Height: =32
                        OnSelect: |-
                            =UpdateContext({newALMAccProjectCurrentStep: 1})
                        PaddingStart: =12  
                        Text: ="Project"
                        Width: =168
                        X: =circleCompletedStep1.X + 16
                        Y: =32
                        ZIndex: =1

                    circleCompletedStep1 As circle:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        DisabledFill: =
                        Fill: =RGBA(0, 120, 212, 1)
                        Height: =16
                        HoverFill: =
                        PressedFill: =
                        Visible: =newALMAccProjectCurrentStep > 0
                        Width: =16
                        X: =32
                        Y: =40
                        ZIndex: =4

                    circleStep1 As circle:
                        BorderColor: =RGBA(179, 179, 179, 1)
                        BorderThickness: =2
                        DisabledFill: =
                        Fill: =RGBA(0, 0, 0, 0)
                        Height: =14
                        HoverFill: =
                        PressedFill: =
                        Visible: =newALMAccProjectCurrentStep < 1
                        Width: =14
                        X: =33
                        Y: =41
                        ZIndex: =14

                    icoCompletedStep1 As icon.CheckBadge:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        Color: =RGBA(255, 255, 255, 1)
                        DisabledBorderColor: =RGBA(166, 166, 166, 1)
                        DisabledColor: =RGBA(220, 220, 220, 1)
                        DisabledFill: =RGBA(0, 0, 0, 0)
                        Height: =20
                        HoverBorderColor: =RGBA(0, 0, 0, 0)
                        HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                        HoverFill: =RGBA(0, 0, 0, 0)
                        Icon: =Icon.CheckBadge
                        PressedBorderColor: =RGBA(0, 0, 0, 0)
                        PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                        PressedFill: =RGBA(0, 0, 0, 0)
                        Visible: =newALMAccProjectCurrentStep > 1
                        Width: =20
                        X: =30
                        Y: =38
                        ZIndex: =20

                grpTimelineStep4 As group:
                    Height: =5
                    Width: =5
                    X: =40
                    Y: =40
                    ZIndex: =25

                    rectangleStep5 As rectangle:
                        BorderColor: =RGBA(166, 166, 166, 1)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        DisabledFill: =RGBA(166, 166, 166, 1)
                        Fill: =If(newALMAccProjectCurrentStep < 5, RGBA(179, 179, 179, 1), RGBA(0, 120, 212, 1))
                        FocusedBorderColor: =RGBA(0, 120, 212, 1)
                        Height: =36
                        HoverFill: =
                        PressedFill: =
                        Width: =2
                        X: =39
                        Y: =177
                        ZIndex: =12

                    circleCurrentStep4 As circle:
                        BorderColor: =RGBA(179, 179, 179, 1)
                        BorderStyle: =BorderStyle.None
                        DisabledFill: =RGBA(0, 120, 212, 1)
                        Fill: =RGBA(0, 120, 212, 1)
                        Height: =16
                        HoverFill: =
                        PressedFill: =
                        Visible: =newALMAccProjectCurrentStep > 3
                        Width: =16
                        X: =32
                        Y: =216
                        ZIndex: =13

                    lblStep4 As Label:
                        DisplayMode: =DisplayMode.Edit
                        FontSize: =12
                        FontWeight: =FontWeight.Semibold
                        Height: =32
                        PaddingStart: =12  
                        Text: ="Generic Pipelines"
                        Width: =168
                        X: =circleCurrentStep4.X + 16
                        Y: =208
                        ZIndex: =15

                    circleStep4 As circle:
                        BorderColor: =RGBA(179, 179, 179, 1)
                        BorderThickness: =2
                        DisabledFill: =
                        Fill: =RGBA(0, 0, 0, 0)
                        Height: =14
                        HoverFill: =
                        PressedFill: =
                        Visible: =newALMAccProjectCurrentStep < 4
                        Width: =14
                        X: =33
                        Y: =217
                        ZIndex: =19

                    icoCompletedStep4 As icon.CheckBadge:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        Color: =RGBA(255, 255, 255, 1)
                        DisabledBorderColor: =RGBA(166, 166, 166, 1)
                        DisabledColor: =RGBA(220, 220, 220, 1)
                        DisabledFill: =RGBA(0, 0, 0, 0)
                        Height: =20
                        HoverBorderColor: =RGBA(0, 0, 0, 0)
                        HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                        HoverFill: =RGBA(0, 0, 0, 0)
                        Icon: =Icon.CheckBadge
                        PressedBorderColor: =RGBA(0, 0, 0, 0)
                        PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                        PressedFill: =RGBA(0, 0, 0, 0)
                        Visible: =newALMAccProjectCurrentStep > 4
                        Width: =20
                        X: =30
                        Y: =214
                        ZIndex: =24

            cntSteps As groupContainer.manualLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                FillPortions: =4
                Height: =Parent.Height
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                X: =40
                ZIndex: =2

                cntProjectWizardSteps As groupContainer.horizontalAutoLayoutContainer:
                    BorderColor: =RGBA(230, 230, 230, 1)
                    BorderThickness: =1
                    Height: =Parent.Height
                    LayoutDirection: =LayoutDirection.Vertical
                    LayoutMode: =LayoutMode.Auto
                    LayoutOverflowY: =LayoutOverflow.Scroll
                    PaddingBottom: =10
                    PaddingLeft: =10
                    PaddingRight: =10
                    PaddingTop: =10
                    Width: =Parent.Width
                    ZIndex: =1

                    cntProjectWizardStep1 As groupContainer.manualLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        BorderColor: =RGBA(237, 237, 237, 1)
                        FillPortions: =0
                        Height: =580
                        LayoutMinHeight: =Parent.Height
                        LayoutMinWidth: =250
                        PaddingLeft: =10
                        Visible: =newALMAccProjectCurrentStep = 1
                        Width: =Parent.Width - 20
                        ZIndex: =1

                        cntProjectWizardCreateProjectProperties_1 As groupContainer.manualLayoutContainer:
                            Height: =330
                            Width: =Parent.Width
                            Y: =250
                            ZIndex: =3

                            "txtProjectDescription_3 As 'Text box'":
                                AccessibleLabel: ="Search files"
                                DisplayMode: =If(IsBlank(ddOrganization.Selected) Or Not(IsBlank(ddExistingProjects_1.Selected)) Or  Not(createProjectPermission), DisplayMode.Disabled, DisplayMode.Edit)
                                Height: =32
                                Placeholder: ="Project Description"
                                Value: =""
                                Visible: =true
                                Width: =Parent.Width - 220
                                X: =200
                                Y: =60
                                ZIndex: =1

                            lblProjectDescription_10 As label:
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                Height: =32
                                Size: =10.5
                                Text: ="Project Description"
                                Width: =180
                                X: =10
                                Y: =60
                                ZIndex: =2

                            "txtProjectName_5 As 'Text box'":
                                AccessibleLabel: ="Search files"
                                DisplayMode: =If(IsBlank(ddOrganization.Selected) Or Not(IsBlank(ddExistingProjects_1.Selected)) Or  Not(createProjectPermission), DisplayMode.Disabled, DisplayMode.Edit)
                                Height: =32
                                OnChange: |-
                                    =UpdateContext({createProjectError: ""})
                                Placeholder: ="Project Name"
                                Value: =""
                                Visible: =true
                                Width: =Parent.Width - 220
                                X: =200
                                Y: =10
                                ZIndex: =3

                            lblProjectName_7 As label:
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                Height: =32
                                Size: =10.5
                                Text: ="Project Name"
                                Width: =180
                                X: =10
                                Y: =10
                                ZIndex: =4

                            "ddExistingProjects_1 As 'Combo box'.pcfdataset":
                                DisplayMode: =If(Not(IsBlank(ddOrganization.Selected)) And IsBlank(txtProjectName_5.Value), DisplayMode.Edit, DisplayMode.Disabled)
                                Height: =32
                                Items: =If(Not(IsBlankOrError(currentOrganization.AccountName)), Sort(colProjects, name, SortOrder.Ascending), Blank())
                                OnChange: |
                                    =If(CountRows(Self.SelectedItems) > 0,
                                        ClearCollect(colExistingProjectRepos, CustomAzureDevOps.GetGitRepos(currentOrganization.AccountName, Self.Selected.name, {'api-version': "6.0"}).value);
                                    
                                        // check if selected project is empty (only 1 uninitialized repo)
                                        If(CountRows(colExistingProjectRepos) > 1 Or LookUp(colExistingProjectRepos, name = Self.Selected.name).size > 0,
                                            UpdateContext({
                                                ExistingProjectEmpty: false,
                                                createProjectError: "Please select an existing project that is empty"
                                            }),
                                            UpdateContext({
                                                ExistingProjectEmpty: true,
                                                createProjectError: ""
                                            })
                                        );
                                    ,
                                        UpdateContext({createProjectError: ""});
                                    );
                                Text: =
                                Width: =Parent.Width - 250
                                X: =200
                                Y: =190
                                ZIndex: =5

                                name7_1 As pcfDataField.textualColumn:
                                    FieldDisplayName: ="name"
                                    FieldName: ="name"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =1
                                    ZIndex: =31

                            lblProjectName_9 As label:
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                Height: =32
                                Size: =10.5
                                Text: ="Select an existing project"
                                Width: =180
                                X: =10
                                Y: =190
                                ZIndex: =6

                            lblProjectName_8 As label:
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                Height: =32
                                Size: =10.5
                                Text: ="Or"
                                Width: =Parent.Width - 20
                                X: =10
                                Y: =158
                                ZIndex: =7

                            icoResetExistingProjectBox_1 As icon.Erase:
                                BorderColor: =RGBA(0, 0, 0, 0)
                                Color: =RGBA(0, 120, 212, 1)
                                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                DisabledColor: =RGBA(220, 220, 220, 1)
                                DisabledFill: =RGBA(0, 0, 0, 0)
                                DisplayMode: =If(IsBlank(ddExistingProjects_1.Selected), DisplayMode.Disabled, DisplayMode.Edit)
                                Height: =26
                                HoverBorderColor: =RGBA(0, 0, 0, 0)
                                HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                HoverFill: =RGBA(0, 0, 0, 0)
                                Icon: =Icon.Erase
                                OnSelect: |-
                                    =Reset(ddExistingProjects_1);
                                    UpdateContext({createProjectError: ""})
                                PaddingBottom: =3
                                PaddingLeft: =3
                                PaddingRight: =3
                                PaddingTop: =3
                                PressedBorderColor: =RGBA(0, 0, 0, 0)
                                PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                Width: =26
                                X: =ddExistingProjects_1.X + ddExistingProjects_1.Width + 5
                                Y: =ddExistingProjects_1.Y
                                ZIndex: =8

                            "ddProjectProcess As 'Combo box'.pcfdataset":
                                DefaultSelectedItems: =LookUp(colProjectProcesses, isEnabled = true And isDefault = true)
                                DisplayMode: =If(IsBlank(ddOrganization.Selected) Or Not(IsBlank(ddExistingProjects_1.Selected)) Or  Not(createProjectPermission), DisplayMode.Disabled, DisplayMode.Edit)
                                Height: =32
                                Items: =Sort(colProjectProcesses, name, SortOrder.Ascending)
                                OnChange: =false
                                Text: =
                                Tooltip: ="Project Processes define the model to be used for work item managements in your project"
                                Width: =Parent.Width - 220
                                X: =200
                                Y: =109
                                ZIndex: =9

                                name5 As pcfDataField.textualColumn:
                                    FieldDisplayName: ="name"
                                    FieldName: ="name"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =1
                                    ZIndex: =35

                                typeId1 As pcfDataField.textualColumn:
                                    FieldDisplayName: ="typeId"
                                    FieldName: ="typeId"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =2
                                    ZIndex: =36

                                isEnabled1 As pcfDataField.textualColumn:
                                    FieldDisplayName: ="isEnabled"
                                    FieldName: ="isEnabled"
                                    FieldType: ="b"
                                    FieldVariantName: ="textualColumn"
                                    Order: =3
                                    ZIndex: =37

                                isDefault1 As pcfDataField.textualColumn:
                                    FieldDisplayName: ="isDefault"
                                    FieldName: ="isDefault"
                                    FieldType: ="b"
                                    FieldVariantName: ="textualColumn"
                                    Order: =4
                                    ZIndex: =38

                            lblProjectDescription_11 As label:
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                Height: =32
                                Size: =10.5
                                Text: ="Project Process"
                                Width: =180
                                X: =10
                                Y: =109
                                ZIndex: =10

                            tglEnablePreviewFeatures As Toggle:
                                Checked: =false
                                DisplayMode: =DisplayMode.Edit
                                Height: =22
                                OffText: ="Disable Preview Features"
                                OnText: ="Enable Preview Features"
                                Width: =213
                                X: =16
                                Y: =276
                                ZIndex: =11

                            icoPreviewInfo As icon.Information:
                                BorderColor: =RGBA(0, 0, 0, 0)
                                Color: =RGBA(0, 120, 212, 1)
                                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                DisabledColor: =RGBA(220, 220, 220, 1)
                                DisabledFill: =RGBA(0, 0, 0, 0)
                                Height: =22
                                HoverBorderColor: =RGBA(0, 0, 0, 0)
                                HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                HoverFill: =RGBA(0, 0, 0, 0)
                                Icon: =Icon.Information
                                OnSelect: |-
                                    =Launch("https://github.com/microsoft/coe-starter-kit/blob/main/CenterofExcellenceALMAccelerator/PREVIEW.md")
                                PaddingBottom: =3
                                PaddingLeft: =3
                                PaddingRight: =3
                                PaddingTop: =3
                                PressedBorderColor: =RGBA(0, 0, 0, 0)
                                PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                Tooltip: ="Learn more about Preview Features in the ALM Accelerator."
                                Width: =22
                                X: =223
                                Y: =278
                                ZIndex: =12

                        cntCreateProjectWizardCreateProjectInfo_1 As groupContainer.manualLayoutContainer:
                            Width: =Parent.Width
                            Y: =50
                            ZIndex: =4

                            lblProjectInformation_1 As label:
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Lighter
                                Height: =182
                                Overflow: =Overflow.Scroll
                                PaddingLeft: =0
                                Size: =10.5
                                Text: |-
                                    ="Select an existing empty project or create a new Project for use with ALM Accelerator.
                                    
                                    Each Project can host multiple Power Platform solutions.
                                    
                                    Each Project will have an Default Team. Members of the Project Team will have access to the solutions in the project.
                                    
                                    Consider creating Projects per Team, Department, Power Platform Project"
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width - 20
                                X: =10
                                ZIndex: =3

                            tmrProjectWizardCreateProjectLoop_1 As timer:
                                BorderColor: =RGBA(0, 120, 212, 1)
                                BorderStyle: =BorderStyle.None
                                DisabledBorderColor: =RGBA(244, 244, 244, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                DisabledFill: =RGBA(244, 244, 244, 1)
                                Duration: =2000
                                Fill: =RGBA(0, 120, 212, 1)
                                FocusedBorderThickness: =2
                                Font: =Font.'Segoe UI'
                                HoverBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -10%)
                                HoverColor: =RGBA(255, 255, 255, 1)
                                HoverFill: =ColorFade(RGBA(0, 120, 212, 1), -10%)
                                OnTimerEnd: |-
                                    =UpdateContext({operation: CustomAzureDevOps.GetOperation(ddOrganization.Selected.AccountName, operation.id)});
                                    If(operation.status = "succeeded",      
                                        UpdateContext({createNewAlmProjectLoop: false});
                                        ClearCollect(colProjects, AddColumns(CustomAzureDevOps.GetProjects(ddOrganization.Selected.AccountName, { 'api-version': "7.0" }).value, "ModifiedOn", DateValue(lastUpdateTime, "en-US")));
                                        
                                        UpdateContext({
                                            newAlmProjectId: LookUp(colProjects, name = newAlmProjectName).id,
                                            newAlmProjectName: LookUp(colProjects, name = newAlmProjectName).name,
                                            wizardShowSpinner: false,
                                            newALMAccProjectCurrentStep: newALMAccProjectCurrentStep + 1
                                        });
                                    );
                                PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                PressedColor: =RGBA(255, 255, 255, 1)
                                PressedFill: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                Repeat: =createNewAlmProjectLoop
                                Size: =10.5
                                Start: =createNewAlmProjectLoop
                                Visible: =false
                                X: =139
                                Y: =178
                                ZIndex: =4

                        lblNewALMAccProjectStep1_1 As Label:
                            DisplayMode: =DisplayMode.Edit
                            FontSize: =14
                            FontWeight: =FontWeight.Semibold
                            Height: =32
                            Text: ="Use a new or existing project?"
                            Width: =Parent.Width - Self.X
                            X: =10
                            Y: =0
                            ZIndex: =5

                        btnCreateProject_1 As Button:
                            DisplayMode: =If((IsBlank(txtProjectName_5.Value) And CountRows(ddExistingProjects_1.SelectedItems) = 0) Or Not(createProjectError = ""), DisplayMode.Disabled, DisplayMode.Edit)
                            Height: =32
                            OnSelect: |-
                                =If(IsBlank(ddExistingProjects_1.Selected), 
                                    UpdateContext(
                                        {
                                            newAlmProjectOrganization: currentOrganization.AccountName,
                                            newAlmProjectName: txtProjectName_5.Value,
                                            newAlmProjectDescription: txtProjectDescription_3.Value,
                                            wizardShowSpinner: true,
                                            createProjectError: ""
                                        }
                                    );
                                    // create project
                                            ClearCollect(
                                                operations,
                                                IfError(CustomAzureDevOps.CreateProject(
                                                    newAlmProjectOrganization,
                                                    {
                                                        'api-version': "7.0",
                                                        name: newAlmProjectName,
                                                        description: newAlmProjectDescription,
                                                        capabilities: {
                                                            versioncontrol: {sourceControlType: "Git"},
                                                            processTemplate: {templateTypeId: ddProjectProcess.Selected.typeId}//basic project template
                                                        }
                                                    }
                                                ),
                                                { id: "-1" }
                                                )
                                            );
                                        
                                        If(First(operations).id = "-1",
                                            UpdateContext({
                                                newAlmProjectShowSpinnerStep1: false,
                                                createProjectError: "There was an error creating the Project. Does the project already exist?",
                                                wizardShowSpinner: false
                                            });
                                        ,
                                            UpdateContext({operation: First(operations)});
                                            UpdateContext({createNewAlmProjectLoop: true})
                                        )
                                    ,
                                     // use existing project
                                    UpdateContext(
                                        {
                                            newAlmProjectOrganization: currentOrganization.AccountName,
                                            newAlmProjectName: ddExistingProjects_1.Selected.name,
                                            newAlmProjectId: ddExistingProjects_1.Selected.id,
                                            wizardShowSpinner: false,
                                            newALMAccProjectCurrentStep: newALMAccProjectCurrentStep + 1
                                        }
                                    );
                                );
                                ClearCollect(colReleaseTags, 'Release Histories');
                                UpdateContext({newPipelineTemplateVersion: First(Sort(colReleaseTags, Published, SortOrder.Descending)).Tag});
                            Text: ="Next"
                            Visible: =false
                            Width: =96
                            X: =Parent.Width - Self.Width - 10
                            Y: =Parent.Height - Self.Height - 10
                            ZIndex: =6

                        lblCreateProjectError_1 As Label:
                            AutoHeight: =true
                            Color: =RGBA(184, 0, 0, 1)
                            DisplayMode: =DisplayMode.Edit
                            Height: =29
                            Text: =Coalesce(createProjectError, projectWizardError)
                            Visible: =Not(createProjectError = "") Or Not(projectWizardError = "")
                            Width: =570
                            Wrap: =true
                            X: =10
                            Y: =551
                            ZIndex: =7

                    cntProjectWizardStep2 As groupContainer.manualLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        FillPortions: =0
                        Height: =580
                        LayoutMinHeight: =Parent.Height
                        LayoutMinWidth: =250
                        Visible: =newALMAccProjectCurrentStep = 2
                        Width: =Parent.Width - 20
                        ZIndex: =2

                        cntProjectWizardCreateRepoProperties_1 As groupContainer.manualLayoutContainer:
                            Height: =357
                            PaddingTop: =32
                            Width: =Parent.Width
                            Y: =200
                            ZIndex: =1

                            "ddProjectWizardCreateRepoExistingRepos_1 As 'Combo box'.pcfdataset":
                                AccessibleLabel: ="Align"
                                DefaultSelectedItems: |-
                                    =Table({Name:"None"})
                                DisplayMode: =If(chkProjectWizardCreateRepoExistingRepo_1.Checked Or IsEmpty(colPipelineRepos), DisplayMode.Disabled, DisplayMode.Edit)
                                Height: =32
                                Items: =colPipelineRepos
                                OnChange: =false
                                Text: =""
                                Visible: =true
                                Width: =Parent.Width - 20
                                X: =10
                                Y: =194
                                ZIndex: =3

                                name6_1 As pcfDataField.textualColumn:
                                    FieldDisplayName: ="name"
                                    FieldName: ="name"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =1
                                    ZIndex: =25

                            "ddProjectWizardCreateRepoExistingProjects_1 As 'Combo box'.pcfdataset":
                                AccessibleLabel: ="Align"
                                DefaultSelectedItems: |-
                                    =Table({Name:"None"})
                                DisplayMode: =If(chkProjectWizardCreateRepoExistingRepo_1.Checked,DisplayMode.Disabled, DisplayMode.Edit)
                                Height: =32
                                Items: =If(Not(IsBlank(ddOrganization.Selected)), Sort(colProjects, name, SortOrder.Ascending))
                                OnChange: |-
                                    =Clear(colPipelineRepos);
                                    If(Not(IsBlankOrError(Self.Selected.name)),
                                        Collect(colPipelineRepos, CustomAzureDevOps.GetGitRepos(ddOrganization.Selected.AccountName, Self.Selected.name, {'api-version': "6.0"}).value);
                                    );
                                Text: =""
                                Visible: =true
                                Width: =Parent.Width - 20
                                X: =10
                                Y: =118
                                ZIndex: =4

                                name5_1 As pcfDataField.textualColumn:
                                    FieldDisplayName: ="name"
                                    FieldName: ="name"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =1
                                    ZIndex: =24

                            lblPipelineTemplateVersion_6 As label:
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                Height: =32
                                Size: =10.5
                                Text: ="Select existing Project hosting Pipeline Templates"
                                Width: =Parent.Width - 20
                                X: =10
                                Y: =86
                                ZIndex: =5

                            lblPipelineTemplateVersion_7 As label:
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                Height: =32
                                Size: =10.5
                                Text: ="Select existing Repository hosting Pipeline Templates"
                                Width: =Parent.Width - 20
                                X: =10
                                Y: =158
                                ZIndex: =6

                            "chkProjectWizardCreateRepoExistingRepo_1 As 'Check box'":
                                Checked: =true
                                DisplayMode: =DisplayMode.Edit
                                Height: =31
                                Label: =$"Install  into new coe-alm-accelerator-templates repository"
                                OnChange: |-
                                    =Reset(ddProjectWizardCreateRepoExistingRepos_1);
                                    Reset(ddProjectWizardCreateRepoExistingProjects_1);
                                Width: =419
                                X: =10
                                Y: =8
                                ZIndex: =7

                            lblPipelineTemplateVersion_5 As label:
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Lighter
                                Height: =32
                                Size: =10.5
                                Text: |-
                                    =$"Version: {newPipelineTemplateVersion}"
                                Width: =364
                                X: =34
                                Y: =39
                                ZIndex: =8

                            icoUpdateReleaseTagsNewRepo_3 As icon.Reload:
                                BorderColor: =RGBA(0, 0, 0, 0)
                                Color: =RGBA(0, 120, 212, 1)
                                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                DisabledColor: =RGBA(220, 220, 220, 1)
                                DisabledFill: =RGBA(0, 0, 0, 0)
                                Height: =26
                                HoverBorderColor: =RGBA(0, 0, 0, 0)
                                HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                HoverFill: =RGBA(0, 0, 0, 0)
                                Icon: =Icon.Reload
                                OnSelect: |-
                                    =IfError(UpdateReleaseHistoryInstant.Run(),
                                        Notify("Error refreshing release tags")
                                        ,
                                        ClearCollect(colReleaseTags, 'Release Histories');
                                        UpdateContext({newPipelineTemplateVersion: First(Sort(colReleaseTags, Published, SortOrder.Descending)).Tag});
                                    );
                                PaddingBottom: =3
                                PaddingLeft: =3
                                PaddingRight: =3
                                PaddingTop: =3
                                PressedBorderColor: =RGBA(0, 0, 0, 0)
                                PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                PressedFill: =RGBA(0, 0, 0, 0)
                                Tooltip: ="Check for new release"
                                Width: =26
                                X: =8
                                Y: =42
                                ZIndex: =9

                        cntProjectWizardCreateRepoInformation_1 As groupContainer.manualLayoutContainer:
                            Height: =150
                            Width: =Parent.Width
                            Y: =40
                            ZIndex: =2

                            lblPipelineInformation_1 As label:
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Lighter
                                Height: =Parent.Height
                                PaddingBottom: =0
                                PaddingLeft: =10
                                Size: =10.5
                                Text: |-
                                    ="ALM Accelerator requires a Pipeline Repository to be configured
                                    
                                    You can select to install the pipeline templates into a new repository in test or select an existing Pipeline Repository.
                                    
                                    Installation of the pipeline templates takes 1 - 2 minutes to complete. You can continue once the install process has started."
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width
                                ZIndex: =1

                            btnProjectWizardConfigureTemplates_1 As Button:
                                DisplayMode: =If(chkProjectWizardCreateRepoExistingRepo_1.Checked Or Not(IsBlank(ddProjectWizardCreateRepoExistingRepos_1.Selected)), DisplayMode.Edit, DisplayMode.Disabled)
                                Height: =32
                                OnSelect: |-
                                    =UpdateContext({createRepoError: ""});
                                    UpdateContext({useExternalTemplates: Not(chkProjectWizardCreateRepoExistingRepo_1.Checked)});
                                    If(chkProjectWizardCreateRepoExistingRepo_1.Checked,
                                        UpdateContext({ newAlmProjectPipelineTemplateRepository: "coe-alm-accelerator-templates" });
                                        UpdateContext({
                                            wizardShowSpinner: true,
                                            newAlmProjectRepoStatus: $"Creating ""{newAlmProjectPipelineTemplateRepository}"" repository"}
                                        );
                                        Reset(tmrProjectWizardCreateRepoLoop);
                                        // Create repo
                                        ClearCollect(
                                            operations,
                                            CustomAzureDevOps.CreateGitRepo(
                                                newAlmProjectOrganization,
                                                newAlmProjectName,
                                                {
                                                    'api-version': "7.0",
                                                    name: "coe-alm-accelerator-templates",
                                                    project: {id: newAlmProjectId}
                                                }
                                            )
                                        );
                                        UpdateContext(
                                            {
                                                newAlmProjectPipelineTemplateVersion: First(Sort('Release Histories', Published, SortOrder.Descending)).Tag,
                                                createRepoOperation: "newAlmProjectCreateRepo",
                                                createNewAlmProjectRepoOperation: "CreateRepo",
                                                createNewAlmProjectRepoLoop: true,
                                                newAlmProjectUseExistingTemplates: false
                                            }
                                        ),
                                        // Update Project Settings to allow pipelines access to external repos
                                        If(CustomAzureDevOps.UpdateProjectSettings(newAlmProjectOrganization, newAlmProjectId, { 'api-version': "6.0-preview", 'Content-Type': "application/json", 
                                        enforceJobAuthScope: false
                                        }).enforceJobAuthScope,
                                        UpdateContext({ 
                                            projectWizardErrorStep: 2,
                                            projectWizardError: "The settings for the selected Organization prevents the use of templates in external project. Ask your Azure DevOps administrator for help"
                                        });
                                        ,
                                        UpdateContext(
                                        {
                                            newAlmProjectUseExistingTemplates: true,
                                            newAlmProjectExistingTemplateProject: ddProjectWizardCreateRepoExistingProjects_1.Selected,
                                            newAlmProjectExistingTemplateRepository: ddProjectWizardCreateRepoExistingRepos_1.Selected,
                                            newALMAccProjectCurrentStep: newALMAccProjectCurrentStep + 1
                                        });
                                        
                                    
                                        
                                        
                                        // Authorize all pipelines access to repo
                                        CustomAzureDevOps.AuthorizeAllPipelineAccessToRepository(newAlmProjectOrganization, newAlmProjectName, Concatenate(newAlmProjectExistingTemplateProject.id, ".", newAlmProjectExistingTemplateRepository.id), {
                                            'api-version': "6.0-preview",
                                            allPipelines: {
                                                authorized: true
                                            }
                                        });
                                        );
                                    );
                                Text: ="Next"
                                Visible: =false
                                Width: =96
                                X: =Parent.Width - Self.Width - 10
                                Y: =Parent.Height - Self.Height - 10
                                ZIndex: =2

                            "Spinner1_4 As 'Fluent Spinner (1.0.9) Preview'":
                                BackgroundColor: |-
                                    ="#F2F2F2"
                                DisplayMode: =DisplayMode.Edit
                                Height: =btnProjectWizardConfigureTemplates_1.Height
                                Tooltip: ="Creating Project"
                                Visible: =newAlmProjectShowSpinnerStep2
                                Width: =btnProjectWizardConfigureTemplates_1.Width
                                X: =btnProjectWizardConfigureTemplates_1.X
                                Y: =btnProjectWizardConfigureTemplates_1.Y
                                ZIndex: =3

                        lblProjectWizardCreateRepoStep_1 As Label:
                            DisplayMode: =DisplayMode.Edit
                            FontWeight: =FontWeight.Semibold
                            Height: =32
                            Text: ="Create new or use existing Pipeline Templates repository?"
                            Visible: =newALMAccProjectCurrentStep = 2
                            Width: =Parent.Width - Self.X
                            X: =10
                            Y: =0
                            ZIndex: =3

                        lblCreateRepoError_1 As Label:
                            AutoHeight: =true
                            Color: =RGBA(184, 0, 0, 1)
                            DisplayMode: =DisplayMode.Edit
                            Height: =46
                            Text: =Coalesce(createRepoError, projectWizardError)
                            Visible: =Not(createProjectError = "") Or Not(projectWizardError = "")
                            Width: =Parent.Width - 20
                            Wrap: =true
                            X: =10
                            Y: =Parent.Height - Self.Height - 10
                            ZIndex: =4

                    cntProjectWizardStep3 As groupContainer.manualLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        FillPortions: =0
                        Height: =580
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        Visible: =newALMAccProjectCurrentStep = 3
                        Width: =Parent.Width - 20
                        ZIndex: =3

                        cntProjectWizardCreateServiceConnectionInformation_1 As groupContainer.manualLayoutContainer:
                            Height: =100
                            Width: =Parent.Width
                            ZIndex: =1

                            btnWizardCreateServiceConnections As Button:
                                DisplayMode: =If(CountRows(colNewALMAccProjectServiceConnections) > 0, DisplayMode.Edit, DisplayMode.Disabled)
                                Height: =32
                                OnSelect: |-
                                    =UpdateContext({wizardShowSpinner: true});
                                    Clear(colNewALMAccProjectServiceConnectionResult);
                                    Collect(ColNewAlmAccServiceConnectionCreated, {});
                                    Clear(colNewAlmAccServiceConnectionCreated);
                                    ForAll(colNewALMAccProjectServiceConnections,
                                        Collect(colNewALMAccProjectServiceConnectionResult, {id: CustomAzureDevOps.CreateServiceEndpoint(newAlmProjectOrganization, {
                                            'api-version': "6.0",
                                            'Content-Type': "application/json",
                                            data: "",
                                            //name: ThisRecord.name, 
                                            name: ThisRecord.url, // use url to work around issue with export pipeline service connections
                                            description: "",
                                            type: "powerplatform-spn",
                                            url: ThisRecord.url,
                                            authorization: {
                                                    scheme: "none",
                                                    parameters: {
                                                        tenantId: ThisRecord.tenantId,
                                                        applicationId: ThisRecord.clientId,
                                                        clientSecret: ThisRecord.clientSecret
                                                    }
                                                },
                                                serviceEndpointProjectReferences: {
                                                    description: "",
                                                    //name: ThisRecord.name, 
                                                    name: ThisRecord.url, // use url to work around issue with export pipeline service connections
                                                    projectReference: {
                                                        id: newAlmProjectId,
                                                        name: newAlmProjectName
                                                    }
                                                }
                                        }).id});
                                    
                                        If(ThisRecord.share,
                                            CustomAzureDevOps.ShareServiceEndpoint(ddOrganization.Selected.AccountName, newAlmProjectId, Last(colNewALMAccProjectServiceConnectionResult).id, {
                                                    'api-version': "6.0-preview.1",
                                                    'Content-Type': "application/json",
                                                    resource: {
                                                        id: Last(colNewALMAccProjectServiceConnectionResult).id,
                                                        type: "endpoint"
                                                    },
                                                    allPipelines: {
                                                        authorized: true
                                                    }
                                                }
                                            )
                                        );
                                        Collect(colNewAlmAccServiceConnectionCreated, {name: ThisRecord.name});
                                    );
                                    
                                    UpdateContext({
                                        wizardShowSpinner: false,
                                        newALMAccProjectCurrentStep: newALMAccProjectCurrentStep + 1
                                    });
                                Text: ="Next"
                                Visible: =false
                                Width: =96
                                X: =Parent.Width - Self.Width - 10
                                Y: =Parent.Height - Self.Height - 10
                                ZIndex: =1

                            lblServiceConnectionInformation_1 As label:
                                AutoHeight: =true
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Lighter
                                Height: =95
                                PaddingLeft: =10
                                Size: =10.5
                                Text: |-
                                    ="Configure Service Connections by entering required information on the left and click ""Add"".
                                    Once all Service Connections have been configured, click ""Next"""
                                VerticalAlign: =VerticalAlign.Top
                                Width: =Parent.Width - 20
                                Y: =50
                                ZIndex: =3

                            "Spinner1_5 As 'Fluent Spinner (1.0.9) Preview'":
                                BackgroundColor: |-
                                    ="#F2F2F2"
                                DisplayMode: =DisplayMode.Edit
                                Height: =btnWizardCreateServiceConnections.Height
                                Tooltip: ="Creating Project"
                                Visible: =newAlmProjectShowSpinnerStep3
                                Width: =btnWizardCreateServiceConnections.Width
                                X: =btnWizardCreateServiceConnections.X
                                Y: =btnWizardCreateServiceConnections.Y
                                ZIndex: =4

                        cntProjectWizardCreateServiceConnectionsProperties_1 As groupContainer.manualLayoutContainer:
                            Height: =Parent.Height - Self.Y
                            Width: =Parent.Width
                            Y: =100
                            ZIndex: =2

                            "Checkbox1_1 As 'Check box'":
                                Checked: =false
                                Color: =RGBA(128, 128, 128, 1)
                                DisplayMode: =DisplayMode.Edit
                                FontWeight: =FontWeight.Normal
                                Height: =32
                                Label: ="Share with all Pipelines"
                                Width: =217
                                X: =200
                                Y: =210
                                ZIndex: =1

                            "txtTenantId_3 As 'Text box'":
                                AccessibleLabel: ="Search files"
                                DisplayMode: =DisplayMode.Edit
                                Height: =32
                                Placeholder: ="TenantId"
                                Value: =""
                                Visible: =true
                                Width: =Parent.Width - 220
                                X: =200
                                Y: =60
                                ZIndex: =2

                            lblProjectDescription_20 As label:
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                Height: =32
                                Size: =10.5
                                Text: ="TenantId"
                                Width: =180
                                X: =10
                                Y: =60
                                ZIndex: =3

                            "txtClientId_3 As 'Text box'":
                                AccessibleLabel: ="Search files"
                                DisplayMode: =DisplayMode.Edit
                                Height: =32
                                Placeholder: ="ClientId"
                                Value: =""
                                Visible: =true
                                Width: =Parent.Width - 220
                                X: =200
                                Y: =110
                                ZIndex: =4

                            lblProjectDescription_21 As label:
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                Height: =32
                                Size: =10.5
                                Text: ="ClientId"
                                Width: =180
                                X: =10
                                Y: =110
                                ZIndex: =5

                            "txtClientSecret_3 As 'Text box'":
                                AccessibleLabel: ="Search files"
                                DisplayMode: =DisplayMode.Edit
                                Height: =32
                                Mode: ='Microsoft.CoreControls.TextBox.Mode'.Password
                                Placeholder: ="ClientSecret"
                                Value: =""
                                Visible: =true
                                Width: =Parent.Width - 220
                                X: =200
                                Y: =160
                                ZIndex: =6

                            lblProjectDescription_22 As label:
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                Height: =32
                                Size: =10.5
                                Text: ="ClientSecret"
                                Width: =180
                                X: =10
                                Y: =160
                                ZIndex: =7

                            btnWizardAddServiceConnections As Button:
                                DisplayMode: =If(CountRows(cmbEnvironments.SelectedItems) < 1 Or IsBlank(txtTenantId_3.Value) Or IsBlank(txtClientId_3.Value) Or IsBlank(txtClientSecret_3.Value), DisplayMode.Disabled, DisplayMode.Edit)
                                Height: =32
                                OnSelect: |-
                                    =ForAll(cmbEnvironments.SelectedItems,
                                    Collect(colNewALMAccProjectServiceConnections, { name: ThisRecord.name, url: ThisRecord.url, tenantId: txtTenantId_3.Value, clientId: txtClientId_3.Value, clientSecret: txtClientSecret_3.Value, share: Checkbox1_1.Checked, created: false})
                                    );
                                Text: ="Add"
                                Visible: =true
                                Width: =96
                                X: =10
                                Y: =263
                                ZIndex: =8

                            glrQueuedServiceConnections As gallery.BrowseLayout_Vertical_TwoTextOneImageVariant_pcfCore:
                                BorderColor: =RGBA(166, 166, 166, 1)
                                DelayItemLoading: =true
                                FocusedBorderColor: =RGBA(0, 120, 212, 1)
                                FocusedBorderThickness: =2
                                Height: =Parent.Height - Self.Y
                                Items: =colNewALMAccProjectServiceConnections
                                Layout: =Layout.Vertical
                                LoadingSpinner: =LoadingSpinner.Data
                                TemplatePadding: =8
                                TemplateSize: =41
                                Width: =Parent.Width - 20
                                X: =10
                                Y: =306
                                ZIndex: =9

                                Label5_1 As Label:
                                    DisplayMode: =DisplayMode.Edit
                                    Height: =26
                                    OnSelect: =Select(Parent)
                                    Text: =ThisItem.name
                                    VerticalAlignment: =VerticalAlign.Top
                                    Width: =320
                                    X: =36
                                    Y: =0
                                    ZIndex: =3

                                Label6_1 As Label:
                                    DisplayMode: =DisplayMode.Edit
                                    FontWeight: =FontWeight.Lighter
                                    Height: =26
                                    OnSelect: =Select(Parent)
                                    Text: =ThisItem.url
                                    Width: =320
                                    X: =36
                                    Y: =15
                                    ZIndex: =4

                                Group8_10 As group:
                                    Height: =5
                                    Width: =5
                                    X: =-214
                                    Y: =8
                                    ZIndex: =6

                                    Circle1_13 As circle:
                                        BorderColor: =RGBA(166, 166, 166, 1)
                                        BorderStyle: =BorderStyle.None
                                        BorderThickness: =2
                                        DisabledFill: =RGBA(0, 120, 212, 1)
                                        Fill: =RGBA(141, 198, 63, 1)
                                        Height: =16
                                        HoverFill: =RGBA(0, 120, 212, 1)
                                        PressedFill: =RGBA(0, 120, 212, 1)
                                        Visible: =If(IsBlank(LookUp(colNewAlmAccServiceConnectionCreated, name = ThisItem.name).name), false, true)
                                        Width: =16
                                        X: =8
                                        Y: =8
                                        ZIndex: =1

                                    Icon1_11 As icon.CheckBadge:
                                        BorderColor: =RGBA(0, 0, 0, 0)
                                        Color: =RGBA(255, 255, 255, 1)
                                        DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                        DisabledColor: =RGBA(220, 220, 220, 1)
                                        DisabledFill: =RGBA(0, 0, 0, 0)
                                        Height: =20
                                        HoverBorderColor: =RGBA(0, 0, 0, 0)
                                        HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                        HoverFill: =RGBA(0, 0, 0, 0)
                                        Icon: =Icon.CheckBadge
                                        PaddingBottom: =3
                                        PaddingLeft: =3
                                        PaddingRight: =3
                                        PaddingTop: =3
                                        PressedBorderColor: =RGBA(0, 0, 0, 0)
                                        PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                        PressedFill: =RGBA(0, 0, 0, 0)
                                        Visible: =If(IsBlank(LookUp(colNewAlmAccServiceConnectionCreated, name = ThisItem.name).name), false, true)
                                        Width: =20
                                        X: =6
                                        Y: =6
                                        ZIndex: =2

                            "cmbEnvironments As 'Combo box'.pcfdataset":
                                AllowMultiSelect: =true
                                AllowSearching: =true
                                DisplayMode: =DisplayMode.Edit
                                Height: =32
                                Items: =colEnvironmentsDetails
                                Tooltip: =
                                Width: =Parent.Width - 220
                                X: =200
                                Y: =10
                                ZIndex: =10

                                nameTypeUrl1 As pcfDataField.textualColumn:
                                    FieldDisplayName: ="nameTypeUrl"
                                    FieldName: ="nameTypeUrl"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =1
                                    ZIndex: =32

                                name As pcfDataField.textualColumn:
                                    FieldDisplayName: ="name"
                                    FieldName: ="name"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =2
                                    ZIndex: =33

                                url As pcfDataField.textualColumn:
                                    FieldDisplayName: ="url"
                                    FieldName: ="url"
                                    FieldType: ="s"
                                    FieldVariantName: ="textualColumn"
                                    Order: =3
                                    ZIndex: =34

                            lblSelectEnvironme_1 As label:
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                Height: =32
                                Size: =10.5
                                Text: ="Select Environment"
                                Width: =180
                                X: =10
                                Y: =10
                                ZIndex: =11

                        Label1_7 As Label:
                            DisplayMode: =DisplayMode.Edit
                            FontWeight: =FontWeight.Semibold
                            Height: =32
                            Text: ="Create Service Connections"
                            Visible: =newALMAccProjectCurrentStep = 3
                            Width: =Parent.Width - Self.X
                            X: =10
                            Y: =0
                            ZIndex: =3

                    cntProjectWizardStep4 As groupContainer.manualLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        FillPortions: =0
                        Height: =580
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        Visible: =newALMAccProjectCurrentStep = 4
                        Width: =Parent.Width - 20
                        ZIndex: =5

                        Container16_3 As groupContainer.manualLayoutContainer:
                            Width: =Parent.Width
                            Y: =250
                            ZIndex: =13

                            lblProjectDescription_30 As label:
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                Height: =32
                                Size: =10.5
                                Text: ="Click Next to create the following generic Pipelines"
                                Width: =Parent.Width - 20
                                X: =10
                                Y: =8
                                ZIndex: =2

                            lblProjectDescription_31 As label:
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Lighter
                                Height: =32
                                Size: =10.5
                                Text: ="export-solution-to-git"
                                Width: =Parent.Width - 40
                                X: =30
                                Y: =44
                                ZIndex: =4

                            lblProjectDescription_32 As label:
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Lighter
                                Height: =32
                                Size: =10.5
                                Text: ="import-unmanaged-to-dev-environment"
                                Width: =Parent.Width - 40
                                X: =30
                                Y: =80
                                ZIndex: =6

                            lblProjectDescription_33 As label:
                                BorderColor: =RGBA(0, 18, 107, 1)
                                Color: =RGBA(0, 0, 0, 1)
                                DisabledColor: =RGBA(166, 166, 166, 1)
                                Font: =Font.'Segoe UI'
                                FontWeight: =FontWeight.Lighter
                                Height: =32
                                Size: =10.5
                                Text: ="delete-unmanaged-solution-and-components"
                                Width: =Parent.Width - 40
                                X: =30
                                Y: =116
                                ZIndex: =7

                            Group8_13 As group:
                                Height: =5
                                Width: =5
                                X: =-214
                                Y: =40
                                ZIndex: =10

                                Circle1_16 As circle:
                                    BorderColor: =RGBA(166, 166, 166, 1)
                                    BorderStyle: =BorderStyle.None
                                    BorderThickness: =2
                                    DisabledFill: =RGBA(0, 120, 212, 1)
                                    Fill: =RGBA(141, 198, 63, 1)
                                    Height: =16
                                    HoverFill: =RGBA(0, 120, 212, 1)
                                    PressedFill: =RGBA(0, 120, 212, 1)
                                    Visible: =Not(IsBlank(exportPipeline) Or exportPipeline = 0)
                                    Width: =16
                                    X: =12
                                    Y: =49
                                    ZIndex: =8

                                Icon1_14 As icon.CheckBadge:
                                    BorderColor: =RGBA(0, 0, 0, 0)
                                    Color: =RGBA(255, 255, 255, 1)
                                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                    DisabledColor: =RGBA(220, 220, 220, 1)
                                    DisabledFill: =RGBA(0, 0, 0, 0)
                                    Height: =20
                                    HoverBorderColor: =RGBA(0, 0, 0, 0)
                                    HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                    HoverFill: =RGBA(0, 0, 0, 0)
                                    Icon: =Icon.CheckBadge
                                    PaddingBottom: =3
                                    PaddingLeft: =3
                                    PaddingRight: =3
                                    PaddingTop: =3
                                    PressedBorderColor: =RGBA(0, 0, 0, 0)
                                    PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                    PressedFill: =RGBA(0, 0, 0, 0)
                                    Visible: =Not(IsBlank(exportPipeline) Or exportPipeline = 0)
                                    Width: =20
                                    X: =10
                                    Y: =47
                                    ZIndex: =9

                            Group8_14 As group:
                                Height: =5
                                Width: =5
                                X: =-214
                                Y: =40
                                ZIndex: =12

                                Circle1_17 As circle:
                                    BorderColor: =RGBA(166, 166, 166, 1)
                                    BorderStyle: =BorderStyle.None
                                    BorderThickness: =2
                                    DisabledFill: =RGBA(0, 120, 212, 1)
                                    Fill: =RGBA(141, 198, 63, 1)
                                    Height: =16
                                    HoverFill: =RGBA(0, 120, 212, 1)
                                    PressedFill: =RGBA(0, 120, 212, 1)
                                    Visible: =Not(IsBlank(importPipeline) Or importPipeline = 0)
                                    Width: =16
                                    X: =12
                                    Y: =86
                                    ZIndex: =10

                                Icon1_15 As icon.CheckBadge:
                                    BorderColor: =RGBA(0, 0, 0, 0)
                                    Color: =RGBA(255, 255, 255, 1)
                                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                    DisabledColor: =RGBA(220, 220, 220, 1)
                                    DisabledFill: =RGBA(0, 0, 0, 0)
                                    Height: =20
                                    HoverBorderColor: =RGBA(0, 0, 0, 0)
                                    HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                    HoverFill: =RGBA(0, 0, 0, 0)
                                    Icon: =Icon.CheckBadge
                                    PaddingBottom: =3
                                    PaddingLeft: =3
                                    PaddingRight: =3
                                    PaddingTop: =3
                                    PressedBorderColor: =RGBA(0, 0, 0, 0)
                                    PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                    PressedFill: =RGBA(0, 0, 0, 0)
                                    Visible: =Not(IsBlank(importPipeline) Or importPipeline = 0)
                                    Width: =20
                                    X: =10
                                    Y: =84
                                    ZIndex: =11

                            Group8_15 As group:
                                Height: =5
                                Width: =5
                                X: =-214
                                Y: =40
                                ZIndex: =14

                                Circle1_18 As circle:
                                    BorderColor: =RGBA(166, 166, 166, 1)
                                    BorderStyle: =BorderStyle.None
                                    BorderThickness: =2
                                    DisabledFill: =RGBA(0, 120, 212, 1)
                                    Fill: =RGBA(141, 198, 63, 1)
                                    Height: =16
                                    HoverFill: =RGBA(0, 120, 212, 1)
                                    PressedFill: =RGBA(0, 120, 212, 1)
                                    Visible: =Not(IsBlank(deletePipeline) Or deletePipeline = 0)
                                    Width: =16
                                    X: =12
                                    Y: =125
                                    ZIndex: =12

                                Icon1_16 As icon.CheckBadge:
                                    BorderColor: =RGBA(0, 0, 0, 0)
                                    Color: =RGBA(255, 255, 255, 1)
                                    DisabledBorderColor: =RGBA(166, 166, 166, 1)
                                    DisabledColor: =RGBA(220, 220, 220, 1)
                                    DisabledFill: =RGBA(0, 0, 0, 0)
                                    Height: =20
                                    HoverBorderColor: =RGBA(0, 0, 0, 0)
                                    HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                    HoverFill: =RGBA(0, 0, 0, 0)
                                    Icon: =Icon.CheckBadge
                                    PaddingBottom: =3
                                    PaddingLeft: =3
                                    PaddingRight: =3
                                    PaddingTop: =3
                                    PressedBorderColor: =RGBA(0, 0, 0, 0)
                                    PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
                                    PressedFill: =RGBA(0, 0, 0, 0)
                                    Visible: =Not(IsBlank(deletePipeline) Or deletePipeline = 0)
                                    Width: =20
                                    X: =10
                                    Y: =123
                                    ZIndex: =13

                        Container17_3 As groupContainer.manualLayoutContainer:
                            Width: =Parent.Width
                            Y: =50
                            ZIndex: =14

                            btnWizardCreatePipelines As Button:
                                DisplayMode: =DisplayMode.Edit
                                FontWeight: =FontWeight.Lighter
                                Height: =32
                                OnSelect: |-
                                    =UpdateContext({wizardShowSpinner: true});
                                        ClearCollect(colNewAlmProjectRepos, CustomAzureDevOps.GetGitRepos(newAlmProjectOrganization, newAlmProjectName, { 'api-version': "6.0"}).value);
                                        
                                    // init project default repo
                                    CustomAzureDevOps.CreateFile(
                                        newAlmProjectOrganization,
                                        LookUp(colNewAlmProjectRepos, name = newAlmProjectName).id,
                                        {
                                            'api-version': "7.0",
                                            refUpdates: Table(
                                                {
                                                    name: "refs/heads/main",
                                                    oldObjectId: "0000000000000000000000000000000000000000"
                                                }
                                            ),
                                            commits: Table(
                                                {
                                                    comment: "Initialize repository",
                                                    changes: {
                                                        changeType: "add",
                                                        item: {path: "init.md"},
                                                        newContent: {
                                                            content: $"repo initialized",
                                                            contentType: "rawtext"
                                                        }
                                                    }
                                                }
                                            )
                                        }
                                    );
                                    
                                    // Allow all pipelines access to repo
                                    CustomAzureDevOps.AuthorizeAllPipelineAccessToRepository(newAlmProjectOrganization, newAlmProjectId, Concatenate(newAlmProjectId, ".", LookUp(colNewAlmProjectRepos, name = newAlmProjectName).id), {
                                        'api-version': "6.0-preview.1",
                                        allPipelines: {
                                            authorized: true
                                        }
                                    });
                                    
                                    
                                    // Get build service identity
                                    ClearCollect(
                                        projectBuildServiceAccount,
                                        CustomAzureDevOps.GetIdentities(
                                            newAlmProjectOrganization,
                                            {
                                                'api-version': "7.1-preview.1",
                                                searchFilter: "General",
                                                filterValue: Concatenate(
                                                    newAlmProjectName,
                                                    " Build Service (",
                                                    newAlmProjectOrganization,
                                                    ")"
                                                )
                                            }
                                        ).value
                                    );
                                    
                                    // Set Agent Pool Permissions
                                    CustomAzureDevOps.AuthorizeUserAccessToAgentPool(newAlmProjectOrganization, newAlmProjectId, {
                                        'api-version': "6.0-preview",
                                        'Content-Type': "application/json",
                                        body: Table({
                                            userId: First(projectBuildServiceAccount).id,
                                            roleName: "Reader"
                                        })
                                    });
                                    
                                    // Set Project Repository Permissions
                                    CustomAzureDevOps.SetPermissions(
                                        ddOrganization.Selected.AccountName,
                                        "2e9eb7ed-3c0a-47d4-87c1-0ffdd275fd87",
                                        {
                                            'api-version': "6.0",
                                            token: "repoV2/" & newAlmProjectId & "/" & LookUp(
                                                colNewAlmProjectRepos,
                                                name = newAlmProjectName
                                            ).id,
                                            merge: true,
                                            accessControlEntries: {
                                                descriptor: First(projectBuildServiceAccount).descriptor,
                                                allow: 18452,
                                                deny: 0
                                            }
                                        }
                                    );
                                    
                                    If(Not(IsBlankOrError(newAlmProjectExistingTemplateProject.id)) And Not(IsBlankOrError(newAlmProjectExistingTemplateRepository.id)),
                                        // Set Template Repository Permissions
                                        CustomAzureDevOps.SetPermissions(
                                            ddOrganization.Selected.AccountName,
                                            "2e9eb7ed-3c0a-47d4-87c1-0ffdd275fd87",
                                            {
                                                'api-version': "6.0",
                                                token: "repoV2/" & newAlmProjectExistingTemplateProject.id & "/" & newAlmProjectExistingTemplateRepository.id,
                                                merge: true,
                                                accessControlEntries: {
                                                    descriptor: First(projectBuildServiceAccount).descriptor,
                                                    allow: 18452,
                                                    deny: 0
                                                }
                                            }
                                        );
                                    ,
                                        // Set Template Repository Permissions
                                        CustomAzureDevOps.SetPermissions(
                                            ddOrganization.Selected.AccountName,
                                            "2e9eb7ed-3c0a-47d4-87c1-0ffdd275fd87",
                                            {
                                                'api-version': "6.0",
                                                token: "repoV2/" & newAlmProjectId & "/" & LookUp(
                                                    colNewAlmProjectRepos,
                                                    name = "coe-alm-accelerator-templates"
                                                ).id,
                                                merge: true,
                                                accessControlEntries: {
                                                    descriptor: First(projectBuildServiceAccount).descriptor,
                                                    allow: 18452,
                                                    deny: 0
                                                }
                                            }
                                        );
                                    );
                                    // Set  Pipelines Permissions
                                    CustomAzureDevOps.SetPermissions(
                                        ddOrganization.Selected.AccountName,
                                        "33344d9c-fc72-4d6f-aba5-fa317101a7e9",
                                        {
                                            'api-version': "6.0",
                                            token: newAlmProjectId,
                                            merge: true,
                                            accessControlEntries: {
                                                descriptor: First(projectBuildServiceAccount).descriptor,
                                                allow: 2048,
                                                deny: 0
                                            }
                                        }
                                    );
                                    
                                    // Get Project Collection build service identity
                                    ClearCollect(
                                        projectBuildServiceAccount,
                                        CustomAzureDevOps.GetIdentities(
                                            newAlmProjectOrganization,
                                            {
                                                'api-version': "7.1-preview.1",
                                                searchFilter: "General",
                                                filterValue: Concatenate(
                                                    "Project Collection Build Service (",
                                                    newAlmProjectOrganization,
                                                    ")"
                                                )
                                            }
                                        ).value
                                    );
                                    
                                    // Set Template Repository Permissions
                                    CustomAzureDevOps.SetPermissions(
                                        ddOrganization.Selected.AccountName,
                                        "2e9eb7ed-3c0a-47d4-87c1-0ffdd275fd87",
                                        {
                                            'api-version': "6.0",
                                            token: "repoV2/" & newAlmProjectId & "/" & LookUp(
                                                colNewAlmProjectRepos,
                                                name = newAlmProjectName
                                            ).id,
                                            merge: true,
                                            accessControlEntries: {
                                                descriptor: First(projectBuildServiceAccount).descriptor,
                                                allow: 18452,
                                                deny: 0
                                            }
                                        }
                                    );
                                    
                                    If(useExternalTemplates,
                                        // Set Agent Pool Permissions
                                        CustomAzureDevOps.AuthorizeUserAccessToAgentPool(newAlmProjectOrganization, newAlmProjectId, {
                                            'api-version': "6.0-preview",
                                            'Content-Type': "application/json",
                                            body: Table({
                                                userId: First(projectBuildServiceAccount).id,
                                                roleName: "Reader"
                                            })
                                        });
                                        // Set  Pipelines Permissions
                                        CustomAzureDevOps.SetPermissions(
                                            ddOrganization.Selected.AccountName,
                                            "33344d9c-fc72-4d6f-aba5-fa317101a7e9",
                                            {
                                                'api-version': "6.0",
                                                token: newAlmProjectId,
                                                merge: true,
                                                accessControlEntries: {
                                                    descriptor: First(projectBuildServiceAccount).descriptor,
                                                    allow: 2048,
                                                    deny: 0
                                                }
                                            }
                                        );
                                    );
                                    
                                    UpdateContext({
                                        newAlmProjectPipelineTemplateRepositoryId: If(newAlmProjectUseExistingTemplates, newAlmProjectExistingTemplateRepository.id, LookUp(colNewAlmProjectRepos, name = newAlmProjectPipelineTemplateRepository).id),
                                        newAlmProjectPipelineTemplateRepositoryName: If(newAlmProjectUseExistingTemplates, newAlmProjectExistingTemplateRepository.name, newAlmProjectPipelineTemplateRepository)
                                    });
                                    
                                    UpdateContext({
                                        newAlmProjectVariableGroup: CustomAzureDevOps.CreateVariableGroup(newAlmProjectOrganization, {
                                            'api-version': "6.0",
                                            'Content-Type': "application/json",
                                            description: "Variables for use in ALM Accelerator Pipelines",
                                            name: "alm-accelerator-variable-group",
                                            type: "Vsts",
                                            variables: {
                                                AADHost: {
                                                    isSecret: false,
                                                    value: "login.microsoftonline.com"
                                                },
                                                ProcessCanvasApps: {
                                                    isSecret: false,
                                                    value: If(tglEnablePreviewFeatures.Checked, "true", "false")
                                                }
                                            },
                                            variableGroupProjectReferences: {
                                                description: txtVariableGroupDescription.Value,
                                                name: txtVariableGroupName.Value,
                                                projectReference: {
                                                    id: newAlmProjectId,
                                                    name: newAlmProjectName
                                                }
                                            }
                                        })
                                    });
                                    
                                    CustomAzureDevOps.AuthorizeAllPipelinesAccessToVariableGroup(newAlmProjectOrganization, newAlmProjectId, newAlmProjectVariableGroup.id,        {
                                            'api-version': "6.0-preview.1",
                                            allPipelines: {
                                                authorized: true
                                        }
                                    });
                                    
                                    UpdateContext({exportPipeline: CustomAzureDevOps.CreatePipeline(newAlmProjectOrganization, newAlmProjectName, {
                                        'api-version': "6.0",
                                        folder: "",
                                        name: "export-solution-to-git",
                                        configuration: {
                                            type: "yaml",
                                            path: "/Pipelines/export-solution-to-git.yml",
                                            repository: {
                                                id: newAlmProjectPipelineTemplateRepositoryId,
                                                name: newAlmProjectPipelineTemplateRepositoryName,
                                                type: "azureReposGit"
                                            }
                                        }
                                    }).id});
                                    
                                    UpdateContext({importPipeline: CustomAzureDevOps.CreatePipeline(newAlmProjectOrganization, newAlmProjectName, {
                                        'api-version': "6.0",
                                        folder: "",
                                        name: "import-unmanaged-to-dev-environment",
                                        configuration: {
                                            type: "yaml",
                                            path: "/Pipelines/import-unmanaged-to-dev-environment.yml",
                                            repository: {
                                                id: newAlmProjectPipelineTemplateRepositoryId,
                                                name: newAlmProjectPipelineTemplateRepositoryName,
                                                type: "azureReposGit"
                                            }
                                        }
                                    }).id});
                                    
                                    UpdateContext({deletePipeline: CustomAzureDevOps.CreatePipeline(newAlmProjectOrganization, newAlmProjectName, {
                                        'api-version': "6.0",
                                        folder: "",
                                        name: "delete-unmanaged-solution-and-components",
                                        configuration: {
                                            type: "yaml",
                                            path: "/Pipelines/delete-unmanaged-solution-and-components.yml",
                                            repository: {
                                                id: newAlmProjectPipelineTemplateRepositoryId,
                                                name: newAlmProjectPipelineTemplateRepositoryName,
                                                type: "azureReposGit"
                                            }
                                        }
                                    }).id});
                                    
                                    UpdateContext({
                                        wizardShowSpinner: false,
                                        newALMAccProjectCurrentStep: newALMAccProjectCurrentStep + 1
                                    });
                                Text: ="Next"
                                Visible: =false
                                Width: =94
                                X: =Parent.Width - Self.Width - 10
                                Y: =Parent.Height - Self.Height - 10
                                ZIndex: =1

                            lblCreatePipelinesInformation_1 As Label:
                                DisplayMode: =DisplayMode.Edit
                                FontWeight: =FontWeight.Lighter
                                Height: =56
                                Text: ="ALM Accelerator requires three generic pipelines to be available in a project."
                                VerticalAlignment: =VerticalAlign.Top
                                Width: =Parent.Width - 20
                                Wrap: =true
                                X: =10
                                Y: =8
                                ZIndex: =2

                            lblCreateExportPipeline_1 As Label:
                                DisplayMode: =DisplayMode.Edit
                                FontWeight: =FontWeight.Lighter
                                Height: =28
                                Text: ="export-solution-to-git is committing solutions to source control."
                                VerticalAlignment: =VerticalAlign.Top
                                Width: =Parent.Width - 20
                                Wrap: =true
                                X: =10
                                Y: =56
                                ZIndex: =4

                            lblCreateImportPipeline_1 As Label:
                                DisplayMode: =DisplayMode.Edit
                                FontWeight: =FontWeight.Lighter
                                Height: =56
                                Text: ="import-unmanaged-to-dev-environment is importing a solution into development environment."
                                VerticalAlignment: =VerticalAlign.Top
                                Width: =Parent.Width - 20
                                Wrap: =true
                                X: =10
                                Y: =84
                                ZIndex: =5

                            lblCreateDeletePipeline_1 As Label:
                                DisplayMode: =DisplayMode.Edit
                                FontWeight: =FontWeight.Lighter
                                Height: =56
                                Text: ="delete-unmanaged-solution-and-components is removing a solution from development environment."
                                VerticalAlignment: =VerticalAlign.Top
                                Width: =Parent.Width - 20
                                Wrap: =true
                                X: =10
                                Y: =136
                                ZIndex: =6

                        Label1_8 As Label:
                            DisplayMode: =DisplayMode.Edit
                            FontWeight: =FontWeight.Semibold
                            Height: =32
                            Text: ="Create Generice Pipelines"
                            Visible: =true
                            Width: =Parent.Width - Self.X
                            X: =10
                            Y: =0
                            ZIndex: =15

                    cntProjectWizardComplete As groupContainer.manualLayoutContainer:
                        AlignInContainer: =AlignInContainer.SetByContainer
                        FillPortions: =0
                        Height: =580
                        LayoutMinHeight: =100
                        LayoutMinWidth: =250
                        Visible: =newALMAccProjectCurrentStep = 5
                        Width: =Parent.Width - 20
                        ZIndex: =6

                        Container17_4 As groupContainer.manualLayoutContainer:
                            Width: =Parent.Width
                            Y: =50
                            ZIndex: =14

                            lblCreatePipelinesInformation_2 As Label:
                                DisplayMode: =DisplayMode.Edit
                                FontWeight: =FontWeight.Lighter
                                Height: =56
                                Text: ="The setup of ALM Accelerator Project is complete."
                                VerticalAlignment: =VerticalAlign.Top
                                Width: =Parent.Width - 20
                                Wrap: =true
                                X: =10
                                Y: =8
                                ZIndex: =2

                        Label1_9 As Label:
                            DisplayMode: =DisplayMode.Edit
                            FontWeight: =FontWeight.Semibold
                            Height: =32
                            Text: ="Project Setup complete"
                            Visible: =true
                            Width: =Parent.Width - Self.X
                            X: =10
                            Y: =0
                            ZIndex: =15

        btnWizardPrimaryButton As Button:
            DisplayMode: =DisplayMode.Edit
            Height: =32
            OnSelect: |
                =Switch(newALMAccProjectCurrentStep,
                    1, //Create Project
                    Select(btnCreateProject_1);
                    ,
                    
                    2, //Configure Pipeline Templates
                    Select(btnProjectWizardConfigureTemplates_1);
                    ,
                    
                    3, //Create Service Connections
                    Select(btnWizardCreateServiceConnections);
                    ,
                        
                    4, //Create Generic Pipelines and set various permissions
                    Select(btnWizardCreatePipelines);
                    ,
                    
                    5, //Close Wizard
                    Select(btnCloseWizard);
                    ,
                
                    0, //Close Wizard
                    Select(btnCloseWizard);
                    
                    ,
                    false
                );
            Text: =If(newALMAccProjectCurrentStep > 4 Or newALMAccProjectCurrentStep = 0, "Close", "Next")
            Width: =96
            X: =App.Width - 580
            Y: =App.Height - 40
            ZIndex: =3

        btnCloseWizard As Button:
            BorderColor: =RGBA(153, 153, 153, 1)
            BorderStyle: =BorderStyle.Solid
            BorderThickness: =1
            ButtonType: ='Microsoft.CoreControls.Button.ButtonType'.Standard
            DisplayMode: =DisplayMode.Edit
            FillColor: =RGBA(255, 255, 255, 1)
            Height: =32
            OnSelect: |
                =If(newALMAccProjectCurrentStep > 1 And newALMAccProjectCurrentStep < 5, 
                    UpdateContext({showNewALMAccProjectWizardCloseDialog: true}),
                    UpdateContext({
                        showNewALMAccProjectPanel: false,
                        newALMAccProjectCurrentStep: 0
                    });
                    UpdateContext({
                        newAlmProjectOrganization: "",
                        newAlmProjectId: "",
                        newAlmProjectName: "",
                        newAlmProjectDescription: "",
                        newALMAccProjectCurrentStep: 1,
                        newAlmProjectPipelineTemplateRepository: "",
                        newAlmProjectPipelineTemplateVersion: "",
                        newAlmProjectRepoStatus: "",
                        newAlmProjectSyncPipeline: 0,
                        newAlmProjectSyncPipelineChecks: 0,
                        createNewAlmProjectLoop: false,
                        createNewAlmProjectRepoLoop: false,
                        createNewAlmProjectRepoOperation: "",
                        newAlmProjectShowSpinnerStep1: false,
                        newAlmProjectShowSpinnerStep2: false,
                        newAlmProjectShowSpinnerStep3: false,
                        newAlmProjectShowSpinnerStep4: false,
                        newAlmProjectShowSpinnerStep5: false,
                        newAlmProjectUseExistingTemplates: false,
                        exportPipeline: 0,
                        importPipeline: 0,
                        deletePipeline: 0,
                        showNewALMAccProjectDialog: false,
                        showNewALMAccProjectWizardCloseDialog: false,
                        projectWizardError: "",
                        createProjectError: "",
                        wizardShowSpinner: false
                    });
                    Reset(txtProjectName_5);
                    Reset(txtProjectDescription_3);
                    Reset(chkProjectWizardCreateRepoExistingRepo_1);
                    Reset(ddProjectWizardCreateRepoExistingProjects_1);
                    Reset(ddProjectWizardCreateRepoExistingRepos_1);
                    Reset(txtTenantId_3);
                    Reset(txtClientId_3);
                    Reset(txtClientSecret_3);
                    Reset(cmbEnvironments);
                    Reset(Checkbox1_1);
                    Reset(ddExistingProjects_1);
                    Clear(colNewALMAccProjectServiceConnections);
                    Clear(colNewALMAccProjectServiceConnectionResult);
                    Clear(colNewAlmAccServiceConnectionCreated);
                    Clear(colNewAlmProjectRepos);
                    Clear(colNewAlmProjectSyncPipelineRuns);
                );
            Text: ="Cancel"
            Width: =96
            X: =App.Width - Self.Width - 20
            Y: =App.Height - 40
            ZIndex: =4

        "Spinner1 As 'Fluent Spinner (1.0.9) Preview'":
            DisplayMode: =DisplayMode.Edit
            Height: =32
            Visible: =wizardShowSpinner
            Width: =96
            X: =App.Width - 580
            Y: =App.Height - 40
            ZIndex: =5

    grpNewVariableGroup As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =73

        pnlNewVariableGroup As Panel:
            Buttons: |-
                =Table({Label: "Cancel", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Standard } ,{Label: "Create", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Primary})
            Fill: =pnlNewVariableGroup.OverlayColor
            OnButtonSelect: |-
                =If(
                    Self.SelectedButton.Label = "Create",
                    CustomAzureDevOps.CreateVariableGroup(ddOrganization.Selected.AccountName, {
                        'api-version': "6.0",
                        'Content-Type': "application/json",
                        description: txtVariableGroupDescription.Value,
                        name: txtVariableGroupName.Value,
                        type: "Vsts",
                        variables: {
                            AADHost: {
                                isSecret: false,
                                value: txtAADHost.Value
                            },
                            ProcessCanvasApps: {
                                isSecret: true,
                                value: "false"
                            }
                        },
                        variableGroupProjectReferences: {
                            description: txtVariableGroupDescription.Value,
                            name: txtVariableGroupName.Value,
                            projectReference: {
                                id: currentProject.id,
                                name: currentProject.name
                            }
                        }
                    });
                    UpdateContext({showNewVariableGroupPanel: false});
                    ,
                
                    "Refresh",
                    // Get Variable Groups
                    ClearCollect(colProjectVariableGroups, CustomAzureDevOps.GetVariableGroups(ddOrganization.Selected.AccountName, currentProject.name, {'api-version': "6.0"}).value);
                    ,
                    UpdateContext({showNewVariableGroupPanel: false})
                )
            OnCloseSelect: |-
                =UpdateContext({showNewVariableGroupPanel:false})
            Subtitle: ="Create a new Azure DevOps Project Variable Group to be used with ALM Accelerator"
            Title: ="New Project Variable Group"
            Visible: =showNewVariableGroupPanel
            Width: =App.Width
            ZIndex: =34

        "txtProjectName_3 As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =DisplayMode.Disabled
            Height: =32
            Placeholder: ="Project Name"
            Value: =""
            Visible: =showNewVariableGroupPanel
            Width: =pnlNewVariableGroup.DialogWidth - 40
            X: =Parent.Width - pnlNewVariableGroup.DialogWidth + 20
            Y: =160
            ZIndex: =35

        lblProjectName_3 As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Project Name"
            Visible: =showNewVariableGroupPanel
            Width: =pnlNewVariableGroup.DialogWidth - 40
            X: =Parent.Width - pnlNewVariableGroup.DialogWidth + 20
            Y: =128
            ZIndex: =36

        "txtVariableGroupName As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =DisplayMode.Edit
            Height: =32
            Placeholder: ="Variable Group Name"
            Value: ="alm-accelerator-variable-group"
            Visible: =showNewVariableGroupPanel
            Width: =pnlNewVariableGroup.DialogWidth - 40
            X: =Parent.Width - pnlNewVariableGroup.DialogWidth + 20
            Y: =227
            ZIndex: =37

        lblProjectDescription_3 As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Variable Group Name"
            Visible: =showNewVariableGroupPanel
            Width: =pnlNewVariableGroup.DialogWidth - 40
            X: =Parent.Width - pnlNewVariableGroup.DialogWidth + 20
            Y: =200
            ZIndex: =38

        "txtVariableGroupDescription As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =DisplayMode.Edit
            Height: =32
            Placeholder: ="Variable Group Description"
            Value: =""
            Visible: =showNewVariableGroupPanel
            Width: =pnlNewVariableGroup.DialogWidth - 40
            X: =Parent.Width - pnlNewVariableGroup.DialogWidth + 20
            Y: =308
            ZIndex: =39

        lblProjectDescription_4 As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Variable Group Description"
            Visible: =showNewVariableGroupPanel
            Width: =pnlNewVariableGroup.DialogWidth - 40
            X: =Parent.Width - pnlNewVariableGroup.DialogWidth + 20
            Y: =276
            ZIndex: =40

        "txtAADHost As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =DisplayMode.Edit
            Height: =32
            Placeholder: ="AADHost"
            Value: ="login.microsoftonline.com"
            Visible: =showNewVariableGroupPanel
            Width: =pnlNewVariableGroup.DialogWidth - 40
            X: =Parent.Width - pnlNewVariableGroup.DialogWidth + 20
            Y: =382
            ZIndex: =41

        lblProjectDescription_5 As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="AADHost"
            Visible: =showNewVariableGroupPanel
            Width: =pnlNewVariableGroup.DialogWidth - 40
            X: =Parent.Width - pnlNewVariableGroup.DialogWidth + 20
            Y: =350
            ZIndex: =42

        "txtCdsBaseConnectionString As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =DisplayMode.Edit
            Height: =32
            Placeholder: ="CdsBaseConnectionString"
            Value: ="AuthType=ClientSecret;ClientId=$(ClientId);ClientSecret=$(ClientSecret);Url="
            Visible: =showNewVariableGroupPanel
            Width: =pnlNewVariableGroup.DialogWidth - 40
            X: =Parent.Width - pnlNewVariableGroup.DialogWidth + 20
            Y: =455
            ZIndex: =43

        lblProjectDescription_6 As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="CdsBaseConnectionString"
            Visible: =showNewVariableGroupPanel
            Width: =pnlNewVariableGroup.DialogWidth - 40
            X: =Parent.Width - pnlNewVariableGroup.DialogWidth + 20
            Y: =423
            ZIndex: =44

        "txtTenantId As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =DisplayMode.Edit
            Height: =32
            Placeholder: ="TenantId"
            Value: =""
            Visible: =showNewVariableGroupPanel
            Width: =pnlNewVariableGroup.DialogWidth - 40
            X: =Parent.Width - pnlNewVariableGroup.DialogWidth + 20
            Y: =525
            ZIndex: =45

        lblProjectDescription_7 As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="TenantId"
            Visible: =showNewVariableGroupPanel
            Width: =pnlNewVariableGroup.DialogWidth - 40
            X: =Parent.Width - pnlNewVariableGroup.DialogWidth + 20
            Y: =493
            ZIndex: =46

        "txtClientId As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =DisplayMode.Edit
            Height: =32
            Placeholder: ="ClientId"
            Value: =""
            Visible: =showNewVariableGroupPanel
            Width: =pnlNewVariableGroup.DialogWidth - 40
            X: =Parent.Width - pnlNewVariableGroup.DialogWidth + 20
            Y: =595
            ZIndex: =47

        lblProjectDescription_8 As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="ClientId"
            Visible: =showNewVariableGroupPanel
            Width: =pnlNewVariableGroup.DialogWidth - 40
            X: =Parent.Width - pnlNewVariableGroup.DialogWidth + 20
            Y: =563
            ZIndex: =48

        "txtClientSecret As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =DisplayMode.Edit
            Height: =32
            Mode: ='Microsoft.CoreControls.TextBox.Mode'.Password
            Placeholder: ="ClientSecret"
            Value: =""
            Visible: =showNewVariableGroupPanel
            Width: =pnlNewVariableGroup.DialogWidth - 40
            X: =Parent.Width - pnlNewVariableGroup.DialogWidth + 20
            Y: =665
            ZIndex: =49

        lblProjectDescription_9 As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="ClientSecret"
            Visible: =showNewVariableGroupPanel
            Width: =pnlNewVariableGroup.DialogWidth - 40
            X: =Parent.Width - pnlNewVariableGroup.DialogWidth + 20
            Y: =633
            ZIndex: =50

    grpNewServiceConnection As group:
        Height: =5
        Width: =5
        X: =60
        Y: =60
        ZIndex: =75

        pnlNewServiceConnection As Panel:
            Buttons: |-
                =If(CountRows(fdServiceConnections.SelectedItems) > 0,
                    If(IsBlank(txtServiceConnectionClientId.Value) Or IsBlank(txtServiceConnectionClientSecret.Value) Or IsBlank(txtServiceConnectionTenantId.Value),
                        Table(
                            {Label: "Cancel", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Standard }
                        )
                    ,
                        Table(
                            {Label: "Cancel", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Standard },
                            {Label: "Save", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Primary}
                        )
                    ),
                    Table(
                        {Label: "Cancel", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Standard },
                        {Label: "Create", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Primary}
                    )
                )
            Fill: =pnlNewServiceConnection.OverlayColor
            OnButtonSelect: |-
                =UpdateContext({
                    newServiceConnectionOrganization: ddOrganization.Selected.AccountName,
                    newServiceConnectionProjectName: txtProjectName.Value,
                    newServiceConnectionName: txtServiceConnectionName.Value,
                    newServiceConnectionDescription: "",
                    newServiceConnectionURL: txtServiceConnectionURL.Value,
                    newServiceConnectionTenantId: txtServiceConnectionTenantId.Value,
                    newServiceConnectionClientId: txtServiceConnectionClientId.Value,
                    newServiceConnectionClientSecret: txtServiceConnectionClientSecret.Value,
                    newServiceConnectionShare: chkShareToAllPipelines.Checked
                });
                Switch(Self.SelectedButton.Label,
                    "Create", 
                    UpdateContext({newServiceConnection: CustomAzureDevOps.CreateServiceEndpoint(
                        newServiceConnectionOrganization, 
                        {
                            'api-version': "7.0",
                            'Content-Type': "application/json",
                            data: "",
                            type: "powerplatform-spn",
                            name: newServiceConnectionName,
                            url: newServiceConnectionURL,
                            authorization: {
                                scheme: "none",
                                parameters: {
                                    tenantId: newServiceConnectionTenantId,
                                    applicationId: newServiceConnectionClientId,
                                    clientSecret: newServiceConnectionClientSecret
                                }
                            },
                            serviceEndpointProjectReferences: {
                                description: newServiceConnectionDescription,
                                name: newServiceConnectionName,
                                projectReference: {
                                    id: currentProject.id,
                                    name: currentProject.name
                                }
                            }
                        }
                    )});
                 
                    If(newServiceConnectionShare, 
                        CustomAzureDevOps.ShareServiceEndpoint(ddOrganization.Selected.AccountName, currentProject.name, newServiceConnection.id, {
                            'api-version': "6.0-preview.1",
                            'Content-Type': "application/json",
                            resource: {
                                id: newServiceConnection.id,
                                type: "endpoint"
                            },
                            allPipelines: {
                                authorized: newServiceConnectionShare
                            }
                        }
                    ));
                    Reset(txtProjectName);
                    Reset(txtServiceConnectionName);
                    Reset(txtServiceConnectionDescription);
                    Reset(txtServiceConnectionURL);
                    Reset(txtServiceConnectionTenantId);
                    Reset(txtServiceConnectionClientId);
                    Reset(txtServiceConnectionClientSecret);
                    Reset(chkShareToAllPipelines);
                    // Get Service Connections,
                    ClearCollect(colProjectServiceConnections, CustomAzureDevOps.GetServiceEndpoints(ddOrganization.Selected.AccountName, currentProject.name, { 'api-version': "6.0" }).value);
                    UpdateContext({showProjectServiceConnectionPanel: false}),
                    
                    "Save",
                    UpdateContext({ updateMultipleServiceConnections: If(CountRows(fdServiceConnections.SelectedItems) > 1, true, false)});
                    If(CountRows(fdServiceConnections.SelectedItems) > 0,
                        ForAll(fdServiceConnections.SelectedItems,
                            IfError(CustomAzureDevOps.UpdateServiceEndpoint(currentOrganization.AccountName, ThisRecord.id, {
                                'api-version': "6.0",
                                'Content-Type': "application/json",
                                data: {},
                                id: ThisRecord.id,
                                name: If(updateMultipleServiceConnections, ThisRecord.name, newServiceConnectionName),
                                type: "powerplatform-spn",
                                url: If(updateMultipleServiceConnections, ThisRecord.url, newServiceConnectionURL),
                                description: If(updateMultipleServiceConnections, ThisRecord.description, newServiceConnectionDescription),
                                authorization: {
                                    scheme: "none",
                                    parameters: {
                                        tenantId: newServiceConnectionTenantId,
                                        applicationId: newServiceConnectionClientId,
                                        clientSecret: newServiceConnectionClientSecret
                                    }
                                },
                                isShared: false,
                                isReady: true,
                                owner: "Library",
                                serviceEndpointProjectReferences: Table(
                                    {
                                        name: If(updateMultipleServiceConnections, ThisRecord.name, newServiceConnectionName),
                                        description: If(updateMultipleServiceConnections, ThisRecord.description, newServiceConnectionDescription),
                                        projectReference: {
                                            id: currentProject.id,
                                            name: currentProject.name
                                        }
                                    }  
                                )           
                            }), Notify("Could not update service connection(s)", NotificationType.Error));
                
                            CustomAzureDevOps.ShareServiceEndpoint(ddOrganization.Selected.AccountName, currentProject.name, ThisRecord.id, {
                                    'api-version': "6.0-preview.1",
                                    'Content-Type': "application/json",
                                    resource: {
                                        id: ThisRecord.id,
                                        type: "endpoint"
                                    },
                                    allPipelines: {
                                        authorized: newServiceConnectionShare
                                    }
                                }
                            )
                        );
                    );
                    
                    // Get Service Connections,
                    ClearCollect(colProjectServiceConnections, CustomAzureDevOps.GetServiceEndpoints(ddOrganization.Selected.AccountName, currentProject.name, { 'api-version': "6.0" }).value);
                    
                    UpdateContext({showProjectServiceConnectionPanel: false});
                    
                    Reset(txtProjectName);
                    Reset(txtServiceConnectionName);
                    Reset(txtServiceConnectionDescription);
                    Reset(txtServiceConnectionURL);
                    Reset(txtServiceConnectionTenantId);
                    Reset(txtServiceConnectionClientId);
                    Reset(txtServiceConnectionClientSecret);
                    Reset(chkShareToAllPipelines);
                    ,
                    "Cancel",
                    
                    Reset(txtProjectName);
                    Reset(txtServiceConnectionName);
                    Reset(txtServiceConnectionDescription);
                    Reset(txtServiceConnectionURL);
                    Reset(txtServiceConnectionTenantId);
                    Reset(txtServiceConnectionClientId);
                    Reset(txtServiceConnectionClientSecret);
                    Reset(chkShareToAllPipelines);
                    UpdateContext({showProjectServiceConnectionPanel: false});
                    
                )
            OnCloseSelect: |-
                =Reset(txtProjectName);
                Reset(txtServiceConnectionName);
                Reset(txtServiceConnectionDescription);
                Reset(txtServiceConnectionURL);
                Reset(txtServiceConnectionTenantId);
                Reset(txtServiceConnectionClientId);
                Reset(txtServiceConnectionClientSecret);
                Reset(chkShareToAllPipelines);
                UpdateContext({showProjectServiceConnectionPanel: false});
            Subtitle: ="Manage Azure DevOps Service Connections "
            Title: ="Project Sevice Connections"
            Visible: =showProjectServiceConnectionPanel
            Width: =App.Width

        "txtProjectDescription_1 As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =DisplayMode.Disabled
            Height: =32
            Placeholder: ="Project Description"
            Value: =currentProject.description
            Visible: =showProjectServiceConnectionPanel
            Width: =pnlNewServiceConnection.DialogWidth - 40
            X: =Parent.Width - pnlNewServiceConnection.DialogWidth + 20
            Y: =207
            ZIndex: =4

        lblProjectDescription_1 As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Project Description"
            Visible: =showProjectServiceConnectionPanel
            Width: =pnlNewServiceConnection.DialogWidth - 40
            X: =Parent.Width - pnlNewServiceConnection.DialogWidth + 20
            Y: =175
            ZIndex: =5

        "txtProjectName_1 As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =DisplayMode.Disabled
            Height: =32
            Placeholder: ="Project Name"
            Value: =currentProject.name
            Visible: =showProjectServiceConnectionPanel
            Width: =pnlNewServiceConnection.DialogWidth - 40
            X: =Parent.Width - pnlNewServiceConnection.DialogWidth + 20
            Y: =138
            ZIndex: =6

        lblProjectName_1 As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Project Name"
            Visible: =showProjectServiceConnectionPanel
            Width: =pnlNewServiceConnection.DialogWidth - 40
            X: =Parent.Width - pnlNewServiceConnection.DialogWidth + 20
            Y: =106
            ZIndex: =7

        "txtServiceConnectionName As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =If(CountRows(fdServiceConnections.SelectedItems) > 1 And serviceConnectionOperation = "edit", DisplayMode.Disabled, DisplayMode.Edit)
            Height: =32
            Placeholder: ="Service Connection Name"
            Value: =If(CountRows(fdServiceConnections.SelectedItems) > 1 And serviceConnectionOperation = "edit", Concat(fdServiceConnections.SelectedItems, name, ", "), If(serviceConnectionOperation = "edit", fdServiceConnections.Selected.name, ""))
            Visible: =showProjectServiceConnectionPanel
            Width: =pnlNewServiceConnection.DialogWidth - 40
            X: =Parent.Width - pnlNewServiceConnection.DialogWidth + 20
            Y: =278
            ZIndex: =8

        lblServiceConnectionName As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Service Connection Name"
            Visible: =showProjectServiceConnectionPanel
            Width: =pnlNewServiceConnection.DialogWidth - 40
            X: =Parent.Width - pnlNewServiceConnection.DialogWidth + 20
            Y: =246
            ZIndex: =9

        "txtServiceConnectionURL As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =If(CountRows(fdServiceConnections.SelectedItems) > 1 And serviceConnectionOperation = "edit", DisplayMode.Disabled, DisplayMode.Edit)
            Height: =32
            Placeholder: =If(CountRows(fdServiceConnections.SelectedItems) > 1 And serviceConnectionOperation = "edit", "Multiple values", "Service Connection URL")
            Value: =If(CountRows(fdServiceConnections.SelectedItems) > 1 Or serviceConnectionOperation = "create", "", Coalesce(selectedServiceConnection.url, ""))
            Visible: =showProjectServiceConnectionPanel
            Width: =pnlNewServiceConnection.DialogWidth - 40
            X: =Parent.Width - pnlNewServiceConnection.DialogWidth + 20
            Y: =344
            ZIndex: =10

        lblServiceConnectionURL As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Service Connection URL"
            Visible: =showProjectServiceConnectionPanel
            Width: =pnlNewServiceConnection.DialogWidth - 40
            X: =Parent.Width - pnlNewServiceConnection.DialogWidth + 20
            Y: =312
            ZIndex: =11

        "txtServiceConnectionTenantId As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =DisplayMode.Edit
            Height: =32
            Placeholder: =If(tenantIdSingleValue Or serviceConnectionOperation = "create", "Tenant Id", "Multiple values")
            Value: =If(tenantIdSingleValue And serviceConnectionOperation = "edit", Coalesce(selectedServiceConnection.authorization.parameters.tenantId, ""), "")
            Visible: =showProjectServiceConnectionPanel
            Width: =pnlNewServiceConnection.DialogWidth - 40
            X: =Parent.Width - pnlNewServiceConnection.DialogWidth + 20
            Y: =412
            ZIndex: =12

        lblServiceConnectionTenantId As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Tenant Id"
            Visible: =showProjectServiceConnectionPanel
            Width: =pnlNewServiceConnection.DialogWidth - 40
            X: =Parent.Width - pnlNewServiceConnection.DialogWidth + 20
            Y: =380
            ZIndex: =13

        "txtServiceConnectionClientId As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =DisplayMode.Edit
            Height: =32
            Placeholder: =If(clientIdSingleValue Or serviceConnectionOperation = "create", "Client Id", "Multiple values")
            Value: =If(clientIdSingleValue And serviceConnectionOperation = "edit", Coalesce(selectedServiceConnection.authorization.parameters.applicationId, ""), "")
            Visible: =showProjectServiceConnectionPanel
            Width: =pnlNewServiceConnection.DialogWidth - 40
            X: =Parent.Width - pnlNewServiceConnection.DialogWidth + 20
            Y: =482
            ZIndex: =14

        lblServiceConnectionClientId As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Client Id"
            Visible: =showProjectServiceConnectionPanel
            Width: =pnlNewServiceConnection.DialogWidth - 40
            X: =Parent.Width - pnlNewServiceConnection.DialogWidth + 20
            Y: =450
            ZIndex: =15

        "txtServiceConnectionClientSecret As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =DisplayMode.Edit
            Height: =32
            Mode: ='Microsoft.CoreControls.TextBox.Mode'.Password
            Placeholder: ="Client Secret"
            Value: =""
            Visible: =showProjectServiceConnectionPanel
            Width: =pnlNewServiceConnection.DialogWidth - 40
            X: =Parent.Width - pnlNewServiceConnection.DialogWidth + 20
            Y: =550
            ZIndex: =16

        lblServiceConnectionClientSecret As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Client Secret"
            Visible: =showProjectServiceConnectionPanel
            Width: =pnlNewServiceConnection.DialogWidth - 40
            X: =Parent.Width - pnlNewServiceConnection.DialogWidth + 20
            Y: =518
            ZIndex: =17

        "chkShareToAllPipelines As 'Check box'":
            Checked: =If(CountRows(fdServiceConnections.SelectedItems) > 0 And serviceConnectionOperation = "edit", If(sharedSingleValue, selectedServiceConnectionShared, false), false)
            DisplayMode: =DisplayMode.Edit
            Height: =33
            Label: =If(CountRows(fdServiceConnections.SelectedItems) > 1 And serviceConnectionOperation = "edit", If(sharedSingleValue, "Share with all Pipelines", "MULTIPLE VALUES - Share with all Pipelines"), "Share with all Pipelines")
            Visible: =showProjectServiceConnectionPanel
            Width: =pnlNewServiceConnection.DialogWidth - 40
            X: =Parent.Width - pnlNewServiceConnection.DialogWidth + 20
            Y: =588
            ZIndex: =18

        "txtServiceConnectionDescription As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =If(CountRows(fdServiceConnections.SelectedItems) > 1  And serviceConnectionOperation = "edit", DisplayMode.Disabled, DisplayMode.Edit)
            Height: =32
            Placeholder: =If(CountRows(fdServiceConnections.SelectedItems) > 1 And serviceConnectionOperation = "edit", "Multiple values", "Service Connection Description")
            Value: =If(CountRows(fdServiceConnections.SelectedItems) > 1, "", Coalesce(selectedServiceConnection.description, ""))
            Visible: =false
            Width: =pnlNewServiceConnection.DialogWidth - 40
            X: =Parent.Width - pnlNewServiceConnection.DialogWidth + 20
            Y: =346
            ZIndex: =21

        lblServiceConnectionDescription As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Service Connection Description"
            Visible: =false
            Width: =pnlNewServiceConnection.DialogWidth - 40
            X: =Parent.Width - pnlNewServiceConnection.DialogWidth + 20
            Y: =314
            ZIndex: =22

        lblMissingAuthorizationMessage As Label:
            Color: =RGBA(184, 0, 0, 1)
            DisplayMode: =DisplayMode.Edit
            Height: =30
            Text: ="Enter Tenant Id, Client Id and Client Secret"
            Visible: =(IsBlank(txtServiceConnectionClientId.Value) Or IsBlank(txtServiceConnectionClientSecret.Value) Or IsBlank(txtServiceConnectionTenantId.Value)) And showProjectServiceConnectionPanel
            Width: =pnlNewServiceConnection.DialogWidth - 40
            X: =Parent.Width - pnlNewServiceConnection.DialogWidth + 20
            Y: =Parent.Height - 80
            ZIndex: =57

    grpUpdateReleaseHistory As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =77

        dlgReleaseTag As Dialog:
            Buttons: |-
                =If(Not(updatingReleaseHistory),
                    Table({Label: "No", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Standard } ,{Label: "Yes", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Primary})
                )
            DialogHeight: =250
            Fill: =dlgReleaseTag.OverlayColor
            Height: =App.Height
            OnButtonSelect: |-
                =If(Self.SelectedButton.Label = "Yes",
                    UpdateContext({updatingReleaseHistory: true});
                    UpdateReleaseHistoryInstant.Run();
                    UpdateContext({updatingReleaseHistory: false});    
                );
                UpdateContext({showReleaseTagDialog: false});    
            OnCloseSelect: |-
                =If(Not(updatingReleaseHistory),
                    UpdateContext({showReleaseTagDialog:false});
                );
            SubTitle: |-
                ="In order to be able to manage Azure DevOps Projects you must download the release history of https://github.com/microsoft/coe-alm-accelerator-templates.
                
                Do you want to do that now?"
            Title: ="Need to update Release History"
            Visible: =showReleaseTagDialog
            Width: =App.Width
            ZIndex: =58

        "spnUpdatingReleaseHistory As 'Fluent Spinner (1.0.9) Preview'":
            DisplayMode: =DisplayMode.Edit
            Height: =32
            Visible: =updatingReleaseHistory
            Width: =96
            X: =dlgReleaseTag.ContentX + dlgReleaseTag.ContentWidth - 110
            Y: =dlgReleaseTag.ContentY + dlgReleaseTag.ContentHeight - 2
            ZIndex: =59

    dlgNewAlmAccProjectWizardClose As Dialog:
        Buttons: |-
            =Table({Label: "Cancel", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Standard } ,{Label: "Close", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Primary})
        Fill: =dlgNewAlmAccProjectWizardClose.OverlayColor
        Height: =App.Height
        OnButtonSelect: |-
            =Switch(Self.SelectedButton.Label,
                "Close",
                UpdateContext({
                    newALMAccProjectCurrentStep: 6
                });
                Select(btnCloseWizard);
                ,
                "Cancel",
                UpdateContext({showNewALMAccProjectWizardCloseDialog: false});
            )
        OnCloseSelect: |-
            =UpdateContext({showNewALMAccProjectWizardCloseDialog: false})
        SubTitle: |-
            ="If you close the Project Wizard now your project will not be correctly configured.
            
            The Project you have created will be left with an invalid configuration.
            
            If you close the Project Wizard you should delete the Project or configure it manually"
        Title: ="Are you sure?"
        Visible: =showNewALMAccProjectWizardCloseDialog
        Width: =App.Width
        ZIndex: =78

    grpCreateProject As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =78

        pnlNewProject As Panel:
            Buttons: |-
                =If(Not(showNewProjectPanel And (createNewProjectLoop Or createRepoLoop)),
                    If(createProjectPermission, 
                        Table({Label: "Cancel", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Standard } ,{Label: "Create", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Primary}),
                        Table({Label: "Cancel", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Standard })
                    )
                )
            Fill: =pnlNewProject.OverlayColor
            OnButtonSelect: |-
                =If(
                    Self.SelectedButton.Label = "Create",
                    UpdateContext({showCreateProjectSpinner: true});
                    
                    UpdateContext(
                        {
                            newProjectOrganization: ddOrganization.Selected.AccountName,
                            newProjectName: txtProjectName.Value,
                            newProjectDescription: txtProjectDescription.Value,
                            newProjectInstallTemplates: chkInstallPipelineTemplates.Checked,
                            newPipelineTemplateRepository: txtPipelineTemplateRepository.Value,
                            newPipelineTemplateVersion: ddReleaseTags_1.Selected.Tag
                        }
                    );
                    ClearCollect(
                        operations,
                        IfError(CustomAzureDevOps.CreateProject(
                            ddOrganization.Selected.AccountName,
                            {
                                'api-version': "7.0",
                                name: txtProjectName.Value,
                                description: txtProjectDescription.Value,
                                capabilities: {
                                    versioncontrol: {sourceControlType: "Git"},
                                    processTemplate: {templateTypeId: "b8a3a935-7e91-48b8-a94c-606d37c3e9f2"}//basic project template
                                }
                            }
                        ),
                        { id: "-1" });
                    );
                    UpdateContext({operation: First(operations)});
                    If(operation.id = "-1", 
                        Notify("Error creating project! Does it already exist? Note that you only see projects that you have access to.", NotificationType.Error);
                        UpdateContext({showCreateProjectSpinner: false});
                        ,
                        UpdateContext({createNewProjectLoop: true});
                    );
                    
                    ,
                    UpdateContext({showNewProjectPanel: false})
                );
                Reset(txtProjectName);
                Reset(txtProjectDescription);
                Reset(chkInstallPipelineTemplates);
                Reset(txtPipelineTemplateRepository);
                Reset(ddReleaseTags_1);
            OnCloseSelect: |-
                =UpdateContext({
                    showNewProjectPanel:false,
                    createNewProjectLoop: false,
                    createRepoLoop: false,
                    showCreateProjectSpinner: false
                })
            Subtitle: ="Create a new Azure DevOps Project to be used with ALM Accelerator"
            Title: ="New Azure DevOps Project"
            Visible: =showNewProjectPanel
            Width: =App.Width
            ZIndex: =63

        "txtProjectDescription As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =If(createProjectPermission And Not(createNewProjectLoop Or createRepoLoop), DisplayMode.Edit, DisplayMode.Disabled)
            Height: =32
            Placeholder: ="Project Description"
            Value: =""
            Visible: =showNewProjectPanel
            Width: =pnlNewProject.DialogWidth - 40
            X: =Parent.Width - pnlNewProject.DialogWidth + 20
            Y: =236
            ZIndex: =64

        lblProjectDescription As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Project Description"
            Visible: =showNewProjectPanel
            Width: =pnlNewProject.DialogWidth - 40
            X: =Parent.Width - pnlNewProject.DialogWidth + 20
            Y: =204
            ZIndex: =65

        "txtProjectName As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =If(createProjectPermission And Not(createNewProjectLoop Or createRepoLoop), DisplayMode.Edit, DisplayMode.Disabled)
            Height: =32
            Placeholder: ="Project Name"
            Value: =""
            Visible: =showNewProjectPanel
            Width: =pnlNewProject.DialogWidth - 40
            X: =Parent.Width - pnlNewProject.DialogWidth + 20
            Y: =160
            ZIndex: =66

        lblProjectName As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Project Name"
            Visible: =showNewProjectPanel
            Width: =pnlNewProject.DialogWidth - 40
            X: =Parent.Width - pnlNewProject.DialogWidth + 20
            Y: =128
            ZIndex: =67

        "chkInstallPipelineTemplates As 'Check box'":
            AccessibleLabel: ="Wrap description"
            Checked: =false
            DisplayMode: =If(createProjectPermission And Not(createNewProjectLoop Or createRepoLoop), DisplayMode.Edit, DisplayMode.Disabled)
            Height: =32
            Label: ="Install Pipeline Templates"
            OnChange: =
            Visible: =showNewProjectPanel
            Width: =pnlNewProject.DialogWidth - 40
            X: =Parent.Width - pnlNewProject.DialogWidth + 20
            Y: =284
            ZIndex: =68

        "txtPipelineTemplateRepository As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =If(IsBlank(ddOrganization.Selected) Or Not(chkInstallPipelineTemplates.Checked) Or Not(createProjectPermission) Or createNewProjectLoop Or createRepoLoop, DisplayMode.Disabled, DisplayMode.Edit)
            Height: =32
            Placeholder: ="Pipeline Template Repository"
            Value: ="coe-alm-accelerator-templates"
            Visible: =showNewProjectPanel
            Width: =pnlNewProject.DialogWidth - 40
            X: =Parent.Width - pnlNewProject.DialogWidth + 20
            Y: =360
            ZIndex: =69

        lblPipelineTemplatesRepository As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Pipeline Templates Repository"
            Visible: =showNewProjectPanel
            Width: =pnlNewProject.DialogWidth - 40
            X: =Parent.Width - pnlNewProject.DialogWidth + 20
            Y: =328
            ZIndex: =70

        tmrCreateProjectLoop As timer:
            AutoPause: =false
            BorderColor: =RGBA(0, 120, 212, 1)
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =RGBA(244, 244, 244, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Duration: =2000
            Fill: =RGBA(0, 120, 212, 1)
            FocusedBorderThickness: =2
            Font: =Font.'Segoe UI'
            HoverBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -10%)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(0, 120, 212, 1), -10%)
            OnTimerEnd: |-
                =UpdateContext({operation: CustomAzureDevOps.GetOperation(ddOrganization.Selected.AccountName, operation.id)});
                If(operation.status = "succeeded",      
                    UpdateContext({createNewProjectLoop: false});
                    ClearCollect(colProjects, AddColumns(CustomAzureDevOps.GetProjects(ddOrganization.Selected.AccountName, { 'api-version': "7.0" }).value, "ModifiedOn", DateValue(lastUpdateTime, "en-US")));
                    
                    UpdateContext({newProjectId: LookUp(colProjects, name = newProjectName).id});
                
                    If(newProjectInstallTemplates,
                        Reset(tmrCreateRepository);
                        // Create repo
                        ClearCollect(
                            operations,
                            CustomAzureDevOps.CreateGitRepo(
                                ddOrganization.Selected.AccountName,
                                newProjectName,
                                {
                                    'api-version': "7.0",
                                    name: txtPipelineTemplateRepository.Value,
                                    project: {id: newProjectId}
                                }
                            )
                        );
                        //UpdateContext({currentProject: LookUp(colProjects, name = txtProjectName.Value)});
                        UpdateContext(
                            {
                                newProjectOrganization: ddOrganization.Selected.AccountName,
                                newProjectName: newProjectName,
                                newProjectInstallTemplates: true,
                                createRepoOperation: "createRepo",
                                createRepoLoop: true
                            }
                        );
                        ,
                        UpdateContext({
                            showNewProjectPanel: false,
                            showCreateProjectSpinner: false
                        });
                    )   
                );
            PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(0, 120, 212, 1), -30%)
            Repeat: =createNewProjectLoop
            Size: =10.5
            Start: =createNewProjectLoop
            Visible: =false
            X: =20
            ZIndex: =71

        "ddReleaseTags_1 As 'Combo box'.pcfdataset":
            AccessibleLabel: ="Align"
            AllowMultiSelect: =false
            DefaultSelectedItems: |-
                =Table({Name:"None"})
            DisplayMode: =If(IsBlank(ddOrganization.Selected) Or Not(chkInstallPipelineTemplates.Checked) Or Not(createProjectPermission) Or createNewProjectLoop Or createRepoLoop, DisplayMode.Disabled, DisplayMode.Edit)
            Height: =32
            Items: =Sort(colReleaseTags, Published, SortOrder.Descending)
            OnChange: =false
            Text: =""
            Tooltip: =Self.Selected.Tag
            Visible: =showNewProjectPanel
            Width: =plnNewRepository.DialogWidth - 76
            X: =Parent.Width - pnlNewProject.DialogWidth + 20
            Y: =434
            ZIndex: =72

            Tag1_1 As pcfDataField.textualColumn:
                FieldDisplayName: ="Tag"
                FieldName: ="cat_tag"
                FieldType: ="s"
                FieldVariantName: ="textualColumn"
                Order: =1
                ZIndex: =23

        lblPipelineTemplatesRepository_1 As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Pipeline Templates Version"
            Visible: =showNewProjectPanel
            Width: =pnlNewProject.DialogWidth - 40
            X: =Parent.Width - pnlNewProject.DialogWidth + 20
            Y: =400
            ZIndex: =73

        lblCreateProjectPermissionError As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(184, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            Height: =45
            Size: =10.5
            Text: ="You do not have the required permissions to create a project"
            Visible: =showNewProjectPanel And Not(createProjectPermission)
            Width: =pnlNewProject.DialogWidth - 40
            X: =Parent.Width - pnlNewProject.DialogWidth + 20
            Y: =App.Height - 100
            ZIndex: =74

        "spnCreateProject As 'Fluent Spinner (1.0.9) Preview'":
            DisplayMode: =DisplayMode.Edit
            Height: =32
            Visible: =showNewProjectPanel And showCreateProjectSpinner
            Width: =96
            X: =App.Width - 280
            Y: =App.Height - 42
            ZIndex: =75

        icoUpdateReleaseTagsNewProject As icon.Reload:
            BorderColor: =RGBA(0, 0, 0, 0)
            Color: =RGBA(0, 120, 212, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(220, 220, 220, 1)
            DisabledFill: =RGBA(0, 0, 0, 0)
            DisplayMode: =If(IsBlank(ddOrganization.Selected) Or Not(chkInstallPipelineTemplates.Checked) Or Not(createProjectPermission) Or createNewProjectLoop Or createRepoLoop, DisplayMode.Disabled, DisplayMode.Edit)
            Height: =32
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
            HoverFill: =RGBA(0, 0, 0, 0)
            Icon: =Icon.Reload
            OnSelect: |-
                =IfError(UpdateReleaseHistoryInstant.Run(),
                    Notify("Error refreshing release tags")
                    ,
                    ClearCollect(colReleaseTags, 'Release Histories')
                );
            PaddingBottom: =3
            PaddingLeft: =3
            PaddingRight: =3
            PaddingTop: =3
            PressedBorderColor: =RGBA(0, 0, 0, 0)
            PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
            PressedFill: =RGBA(0, 0, 0, 0)
            Visible: =showNewProjectPanel
            Width: =26
            X: =ddReleaseTags_1.X + ddReleaseTags_1.Width + 5
            Y: =ddReleaseTags_1.Y
            ZIndex: =76

        lblCreateProjectPermissionError_1 As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(184, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            Height: =45
            Size: =10.5
            Text: ="Enter project name"
            Visible: =showNewProjectPanel And IsBlank(txtProjectName.Value) And createProjectPermission
            Width: =pnlNewProject.DialogWidth - 40
            X: =Parent.Width - pnlNewProject.DialogWidth + 20
            Y: =App.Height - 100
            ZIndex: =77

    cntUpgradePipelineRepo As groupContainer.manualLayoutContainer:
        Height: =App.Height
        Visible: =showUpgradePipelineRepoPanel
        Width: =App.Width
        ZIndex: =79

        pnlUpgradePipelineRepo As Panel:
            Buttons: |-
                =If(txtCurrentPipelineVersion.Value = txtUpgradePipelineVersion.Value Or Not(isTemplateRepo) Or almProjectSyncPipelineId = -1,
                    Table({Label: "Cancel", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Standard }),
                    Table({Label: "Cancel", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Standard } ,{Label: "Upgrade", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Primary})
                )    
            Fill: =pnlUpgradePipelineRepo.OverlayColor
            Height: =Parent.Height
            OnButtonSelect: |-
                =Switch(Self.SelectedButton.Label,
                    "Upgrade",
                
                    UpdateContext({syncPipelineRun: CustomAzureDevOps.RunSyncPipeline(ddOrganization.Selected.AccountName, fdProjects.Selected.name, almProjectSyncPipelineId, {
                        'api-version': "6.0",
                        definition: {
                            id: almProjectSyncPipelineId
                        },
                        templateParameters: {
                            BranchToCreate: $"upgrade{txtUpgradePipelineVersion.Value}",
                            TargetBranch: "main",
                            SyncFrom: "Tag",
                            SourceBranchOrTag: txtUpgradePipelineVersion.Value,
                            AutoCompletePR: chkAutoCompleteUpgrade.Checked,
                            deleteSourceBranch: chkDeleteSourceBranch.Checked
                        }
                    })}); 
                    
                    UpdateContext({showUpgradePipelineRepoPanel: false}),
                
                    "Cancel",
                    UpdateContext({
                        showUpgradePipelineRepoPanel: false
                    });
                )
            OnCloseSelect: |
                =UpdateContext({
                    showUpgradePipelineRepoPanel: false
                });
            Subtitle: ="Upgrade the Pipeline Template version in the repository"
            Title: ="Pipeline Repository Details"
            Width: =Parent.Width
            ZIndex: =1

        "txtProjectName_4 As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =DisplayMode.Disabled
            Height: =32
            Placeholder: ="Project Name"
            Value: =currentProject.name
            Visible: =true
            Width: =plnNewRepository.DialogWidth - 40
            X: =Parent.Width - plnNewRepository.DialogWidth + 20
            Y: =163
            ZIndex: =2

        lblProjectName_4 As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Project Name"
            Width: =plnNewRepository.DialogWidth - 40
            X: =Parent.Width - plnNewRepository.DialogWidth + 20
            Y: =131
            ZIndex: =3

        "txtRepositoryName_1 As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =DisplayMode.Disabled
            Height: =32
            Placeholder: ="Repository Name"
            Value: =fdRepositories.Selected.name
            Visible: =true
            Width: =plnNewRepository.DialogWidth - 40
            X: =Parent.Width - plnNewRepository.DialogWidth + 20
            Y: =243
            ZIndex: =4

        lblRepositoryName_1 As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Repository Name"
            Width: =plnNewRepository.DialogWidth - 40
            X: =Parent.Width - plnNewRepository.DialogWidth + 20
            Y: =211
            ZIndex: =5

        lblPipelineTemplateVersion_1 As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Current Pipeline Template Version"
            Visible: =Not(IsBlank(ParseJSON(repoContent).version))
            Width: =plnNewRepository.DialogWidth - 40
            X: =Parent.Width - pnlNewProject.DialogWidth + 20
            Y: =321
            ZIndex: =6

        icoUpdateReleaseTagsNewRepo_2 As icon.Reload:
            BorderColor: =RGBA(0, 0, 0, 0)
            Color: =RGBA(0, 120, 212, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(220, 220, 220, 1)
            DisabledFill: =RGBA(0, 0, 0, 0)
            DisplayMode: =If(almProjectSyncPipelineId = -1, DisplayMode.Disabled, DisplayMode.Edit)
            Height: =32
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
            HoverFill: =RGBA(0, 0, 0, 0)
            Icon: =Icon.Reload
            OnSelect: |-
                =UpdateContext({ isTemplateRepo: Not(IsError(CustomAzureDevOps.GetFile(ddOrganization.Selected.AccountName, fdProjects.Selected.name, fdRepositories.Selected.id, { path: "/Pipelines/export-solution-to-git.yml", 'api-version': "7.1-preview"}).content) )});
                    
                UpdateContext({
                    repoContent: If(isTemplateRepo, 
                        IfError(CustomAzureDevOps.GetFile(ddOrganization.Selected.AccountName, fdProjects.Selected.name, fdRepositories.Selected.id, { path: "/version.json", 'api-version': "7.1-preview"}).content, JSON({
                  version: "Unknown",
                  published: "",
                  content: "coe-alm-accelerator-templates"
                }))
                    , JSON({ version: "" }))
                });
                
                Reset(txtCurrentPipelineVersion);
            PaddingBottom: =3
            PaddingLeft: =3
            PaddingRight: =3
            PaddingTop: =3
            PressedBorderColor: =RGBA(0, 0, 0, 0)
            PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
            PressedFill: =RGBA(0, 0, 0, 0)
            Visible: =Not(IsBlank(ParseJSON(repoContent).version))
            Width: =26
            X: =ddReleaseTags.X + ddReleaseTags.Width + 5
            Y: =354
            ZIndex: =7

        "txtCurrentPipelineVersion As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =If(almProjectSyncPipelineId = -1, DisplayMode.Disabled, DisplayMode.View)
            Height: =32
            Placeholder: =""
            Tooltip: =Text(ParseJSON(repoContent).version)
            Value: =Text(ParseJSON(repoContent).version)
            Visible: =Not(IsBlank(ParseJSON(repoContent).version))
            Width: =plnNewRepository.DialogWidth - 80
            X: =Parent.Width - plnNewRepository.DialogWidth + 20
            Y: =355
            ZIndex: =8

        lblPipelineTemplateVersion_2 As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Upgrade to Pipeline Template Version"
            Visible: =Not(IsBlank(ParseJSON(repoContent).version))
            Width: =plnNewRepository.DialogWidth - 40
            X: =Parent.Width - pnlNewProject.DialogWidth + 20
            Y: =397
            ZIndex: =9

        icoUpdateReleaseTagsNewRepo_4 As icon.Reload:
            BorderColor: =RGBA(0, 0, 0, 0)
            Color: =RGBA(0, 120, 212, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(220, 220, 220, 1)
            DisabledFill: =RGBA(0, 0, 0, 0)
            DisplayMode: =If(almProjectSyncPipelineId = -1, DisplayMode.Disabled, DisplayMode.Edit)
            Height: =32
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
            HoverFill: =RGBA(0, 0, 0, 0)
            Icon: =Icon.Reload
            OnSelect: |-
                =IfError(UpdateReleaseHistoryInstant.Run(),
                    Notify("Error refreshing release tags")
                    ,
                    ClearCollect(colReleaseTags, 'Release Histories')
                );
                
                Reset(txtUpgradePipelineVersion);
            PaddingBottom: =3
            PaddingLeft: =3
            PaddingRight: =3
            PaddingTop: =3
            PressedBorderColor: =RGBA(0, 0, 0, 0)
            PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
            PressedFill: =RGBA(0, 0, 0, 0)
            Visible: =Not(IsBlank(ParseJSON(repoContent).version))
            Width: =26
            X: =ddReleaseTags.X + ddReleaseTags.Width + 5
            Y: =430
            ZIndex: =10

        "txtUpgradePipelineVersion As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =If(almProjectSyncPipelineId = -1, DisplayMode.Disabled, DisplayMode.View)
            Height: =32
            Placeholder: ="Repository Name"
            Tooltip: =First(Sort(colReleaseTags, Published, SortOrder.Descending)).Tag
            Value: =First(Sort(colReleaseTags, Published, SortOrder.Descending)).Tag
            Visible: =Not(IsBlank(ParseJSON(repoContent).version))
            Width: =plnNewRepository.DialogWidth - 80
            X: =Parent.Width - plnNewRepository.DialogWidth + 20
            Y: =431
            ZIndex: =11

        txtUpgradePipelineVersionError As Label:
            AutoHeight: =true
            Color: =RGBA(184, 0, 0, 1)
            DisplayMode: =DisplayMode.Edit
            Height: =32
            Text: |-
                =If(txtCurrentPipelineVersion.Value = txtUpgradePipelineVersion.Value,
                    "Repository already has latest Pipeline Template version installed."
                    ,
                    If(IsBlank(ParseJSON(repoContent).version),
                        "This is not a Pipeline Templates Repository."
                    )
                )
            Width: =plnNewRepository.DialogWidth - 40
            X: =Parent.Width - plnNewRepository.DialogWidth + 20
            Y: =App.Height - 100
            ZIndex: =12

        "chkAutoCompleteUpgrade As 'Check box'":
            Checked: =false
            DisplayMode: =If(almProjectSyncPipelineId = -1, DisplayMode.Disabled, DisplayMode.Edit)
            Height: =32
            Label: ="Auto complete upgrade"
            OnUncheck: =Reset(chkDeleteSourceBranch)
            Tooltip: ="The upgrade process will create a Pull Request in which you can verify the changes in the upgrade before completing the upgrade. If auto complete upgrade is checked the Pull Request will be automatically completed and you will not be able to verify the changes before the upgrade completes"
            Width: =plnNewRepository.DialogWidth - 40
            X: =Parent.Width - plnNewRepository.DialogWidth + 20
            Y: =485
            ZIndex: =13

        lblSyncPipelineNotFound As Label:
            Color: =RGBA(184, 0, 0, 1)
            DisplayMode: =DisplayMode.Edit
            Height: =32
            Text: ="Sync pipeline not found"
            Visible: =almProjectSyncPipelineId = -1
            Width: =320
            X: =986
            Y: =668
            ZIndex: =14

        lblAutoCompleteNote As Label:
            DisplayMode: =DisplayMode.Edit
            FontWeight: =FontWeight.Semibold
            Height: =76
            Text: |-
                ="NOTE: if you auto complete the upgrade you will not get a chance to verify the changes before the upgrade is applied"
            Visible: =chkAutoCompleteUpgrade.Checked
            Width: =plnNewRepository.DialogWidth - 40
            X: =Parent.Width - pnlNewProject.DialogWidth + 20
            Y: =607
            ZIndex: =15

        "chkDeleteSourceBranch As 'Check box'":
            Checked: =false
            DisplayMode: =If(almProjectSyncPipelineId = -1 Or Not(chkAutoCompleteUpgrade.Checked), DisplayMode.Disabled, DisplayMode.Edit)
            Height: =32
            Label: ="Delete upgrade branch"
            Tooltip: ="When upgrading the pipeline templates a temporary branch will be created. If the Delete upgrade branch is checked the temporary upgrade branch will be deleted when upgrade is complete"
            Width: =plnNewRepository.DialogWidth - 40
            X: =Parent.Width - plnNewRepository.DialogWidth + 20
            Y: =532
            ZIndex: =16

        icoInfoAutoComplete As icon.Information:
            BorderColor: =RGBA(0, 0, 0, 0)
            Color: =RGBA(0, 120, 212, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(220, 220, 220, 1)
            DisabledFill: =RGBA(0, 0, 0, 0)
            Height: =32
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
            HoverFill: =RGBA(0, 0, 0, 0)
            Icon: =Icon.Information
            PaddingBottom: =3
            PaddingLeft: =3
            PaddingRight: =3
            PaddingTop: =3
            PressedBorderColor: =RGBA(0, 0, 0, 0)
            PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
            PressedFill: =RGBA(0, 0, 0, 0)
            Tooltip: ="The upgrade process will create a Pull Request in which you can verify the changes in the upgrade before completing the upgrade. If auto complete upgrade is checked the Pull Request will be automatically completed and you will not be able to verify the changes before the upgrade completes"
            Width: =26
            X: =Parent.Width - plnNewRepository.DialogWidth + 200
            Y: =485
            ZIndex: =17

        icoInfoDeleteSourceBranch As icon.Information:
            BorderColor: =RGBA(0, 0, 0, 0)
            Color: =RGBA(0, 120, 212, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(220, 220, 220, 1)
            DisabledFill: =RGBA(0, 0, 0, 0)
            Height: =32
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
            HoverFill: =RGBA(0, 0, 0, 0)
            Icon: =Icon.Information
            PaddingBottom: =3
            PaddingLeft: =3
            PaddingRight: =3
            PaddingTop: =3
            PressedBorderColor: =RGBA(0, 0, 0, 0)
            PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
            PressedFill: =RGBA(0, 0, 0, 0)
            Tooltip: ="When upgrading the pipeline templates a temporary branch will be created. If the Delete upgrade branch is checked the temporary upgrade branch will be deleted when upgrade is complete"
            Width: =26
            X: =Parent.Width - plnNewRepository.DialogWidth + 194
            Y: =532
            ZIndex: =18

    grpNewRepository As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =79

        plnNewRepository As Panel:
            Buttons: |-
                =Table({Label: "Cancel", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Standard } ,{Label: "Create", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Primary})
            Fill: =plnNewRepository.OverlayColor
            OnButtonSelect: |-
                =Switch(Self.SelectedButton.Label,
                    "Create",
                    Reset(tmrCreateRepository);
                    // Create repo
                    ClearCollect(
                        operations,
                        CustomAzureDevOps.CreateGitRepo(
                            ddOrganization.Selected.AccountName,
                            currentProject.name,
                            {
                                'api-version': "7.0",
                                name: txtRepositoryName.Value,
                                project: {id: currentProject.id}
                            }
                        )
                    );
                    UpdateContext(
                        {
                            newProjectOrganization: ddOrganization.Selected.AccountName,
                            newProjectName: txtProjectName_2.Value,
                            newProjectInstallTemplates: chkInstallPipelines.Checked,
                            newProjectRepoSetPermissions: chkSetPermissions.Checked,
                            newPipelineTemplateRepository: txtRepositoryName.Value,
                            newPipelineTemplateVersion: ddReleaseTags.Selected.Tag,
                            createRepoOperation: "createRepo",
                            createRepoLoop: true
                        }
                    );
                
                
                    UpdateContext({showNewRepositoryPanel: false}),
                
                    "Cancel",
                    Reset(ddReleaseTags);
                    UpdateContext({showNewRepositoryPanel: false})
                )
            OnCloseSelect: |-
                =UpdateContext({showNewRepositoryPanel:false})
            Subtitle: =$"Create a new Azure Git Repository in the {currentProject.name} Project"
            Title: ="New Repository"
            Visible: =showNewRepositoryPanel
            Width: =App.Width
            ZIndex: =23

        "txtProjectName_2 As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =DisplayMode.Disabled
            Height: =32
            Placeholder: ="Project Name"
            Value: =currentProject.name
            Visible: =showNewRepositoryPanel
            Width: =plnNewRepository.DialogWidth - 40
            X: =Parent.Width - plnNewRepository.DialogWidth + 20
            Y: =160
            ZIndex: =24

        lblProjectName_2 As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Project Name"
            Visible: =showNewRepositoryPanel
            Width: =plnNewRepository.DialogWidth - 40
            X: =Parent.Width - plnNewRepository.DialogWidth + 20
            Y: =128
            ZIndex: =25

        "chkSetPermissions As 'Check box'":
            AccessibleLabel: ="Wrap description"
            Checked: =false
            DisplayMode: =DisplayMode.Edit
            Height: =32
            Label: ="Set Permissions"
            OnChange: =
            Visible: =showNewRepositoryPanel
            Width: =plnNewRepository.DialogWidth - 40
            X: =Parent.Width - plnNewRepository.DialogWidth + 20
            Y: =399
            ZIndex: =26

        "chkInstallPipelines As 'Check box'":
            AccessibleLabel: ="Wrap description"
            Checked: =false
            DisplayMode: =DisplayMode.Edit
            Height: =32
            Label: ="Install Pipeline Templates"
            OnChange: =
            Visible: =showNewRepositoryPanel
            Width: =plnNewRepository.DialogWidth - 40
            X: =Parent.Width - plnNewRepository.DialogWidth + 20
            Y: =284
            ZIndex: =27

        "txtRepositoryName As 'Text box'":
            AccessibleLabel: ="Search files"
            DisplayMode: =DisplayMode.Edit
            Height: =32
            Placeholder: ="Repository Name"
            Value: =
            Visible: =showNewRepositoryPanel
            Width: =plnNewRepository.DialogWidth - 40
            X: =Parent.Width - plnNewRepository.DialogWidth + 20
            Y: =240
            ZIndex: =28

        lblRepositoryName As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Repository Name"
            Visible: =showNewRepositoryPanel
            Width: =plnNewRepository.DialogWidth - 40
            X: =Parent.Width - plnNewRepository.DialogWidth + 20
            Y: =208
            ZIndex: =29

        lblPipelineTemplateVersion As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Pipeline Template Version"
            Visible: =showNewRepositoryPanel
            Width: =plnNewRepository.DialogWidth - 40
            X: =Parent.Width - pnlNewProject.DialogWidth + 20
            Y: =318
            ZIndex: =30

        "ddReleaseTags As 'Combo box'.pcfdataset":
            AccessibleLabel: ="Align"
            DefaultSelectedItems: |-
                =Table({Name:"None"})
            DisplayMode: =If(chkInstallPipelines.Checked, DisplayMode.Edit, DisplayMode.Disabled)
            Height: =32
            Items: =Sort(colReleaseTags, Published, SortOrder.Descending)
            OnChange: =false
            Text: =""
            Visible: =showNewRepositoryPanel
            Width: =plnNewRepository.DialogWidth - 76
            X: =Parent.Width - pnlNewProject.DialogWidth + 20
            Y: =350
            ZIndex: =31

            Tag1 As pcfDataField.textualColumn:
                FieldDisplayName: ="Tag"
                FieldName: ="cat_tag"
                FieldType: ="s"
                FieldVariantName: ="textualColumn"
                Order: =1
                ZIndex: =23

        lblSetPermissionsDescription As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =97
            Size: =10.5
            Text: =$"Set Permissions will assign Contribute, Create Branch and Create Pull Request priveliges to the {currentProject.name} Build Service ({ddOrganization.Selected.AccountName}) system account"
            VerticalAlign: =VerticalAlign.Top
            Visible: =showNewRepositoryPanel
            Width: =plnNewRepository.DialogWidth - 40
            X: =Parent.Width - pnlNewProject.DialogWidth + 20
            Y: =428
            ZIndex: =32

        tmrCreateRepository As timer:
            AutoPause: =false
            BorderColor: =RGBA(0, 120, 212, 1)
            BorderStyle: =BorderStyle.None
            DisabledBorderColor: =RGBA(244, 244, 244, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =RGBA(244, 244, 244, 1)
            Duration: =2000
            Fill: =RGBA(0, 120, 212, 1)
            FocusedBorderThickness: =2
            Font: =Font.'Segoe UI'
            HoverBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -10%)
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =ColorFade(RGBA(0, 120, 212, 1), -10%)
            OnTimerStart: |-
                =If(createRepoLoop,
                    // Get repos
                    ClearCollect(colProjectRepos, CustomAzureDevOps.GetGitRepos(ddOrganization.Selected.AccountName, newProjectName, { 'api-version': "6.0"}).value);
                    If(Not(IsBlank(LookUp(colProjectRepos, name = newPipelineTemplateRepository).id)),
                        UpdateContext({createRepoLoop: false});
                    
                        UpdateContext({newProjectId: LookUp(colProjects, name = newProjectName).id});
                
                        If(newProjectRepoSetPermissions,
                            // Get build service identity
                            ClearCollect(
                                projectBuildServiceAccount,
                                CustomAzureDevOps.GetIdentities(
                                    ddOrganization.Selected.AccountName,
                                    {
                                        'api-version': "7.1-preview.1",
                                        searchFilter: "General",
                                        filterValue: Concatenate(
                                            newProjectName,
                                            " Build Service (",
                                            ddOrganization.Selected.AccountName,
                                            ")"
                                        )
                                    }
                                ).value
                            );
                            
                            // Set Permissions
                            CustomAzureDevOps.SetPermissions(
                                ddOrganization.Selected.AccountName,
                                "2e9eb7ed-3c0a-47d4-87c1-0ffdd275fd87",
                                {
                                    'api-version': "6.0",
                                    token: "repoV2/" & newProjectId & "/" & LookUp(
                                        colProjectRepos,
                                        name = newPipelineTemplateRepository
                                    ).id,
                                    merge: true,
                                    accessControlEntries: {
                                        descriptor: First(projectBuildServiceAccount).descriptor,
                                        allow: 16404,
                                        deny: 0
                                    }
                                }
                            );
                
                            // Get build service identity
                            ClearCollect(
                                projectBuildServiceAccount,
                                CustomAzureDevOps.GetIdentities(
                                    ddOrganization.Selected.AccountName,
                                    {
                                        'api-version': "7.1-preview.1",
                                        searchFilter: "General",
                                        filterValue: Concatenate(
                                            "Project Collection Build Service (",
                                            ddOrganization.Selected.AccountName,
                                            ")"
                                        )
                                    }
                                ).value
                            );
                            
                
                
                
                            // Set Permissions
                            CustomAzureDevOps.SetPermissions(
                                ddOrganization.Selected.AccountName,
                                "2e9eb7ed-3c0a-47d4-87c1-0ffdd275fd87",
                                {
                                    'api-version': "6.0",
                                    token: "repoV2/" & newProjectId & "/" & LookUp(
                                        colProjectRepos,
                                        name = newPipelineTemplateRepository
                                    ).id,
                                    merge: true,
                                    accessControlEntries: {
                                        descriptor: First(projectBuildServiceAccount).descriptor,
                                        allow: 16404,
                                        deny: 0
                                    }
                                }
                            );
                        );    
                            
                        If(newProjectInstallTemplates,
                
                            UpdateContext({fileContent: GetGithubFileContent.Run(newPipelineTemplateVersion).filecontent});
                
                            CustomAzureDevOps.CreateFile(
                                ddOrganization.Selected.AccountName,
                                LookUp(colProjectRepos, name = newPipelineTemplateRepository).id,
                                {
                                    'api-version': "7.0",
                                    refUpdates: Table(
                                        {
                                            name: "refs/heads/main",
                                            oldObjectId: "0000000000000000000000000000000000000000"
                                        }
                                    ),
                                    commits: Table(
                                        {
                                            comment: "Initial commit.",
                                            changes: {
                                                changeType: "add",
                                                item: {path: "Pipelines/sync-pipeline-repo.yml"},
                                                newContent: {
                                                    content: fileContent,
                                                    contentType: "base64Encoded"
                                                }
                                            }
                                        }
                                    )
                                }
                            );
                
                            ClearCollect(colProjectPipelines, CustomAzureDevOps.GetPipelines(ddOrganization.Selected.AccountName, $"{currentProject.name}", {'api-version': "6.0"}).value);
                            If(IsBlank(LookUp(colProjectPipelines, name = "sync-pipeline-repo")),
                                // create new sync pipeline
                                UpdateContext({syncPipeline: CustomAzureDevOps.CreatePipeline(ddOrganization.Selected.AccountName, newProjectName, {
                                    'api-version': "6.0",
                                    folder: "ALM Accelerator Templates",
                                    name: "sync-pipeline-repo",
                                    configuration: {
                                        type: "yaml",
                                        path: "/Pipelines/sync-pipeline-repo.yml",
                                        repository: {
                                            id: LookUp(colProjectRepos, name = newPipelineTemplateRepository).id,
                                            name: newPipelineTemplateRepository,
                                            type: "azureReposGit"
                                        }
                                    }
                                }).id});
                            ,
                              UpdateContext({syncPipeline: LookUp(colProjectPipelines, name = "sync-pipeline-repo").id});
                                  
                            );
                                
                            UpdateContext({syncPipelineRun: CustomAzureDevOps.RunSyncPipeline(ddOrganization.Selected.AccountName, newProjectName, syncPipeline, {
                                    'api-version': "6.0",
                                    definition: {
                                        id: syncPipeline
                                    },
                                    templateParameters: {
                                        BranchToCreate: "initialSync",
                                        TargetBranch: "main",
                                        SyncFrom: "Tag",
                                        SourceBranchOrTag: newPipelineTemplateVersion,
                                        AutoCompletePR: true,
                                        deleteSourceBranch: true
                                    }
                            })}); 
                            // removed - it requires that custom connector is preinstalled in order to install the ALM Acc. solution. Need to find a solution for this
                            //GetPipelineRunResult.Run(currentOrganization.AccountName, newProjectName, syncPipelineRun.pipeline.id, syncPipelineRun.id, User().Email);
                        ,
                            //init new repo
                            CustomAzureDevOps.CreateFile(
                                ddOrganization.Selected.AccountName,
                                LookUp(colProjectRepos, name = newPipelineTemplateRepository).id,
                                {
                                    'api-version': "7.0",
                                    refUpdates: Table(
                                        {
                                            name: "refs/heads/main",
                                            oldObjectId: "0000000000000000000000000000000000000000"
                                        }
                                    ),
                                    commits: Table(
                                        {
                                            comment: "Initialize repo.",
                                            changes: {
                                                changeType: "add",
                                                item: {path: "init.md"},
                                                newContent: {
                                                    content: "repo initialized",
                                                    contentType: "rawtext"
                                                }
                                            }
                                        }
                                    )
                                }
                            );
                        );
                        UpdateContext({
                            showNewProjectPanel: false,
                            showCreateProjectSpinner: false
                        });
                    );
                
                    Reset(txtRepositoryName);
                    Reset(txtProjectName_2);
                    Reset(ddReleaseTags);
                    Reset(chkInstallPipelines);
                    Reset(chkSetPermissions);
                );
            PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =ColorFade(RGBA(0, 120, 212, 1), -30%)
            Repeat: =createRepoLoop
            Size: =10.5
            Start: =createRepoLoop
            Visible: =false
            X: =540
            ZIndex: =33

        icoUpdateReleaseTagsNewRepo As icon.Reload:
            BorderColor: =RGBA(0, 0, 0, 0)
            Color: =RGBA(0, 120, 212, 1)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(220, 220, 220, 1)
            DisabledFill: =RGBA(0, 0, 0, 0)
            Height: =32
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
            HoverFill: =RGBA(0, 0, 0, 0)
            Icon: =Icon.Reload
            OnSelect: |-
                =IfError(UpdateReleaseHistoryInstant.Run(),
                    Notify("Error refreshing release tags")
                    ,
                    ClearCollect(colReleaseTags, 'Release Histories')
                );
            PaddingBottom: =3
            PaddingLeft: =3
            PaddingRight: =3
            PaddingTop: =3
            PressedBorderColor: =RGBA(0, 0, 0, 0)
            PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
            PressedFill: =RGBA(0, 0, 0, 0)
            Visible: =showNewRepositoryPanel
            Width: =26
            X: =ddReleaseTags.X + ddReleaseTags.Width + 5
            Y: =ddReleaseTags.Y
            ZIndex: =60

    "TextBox1 As 'Text box'":
        DisplayMode: =DisplayMode.Edit
        Height: =32
        Value: =currentProject.id
        Visible: =false
        Width: =320
        X: =733
        Y: =39
        ZIndex: =80

    grpAddTeamMembers As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =88

        pnlAddTeamMember As Panel:
            Buttons: |-
                =Table({Label: "Cancel", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Standard } ,{Label: "Add", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Primary})
            Fill: =pnlAddTeamMember.OverlayColor
            OnButtonSelect: |-
                =Switch(Self.SelectedButton.Label,
                    "Add",
                    Collect(colUsersToAdd, {});
                    ForAll(ddUsersToAdd.SelectedItems,
                        Collect(colUsersToAdd, First(CustomAzureDevOps.GetIdentities(currentOrganization.AccountName, {'api-version': "6.0", searchFilter: "General", filterValue: ThisRecord.mailAddress}).value));
                    CustomAzureDevOps.AddMemberToGroup(currentOrganization.AccountName, currentProject.defaultTeam.id, Last(colUsersToAdd).id, {'api-version': "6.0"});
                    );
                    // Get Team Members (Project Default Team)
                    ClearCollect(colProjectTeamMembers, CustomAzureDevOps.GetProjectTeamMembers(ddOrganization.Selected.AccountName, currentProject.name, currentProject.defaultTeam.id, {'api-version': "6.0"}).value);
                    Clear(colProjectTeamMemberIdentities);
                    ForAll(colProjectTeamMembers,
                        Collect(colProjectTeamMemberIdentities, { id: identity.id, displayName: identity.displayName, email: identity.uniqueName, isAdmin: If(isTeamAdmin, "Yes", "") });
                    );
                    UpdateContext({showAddTeamMemberPanel: false});
                    ,
                    "Cancel",
                    UpdateContext({showAddTeamMemberPanel:false})
                );
                
                 //ForAll(ddUsersToAdd.SelectedItems, CustomAzureDevOps.AddMemberToGroup(currentOrganization.AccountName, currentProject.defaultTeam.id, CustomAzureDevOps.GetIdentities(currentOrganization.AccountName, {'api-version': "6.0", searchFilter: "General", ThisRecord.principalName})));
            OnCloseSelect: |-
                =UpdateContext({showAddTeamMemberPanel:false})
            Subtitle: ="Add a user to the default Project Team"
            Title: ="Add Project Team Member"
            Visible: =showAddTeamMemberPanel
            Width: =App.Width
            ZIndex: =52

        lblUsersToAdd As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            Size: =10.5
            Text: ="Select User to add"
            Visible: =showAddTeamMemberPanel
            Width: =pnlAddTeamMember.DialogWidth - 40
            X: =Parent.Width - pnlAddTeamMember.DialogWidth + 20
            Y: =128
            ZIndex: =53

        "ddUsersToAdd As 'Combo box'.pcfdataset":
            AccessibleLabel: ="Align"
            AllowMultiSelect: =true
            AllowSearching: =true
            DefaultSelectedItems: |-
                =Table({Name:"None"})
            DisplayMode: =DisplayMode.Edit
            Height: =32
            Items: =Sort(Filter(colAdoUsers, Not(displayName in Concat(colProjectTeamMemberIdentities, displayName, ", "))), displayName)
            OnChange: =false
            Text: =""
            Visible: =showAddTeamMemberPanel
            Width: =plnNewRepository.DialogWidth - 40
            X: =Parent.Width - pnlAddTeamMember.DialogWidth + 20
            Y: =162
            ZIndex: =54

            mailAddress1 As pcfDataField.textualColumn:
                FieldDisplayName: ="mailAddress"
                FieldName: ="mailAddress"
                FieldType: ="s"
                FieldVariantName: ="textualColumn"
                Order: =2
                ZIndex: =41

            displayName2 As pcfDataField.textualColumn:
                FieldDisplayName: ="displayName"
                FieldName: ="displayName"
                FieldType: ="s"
                FieldVariantName: ="textualColumn"
                Order: =2
                ZIndex: =42

    grpInfoDialog As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =88

        dlgInfoDialog As Dialog:
            Buttons: |-
                =Table({Label: "Ok", ButtonType:'Microsoft.CoreControls.Button.ButtonType'.Primary})
            DialogHeight: =lblInfoText.Height + 160
            Fill: =dlgInfoDialog.OverlayColor
            Height: =Parent.Height
            OnButtonSelect: |-
                =UpdateContext({showInfoDialog: false})
            OnCloseSelect: |-
                =UpdateContext({showInfoDialog: false});
            SubTitle: =""
            Title: =infoTitle
            Visible: =showInfoDialog
            Width: =Parent.Width
            ZIndex: =55

        lblInfoText As Label:
            AutoHeight: =true
            DisplayMode: =DisplayMode.Edit
            Height: =infoTextHeight
            Text: |-
                =Substitute(Substitute(infoText, "\t", "    "), "\n", "
                ")
            VerticalAlignment: =VerticalAlign.Top
            Visible: =showInfoDialog
            Width: =dlgInfoDialog.ContentWidth - 40
            X: =dlgInfoDialog.ContentX + 20
            Y: =dlgInfoDialog.ContentY + 20
            ZIndex: =56

