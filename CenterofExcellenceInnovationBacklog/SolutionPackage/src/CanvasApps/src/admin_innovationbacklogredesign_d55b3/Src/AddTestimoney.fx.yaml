AddTestimoney As screen:
    Height: =Max(App.Height, App.DesignHeight)
    OnVisible: |-
        =//testimony specific
        Clear(ThisTestimoneyMeasures);
        UpdateContext({ConfigureThisMeasure: Blank()});
        UpdateContext({ThisSolution: If(IsBlank(SolnForFeedbackGUID), Blank(), LookUp('Backlog Item Solutions', 'Backlog Item Solution'=SolnForFeedbackGUID))});
        UpdateContext({ThisTestimony: If(IsBlank(OurTestimony), Blank(), 
                       LookUp('Backlog Item Testimonials', 'Backlog Item Testimonial'=OurTestimony.'Backlog Item Testimonial'))});
        ClearCollect(ThisTestimoneyMeasures, Filter(ActualizedMeasures, BenefitType=BenefitTypeOptions.Actual && BacklogTestimony.'Backlog Item Testimonial' = ThisTestimony.'Backlog Item Testimonial'));
        
        //filter ux
        ClearCollect(TeamList, Distinct(Filter(AllWorkItems, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID).'Impacted Team', 'Impacted Team'));
        //UpdateContext({TeamsDefaultFilter: Filter(TeamList, Result="XLO")});
        UpdateContext({TeamsDefaultFilter: TeamList});
        Reset(TeamFilter);
        
        //starter list with "Other"
        ClearCollect(TeamListWithOther, Distinct(Filter(AllWorkItems, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID).'Impacted Team', 'Impacted Team'));
        Collect(TeamListWithOther, "Other");
        UpdateIf(TeamListWithOther, Value<>"Other",{Value: Result});
        
        //dialogs
        UpdateContext({ShowFilterDialog: false});
        UpdateContext({ShowNewMeasureDialog: false});
        UpdateContext({NewMeasureType: MeasureTypeOptions.Money});
        UpdateContext({NewMeasureTypeText: "money"});
        Set(SentFromAddMeasure, false);
        Select(hiddenResetAll_Testimoney);
        Reset(NoTestimony_TeamNameInput_Testimoney);
        Reset(NoTestimony_PickTeam);
        Reset(NoTestimony_TestimonyInput);
        
        //measure list
        If(CountRows(ThisTestimoneyMeasures)<1, UpdateContext({ExpandTime: true}), UpdateContext({ExpandTime: false}));
        If(CountRows(ThisTestimoneyMeasures)<1, UpdateContext({ExpandMoney: true}), UpdateContext({ExpandMoney: false}));
        If(CountRows(ThisTestimoneyMeasures)<1, UpdateContext({ExpandNumber: true}), UpdateContext({ExpandNumber: false}));
        If(CountRows(ThisTestimoneyMeasures)<1, UpdateContext({ExpandText: true}), UpdateContext({ExpandText: false}));
        
        //time configuration tools
        UpdateContext({varTimeUnitIsMinutes: true});
        UpdateContext({varWageUnitIsHourly: true});
        UpdateContext({varIsPPP: true});
        
        //forCalculation
        UpdateContext({WeeksPerMonth: 4.3452381});
        UpdateContext({varTime: 1});
        UpdateContext({varUses: 1});
        UpdateContext({varPeople: 1});
        UpdateContext({varWage: 0});
        UpdateContext({varTimeUnit: "Minutes"});
        UpdateContext({varWageUnit: "Hourly Wage"});
        UpdateContext({varPPP: "Use"});
        UpdateContext({alsoMeasureMoney: Blank()});
        UpdateContext({calcHoursPerMonth: RoundUp(varTime * varPeople * If(varTimeUnit="Minutes", 1/60, 1) * If(varPPP="Use", varUses, 1) * WeeksPerMonth, 1)});
        UpdateContext({calcWagePerMonth: If(varWageUnit="Hourly Wage", calcHoursPerMonth*varWage, calcHoursPerMonth*(varWage/40/52))});
    Width: =Max(App.Width, App.DesignWidth)

    hiddenResetAll_Testimoney As button:
        Height: =0
        OnSelect: |-
            =//main measure
            UpdateContext({ConfigureThisMeasure: MyMeasuresList_Testimoney.Selected});
            //if time money, fetch the time component
            If(!IsBlank(ConfigureThisMeasure.TimeMoneyToTimeGUID), UpdateContext({ConfigureThisMeasure: LookUp(ActualizedMeasures, MeasureGUID=ConfigureThisMeasure.TimeMoneyToTimeGUID)}));
            //time configuration tools
            UpdateContext({theAlsoMoneyMeasure: LookUp(ActualizedMeasures, TimeMoneyToTimeGUID=ConfigureThisMeasure.admin_backlogitemmeasuresetid)});
            
            //all group
            Reset(MeasureNameInput_Testimoney);
            Reset(MeasureDescriptionInput_Testimoney);
            Reset(MeasureParticipantInput_Testimoney);
            
            //sometimes group
            Reset(MeasureSaveAmountInput_Testimoney);
            Reset(MeasureSaveWhatInput_Testimoney);
            
            //time group
            Reset(MeasureTimePeopleInput_Testimoney);
            Reset(TrackFinanancioal_Testimoney);
            Reset(MeasureTimeWageInput_Testimoney);
            Reset(WagePerHour_Testimoney);
            Reset(WagePerYear_Testimoney);
            Reset(MeasureTimeSpentInput_Testimoney);
            Reset(MeasureTimeInMinutes_Testimoney);
            Reset(MeasureTimeInHours_Testimoney);
            Reset(MeasureActionRatePerUse_Testimoney);
            Reset(MeasureActionRatePerWeek_Testimoney);
            Reset(TimesPerWeekInput_Testimoney);
            
            //no group
            Reset(NoTestimony_TestimonyInput);
            Reset(NoTestimony_PickTeam);
            Reset(NoTestimony_TeamNameInput_Testimoney);
        Text: ="Button"
        Visible: =false
        Width: =0
        ZIndex: =1

    NoMeasuresGroup_Testimoney As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =43

        NoMeasuresIcon_Testimoney As image:
            Height: =If(CountRows(MyMeasures)<=0, 100, 0)
            Image: =Idea
            Visible: =CountRows(ThisTestimoneyMeasures)<=0 && !IsBlank(ThisTestimony)
            X: =802
            Y: =270
            ZIndex: =11

        NoMeasuresLabel_Testimoney As label:
            Align: =Center
            Color: =RGBA(51,51,51, 1)
            FontWeight: =Semibold
            Height: =If(CountRows(MyMeasures)<=0, 83, 0)
            Size: =17
            Text: |-
                ="Add measures to show improvements 
                from this solution"
            Visible: =CountRows(ThisTestimoneyMeasures)<=0 && !IsBlank(ThisTestimony)
            Width: =509
            X: =597
            Y: =406
            ZIndex: =12

    SuggestedMeasuresGroup_Testimoney As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =59

        TextMeasuresNone_Testimoney As label:
            FontWeight: =Lighter
            Height: =30
            Size: =12
            Text: ="No measures suggested"
            Visible: =If(ExpandText && CountRows(Filter(AllMeasures, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID &&  BacklogItem.'Impacted Team' in TeamFilter.SelectedItems.Result && BenefitType=BenefitTypeOptions.Potential && MeasureType=MeasureTypeOptions.Text))=0 && !IsBlank(ThisTestimony), true, false)
            Width: =If(Self.Visible, 200, 0)
            X: =TextMeasuresLabel_Testimoney.X+50
            Y: =TextMeasures_Testimoney.Y
            ZIndex: =43

        TextMeasures_Testimoney As gallery.galleryVertical:
            Height: |-
                =If(ExpandText,
                Max(CountRows(Filter(AllMeasures, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID && BacklogItem.'Impacted Team' in TeamFilter.SelectedItems.Result && BenefitType=BenefitTypeOptions.Potential && MeasureType=MeasureTypeOptions.Text))*(50),40),
                0)
            Items: =Filter(AllMeasures, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID && BacklogItem.'Impacted Team' in TeamFilter.SelectedItems.Result && BenefitType=BenefitTypeOptions.Potential && MeasureType=MeasureTypeOptions.Text)
            Layout: =Layout.Vertical
            OnSelect: |-
                =UpdateContext({ShowFilterDialog: false});
                
                //add the measure to backend
                UpdateContext({ConfigureThisMeasure: Patch('Backlog Item MeasureSets', Defaults('Backlog Item MeasureSets'), {Name: ThisItem.Name & " (was " & ThisItem.SubjectiveSavings & ")", BacklogItem: Blank(), BacklogIdea: OurIdea, BenefitType: BenefitTypeOptions.Actual, IdeaStatus: OurIdea.IdeaStatus, BacklogSoln: ThisSolution, BacklogTestimony: ThisTestimony,
                  MeasureType: ThisItem.MeasureType, Notes:ThisItem.Notes, Beneficiary: ThisItem.Beneficiary, BeneficiarySearch: ThisItem.BeneficiarySearch})});
                
                //re-fetch measures
                ClearCollect(ActualizedMeasures, AddColumns(
                         Filter('Backlog Item MeasureSets', BenefitType=BenefitTypeOptions.'597910001' && IdeaStatus in StateFilterDefaultColl),
                         "MeasureGUID", 'Backlog Item MeasureSet',
                         "BacklogItemGUID", BacklogItem.'Innovation Backlog Workitem',
                         "TimeMoneyToTimeGUID", TimeMoneyToTime.'Backlog Item MeasureSet',
                         "MeasureTypeText", If(MeasureType=MeasureTypeOptions.'597910000', "Time", If(MeasureType=MeasureTypeOptions.'597910001', "Money", 
                              If(MeasureType=MeasureTypeOptions.'597910002', "Num", If(MeasureType=MeasureTypeOptions.'597910003', "Text", "Error"))))));
                
                ClearCollect(ThisTestimoneyMeasures, Filter(ActualizedMeasures, BenefitType=BenefitTypeOptions.Actual && BacklogTestimony.'Backlog Item Testimonial' = ThisTestimony.'Backlog Item Testimonial'));
                
                Select(hiddenResetAll_Testimoney);
            TemplateSize: =40
            Visible: =!IsBlank(ThisTestimony)
            Width: =343
            X: =TextMeasuresLabel_Testimoney.X
            Y: =TextMeasuresLabel_Testimoney.Y+TextMeasuresLabel_Testimoney.Height
            ZIndex: =44

            AddThisMeasureIconBG_7 As circle:
                Fill: =RGBA(0, 120, 212, 1)
                Height: =AddThisMeasureIcon_7.Height
                OnSelect: =Select(Parent)
                Width: =AddThisMeasureIcon_7.Width
                X: =AddThisMeasureIcon_7.X
                Y: =AddThisMeasureIcon_7.Y
                ZIndex: =1

            AddThisMeasureIcon_7 As icon.Add:
                Color: =RGBA(255, 255, 255, 1)
                Height: =Self.Width
                Icon: =Icon.Add
                OnSelect: =Select(Parent)
                PaddingBottom: =2
                PaddingLeft: =2
                PaddingRight: =2
                PaddingTop: =2
                Width: =20
                X: =5
                Y: =5
                ZIndex: =2

            AddThisMeasureLabel_7 As label:
                Height: =30
                OnSelect: =Select(Parent)
                Text: =ThisItem.Name
                Tooltip: =ThisItem.Name
                Width: =295
                Wrap: =false
                X: =30
                ZIndex: =3

        TextMeasureExpand_Testimoney As icon.Hamburger:
            Color: =RGBA(0, 120, 212, 1)
            Height: =Self.Width
            Icon: =If(ExpandText, Icon.ChevronDown, Icon.ChevronUp)
            OnSelect: |-
                =UpdateContext({ShowFilterDialog: false});
                UpdateContext({ExpandText: !ExpandText});
            Visible: =!IsBlank(ThisTestimony)
            Width: =20
            X: =TimeMeasureExpand_Testimoney.X
            Y: =TextMeasuresLabel_Testimoney.Y+10
            ZIndex: =45

        TextMeasuresLabel_Testimoney As label:
            OnSelect: |-
                =UpdateContext({ShowFilterDialog: false});
                UpdateContext({ExpandText: !ExpandText});
            Text: ="Subjective"
            Visible: =!IsBlank(ThisTestimony)
            Width: =300 
            X: =TimeMeasuresLabel_Testimoney.X
            Y: =NumericMeasures_Testimoney.Y+NumericMeasures_Testimoney.Height
            ZIndex: =46

        NumericMeasuresNone_Testimoney As label:
            FontWeight: =Lighter
            Height: =30
            Size: =12
            Text: ="No measures suggested"
            Visible: =If(ExpandNumber && CountRows(Filter(AllMeasures, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID &&  BacklogItem.'Impacted Team' in TeamFilter.SelectedItems.Result && BenefitType=BenefitTypeOptions.Potential && MeasureType=MeasureTypeOptions.Numeric))=0 && !IsBlank(ThisTestimony), true, false)
            Width: =If(Self.Visible, 200, 0)
            X: =NumericMeasuresLabel_Testimoney.X+50
            Y: =NumericMeasures_Testimoney.Y
            ZIndex: =47

        NumericMeasures_Testimoney As gallery.galleryVertical:
            Height: |-
                =If(ExpandNumber,
                Max(CountRows(Filter(AllMeasures, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID && BacklogItem.'Impacted Team' in TeamFilter.SelectedItems.Result && BenefitType=BenefitTypeOptions.Potential && MeasureType=MeasureTypeOptions.Numeric))*(50),40),
                0)
            Items: =Filter(AllMeasures, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID && BacklogItem.'Impacted Team' in TeamFilter.SelectedItems.Result && BenefitType=BenefitTypeOptions.Potential && MeasureType=MeasureTypeOptions.Numeric)
            Layout: =Layout.Vertical
            OnSelect: |-
                =UpdateContext({ShowFilterDialog: false});
                
                //add the measure to backend
                UpdateContext({ConfigureThisMeasure: Patch('Backlog Item MeasureSets', Defaults('Backlog Item MeasureSets'), {Name: "Savings for " & ThisItem.Name, BacklogItem: Blank(), BacklogIdea: OurIdea, BenefitType: BenefitTypeOptions.Actual, IdeaStatus: OurIdea.IdeaStatus, BacklogSoln: ThisSolution, BacklogTestimony: ThisTestimony,
                  MeasureType: ThisItem.MeasureType, Notes:ThisItem.Notes, Beneficiary: ThisItem.Beneficiary, BeneficiarySearch: ThisItem.BeneficiarySearch, 
                  NumericSavings: ThisItem.NumericSavings, NumberOfWhat: ThisItem.NumberOfWhat})});
                
                //re-fetch measures
                ClearCollect(ActualizedMeasures, AddColumns(
                         Filter('Backlog Item MeasureSets', BenefitType=BenefitTypeOptions.'597910001' && IdeaStatus in StateFilterDefaultColl),
                         "MeasureGUID", 'Backlog Item MeasureSet',
                         "BacklogItemGUID", BacklogItem.'Innovation Backlog Workitem',
                         "TimeMoneyToTimeGUID", TimeMoneyToTime.'Backlog Item MeasureSet',
                         "MeasureTypeText", If(MeasureType=MeasureTypeOptions.'597910000', "Time", If(MeasureType=MeasureTypeOptions.'597910001', "Money", 
                              If(MeasureType=MeasureTypeOptions.'597910002', "Num", If(MeasureType=MeasureTypeOptions.'597910003', "Text", "Error"))))));
                
                ClearCollect(ThisTestimoneyMeasures, Filter(ActualizedMeasures, BenefitType=BenefitTypeOptions.Actual && BacklogTestimony.'Backlog Item Testimonial' = ThisTestimony.'Backlog Item Testimonial'));
                
                Select(hiddenResetAll_Testimoney);
            TemplateSize: =40
            Visible: =!IsBlank(ThisTestimony)
            Width: =343
            X: =NumericMeasuresLabel_Testimoney.X
            Y: =NumericMeasuresLabel_Testimoney.Y+NumericMeasuresLabel_Testimoney.Height
            ZIndex: =49

            AddThisMeasureIconBG_6 As circle:
                Fill: =RGBA(0, 120, 212, 1)
                Height: =AddThisMeasureIcon_6.Height
                OnSelect: =Select(Parent)
                Width: =AddThisMeasureIcon_6.Width
                X: =AddThisMeasureIcon_6.X
                Y: =AddThisMeasureIcon_6.Y
                ZIndex: =1

            AddThisMeasureIcon_6 As icon.Add:
                Color: =RGBA(255, 255, 255, 1)
                Height: =Self.Width
                Icon: =Icon.Add
                OnSelect: =Select(Parent)
                PaddingBottom: =2
                PaddingLeft: =2
                PaddingRight: =2
                PaddingTop: =2
                Width: =20
                X: =5
                Y: =5
                ZIndex: =2

            AddThisMeasureLabel_6 As label:
                Height: =30
                OnSelect: =Select(Parent)
                Text: =ThisItem.Name
                Tooltip: =ThisItem.Name
                Width: =295
                Wrap: =false
                X: =30
                ZIndex: =3

        NumericMeasureExpand_Testimoney As icon.Hamburger:
            Color: =RGBA(0, 120, 212, 1)
            Height: =Self.Width
            Icon: =If(ExpandNumber,Icon.ChevronDown, Icon.ChevronUp)
            OnSelect: |-
                =UpdateContext({ShowFilterDialog: false});
                UpdateContext({ExpandNumber: !ExpandNumber});
            Visible: =!IsBlank(ThisTestimony)
            Width: =20
            X: =TimeMeasureExpand_Testimoney.X
            Y: =NumericMeasuresLabel_Testimoney.Y+10
            ZIndex: =50

        NumericMeasuresLabel_Testimoney As label:
            OnSelect: |-
                =UpdateContext({ShowFilterDialog: false});
                UpdateContext({ExpandNumber: !ExpandNumber});
            Text: ="Numeric"
            Visible: =!IsBlank(ThisTestimony)
            Width: =300 
            X: =TimeMeasuresLabel_Testimoney.X
            Y: =MoneyMeasures_Testimoney.Y+MoneyMeasures_Testimoney.Height
            ZIndex: =51

        MoneyMeasuresNone_Testimoney As label:
            FontWeight: =Lighter
            Height: =30
            Size: =12
            Text: ="No measures suggested"
            Visible: =If(ExpandMoney && CountRows(Filter(AllMeasures, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID && BacklogItem.'Impacted Team' in TeamFilter.SelectedItems.Result && BenefitType=BenefitTypeOptions.Potential && MeasureType=MeasureTypeOptions.Money && IsBlank(TimeMoneyToTime)))=0 && !IsBlank(ThisTestimony), true, false)
            Width: =If(Self.Visible, 200, 0)
            X: =MoneyMeasuresLabel_Testimoney.X+50
            Y: =MoneyMeasures_Testimoney.Y
            ZIndex: =52

        MoneyMeasures_Testimoney As gallery.galleryVertical:
            Height: |-
                =If(ExpandMoney,
                Max(CountRows(Filter(AllMeasures, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID && BacklogItem.'Impacted Team' in TeamFilter.SelectedItems.Result && BenefitType=BenefitTypeOptions.Potential && MeasureType=MeasureTypeOptions.Money && IsBlank(TimeMoneyToTime)))*(50),40),
                0)
            Items: =Filter(AllMeasures, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID && BacklogItem.'Impacted Team' in TeamFilter.SelectedItems.Result && BenefitType=BenefitTypeOptions.Potential && MeasureType=MeasureTypeOptions.Money && IsBlank(TimeMoneyToTime))
            Layout: =Layout.Vertical
            OnSelect: |-
                =UpdateContext({ShowFilterDialog: false});
                
                //add the measure to backend
                UpdateContext({ConfigureThisMeasure: Patch('Backlog Item MeasureSets', Defaults('Backlog Item MeasureSets'), {Name: "Savings for " & ThisItem.Name, BacklogItem: Blank(), BacklogIdea: OurIdea, BenefitType: BenefitTypeOptions.Actual, IdeaStatus: OurIdea.IdeaStatus, BacklogSoln: ThisSolution, BacklogTestimony: ThisTestimony,
                  MeasureType: ThisItem.MeasureType, Notes:ThisItem.Notes, Beneficiary: ThisItem.Beneficiary, BeneficiarySearch: ThisItem.BeneficiarySearch, 
                  MoneySavings: ThisItem.MoneySavings})});
                
                //re-fetch measures
                ClearCollect(ActualizedMeasures, AddColumns(
                         Filter('Backlog Item MeasureSets', BenefitType=BenefitTypeOptions.'597910001' && IdeaStatus in StateFilterDefaultColl),
                         "MeasureGUID", 'Backlog Item MeasureSet',
                         "BacklogItemGUID", BacklogItem.'Innovation Backlog Workitem',
                         "TimeMoneyToTimeGUID", TimeMoneyToTime.'Backlog Item MeasureSet',
                         "MeasureTypeText", If(MeasureType=MeasureTypeOptions.'597910000', "Time", If(MeasureType=MeasureTypeOptions.'597910001', "Money", 
                              If(MeasureType=MeasureTypeOptions.'597910002', "Num", If(MeasureType=MeasureTypeOptions.'597910003', "Text", "Error"))))));
                
                ClearCollect(ThisTestimoneyMeasures, Filter(ActualizedMeasures, BenefitType=BenefitTypeOptions.Actual && BacklogTestimony.'Backlog Item Testimonial' = ThisTestimony.'Backlog Item Testimonial'));
                
                Select(hiddenResetAll_Testimoney);
            TemplateSize: =40
            Visible: =!IsBlank(ThisTestimony)
            Width: =343
            X: =MoneyMeasuresLabel_Testimoney.X
            Y: =MoneyMeasuresLabel_Testimoney.Y+MoneyMeasuresLabel_Testimoney.Height
            ZIndex: =53

            AddThisMeasureIconBG_5 As circle:
                Fill: =RGBA(0, 120, 212, 1)
                Height: =AddThisMeasureIcon_5.Height
                OnSelect: =Select(Parent)
                Width: =AddThisMeasureIcon_5.Width
                X: =AddThisMeasureIcon_5.X
                Y: =AddThisMeasureIcon_5.Y
                ZIndex: =1

            AddThisMeasureIcon_5 As icon.Add:
                Color: =RGBA(255, 255, 255, 1)
                Height: =Self.Width
                Icon: =Icon.Add
                OnSelect: =Select(Parent)
                PaddingBottom: =2
                PaddingLeft: =2
                PaddingRight: =2
                PaddingTop: =2
                Width: =20
                X: =5
                Y: =5
                ZIndex: =2

            AddThisMeasureLabel_5 As label:
                Height: =30
                OnSelect: =Select(Parent)
                Text: =ThisItem.Name
                Tooltip: =ThisItem.Name
                Width: =295
                Wrap: =false
                X: =30
                ZIndex: =3

        MoneyMeasureExpand_Testimoney As icon.Hamburger:
            Color: =RGBA(0, 120, 212, 1)
            Height: =Self.Width
            Icon: =If(ExpandMoney,Icon.ChevronDown, Icon.ChevronUp)
            OnSelect: |-
                =UpdateContext({ShowFilterDialog: false});
                UpdateContext({ExpandMoney: !ExpandMoney});
            Visible: =!IsBlank(ThisTestimony)
            Width: =20
            X: =TimeMeasureExpand_Testimoney.X
            Y: =MoneyMeasuresLabel_Testimoney.Y+10
            ZIndex: =54

        MoneyMeasuresLabel_Testimoney As label:
            OnSelect: |-
                =UpdateContext({ShowFilterDialog: false});
                UpdateContext({ExpandMoney: !ExpandMoney});
            Text: ="Money"
            Visible: =!IsBlank(ThisTestimony)
            Width: =300
            X: =TimeMeasuresLabel_Testimoney.X
            Y: =TimeMeasures_Testimoney.Y+TimeMeasures_Testimoney.Height
            ZIndex: =55

        TimeMeasuresNone_Testimoney As label:
            FontWeight: =Lighter
            Height: =30
            Size: =12
            Text: ="No measures suggested"
            Visible: =If(ExpandTime && CountRows(Filter(AllMeasures, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID && BacklogItem.'Impacted Team' in TeamFilter.SelectedItems.Result && BenefitType=BenefitTypeOptions.Potential && MeasureType=MeasureTypeOptions.Time))=0  && !IsBlank(ThisTestimony), true, false)
            Width: =If(Self.Visible, 200, 0)
            X: =TimeMeasuresLabel_Testimoney.X+50
            Y: =TimeMeasures_Testimoney.Y
            ZIndex: =56

        TimeMeasures_Testimoney As gallery.galleryVertical:
            Height: |-
                =If(ExpandTime,
                Max(CountRows(Filter(AllMeasures, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID && BacklogItem.'Impacted Team' in TeamFilter.SelectedItems.Result && BenefitType=BenefitTypeOptions.Potential && MeasureType=MeasureTypeOptions.Time))*(50), 40),
                0)
            Items: =Filter(AllMeasures, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID && BacklogItem.'Impacted Team' in TeamFilter.SelectedItems.Result && BenefitType=BenefitTypeOptions.Potential && MeasureType=MeasureTypeOptions.Time)
            Layout: =Layout.Vertical
            OnSelect: |-
                =UpdateContext({ShowFilterDialog: false});
                
                //add the measure to backend
                UpdateContext({ConfigureThisMeasure: Patch('Backlog Item MeasureSets', Defaults('Backlog Item MeasureSets'), {Name: "Savings for " & ThisItem.Name, BacklogItem: Blank(), BacklogIdea: OurIdea, BenefitType: BenefitTypeOptions.Actual, IdeaStatus: OurIdea.IdeaStatus, BacklogSoln: ThisSolution, BacklogTestimony: ThisTestimony,
                  MeasureType: ThisItem.MeasureType, Notes:ThisItem.Notes, Beneficiary: ThisItem.Beneficiary, BeneficiarySearch: ThisItem.BeneficiarySearch,
                  TimeSavings: ThisItem.TimeSavings, TimeMathIsPerMinute: ThisItem.TimeMathIsPerMinute, TimeMathIsPerUse: ThisItem.TimeMathIsPerUse, TimeMathNumPeople: ThisItem.TimeMathNumPeople,
                  TimeMathTimePerPerson: ThisItem.TimeMathTimePerPerson, TimeMathTimesPerWeek: ThisItem.TimeMathTimesPerWeek, TimeMathWage: ThisItem.TimeMathWage, 
                  TimeMathWageIsPerHour: ThisItem.TimeMathWageIsPerHour, AlsoMoney: ThisItem.AlsoMoney})});
                  
                //if also money, add it  
                If(ConfigureThisMeasure.AlsoMoney,
                    //get local vars for wage calc
                    UpdateContext({varTime: ConfigureThisMeasure.TimeMathTimePerPerson});
                    UpdateContext({varUses: ConfigureThisMeasure.TimeMathTimesPerWeek});
                    UpdateContext({varPeople: ConfigureThisMeasure.TimeMathNumPeople});
                    UpdateContext({varWage: ConfigureThisMeasure.TimeMathWage});
                    UpdateContext({varTimeUnitIsMinutes: If(ConfigureThisMeasure.TimeMathIsPerMinute = 'TimeMathIsPerMinute (Backlog Item MeasureSets)'.Yes, true, false)});
                    UpdateContext({varWageUnitIsHourly: If(ConfigureThisMeasure.TimeMathWageIsPerHour = 'TimeMathWageIsPerHour (Backlog Item MeasureSets)'.Yes, true, false)});
                    UpdateContext({varIsPPP: If(ConfigureThisMeasure.TimeMathIsPerUse = 'TimeMathIsPerUse (Backlog Item MeasureSets)'.Yes, true, false)});
                    UpdateContext({calcHoursPerMonth: RoundUp(varPeople * varTime * If(varTimeUnitIsMinutes, 1/60, 1) * If(varIsPPP, varUses, 1) * WeeksPerMonth, 1)});
                    UpdateContext({calcWagePerMonth: If(varWageUnitIsHourly, calcHoursPerMonth*varWage, calcHoursPerMonth*(varWage/40/52))});
                    //enter it
                    UpdateContext({theAlsoMoneyMeasure:  
                    Patch('Backlog Item MeasureSets', Defaults('Backlog Item MeasureSets'), 
                         {Name: "$: " & ConfigureThisMeasure.Name,
                          BacklogIdea: OurIdea,
                          IdeaStatus: OurIdea.IdeaStatus,
                          BacklogItem: Blank(),
                          BacklogSoln: ThisSolution,
                          BacklogTestimony: ThisTestimony,
                          BenefitType: BenefitTypeOptions.Actual,
                          Beneficiary: ConfigureThisMeasure.Beneficiary,
                          MeasureType: MeasureTypeOptions.Money,
                          MoneySavings: calcWagePerMonth,
                          TimeMoneyToTime: ConfigureThisMeasure})}););
                
                //re-fetch measures
                ClearCollect(ActualizedMeasures, AddColumns(
                         Filter('Backlog Item MeasureSets', BenefitType=BenefitTypeOptions.'597910001' && IdeaStatus in StateFilterDefaultColl),
                         "MeasureGUID", 'Backlog Item MeasureSet',
                         "BacklogItemGUID", BacklogItem.'Innovation Backlog Workitem',
                         "TimeMoneyToTimeGUID", TimeMoneyToTime.'Backlog Item MeasureSet',
                         "MeasureTypeText", If(MeasureType=MeasureTypeOptions.'597910000', "Time", If(MeasureType=MeasureTypeOptions.'597910001', "Money", 
                              If(MeasureType=MeasureTypeOptions.'597910002', "Num", If(MeasureType=MeasureTypeOptions.'597910003', "Text", "Error"))))));
                
                ClearCollect(ThisTestimoneyMeasures, Filter(ActualizedMeasures, BenefitType=BenefitTypeOptions.Actual && BacklogTestimony.'Backlog Item Testimonial' = ThisTestimony.'Backlog Item Testimonial'));
                
                Select(hiddenResetAll_Testimoney);
            TemplateSize: =40
            Visible: =!IsBlank(ThisTestimony)
            Width: =343
            X: =TimeMeasuresLabel_Testimoney.X
            Y: =TimeMeasuresLabel_Testimoney.Y+TimeMeasuresLabel_Testimoney.Height
            ZIndex: =57

            AddThisMeasureIconBG_4 As circle:
                Fill: =RGBA(0, 120, 212, 1)
                Height: =AddThisMeasureIcon_4.Height
                OnSelect: =Select(Parent)
                Width: =AddThisMeasureIcon_4.Width
                X: =AddThisMeasureIcon_4.X
                Y: =AddThisMeasureIcon_4.Y
                ZIndex: =1

            AddThisMeasureIcon_4 As icon.Add:
                Color: =RGBA(255, 255, 255, 1)
                Height: =Self.Width
                Icon: =Icon.Add
                OnSelect: =Select(Parent)
                PaddingBottom: =2
                PaddingLeft: =2
                PaddingRight: =2
                PaddingTop: =2
                Width: =20
                X: =5
                Y: =5
                ZIndex: =2

            AddThisMeasureLabel_4 As label:
                Height: =30
                OnSelect: =Select(Parent)
                Text: =ThisItem.Name
                Tooltip: =ThisItem.Name
                Width: =295
                Wrap: =false
                X: =30
                ZIndex: =3

        TimeMeasureExpand_Testimoney As icon.Hamburger:
            Color: =RGBA(0, 120, 212, 1)
            Height: =Self.Width
            Icon: =If(ExpandTime,Icon.ChevronDown, Icon.ChevronUp)
            OnSelect: |-
                =UpdateContext({ShowFilterDialog: false});
                UpdateContext({ExpandTime: !ExpandTime});
            Visible: =!IsBlank(ThisTestimony)
            Width: =20
            X: =323
            Y: =TimeMeasuresLabel_Testimoney.Y+10
            ZIndex: =58

        TimeMeasuresLabel_Testimoney As label:
            OnSelect: |-
                =UpdateContext({ShowFilterDialog: false});
                UpdateContext({ExpandTime: !ExpandTime});
            Text: ="Time"
            Visible: =!IsBlank(ThisTestimony)
            Width: =300
            X: =20
            Y: =SuggestedMeasuresLabel_Testimoney.Y+SuggestedMeasuresLabel_Testimoney.Height+10
            ZIndex: =59

        FilterMeasures_Testimoney As image:
            Height: =Self.Width
            Image: =If(CountRows(AllPainPoints) = CountRows(TeamFilter.SelectedItems), 'Filter-not applied', 'Filter-applied')
            OnSelect: |-
                =UpdateContext({ShowFilterDialog: !ShowFilterDialog});
                UpdateContext({ShowNewMeasureDialog: false});
            Visible: =!IsBlank(ThisTestimony)
            Width: =AddIdeaIcon.Width
            X: =345
            Y: =SuggestedMeasuresLabel_Testimoney.Y
            ZIndex: =60

        SuggestedMeasuresLabel_Testimoney As label:
            FontWeight: =Semibold
            Height: =24
            Size: =14
            Text: ="Suggested Improvment Measures"
            Visible: =!IsBlank(ThisTestimony)
            Width: =320
            X: =20
            Y: =AddMeasuresText_Testimoney.Y+AddMeasuresText_Testimoney.Height+10
            ZIndex: =63

        TeamFilter As combobox:
            AccessibleLabel: =" "
            BorderColor: =RGBA(166,166,166, 1)
            ChevronBackground: =RGBA(56, 96, 178, 0)
            ChevronFill: =RGBA(51,51,51, 1)
            ChevronHoverBackground: =RGBA(56, 96, 178, 0)
            ChevronHoverFill: =Self.ChevronFill
            Color: =RGBA(51,51,51, 1)
            DefaultSelectedItems: =TeamsDefaultFilter
            DisplayFields: =["Result"]
            Fill: =RGBA(255,255,255, 1)
            Height: =36
            InputTextPlaceholder: ="Filter by team"
            IsSearchable: =false
            Items: =TeamList
            MultiValueDelimiter: ="; "
            NoSelectionText: ="Filter by team"
            Reset: =true
            SearchFields: =["Result"]
            SearchItems: =[]
            SelectionTagFill: =Transparent
            Tooltip: ="Filter measures by pain point"
            Visible: =ShowFilterDialog && !IsBlank(ThisTestimony)
            Width: =If(ShowFilterDialog,375,0)
            X: =5
            Y: =FilterMeasures_Testimoney.Y+FilterMeasures_Testimoney.Height+5
            ZIndex: =64

    MyMeasuresList_Testimoney As gallery.variableTemplateHeightGallery:
        BorderColor: =RGBA(234, 234, 234, 1)
        BorderThickness: =1
        Height: =602
        Items: =ThisTestimoneyMeasures
        Layout: =Layout.Vertical
        OnSelect: |-
            =UpdateContext({ConfigureThisMeasure: ThisItem});
            
            //if time money, fetch the time component
            If(!IsBlank(ThisItem.TimeMoneyToTimeGUID), UpdateContext({ConfigureThisMeasure: LookUp(ActualizedMeasures, MeasureGUID=ThisItem.TimeMoneyToTimeGUID)}));
            
            //time configuration tools
            UpdateContext({varTimeUnitIsMinutes: If(IsBlank(ConfigureThisMeasure.TimeSavings), true, 
                           If(ConfigureThisMeasure.TimeMathIsPerMinute = 'TimeMathIsPerMinute (Backlog Item MeasureSets)'.Yes, true, false))});
            UpdateContext({varWageUnitIsHourly: If(IsBlank(ConfigureThisMeasure.TimeSavings), true, 
                           If(ConfigureThisMeasure.TimeMathWageIsPerHour = 'TimeMathWageIsPerHour (Backlog Item MeasureSets)'.Yes, true, false))});
            UpdateContext({varIsPPP: If(IsBlank(ConfigureThisMeasure.TimeSavings), true, 
                           If(ConfigureThisMeasure.TimeMathIsPerUse = 'TimeMathIsPerUse (Backlog Item MeasureSets)'.Yes, true, false))});
            UpdateContext({theAlsoMoneyMeasure: LookUp(ActualizedMeasures, TimeMoneyToTimeGUID=ConfigureThisMeasure.admin_backlogitemmeasuresetid)});
            
            //reset controls
            Select(hiddenResetAll_Testimoney);
        ShowScrollbar: =false
        TemplateFill: =If(ThisItem.IsSelected, RGBA(244,244,244,1), RGBA(0,0,0,0))
        TemplateSize: =126
        Visible: =If(CountRows(ThisTestimoneyMeasures)>0 && !IsBlank(ThisTestimony), true, false)
        Width: =350
        X: =376
        Y: =165
        ZIndex: =62

        MyMeasuresListSeperator_Testimoney As rectangle:
            BorderColor: =RGBA(196,196,196, 1)
            BorderThickness: =1
            Fill: =RGBA(56, 96, 178, 0)
            Height: =1
            OnSelect: =Select(Parent)
            Width: =340
            Y: =MyMeasuresListValue_Testimoney.Y+MyMeasuresListValue_Testimoney.Height+10
            ZIndex: =1

        MyMeasuresListValue_Testimoney As label:
            Color: =RGBA(102,102,102,1)
            Height: =50
            OnSelect: =Select(Parent)
            Text: |-
                =
                Switch(ThisItem.MeasureType, 
                   MeasureTypeOptions.Time, If(IsBlank(ThisItem.admin_timesavings),"Not configured",Text(ThisItem.admin_timesavings,"[$-en-US]###,###") & " hours/month"),
                   MeasureTypeOptions.Money, If(IsBlank(ThisItem.admin_moneysavings), "Not configured",Text(ThisItem.admin_moneysavings,"[$-en-US]$###,###") & "/month"),
                   MeasureTypeOptions.Numeric, If(IsBlank(ThisItem.admin_numericsavings), 
                                                  "Not configured", Text(ThisItem.admin_numericsavings) & " " & ThisItem.admin_numberofwhat & "/month"),
                   MeasureTypeOptions.Text, If(IsBlank(ThisItem.SubjectiveSavings), "Not configured", ThisItem.admin_subjectivesavings),
                   "error")
            Width: =275
            X: =MyMeasuresListIcon_Testimoney.X+MyMeasuresListIcon_Testimoney.Width+10
            Y: =MyMeasuresListName_Testimoney.Y+MyMeasuresListName_Testimoney.Height+3
            ZIndex: =2

        MyMeasuresListIcon_Testimoney As image:
            Height: =MyMeasuresListValue_Testimoney.Height
            Image: |-
                =Switch(ThisItem.MeasureType, 
                   MeasureTypeOptions.Time, If(IsBlank(ThisItem.admin_timesavings),
                        'Time measure - Not configured','Time measure - Configured'),
                   MeasureTypeOptions.Money, If(IsBlank(ThisItem.admin_moneysavings),
                        'Money measure - Not configured','Money measure - Configured'),
                   MeasureTypeOptions.Numeric, If(IsBlank(ThisItem.admin_numericsavings), 
                        'Numeric measure - Not configured','Numeric measure - Configured'),
                   MeasureTypeOptions.Text, If(IsBlank(ThisItem.SubjectiveSavings), 
                        'Text measure - Not configured','Text measure - Configured'),
                   SampleImage)
            OnSelect: =Select(Parent)
            Width: =MyMeasuresListValue_Testimoney.Height
            X: =MyMeasuresListName_Testimoney.X+10
            Y: =MyMeasuresListValue_Testimoney.Y
            ZIndex: =3

        MyMeasuresListName_Testimoney As label:
            AutoHeight: =true
            Color: =RGBA(51,51,51, 1)
            FontWeight: =Semibold
            OnSelect: =Select(Parent)
            Size: =17
            Text: =ThisItem.admin_name
            Width: =340
            ZIndex: =4

    NewMeasureGroup_Testimoney As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =67

        NewMeasureBorder_Testimoney As rectangle:
            BorderColor: =RGBA(234, 234, 234, 1)
            BorderThickness: =1
            Fill: =RGBA(255, 255, 255, 1)
            Height: =If(ShowNewMeasureDialog, 330, 0)
            Visible: =If(ShowNewMeasureDialog, true, false) && !IsBlank(ThisTestimony)
            Width: =344
            X: =AddMeasuresText_Testimoney.X
            Y: =AddMeasuresText_Testimoney.Y+AddMeasuresText_Testimoney.Height+5
            ZIndex: =65

        NewMeasureText_Testimoney As checkbox:
            BorderStyle: =BorderStyle.None
            CheckboxBackgroundFill: =RGBA(43,121,215,0)
            CheckboxBorderColor: =RGBA(56, 96, 178, 0)
            CheckmarkFill: =RGBA(43,121,215,1)
            DisabledBorderColor: =RGBA(56, 56, 56, 0)
            Height: =If(ShowNewMeasureDialog, 50, 0)
            OnCheck: |-
                =Reset(NewMeasureTime_Testimoney);
                Reset(NewMeasureMoney_Testimoney);
                Reset(NewMeasureNumeric_Testimoney);
                
                UpdateContext({NewMeasureType: MeasureTypeOptions.Text});
                UpdateContext({NewMeasureTypeText: "subjective"});
            OnUncheck: |-
                =If(SortIdeasBy="Complexity", UpdateContext({SortAscending: !SortAscending}));
                Reset(NewMeasureText_Testimoney);
            Text: ="Subjective"
            Visible: =If(ShowNewMeasureDialog, true, false) && !IsBlank(ThisTestimony)
            Width: =206
            X: =NewMeasureTime_Testimoney.X
            Y: =NewMeasureTime_Testimoney.Y+150
            ZIndex: =66

        NewMeasureNumeric_Testimoney As checkbox:
            BorderStyle: =BorderStyle.None
            CheckboxBackgroundFill: =RGBA(43,121,215,0)
            CheckboxBorderColor: =RGBA(56, 96, 178, 0)
            CheckmarkFill: =RGBA(43,121,215,1)
            DisabledBorderColor: =RGBA(56, 56, 56, 0)
            Height: =If(ShowNewMeasureDialog, 50, 0)
            OnCheck: |-
                =Reset(NewMeasureTime_Testimoney);
                Reset(NewMeasureMoney_Testimoney);
                Reset(NewMeasureText_Testimoney);
                
                UpdateContext({NewMeasureType: MeasureTypeOptions.Numeric});
                UpdateContext({NewMeasureTypeText: "numeric"});
            OnUncheck: |-
                =If(SortIdeasBy="Votes", UpdateContext({SortAscending: !SortAscending}));
                Reset(NewMeasureNumeric_Testimoney);
            Text: ="Numeric"
            Visible: =If(ShowNewMeasureDialog, true, false) && !IsBlank(ThisTestimony)
            Width: =206
            X: =NewMeasureTime_Testimoney.X
            Y: =NewMeasureTime_Testimoney.Y+100
            ZIndex: =67

        NewMeasureMoney_Testimoney As checkbox:
            BorderStyle: =BorderStyle.None
            CheckboxBackgroundFill: =RGBA(43,121,215,0)
            CheckboxBorderColor: =RGBA(56, 96, 178, 0)
            CheckmarkFill: =RGBA(43,121,215,1)
            DisabledBorderColor: =RGBA(56, 56, 56, 0)
            Height: =If(ShowNewMeasureDialog, 50, 0)
            OnCheck: |-
                =Reset(NewMeasureTime_Testimoney);
                Reset(NewMeasureNumeric_Testimoney);
                Reset(NewMeasureText_Testimoney);
                
                UpdateContext({NewMeasureType: MeasureTypeOptions.Money});
                UpdateContext({NewMeasureTypeText: "money"});
            OnUncheck: |-
                =If(SortIdeasBy="Name", UpdateContext({SortAscending: !SortAscending}));
                Reset(NewMeasureMoney_Testimoney);
            Text: ="Money"
            Visible: =If(ShowNewMeasureDialog, true, false) && !IsBlank(ThisTestimony)
            Width: =206
            X: =NewMeasureTime_Testimoney.X
            Y: =NewMeasureTime_Testimoney.Y+50
            ZIndex: =68

        NewMeasureTime_Testimoney As checkbox:
            BorderStyle: =BorderStyle.None
            CheckboxBackgroundFill: =RGBA(43,121,215,0)
            CheckboxBorderColor: =RGBA(56, 96, 178, 0)
            CheckmarkFill: =RGBA(43,121,215,1)
            DisabledBorderColor: =RGBA(56, 56, 56, 0)
            Height: =If(ShowNewMeasureDialog, 50, 0)
            OnCheck: |-
                =Reset(NewMeasureMoney_Testimoney);
                Reset(NewMeasureNumeric_Testimoney);
                Reset(NewMeasureText_Testimoney);
                
                UpdateContext({NewMeasureType: MeasureTypeOptions.Time});
                UpdateContext({NewMeasureTypeText: "time"});
            Text: ="Time"
            Visible: =If(ShowNewMeasureDialog, true, false) && !IsBlank(ThisTestimony)
            Width: =206
            X: =NewMeasureBorder_Testimoney.X+40
            Y: =NewMeasureBorder_Testimoney.Y+60
            ZIndex: =69

        MeasureTypeLabel_Testimoney As label:
            FontWeight: =Semibold
            Height: =If(ShowNewMeasureDialog, 40, 0)
            Text: ="New measure type"
            Visible: =If(ShowNewMeasureDialog, true, false) && !IsBlank(ThisTestimony)
            Width: =200
            X: =NewMeasureBorder_Testimoney.X+20
            Y: =NewMeasureBorder_Testimoney.Y+15
            ZIndex: =70

        SelectionDone_Testimoney As button:
            Fill: =RGBA(43,121,215,1)
            FontWeight: =FontWeight.Bold
            Height: =If(ShowNewMeasureDialog, 40, 0)
            OnSelect: |-
                =//if nothing selected, just close
                If(NewMeasureTime_Testimoney.Value=false && NewMeasureMoney_Testimoney.Value=false && NewMeasureNumeric_Testimoney.Value=false && NewMeasureText_Testimoney.Value=false, UpdateContext({ShowNewMeasureDialog: false}),
                
                //else add the measure to backend
                UpdateContext({ConfigureThisMeasure: Patch('Backlog Item MeasureSets', Defaults('Backlog Item MeasureSets'), {Name: "New " & NewMeasureTypeText & " measure", 
                BacklogItem: Blank(), BacklogIdea: OurIdea, BenefitType: BenefitTypeOptions.Actual, IdeaStatus: OurIdea.IdeaStatus, BacklogSoln: ThisSolution, BacklogTestimony: ThisTestimony,
                MeasureType: NewMeasureType})});
                UpdateContext({theAlsoMoneyMeasure: Blank()});
                
                //re-fetch measures
                ClearCollect(ActualizedMeasures, AddColumns(
                         Filter('Backlog Item MeasureSets', BenefitType=BenefitTypeOptions.'597910001' && IdeaStatus in StateFilterDefaultColl),
                         "MeasureGUID", 'Backlog Item MeasureSet',
                         "BacklogItemGUID", BacklogItem.'Innovation Backlog Workitem',
                         "TimeMoneyToTimeGUID", TimeMoneyToTime.'Backlog Item MeasureSet',
                         "MeasureTypeText", If(MeasureType=MeasureTypeOptions.'597910000', "Time", If(MeasureType=MeasureTypeOptions.'597910001', "Money", 
                              If(MeasureType=MeasureTypeOptions.'597910002', "Num", If(MeasureType=MeasureTypeOptions.'597910003', "Text", "Error"))))));
                
                ClearCollect(ThisTestimoneyMeasures, Filter(ActualizedMeasures, BenefitType=BenefitTypeOptions.Actual && BacklogTestimony.'Backlog Item Testimonial' = ThisTestimony.'Backlog Item Testimonial'));
                
                Select(hiddenResetAll_Testimoney);
                
                UpdateContext({ShowNewMeasureDialog: false});
                
                );
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Text: ="Done"
            Visible: =If(ShowNewMeasureDialog, true, false) && !IsBlank(ThisTestimony)
            X: =NewMeasureBorder_Testimoney.X+165
            Y: =NewMeasureBorder_Testimoney.Y+265
            ZIndex: =71

        AddMeasuresText_Testimoney As label:
            Color: =RGBA(51,51,51, 1)
            Height: =24
            OnSelect: |-
                =UpdateContext({ShowNewMeasureDialog: !ShowNewMeasureDialog});
                UpdateContext({ShowFilterDialog: false});
                UpdateContext({ExpandTime: false});
                UpdateContext({ExpandMoney: false});
                UpdateContext({ExpandNumber: false});
                UpdateContext({ExpandText: false});
            Size: =14
            Text: ="Add measure"
            Visible: = !IsBlank(ThisTestimony)
            Width: =275 
            X: =54
            Y: =169
            ZIndex: =72

        AddMeasuresIcon_Testimoney As icon.Add:
            Color: =RGBA(0, 120, 212, 1)
            Height: =17
            Icon: =Icon.Add
            OnSelect: |-
                =UpdateContext({ShowNewMeasureDialog: !ShowNewMeasureDialog});
                UpdateContext({ShowFilterDialog: false});
                UpdateContext({ExpandTime: false});
                UpdateContext({ExpandMoney: false});
                UpdateContext({ExpandNumber: false});
                UpdateContext({ExpandText: false});
            Tooltip: ="Add New Idea"
            Visible: = !IsBlank(ThisTestimony)
            Width: =17
            X: =25
            Y: =AddMeasuresText_Testimoney.Y+3
            ZIndex: =73

    Rectangles_Testimoney As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =78

        "'Rect-Details_Testimoney' As rectangle":
            BorderColor: =RGBA(234, 234, 234, 1)
            BorderThickness: =1
            Fill: =RGBA(0, 0, 0, 0)
            Height: =MyMeasuresList_Testimoney.Height
            Visible: =!IsBlank(ThisTestimony) && CountRows(ThisTestimoneyMeasures)>0
            Width: =640
            X: =MyMeasuresList_Testimoney.X+MyMeasuresList_Testimoney.Width
            Y: =ConfigMeasureTopLabel_Testimoney.Y-5
            ZIndex: =2

        "'Rect-AddIdea_Testimoney' As rectangle":
            BorderColor: =RGBA(234, 234, 234, 1)
            BorderThickness: =1
            Fill: =RGBA(0, 0, 0, 0)
            Height: =36
            Visible: =!IsBlank(ThisTestimony)
            Width: =376
            Y: ='Rect-Search_Testimoney'.Y+'Rect-Search_Testimoney'.Height
            ZIndex: =3

        "'Rect-Search_Testimoney' As rectangle":
            BorderColor: =RGBA(234, 234, 234, 1)
            BorderThickness: =1
            Fill: =RGBA(0, 0, 0, 0)
            Height: =31
            Visible: =!IsBlank(ThisTestimony)
            Width: =376
            Y: =AddMeasuresText_Testimoney.Y-4
            ZIndex: =4

        vertSeparatorTestiomony As rectangle:
            BorderColor: =RGBA(196,196,196, 1)
            BorderThickness: =1
            Fill: =RGBA(56, 96, 178, 0)
            Height: =600
            Visible: =!IsBlank(ThisTestimony)
            Width: =1
            X: ='Rect-Search_Testimoney'.X+'Rect-Search_Testimoney'.Width
            Y: ='Rect-Search_Testimoney'.Y
            ZIndex: =5

    TestimonyTeamInput As text:
        BorderColor: =RGBA(166,166,166,1)
        BorderThickness: =1
        Default: =ThisTestimony.Team
        Height: =46
        HintText: ="Name"
        HoverBorderColor: =Self.BorderColor
        HoverFill: =Self.Fill
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Visible: =!IsBlank(ThisTestimony)
        Width: =182
        X: =92
        Y: =94
        ZIndex: =79

    TestimonyTeamLabel As label:
        Color: =RGBA(51,51,51,1)
        FontWeight: =Bold
        Height: =51
        Size: =14
        Text: ="Team"
        Visible: =!IsBlank(ThisTestimony)
        Width: =80
        X: =14
        Y: =89
        ZIndex: =80

    TestimonyTextInput As text:
        BorderColor: =RGBA(166,166,166,1)
        BorderThickness: =1
        Default: =ThisTestimony.Testimony
        Height: =66
        HintText: ="Enter textual feedback for " & ThisSolution.Developer.'Full Name'
        HoverBorderColor: =Self.BorderColor
        HoverFill: =Self.Fill
        Mode: =TextMode.MultiLine
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Visible: =!IsBlank(ThisTestimony)
        Width: =882
        X: =424
        Y: =81
        ZIndex: =81

    TestimonyTextLabel As label:
        Color: =RGBA(51,51,51,1)
        FontWeight: =Bold
        Height: =74
        Size: =14
        Text: ="Verbal Feedback"
        Visible: =!IsBlank(ThisTestimony)
        Width: =112
        X: =309
        Y: =74
        ZIndex: =82

    NoTestimonyGroup_Testimoney As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =83

        NoTestimonyIcon_Testimoney As image:
            Height: =If(CountRows(MyMeasures)<=0, 100, 0)
            Image: =Idea
            Visible: =IsBlank(ThisTestimony)
            Width: =If(Self.Visible, 100, 0)
            X: =424
            Y: =186
            ZIndex: =6

        NoTestimonyLabel_Testimoney As label:
            Align: =Left
            Color: =RGBA(51,51,51, 1)
            FontWeight: =Semibold
            Height: =If(CountRows(MyMeasures)<=0, 83, 0)
            Size: =17
            Text: ="Enter team name providing feedback"
            Visible: =IsBlank(ThisTestimony)
            Width: =If(Self.Visible, 509, 0)
            X: =Parent.Width/2-Self.Width/2
            Y: =298
            ZIndex: =7

        NoTestimony_TeamNameInput_Testimoney As text:
            Align: =Left
            BorderColor: =RGBA(166,166,166,1)
            BorderThickness: =1
            Default: =""
            Height: =50
            HintText: ="Team Name"
            HoverBorderColor: =Self.BorderColor
            HoverFill: =Self.Fill
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Visible: =IsBlank(ThisTestimony) && First(NoTestimony_PickTeam.SelectedItems).Value="Other"
            Width: =If(Self.Visible, 500, 0)
            X: =Parent.Width/2-Self.Width/2
            Y: =455
            ZIndex: =8

        NoTestimony_PickTeam As combobox:
            AccessibleLabel: =" "
            BorderColor: =RGBA(166,166,166, 1)
            ChevronBackground: =RGBA(56, 96, 178, 0)
            ChevronFill: =RGBA(51,51,51, 1)
            ChevronHoverBackground: =RGBA(56, 96, 178, 0)
            ChevronHoverFill: =Self.ChevronFill
            Color: =RGBA(51,51,51, 1)
            DefaultSelectedItems: =
            DisplayFields: =["Value"]
            Fill: =RGBA(255,255,255, 1)
            Height: =50
            InputTextPlaceholder: ="Select or add team"
            IsSearchable: =false
            Items: =TeamListWithOther
            MultiValueDelimiter: ="; "
            NoSelectionText: ="Select or add team"
            Reset: =true
            SearchFields: =["Result"]
            SearchItems: =[]
            SelectionTagFill: =Transparent
            SelectMultiple: =false
            Visible: =IsBlank(ThisTestimony)
            Width: =If(Self.Visible, 500, 0)
            X: =437
            Y: =380
            ZIndex: =9

        NoTestimony_TestimonyInput As text:
            Align: =Left
            BorderColor: =RGBA(166,166,166,1)
            BorderThickness: =1
            Default: =""
            Height: =207
            HintText: ="Verbal feedback for " & ThisSolution.Developer.'Full Name'
            HoverBorderColor: =Self.BorderColor
            HoverFill: =Self.Fill
            Mode: =TextMode.MultiLine
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Visible: =IsBlank(ThisTestimony)
            Width: =If(Self.Visible, 500, 0)
            X: =434
            Y: =If(NoTestimony_TeamNameInput_Testimoney.Visible, 518, NoTestimony_TeamNameInput_Testimoney.Y)
            ZIndex: =10

    SometimesGroup_Testimoney As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =99

        MeasureSaveWhatInput_Testimoney As text:
            BorderColor: =RGBA(166,166,166,1)
            BorderThickness: =1
            Default: =ConfigureThisMeasure.NumberOfWhat
            Height: =36
            HintText: |-
                ="ex: trees, customers, ..."
            HoverBorderColor: =Self.BorderColor
            HoverFill: =Self.Fill
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Visible: =ConfigureThisMeasure.MeasureType=MeasureTypeOptions.Numeric && If(CountRows(ThisTestimoneyMeasures)>0 && !IsBlank(ThisTestimony), true, false)
            Width: =If(Self.Visible, 500, 0)
            X: =MeasureNameLabel_Testimoney.X
            Y: =MeasureSaveWhatLabel_Testimoney.Y+MeasureSaveWhatLabel_Testimoney.Height+5
            ZIndex: =30

        MeasureSaveWhatLabel_Testimoney As label:
            Color: =RGBA(51,51,51,1)
            FontWeight: =Bold
            Height: =36
            Size: =17
            Text: ="Number of what"
            Visible: =ConfigureThisMeasure.MeasureType=MeasureTypeOptions.Numeric && If(CountRows(ThisTestimoneyMeasures)>0 && !IsBlank(ThisTestimony), true, false)
            Width: =If(Self.Visible, 334, 0)
            X: =MeasureNameLabel_Testimoney.X
            Y: =MeasureSaveAmountInput_Testimoney.Y+MeasureSaveAmountInput_Testimoney.Height+10
            ZIndex: =31

        MeasureSaveAmountInput_Testimoney As text:
            BorderColor: =RGBA(166,166,166,1)
            BorderThickness: =1
            Default: |-
                =Switch(ConfigureThisMeasure.MeasureType, 
                   MeasureTypeOptions.Time, "error", 
                   MeasureTypeOptions.Money, Text(ConfigureThisMeasure.admin_moneysavings,"[$-en-US]$###,###"),
                   MeasureTypeOptions.Numeric, Text(ConfigureThisMeasure.admin_numericsavings),
                   MeasureTypeOptions.Text, ConfigureThisMeasure.SubjectiveSavings,
                   "")
            Height: =36
            HintText: |-
                =Switch(MyMeasuresList_Testimoney.Selected.MeasureType, 
                   MeasureTypeOptions.Time, "", 
                   MeasureTypeOptions.Money, "ex: $12,000",
                   MeasureTypeOptions.Numeric, "ex: 500",
                   MeasureTypeOptions.Text, "ex: high, low, great",
                   "")
            HoverBorderColor: =Self.BorderColor
            HoverFill: =Self.Fill
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Visible: =ConfigureThisMeasure.MeasureType<>MeasureTypeOptions.Time && If(CountRows(ThisTestimoneyMeasures)>0 && !IsBlank(ThisTestimony), true, false)
            Width: =If(Self.Visible, 500, 0)
            X: =MeasureNameLabel_Testimoney.X
            Y: =MeasureSaveAmountLabel_Testimoney.Y+MeasureSaveAmountLabel_Testimoney.Height+5
            ZIndex: =32

        MeasureSaveAmountLabel_Testimoney As label:
            Color: =RGBA(51,51,51,1)
            FontWeight: =Bold
            Height: =36
            Size: =14
            Text: =If(MyMeasuresList_Testimoney.Selected.MeasureType=MeasureTypeOptions.Text, "From " & ConfigureThisMeasure.SubjectiveSavings & " to...", "Amount per month")
            Visible: =ConfigureThisMeasure.MeasureType<>MeasureTypeOptions.Time && If(CountRows(ThisTestimoneyMeasures)>0 && !IsBlank(ThisTestimony), true, false)
            Width: =If(Self.Visible, 334, 0)
            X: =MeasureNameLabel_Testimoney.X
            Y: =MeasureParticipantInput_Testimoney.Y+MeasureParticipantInput_Testimoney.Height+10
            ZIndex: =33

    "'Header-Testimoney' As group":
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =101

        "'HeaderBox-BasicInfo_8' As rectangle":
            BorderColor: =RGBA(234, 234, 234, 1)
            BorderThickness: =1
            Fill: =RGBA(0, 0, 0, 0)
            Height: =65
            Width: =Parent.Width
            ZIndex: =74

        "'Save-BasicInfo_8' As button":
            Fill: =RGBA(0,108,191,1)
            FontWeight: =FontWeight.Bold
            OnSelect: |-
                =//if new testimony
                If(IsBlank(ThisTestimony), 
                   //add it to data source and collections
                   UpdateContext({ThisTestimony:
                   Patch('Backlog Item Testimonials', Defaults('Backlog Item Testimonials'),
                      {Name: ThisSolution.Name & "-" & UserObject.'Full Name',
                       BacklogIdea: OurIdea,
                       IdeaStatus: OurIdea.IdeaStatus,
                       BacklogSolution: ThisSolution,
                       Team: If(NoTestimony_PickTeam.Selected.Value="Other", NoTestimony_TeamNameInput_Testimoney.Text, NoTestimony_PickTeam.Selected.Value),
                       'TestimonialUser ': UserObject,
                       Testimony: NoTestimony_TestimonyInput.Text})});
                    Set(OurTestimony, ThisTestimony);
                    Collect(AllTestimony, ThisTestimony);
                
                    //update team filter for ease of picking
                    If(NoTestimony_PickTeam.Selected.Value<>"Other", UpdateContext({TeamsDefaultFilter: Filter(TeamList, Result=NoTestimony_PickTeam.Selected.Value)}));
                
                    //empty measure collection
                    Clear(ThisTestimoneyMeasures);
                    UpdateContext({ExpandTime: true});
                    UpdateContext({ExpandMoney: true});
                    UpdateContext({ExpandNumber: true});
                    UpdateContext({ExpandText: true}),
                
                //not new so update
                    UpdateIf('Backlog Item Testimonials', 'Backlog Item Testimonial'=ThisTestimony.'Backlog Item Testimonial',
                      {Name: ThisSolution.Name & "-" & UserObject.'Full Name',
                       BacklogIdea: OurIdea,
                       IdeaStatus: OurIdea.IdeaStatus,
                       BacklogSolution: ThisSolution,
                       Team: TestimonyTeamInput.Text,
                       'TestimonialUser ': UserObject,
                       Testimony: TestimonyTextInput.Text});
                       
                       Back();
                
                );
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Text: =If(IsBlank(ThisTestimony), "Create", "Update")
            X: =1180
            Y: =('HeaderBox-BasicInfo_8'.Height/2)-(Self.Height/2)
            ZIndex: =75

        "'Cancel-BasicInfo_8' As button":
            Color: =RGBA(102, 102, 102, 1)
            Fill: =RGBA(255, 255, 255, 1)
            FontWeight: =FontWeight.Bold
            OnSelect: |-
                =//else update case, so just cancel their edits
                Clear(MyMeasures);
                ForAll(Filter(AllMeasures, admin_BacklogItem.'Innovation Backlog Workitem'=OurWorkitem.admin_innovationbacklogworkitemid),
                Collect(MyMeasures, ThisRecord));
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Text: ="Cancel"
            X: =990
            Y: =('HeaderBox-BasicInfo_8'.Height/2)-(Self.Height/2)
            ZIndex: =76

        "'HeaderText-BasicInfo_8' As label":
            Color: =RGBA(51,51,51, 1)
            FontWeight: =Semibold
            PaddingBottom: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =22
            Text: ="Add Feedback"
            Width: =850
            X: =80
            Y: =('HeaderBox-BasicInfo_8'.Height/2)-(Self.Height/2)
            ZIndex: =77

        "'Back-BasicInfo_8' As icon.ArrowLeft":
            Color: =RGBA(0, 120, 212, 1)
            Height: =Self.Width
            Icon: =Icon.ArrowLeft
            OnSelect: |-
                =If(IsBlank(ThisTestimony.Testimony) && CountRows(ThisTestimoneyMeasures)=0, 
                     RemoveIf('Backlog Item Testimonials', 'Backlog Item Testimonial'=ThisTestimony.'Backlog Item Testimonial');
                     RemoveIf(AllTestimony, 'Backlog Item Testimonial'=ThisTestimony.'Backlog Item Testimonial'));
                Back()
            Width: =40
            X: =25
            Y: =('HeaderBox-BasicInfo_8'.Height/2)-(Self.Height/2)
            ZIndex: =78

    MeasureDetailGroup_Testimoney As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =101

        ConfigMeasureTopLabel_Testimoney As label:
            Color: =RGBA(102,102,102, 1)
            Height: =28
            Size: =14
            Text: |-
                =Switch(ConfigureThisMeasure.MeasureType, 
                   MeasureTypeOptions.Time,
                         If(IsBlank(ConfigureThisMeasure.TimeSavings), "Input values to determine time saved", "Edit time saved"),
                   MeasureTypeOptions.Money,
                         If(IsBlank(ConfigureThisMeasure.MoneySavings), "Input money saved", "Edit money saved"),
                   MeasureTypeOptions.Numeric,
                         If(IsBlank(ConfigureThisMeasure.NumericSavings), "Input amount that was saved", "Edit amount that was saved"),
                   MeasureTypeOptions.Text,
                         If(IsBlank(ConfigureThisMeasure.SubjectiveSavings), "Enter new state", "Edit new state"),
                   "")
            Visible: =If(CountRows(ThisTestimoneyMeasures)>0 && !IsBlank(ThisTestimony), true, false)
            Width: =348
            X: =743
            Y: =MyMeasuresList_Testimoney.Y+5
            ZIndex: =36

        SaveMeasureLabel_Testimoney As label:
            Color: =RGBA(51, 51, 51, 1)
            Height: =28
            OnSelect: =Select(SaveMeasureIcon_Testimoney)
            Text: ="Save"
            Visible: =If(CountRows(ThisTestimoneyMeasures)>0 && !IsBlank(ThisTestimony), true, false)
            Width: =74
            X: =1262
            Y: =MyMeasuresList_Testimoney.Y+5
            ZIndex: =37

        SaveMeasureIcon_Testimoney As icon.Edit:
            Color: =RGBA(0, 120, 212, 1)
            Height: =16
            Icon: =Icon.Save
            OnSelect: |-
                =//get local vars for ease of reading
                UpdateContext({varTime: Value(MeasureTimeSpentInput_Testimoney.Text)});
                UpdateContext({varUses: Value(TimesPerWeekInput_Testimoney.Text)});
                UpdateContext({varPeople: Value(MeasureTimePeopleInput_Testimoney.Text)});
                UpdateContext({varWage: Value(MeasureTimeWageInput_Testimoney.Text)});
                UpdateContext({varTimeUnitIsMinutes: MeasureTimeInMinutes_Testimoney.Value});
                UpdateContext({varWageUnitIsHourly: WagePerHour_Testimoney.Value});
                UpdateContext({varIsPPP: MeasureActionRatePerUse_Testimoney.Value});
                UpdateContext({calcHoursPerMonth: RoundUp(varPeople * varTime * If(varTimeUnitIsMinutes, 1/60, 1) * If(varIsPPP, varUses, 1) * WeeksPerMonth, 1)});
                UpdateContext({calcWagePerMonth: If(varWageUnitIsHourly, calcHoursPerMonth*varWage, calcHoursPerMonth*(varWage/40/52))});
                
                //save to backend depending on type
                Switch(ConfigureThisMeasure.MeasureType, 
                
                   //***TIME***//
                   MeasureTypeOptions.Time, 
                   
                   //time measure itself
                   Patch('Backlog Item MeasureSets', {admin_backlogitemmeasuresetid: ConfigureThisMeasure.admin_backlogitemmeasuresetid}, 
                   {Name: MeasureNameInput_Testimoney.Text, Beneficiary: MeasureParticipantInput_Testimoney.Text, BeneficiarySearch: MeasureParticipantInput_Testimoney.Text, 
                   Notes: MeasureDescriptionInput_Testimoney.Text, TimeMathNumPeople: varPeople, TimeMathTimePerPerson: varTime, TimeMathTimesPerWeek: varUses, TimeMathWage: varWage, 
                   TimeSavings: calcHoursPerMonth, 
                   TimeMathIsPerMinute: If(varTimeUnitIsMinutes, 'TimeMathIsPerMinute (Backlog Item MeasureSets)'.Yes , 'TimeMathIsPerMinute (Backlog Item MeasureSets)'.No), 
                   TimeMathIsPerUse: If(varIsPPP, 'TimeMathIsPerUse (Backlog Item MeasureSets)'.Yes , 'TimeMathIsPerUse (Backlog Item MeasureSets)'.No), 
                   TimeMathWageIsPerHour: If(varWageUnitIsHourly, 'TimeMathWageIsPerHour (Backlog Item MeasureSets)'.Yes , 'TimeMathWageIsPerHour (Backlog Item MeasureSets)'.No),
                   AlsoMoney: If(TrackFinanancioal_Testimoney.Value=true, 'AlsoMoney (Backlog Item MeasureSets)'.Yes, 'AlsoMoney (Backlog Item MeasureSets)'.No)});
                
                   //money side of time
                   //BRAND NEW Money Measure
                    If(IsBlank(theAlsoMoneyMeasure) && TrackFinanancioal_Testimoney.Value=true, 
                    UpdateContext({theAlsoMoneyMeasure:  
                    Patch('Backlog Item MeasureSets', Defaults('Backlog Item MeasureSets'), 
                         {Name: "$: " & MeasureNameInput_Testimoney.Text,
                          BacklogIdea: OurIdea,
                          IdeaStatus: OurIdea.IdeaStatus,
                          BacklogItem: Blank(),
                          BacklogSoln: ThisSolution,
                          BacklogTestimony: ThisTestimony,
                          BenefitType: BenefitTypeOptions.Actual,
                          Beneficiary: MeasureParticipantInput_Testimoney.Text,
                          MeasureType: MeasureTypeOptions.Money,
                          MoneySavings: calcWagePerMonth,
                          TimeMoneyToTime: ConfigureThisMeasure})}););
                
                   //UPDATE EXISITNG  Money Measure
                    If(!IsBlank(theAlsoMoneyMeasure) && TrackFinanancioal_Testimoney.Value=true, 
                      UpdateIf('Backlog Item MeasureSets', admin_backlogitemmeasuresetid=theAlsoMoneyMeasure.admin_backlogitemmeasuresetid, 
                      {Beneficiary: MeasureParticipantInput_Testimoney.Text, MoneySavings: calcWagePerMonth}));
                    
                   //DELETE Money Measure
                    If(!IsBlank(theAlsoMoneyMeasure) && TrackFinanancioal_Testimoney.Value=false,
                         RemoveIf('Backlog Item MeasureSets', admin_backlogitemmeasuresetid=theAlsoMoneyMeasure.admin_backlogitemmeasuresetid);
                         UpdateContext({theAlsoMoneyMeasure: Blank()});
                       );,
                       
                   //***MONEY***//
                   MeasureTypeOptions.Money,
                   Patch('Backlog Item MeasureSets', {admin_backlogitemmeasuresetid: ConfigureThisMeasure.admin_backlogitemmeasuresetid}, 
                      {Name: MeasureNameInput_Testimoney.Text, Beneficiary: MeasureParticipantInput_Testimoney.Text, BeneficiarySearch: MeasureParticipantInput_Testimoney.Text, 
                       Notes: MeasureDescriptionInput_Testimoney.Text, MoneySavings: Value(MeasureSaveAmountInput_Testimoney.Text)}),
                
                   //***NUMERIC***//
                   MeasureTypeOptions.Numeric,
                   Patch('Backlog Item MeasureSets', {admin_backlogitemmeasuresetid: ConfigureThisMeasure.admin_backlogitemmeasuresetid}, 
                      {Name: MeasureNameInput_Testimoney.Text, Beneficiary: MeasureParticipantInput_Testimoney.Text, BeneficiarySearch: MeasureParticipantInput_Testimoney.Text, 
                       Notes: MeasureDescriptionInput_Testimoney.Text, NumericSavings: Value(MeasureSaveAmountInput_Testimoney.Text),
                       NumberOfWhat: MeasureSaveWhatInput_Testimoney.Text}),
                  
                   //***TEXT/SUBJECTIVE ***//
                   MeasureTypeOptions.Text,
                   Patch('Backlog Item MeasureSets', {admin_backlogitemmeasuresetid: ConfigureThisMeasure.admin_backlogitemmeasuresetid}, 
                      {Name: MeasureNameInput_Testimoney.Text, Beneficiary: MeasureParticipantInput_Testimoney.Text, BeneficiarySearch: MeasureParticipantInput_Testimoney.Text, 
                       Notes: MeasureDescriptionInput_Testimoney.Text, SubjectiveSavings: MeasureSaveAmountInput_Testimoney.Text}),
                
                   "");
                
                //re-fetch measures
                ClearCollect(ActualizedMeasures, AddColumns(
                         Filter('Backlog Item MeasureSets', BenefitType=BenefitTypeOptions.'597910001' && IdeaStatus in StateFilterDefaultColl),
                         "MeasureGUID", 'Backlog Item MeasureSet',
                         "BacklogItemGUID", BacklogItem.'Innovation Backlog Workitem',
                         "TimeMoneyToTimeGUID", TimeMoneyToTime.'Backlog Item MeasureSet',
                         "MeasureTypeText", If(MeasureType=MeasureTypeOptions.'597910000', "Time", If(MeasureType=MeasureTypeOptions.'597910001', "Money", 
                              If(MeasureType=MeasureTypeOptions.'597910002', "Num", If(MeasureType=MeasureTypeOptions.'597910003', "Text", "Error"))))));
                
                ClearCollect(ThisTestimoneyMeasures, Filter(ActualizedMeasures, BenefitType=BenefitTypeOptions.Actual && BacklogTestimony.'Backlog Item Testimonial' = ThisTestimony.'Backlog Item Testimonial'));
                
                //controls
                Select(hiddenResetAll_Testimoney);
                     
            Visible: =If(CountRows(ThisTestimoneyMeasures)>0 && !IsBlank(ThisTestimony), true, false)
            Width: =17
            X: =1239
            Y: =SaveMeasureLabel_Testimoney.Y+(SaveMeasureLabel_Testimoney.Height-Self.Height)/2
            ZIndex: =38

        DeleteMeasureLabel_Testimoney As label:
            Color: =RGBA(51, 51, 51, 1)
            Height: =28
            OnSelect: =Select(DeleteMeasureIcon_Testimoney)
            Text: ="Delete"
            Visible: =If(CountRows(ThisTestimoneyMeasures)>0 && !IsBlank(ThisTestimony), true, false)
            Width: =77
            X: =1150
            Y: =MyMeasuresList_Testimoney.Y+5
            ZIndex: =39

        DeleteMeasureIcon_Testimoney As icon.Edit:
            Color: =RGBA(0, 120, 212, 1)
            Height: =16
            Icon: =Icon.Trash
            OnSelect: |-
                =//if time, and has time money, also delete the money component
                If(ConfigureThisMeasure.admin_alsomoney='AlsoMoney (Backlog Item MeasureSets)'.Yes, 
                   UpdateContext({theAlsoMoneyMeasure: LookUp(ActualizedMeasures, TimeMoneyToTimeGUID=ConfigureThisMeasure.admin_backlogitemmeasuresetid)});
                   RemoveIf(ActualizedMeasures, admin_backlogitemmeasuresetid=theAlsoMoneyMeasure.admin_backlogitemmeasuresetid);
                   RemoveIf(ThisTestimoneyMeasures, admin_backlogitemmeasuresetid=theAlsoMoneyMeasure.admin_backlogitemmeasuresetid);
                   RemoveIf('Backlog Item MeasureSets', 'Backlog Item MeasureSet'=theAlsoMoneyMeasure.admin_backlogitemmeasuresetid));
                
                //delete it
                RemoveIf(ActualizedMeasures, admin_backlogitemmeasuresetid=ConfigureThisMeasure.MeasureGUID);
                RemoveIf(ThisTestimoneyMeasures, admin_backlogitemmeasuresetid=ConfigureThisMeasure.MeasureGUID);
                RemoveIf('Backlog Item MeasureSets', 'Backlog Item MeasureSet'=ConfigureThisMeasure.MeasureGUID);
                
                //reset controls
                Select([@hiddenResetAll_Testimoney]);
            Visible: =If(CountRows(ThisTestimoneyMeasures)>0 && !IsBlank(ThisTestimony), true, false)
            Width: =17
            X: =1120
            Y: =DeleteMeasureLabel_Testimoney.Y+(DeleteMeasureLabel_Testimoney.Height-Self.Height)/2
            ZIndex: =61

    AllMeasuresGroup_Testimoney As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =102

        MeasureParticipantLabel_Testimoney As label:
            Color: =RGBA(51,51,51,1)
            FontWeight: =Bold
            Height: =30
            Size: =14
            Text: |-
                =Switch(ConfigureThisMeasure.MeasureType, 
                   MeasureTypeOptions.Time, "Whose time", 
                   MeasureTypeOptions.Money, "Whose impacted",
                   MeasureTypeOptions.Numeric, "Whose impacted",
                   MeasureTypeOptions.Text, "Whose impacted",
                   "error")
            Visible: =If(CountRows(ThisTestimoneyMeasures)>0 && !IsBlank(ThisTestimony), true, false)
            Width: =If(Self.Visible, 250, 0)
            X: =MeasureNameLabel_Testimoney.X
            Y: =MeasureDescriptionInput_Testimoney.Y+MeasureDescriptionInput_Testimoney.Height+10
            ZIndex: =34

        MeasureDescriptionInput_Testimoney As text:
            BorderColor: =RGBA(166,166,166,1)
            BorderThickness: =1
            Default: =ConfigureThisMeasure.Notes
            Height: =74
            HintText: ="Some note about the measure"
            HoverBorderColor: =Self.BorderColor
            HoverFill: =Self.Fill
            Mode: =TextMode.MultiLine
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Visible: =If(CountRows(ThisTestimoneyMeasures)>0 && !IsBlank(ThisTestimony), true, false)
            Width: =If(Self.Visible, 500, 0)
            X: =MeasureNameLabel_Testimoney.X
            Y: =MeasureDescriptionLabel_Testimoney.Y+MeasureDescriptionLabel_Testimoney.Height+5
            ZIndex: =35

        MeasureDescriptionLabel_Testimoney As label:
            Color: =RGBA(51,51,51,1)
            FontWeight: =Bold
            Height: =30
            Size: =14
            Text: ="Description"
            Visible: =If(CountRows(ThisTestimoneyMeasures)>0 && !IsBlank(ThisTestimony), true, false)
            Width: =If(Self.Visible, 334, 0)
            X: =MeasureNameLabel_Testimoney.X
            Y: =MeasureNameInput_Testimoney.Y+MeasureNameInput_Testimoney.Height+10
            ZIndex: =40

        MeasureNameInput_Testimoney As text:
            BorderColor: =RGBA(166,166,166,1)
            BorderThickness: =1
            Default: =ConfigureThisMeasure.Name
            Height: =30
            HintText: ="Name"
            HoverBorderColor: =Self.BorderColor
            HoverFill: =Self.Fill
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Visible: =If(CountRows(ThisTestimoneyMeasures)>0 && !IsBlank(ThisTestimony), true, false)
            Width: =If(Self.Visible, 500, 0)
            X: =MeasureNameLabel_Testimoney.X
            Y: =MeasureNameLabel_Testimoney.Y+MeasureNameLabel_Testimoney.Height+5
            ZIndex: =41

        MeasureNameLabel_Testimoney As label:
            Color: =RGBA(51,51,51,1)
            FontWeight: =Bold
            Height: =30
            Size: =14
            Text: ="Name"
            Visible: =If(CountRows(ThisTestimoneyMeasures)>0 && !IsBlank(ThisTestimony), true, false)
            Width: =If(Self.Visible, 334, 0)
            X: =ConfigMeasureTopLabel_Testimoney.X
            Y: =ConfigMeasureTopLabel_Testimoney.Y+ConfigMeasureTopLabel_Testimoney.Height+10
            ZIndex: =42

        MeasureParticipantInput_Testimoney As text:
            BorderColor: =RGBA(166,166,166,1)
            BorderThickness: =1
            Default: =ConfigureThisMeasure.Beneficiary
            Height: =30
            HintText: ="Name"
            HoverBorderColor: =Self.BorderColor
            HoverFill: =Self.Fill
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Visible: =If(CountRows(ThisTestimoneyMeasures)>0 && !IsBlank(ThisTestimony), true, false)
            Width: =If(Self.Visible, 500, 0)
            X: =MeasureNameLabel_Testimoney.X
            Y: =MeasureParticipantLabel_Testimoney.Y+MeasureParticipantLabel_Testimoney.Height+5
            ZIndex: =48

    TimeSpecificGroup_Testimoney As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =126

        TimesPerWeekInput_Testimoney As text:
            Align: =Center
            BorderColor: =RGBA(166,166,166,1)
            BorderThickness: =1
            Default: =ConfigureThisMeasure.TimeMathTimesPerWeek
            Height: =Self.Width-10
            HintText: |-
                ="#"
            HoverBorderColor: =Self.BorderColor
            HoverFill: =Self.Fill
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Visible: =MeasureActionRatePerUse_Testimoney.Value=true && ConfigureThisMeasure.MeasureType=MeasureTypeOptions.Time && If(CountRows(ThisTestimoneyMeasures)>0, true, false)
            Width: =If(Self.Visible, 60, 0)
            X: =TimesPerWeekLabel_Testimoney.X+20
            Y: =TimesPerWeekLabel_Testimoney.Y+TimesPerWeekLabel_Testimoney.Height+5
            ZIndex: =13

        TimesPerWeekLabel_Testimoney As label:
            Align: =Left
            Color: =RGBA(51,51,51,1)
            FontWeight: =Bold
            Height: =50
            Size: =14
            Text: ="Times done per week"
            Visible: =MeasureActionRatePerUse_Testimoney.Value=true && ConfigureThisMeasure.MeasureType=MeasureTypeOptions.Time && If(CountRows(ThisTestimoneyMeasures)>0, true, false)
            Width: =If(Self.Visible, 146, 0)
            X: =MeasureActionRateLabel_Testimoney.X+MeasureActionRateLabel_Testimoney.Width+15
            Y: =MeasureActionRateLabel_Testimoney.Y-10
            ZIndex: =14

        MeasureActionRatePerWeek_Testimoney As checkbox:
            CheckboxBackgroundFill: =If(Self.Value, RGBA(43,121,215,1), RGBA(43,121,215,0))
            CheckboxBorderColor: =RGBA(43,121,215,1)
            CheckboxSize: =30
            CheckmarkFill: =RGBA(225,238,251,1)
            Default: =!varIsPPP
            DisabledBorderColor: =RGBA(56, 56, 56, 0)
            Height: =30
            OnCheck: |-
                =UpdateContext({varIsPPP: false});
                Reset(MeasureActionRatePerUse_Testimoney);
                Reset(MeasureActionRatePerWeek_Testimoney);
            OnUncheck: =Reset(MeasureActionRatePerWeek_Testimoney);
            Text: ="per week"
            Visible: =ConfigureThisMeasure.MeasureType=MeasureTypeOptions.Time && If(CountRows(ThisTestimoneyMeasures)>0, true, false)
            Width: =If(Self.Visible,  116, 0)
            X: =TimeFindingsLabel_Testimoney.X+TimeFindingsLabel_Testimoney.Width+10
            Y: =MeasureTimeInMinutes_Testimoney.Y+MeasureTimeInMinutes_Testimoney.Height
            ZIndex: =15

        MeasureActionRatePerUse_Testimoney As checkbox:
            CheckboxBackgroundFill: =If(Self.Value, RGBA(43,121,215,1), RGBA(43,121,215,0))
            CheckboxBorderColor: =RGBA(43,121,215,1)
            CheckboxSize: =30
            CheckmarkFill: =RGBA(225,238,251,1)
            Default: =varIsPPP
            DisabledBorderColor: =RGBA(56, 56, 56, 0)
            Height: =30
            OnCheck: |-
                =UpdateContext({varIsPPP: true});
                Reset(MeasureActionRatePerUse_Testimoney);
                Reset(MeasureActionRatePerWeek_Testimoney);
            OnUncheck: =Reset(MeasureActionRatePerUse_Testimoney);
            Text: ="per use"
            Visible: =ConfigureThisMeasure.MeasureType=MeasureTypeOptions.Time && If(CountRows(ThisTestimoneyMeasures)>0, true, false)
            Width: =If(Self.Visible,  116, 0)
            X: =TimeFindingsLabel_Testimoney.X+TimeFindingsLabel_Testimoney.Width+10
            Y: =TimeFindingsLabel_Testimoney.Y
            ZIndex: =16

        TimeFindingsLabel_Testimoney As label:
            Align: =Center
            Height: =Self.Width
            Text: |-
                =If(IsBlank(MeasureTimeSpentInput_Testimoney), "TBD",
                
                Value(MeasureTimeSpentInput_Testimoney.Text) & 
                If(MeasureTimeInMinutes_Testimoney.Value=true, " 
                mins", 
                If(MeasureTimeInHours_Testimoney.Value=true, " 
                hours", "
                what")))
            Visible: =ConfigureThisMeasure.MeasureType=MeasureTypeOptions.Time && If(CountRows(ThisTestimoneyMeasures)>0, true, false)
            Width: =60
            X: =MeasureActionRateLabel_Testimoney.X+20
            Y: =MeasureTimeSpentLabel_Testimoney.Y+MeasureTimeSpentLabel_Testimoney.Height+5
            ZIndex: =17

        MeasureActionRateLabel_Testimoney As label:
            Align: =Left
            Color: =RGBA(51,51,51,1)
            FontWeight: =Bold
            Height: =30
            Size: =14
            Text: ="Time spent per..."
            Visible: =ConfigureThisMeasure.MeasureType=MeasureTypeOptions.Time && If(CountRows(ThisTestimoneyMeasures)>0, true, false)
            Width: =If(Self.Visible, 220, 0)
            X: =MeasureTimeWageLabel_Testimoney.X
            Y: =MeasureTimePeopleInput_Testimoney.Y+MeasureTimePeopleInput_Testimoney.Height+10
            ZIndex: =18

        MeasureTimeInHours_Testimoney As checkbox:
            CheckboxBackgroundFill: =If(Self.Value, RGBA(43,121,215,1), RGBA(43,121,215,0))
            CheckboxBorderColor: =RGBA(43,121,215,1)
            CheckboxSize: =30
            CheckmarkFill: =RGBA(225,238,251,1)
            Default: =!varTimeUnitIsMinutes
            DisabledBorderColor: =RGBA(56, 56, 56, 0)
            Height: =30
            OnCheck: |-
                =UpdateContext({varTimeUnitIsMinutes: false});
                Reset(MeasureTimeInMinutes_Testimoney);
                Reset(MeasureTimeInHours_Testimoney);
            OnUncheck: =Reset(MeasureTimeInHours_Testimoney);
            Text: ="hours"
            Visible: =ConfigureThisMeasure.MeasureType=MeasureTypeOptions.Time && If(CountRows(ThisTestimoneyMeasures)>0, true, false)
            Width: =If(Self.Visible,  116, 0)
            X: =MeasureTimeSpentInput_Testimoney.X+MeasureTimeSpentInput_Testimoney.Width+10
            Y: =MeasureTimeInMinutes_Testimoney.Y+MeasureTimeInMinutes_Testimoney.Height
            ZIndex: =19

        MeasureTimeInMinutes_Testimoney As checkbox:
            CheckboxBackgroundFill: =If(Self.Value, RGBA(43,121,215,1), RGBA(43,121,215,0))
            CheckboxBorderColor: =RGBA(43,121,215,1)
            CheckboxSize: =30
            CheckmarkFill: =RGBA(225,238,251,1)
            Default: =varTimeUnitIsMinutes
            DisabledBorderColor: =RGBA(56, 56, 56, 0)
            Height: =30
            OnCheck: |-
                =UpdateContext({varTimeUnitIsMinutes: true});
                Reset(MeasureTimeInMinutes_Testimoney);
                Reset(MeasureTimeInHours_Testimoney);
            OnUncheck: =Reset(MeasureTimeInMinutes_Testimoney);
            Text: ="minutes"
            Visible: =ConfigureThisMeasure.MeasureType=MeasureTypeOptions.Time && If(CountRows(ThisTestimoneyMeasures)>0, true, false)
            Width: =If(Self.Visible,  116, 0)
            X: =MeasureTimeSpentInput_Testimoney.X+MeasureTimeSpentInput_Testimoney.Width+10
            Y: =MeasureTimeSpentInput_Testimoney.Y
            ZIndex: =20

        MeasureTimeSpentInput_Testimoney As text:
            Align: =Center
            BorderColor: =RGBA(166,166,166,1)
            BorderThickness: =1
            Default: =ConfigureThisMeasure.TimeMathTimePerPerson
            Height: =Self.Width
            HintText: |-
                ="#"
            HoverBorderColor: =Self.BorderColor
            HoverFill: =Self.Fill
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Visible: =ConfigureThisMeasure.MeasureType=MeasureTypeOptions.Time && If(CountRows(ThisTestimoneyMeasures)>0, true, false)
            Width: =If(Self.Visible, 60, 0)
            X: =MeasureTimeSpentLabel_Testimoney.X+20
            Y: =MeasureTimeSpentLabel_Testimoney.Y+MeasureTimeSpentLabel_Testimoney.Height+5
            ZIndex: =21

        MeasureTimeSpentLabel_Testimoney As label:
            Align: =Left
            Color: =RGBA(51,51,51,1)
            FontWeight: =Bold
            Height: =30
            Size: =14
            Text: ="Time spent per person"
            Visible: =ConfigureThisMeasure.MeasureType=MeasureTypeOptions.Time && If(CountRows(ThisTestimoneyMeasures)>0, true, false)
            Width: =If(Self.Visible, 220, 0)
            X: =MeasureNameLabel_Testimoney.X
            Y: =MeasureTimePeopleInput_Testimoney.Y+MeasureTimePeopleInput_Testimoney.Height+10
            ZIndex: =22

        WagePerYear_Testimoney As checkbox:
            CheckboxBackgroundFill: =If(Self.Value, RGBA(43,121,215,1), RGBA(43,121,215,0))
            CheckboxBorderColor: =RGBA(43,121,215,1)
            CheckboxSize: =30
            CheckmarkFill: =RGBA(225,238,251,1)
            Default: =!varWageUnitIsHourly
            DisabledBorderColor: =RGBA(56, 56, 56, 0)
            Height: =30
            OnCheck: |-
                =UpdateContext({varWageUnitIsHourly: false});
                Reset(WagePerHour_Testimoney);
                Reset(WagePerYear_Testimoney);
            OnUncheck: =Reset(WagePerYear_Testimoney);
            Text: ="per year"
            Visible: =TrackFinanancioal_Testimoney.Value=true && ConfigureThisMeasure.MeasureType=MeasureTypeOptions.Time && If(CountRows(ThisTestimoneyMeasures)>0, true, false)
            Width: =If(Self.Visible,  116, 0)
            X: =MeasureTimeWageInput_Testimoney.X+MeasureTimeWageInput_Testimoney.Width+10
            Y: =WagePerHour_Testimoney.Y+WagePerHour_Testimoney.Height
            ZIndex: =23

        WagePerHour_Testimoney As checkbox:
            CheckboxBackgroundFill: =If(Self.Value, RGBA(43,121,215,1), RGBA(43,121,215,0))
            CheckboxBorderColor: =RGBA(43,121,215,1)
            CheckboxSize: =30
            CheckmarkFill: =RGBA(225,238,251,1)
            Default: =varWageUnitIsHourly
            DisabledBorderColor: =RGBA(56, 56, 56, 0)
            Height: =30
            OnCheck: |-
                =UpdateContext({varWageUnitIsHourly: true});
                Reset(WagePerHour_Testimoney);
                Reset(WagePerYear_Testimoney);
            OnUncheck: =Reset(WagePerHour_Testimoney);
            Text: ="per hour"
            Visible: =TrackFinanancioal_Testimoney.Value=true && ConfigureThisMeasure.MeasureType=MeasureTypeOptions.Time && If(CountRows(ThisTestimoneyMeasures)>0, true, false)
            Width: =If(Self.Visible,  116, 0)
            X: =MeasureTimeWageInput_Testimoney.X+MeasureTimeWageInput_Testimoney.Width+10
            Y: =MeasureTimeWageInput_Testimoney.Y
            ZIndex: =24

        MeasureTimeWageInput_Testimoney As text:
            Align: =Center
            BorderColor: =RGBA(166,166,166,1)
            BorderThickness: =1
            Default: =ConfigureThisMeasure.TimeMathWage
            Height: =60
            HintText: |-
                ="#"
            HoverBorderColor: =Self.BorderColor
            HoverFill: =Self.Fill
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Visible: =TrackFinanancioal_Testimoney.Value=true && ConfigureThisMeasure.MeasureType=MeasureTypeOptions.Time && If(CountRows(ThisTestimoneyMeasures)>0, true, false)
            Width: =If(Self.Visible, 75, 0)
            X: =MeasureTimeWageLabel_Testimoney.X+20
            Y: =MeasureTimePeopleLabel_Testimoney.Y+MeasureTimePeopleLabel_Testimoney.Height+5
            ZIndex: =25

        MeasureTimeWageLabel_Testimoney As label:
            Color: =RGBA(51,51,51,1)
            FontWeight: =Bold
            Height: =50
            Size: =14
            Text: ="Average wage of people performing"
            Visible: =TrackFinanancioal_Testimoney.Value=true && ConfigureThisMeasure.MeasureType=MeasureTypeOptions.Time && If(CountRows(ThisTestimoneyMeasures)>0, true, false)
            Width: =If(Self.Visible, 220, 0)
            X: =TrackFinanancioal_Testimoney.X+TrackFinanancioal_Testimoney.Width+15
            Y: |
                =MeasureParticipantInput_Testimoney.Y+MeasureParticipantInput_Testimoney.Height+10
            ZIndex: =26

        TrackFinanancioal_Testimoney As checkbox:
            CheckboxBackgroundFill: =If(Self.Value, RGBA(43,121,215,1), RGBA(43,121,215,0))
            CheckboxBorderColor: =RGBA(43,121,215,1)
            CheckboxSize: =30
            CheckmarkFill: =RGBA(225,238,251,1)
            Default: =ConfigureThisMeasure.AlsoMoney
            DisabledBorderColor: =RGBA(56, 56, 56, 0)
            Height: =60
            OnCheck: |-
                =UpdateContext({isInHours: false});
                Reset(WagePerYear_Testimoney);
            Size: =10
            Text: |-
                ="track monetary
                value of time"
            Tooltip: ="Enter for a financial impact of the time to be tracked"
            Visible: =ConfigureThisMeasure.MeasureType=MeasureTypeOptions.Time && If(CountRows(ThisTestimoneyMeasures)>0, true, false)
            Width: =If(Self.Visible, 140, 0)
            X: =MeasureTimePeopleInput_Testimoney.X+MeasureTimePeopleInput_Testimoney.Width+10
            Y: =MeasureTimeWageInput_Testimoney.Y
            ZIndex: =27

        MeasureTimePeopleInput_Testimoney As text:
            Align: =Center
            BorderColor: =RGBA(166,166,166,1)
            BorderThickness: =1
            Default: =ConfigureThisMeasure.TimeMathNumPeople
            Height: =Self.Width
            HintText: |-
                ="#"
            HoverBorderColor: =Self.BorderColor
            HoverFill: =Self.Fill
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Visible: =ConfigureThisMeasure.MeasureType=MeasureTypeOptions.Time && If(CountRows(ThisTestimoneyMeasures)>0, true, false)
            Width: =If(Self.Visible, 60, 0)
            X: =MeasureNameLabel_Testimoney.X+20
            Y: =MeasureTimePeopleLabel_Testimoney.Y+MeasureTimePeopleLabel_Testimoney.Height+5
            ZIndex: =28

        MeasureTimePeopleLabel_Testimoney As label:
            Color: =RGBA(51,51,51,1)
            FontWeight: =Bold
            Height: =50
            Size: =14
            Text: ="Number people performing the task"
            Visible: =ConfigureThisMeasure.MeasureType=MeasureTypeOptions.Time && If(CountRows(ThisTestimoneyMeasures)>0, true, false)
            Width: =If(Self.Visible, 220, 0)
            X: =MeasureNameLabel_Testimoney.X
            Y: |
                =MeasureParticipantInput_Testimoney.Y+MeasureParticipantInput_Testimoney.Height+10
            ZIndex: =29

