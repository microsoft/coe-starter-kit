UpdateStatus As screen:
    Height: =Max(App.Height, App.DesignHeight)
    OnVisible: =Reset(AssignToOptions);
    Width: =Max(App.Width, App.DesignWidth)

    TestWarningEmail As label:
        Align: =Left
        Color: =RGBA(51,51,51, 1)
        FontWeight: =Normal
        OnSelect: |-
            =Set(varTo, Concatenate(OurIdea.CurrentDevOwner.'Primary Email',  "; ", OurIdea.ThisIdeaVotersEmail,  OurIdea.ThisIdeaWorkItemCreatorsEmail));
            Set(varSubject, "Ready for testing: " & OurIdea.'Display Name');
            Set(varBody, "Hello, A solution for this idea is ready for testing. <b> <a href=" & ThisAppLink & "?InputIdeaGUID=" & OurIdeaGUID & ">" & OurIdea.'Display Name' & "</a></b><br>
            You are listed as an interested party and as such I wanted to reach out for you to take a look: <br>
            <li> In order to test, please do the following:
            <li> You should expect to see improvements to the following measures: 
            <li> The following measures are not yet improved:
            ");
            Navigate(Email)
        Size: =14
        Text: ="Send for testing"
        Underline: =true
        Visible: =StatusOptions.Selected.Value = BacklogStatusOptions.'Partially Complete' || StatusOptions.Selected.Value = BacklogStatusOptions.Complete
        Width: =600
        X: =StatusLabel.X+10
        Y: =TestWarning.Y+TestWarning.Height
        ZIndex: =1

    TestWarning As label:
        Color: =RGBA(210, 60, 67, 1)
        FontWeight: =Normal
        Size: =14
        Text: |-
            ="Before marking " &
            If(StatusOptions.Selected.Value = BacklogStatusOptions.'Partially Complete', "partially complete", "complete")
            & ", we suggest you send for testing."
        Visible: =(StatusOptions.Selected.Value = BacklogStatusOptions.'Partially Complete' || StatusOptions.Selected.Value = BacklogStatusOptions.Complete) && AssignNewDev = false
        Width: =600
        X: =StatusLabel.X+10
        Y: =StatusLabel.Y+110
        ZIndex: =2

    RemovedWarningEmail As label:
        Align: =Left
        Color: =RGBA(51,51,51, 1)
        FontWeight: =Normal
        OnSelect: |-
            =Set(varTo, Concatenate(OurIdea.CurrentDevOwner.'Primary Email',  "; ", OurIdea.ThisIdeaVotersEmail,  OurIdea.ThisIdeaWorkItemCreatorsEmail));
            Set(varSubject, "Removing this idea: " & OurIdea.'Display Name');
            Set(varBody, "Hello, I am planning to remove this item from the Innovation Backlog. <b> <a href=" & ThisAppLink & "?InputIdeaGUID=" & OurIdeaGUID & ">" & OurIdea.'Display Name' & "</a></b><br>
            You are listed as an interested party and as such I wanted to reach out and let you know.");
            Navigate(Email)
        Size: =14
        Text: ="Email interested parties"
        Underline: =true
        Visible: =StatusOptions.Selected.Value = BacklogStatusOptions.Removed
        Width: =600
        X: =StatusLabel.X+10
        Y: =RemovedWarning.Y+RemovedWarning.Height
        ZIndex: =3

    RemovedWarning As label:
        Color: =RGBA(210, 60, 67, 1)
        FontWeight: =Normal
        Size: =14
        Text: ="Before removing, please email interseted parties to inform them."
        Visible: =StatusOptions.Selected.Value = BacklogStatusOptions.Removed
        Width: =600
        X: =StatusLabel.X+10
        Y: =StatusLabel.Y+110
        ZIndex: =4

    StaticStatus_1 As label:
        Color: =RGBA(102, 102, 102, 1)
        OnSelect: |
            =//update idea to this new status in backend, collection, and variable
            UpdateIf(AllIdeas, 'Innovation Backlog Idea'=OurIdeaGUID, {CurrentDevOwner: Blank()});
            Set(OurIdea, LookUp(AllIdeas, ThisIdeaGUID=OurIdeaGUID));
            
            UpdateIf('Innovation Backlog Ideas', 'Innovation Backlog Idea'= OurIdeaGUID, {CurrentDevOwner: OurIdea.CurrentDevOwner});
            
            Set(ActionSuccess, true);
            Set(ActionStatus, "Set to Available");
            
            Back();
        Text: ="Clear Owner"
        Underline: =true
        Visible: =AssignNewDev
        Width: =118
        X: =778
        Y: =191
        ZIndex: =5

    AssignToOptions As combobox:
        BorderColor: =RGBA(166,166,166, 1)
        ChevronBackground: =RGBA(56, 96, 178, 0)
        ChevronDisabledFill: =RGBA(244, 244, 244, 0)
        ChevronFill: =RGBA(51,51,51, 1)
        ChevronHoverBackground: =RGBA(56, 96, 178, 0)
        ChevronHoverFill: =Self.ChevronFill
        Color: =RGBA(51,51,51, 1)
        DefaultSelectedItems: =If(IsBlank(OurIdea.CurrentDevOwner), [UserObject.'Full Name'], [OurIdea.CurrentDevOwner.'Full Name'])
        DisplayFields: =["fullname"]
        InputTextPlaceholder: ="Select developer"
        Items: =SortByColumns(Users, "fullname")
        NoSelectionText: ="Select developer"
        SearchFields: =["fullname"]
        SearchItems: =Search(SortByColumns(Users, "fullname"),AssignToOptions.SearchText,"fullname")
        SelectionTagFill: =Transparent
        SelectMultiple: =false
        Visible: =StatusOptions.Selected.Value = BacklogStatusOptions.'In Progress' || AssignNewDev
        Width: =522
        X: =StatusOptions.X
        Y: =AssignToLabel.Y + AssignToLabel.Height + 10
        ZIndex: =7

    AssignToLabel As label:
        Color: =RGBA(51,51,51, 1)
        FontWeight: =Semibold
        Size: =17
        Text: ="Assign to"
        Visible: =StatusOptions.Selected.Value = BacklogStatusOptions.'In Progress' || AssignNewDev
        X: =StatusLabel.X
        Y: =StatusLabel.Y+110
        ZIndex: =8

    NewWarningEmail As label:
        Align: =Left
        Color: =RGBA(51,51,51, 1)
        FontWeight: =Normal
        OnSelect: |-
            =Set(varTo, OurIdea.CurrentDevOwner.'Primary Email');
            Set(varSubject, "Resetting: " & OurIdea.'Display Name');
            Set(varBody, "Hello, I plan to reset this idea as new  <b> <a href=" & ThisAppLink & "?InputIdeaGUID=" & OurIdeaGUID & ">" & OurIdea.'Display Name' & "</a></b><br>
            You are listed as the developer for it, and so I wanted to let you know.");
            Navigate(Email)
        Size: =14
        Text: ="Email " & OurIdea.CurrentDevOwner.'Full Name'
        Underline: =true
        Visible: =StatusOptions.Selected.Value = BacklogStatusOptions.New && !IsBlank(OurIdea.CurrentDevOwner)
        Width: =600
        X: =StatusLabel.X+10
        Y: =NewWarning.Y+NewWarning.Height
        ZIndex: =9

    NewWarning As label:
        Color: =RGBA(210, 60, 67, 1)
        FontWeight: =Normal
        Size: =14
        Text: |-
            ="Setting to new will remove current dev: " & OurIdea.CurrentDevOwner.'Full Name'
        Visible: =StatusOptions.Selected.Value = BacklogStatusOptions.New && !IsBlank(OurIdea.CurrentDevOwner)
        Width: =600
        X: =StatusLabel.X+10
        Y: =StatusLabel.Y+110
        ZIndex: =10

    StaticStatus As label:
        Color: =RGBA(102, 102, 102, 1)
        Text: =" " & NewStatusDefault
        Visible: =AssignNewDev
        Width: =522
        X: =StatusOptions.X
        Y: =StatusOptions.Y
        ZIndex: =11

    StatusOptions As dropdown:
        BorderColor: =RGBA(166, 166, 166, 1)
        ChevronBackground: =RGBA(56, 96, 178, 0)
        ChevronFill: =RGBA(51,51,51, 1)
        Color: =RGBA(102, 102, 102, 1)
        Default: =NewStatusDefault
        Items: =Choices(BacklogStatusOptions)
        Visible: =!AssignNewDev
        Width: =522
        X: =StatusLabel.X+10
        Y: =StatusLabel.Y+StatusLabel.Height+10
        ZIndex: =12

    StatusLabel As label:
        Color: =RGBA(51,51,51, 1)
        FontWeight: =Semibold
        Size: =17
        Text: ="Status"
        X: =366
        Y: =81
        ZIndex: =13

    "'Header-UpdateStatus' As group":
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =22

        "'HeaderBox-UpdateStatus' As rectangle":
            BorderColor: =RGBA(234, 234, 234, 1)
            BorderThickness: =1
            Fill: =RGBA(0, 0, 0, 0)
            Height: =65
            Width: =Parent.Width
            ZIndex: =14

        "'Save-UpdateStatus' As button":
            Fill: =RGBA(0,108,191,1)
            FontWeight: =FontWeight.Bold
            OnSelect: |-
                =/****update data based on what was selected*****/
                //if set to in progress
                If(StatusOptions.Selected.Value = BacklogStatusOptions.'In Progress',
                   //update idea to this new status in backend, collection, and variable
                   UpdateIf('Innovation Backlog Ideas', 'Innovation Backlog Idea'= OurIdeaGUID, 
                             {CurrentDevOwner: If(IsBlank(First(AssignToOptions.SelectedItems).User), If(IsBlank(OurIdea.CurrentDevOwner), UserObject, OurIdea.CurrentDevOwner), First(AssignToOptions.SelectedItems)), 
                             IdeaStatus: BacklogStatusOptions.'In Progress'});
                   UpdateIf(AllIdeas, 'Innovation Backlog Idea'=OurIdeaGUID, 
                             {CurrentDevOwner: AssignToOptions.Selected, IdeaStatus: BacklogStatusOptions.'In Progress'});
                   Set(OurIdea, LookUp(AllIdeas, ThisIdeaGUID=OurIdeaGUID));
                   
                   //update filter on browser page
                   Remove(StateFilterDefaultColl, [BacklogStatusOptions.'In Progress']);
                   Collect(StateFilterDefaultColl, [BacklogStatusOptions.'In Progress']););
                
                //if set to in new
                If(StatusOptions.Selected.Value = BacklogStatusOptions.New,
                   //update idea to this new status in backend, collection, and variable
                   UpdateIf(AllIdeas, 'Innovation Backlog Idea'=OurIdeaGUID, {CurrentDevOwner: Blank(), IdeaStatus: BacklogStatusOptions.New});
                   Set(OurIdea, LookUp(AllIdeas, ThisIdeaGUID=OurIdeaGUID));
                   UpdateIf('Innovation Backlog Ideas', 'Innovation Backlog Idea'= OurIdeaGUID, {CurrentDevOwner: OurIdea.CurrentDevOwner, IdeaStatus: BacklogStatusOptions.New});
                
                   //update filter on browser page
                   Remove(StateFilterDefaultColl, [BacklogStatusOptions.New]);
                   Collect(StateFilterDefaultColl, [BacklogStatusOptions.New]););
                
                //if set to in removed
                If(StatusOptions.Selected.Value = BacklogStatusOptions.Removed,
                   //update idea to this new status in backend, collection, and variable
                   UpdateIf(AllIdeas, 'Innovation Backlog Idea'=OurIdeaGUID, {CurrentDevOwner: Blank(), IdeaStatus: BacklogStatusOptions.Removed});
                   Set(OurIdea, LookUp(AllIdeas, ThisIdeaGUID=OurIdeaGUID));
                   UpdateIf('Innovation Backlog Ideas', 'Innovation Backlog Idea'= OurIdeaGUID, {CurrentDevOwner: OurIdea.CurrentDevOwner, IdeaStatus: BacklogStatusOptions.Removed});
                
                   //update filter on browser page
                   Remove(StateFilterDefaultColl, [BacklogStatusOptions.Removed]);
                   Collect(StateFilterDefaultColl, [BacklogStatusOptions.Removed]););
                   
                
                //if set to in partially complete
                If(StatusOptions.Selected.Value = BacklogStatusOptions.'Partially Complete',
                   //assign dev if one does not exist
                   If(IsBlank(OurIdea.CurrentDevOwner), UpdateIf('Innovation Backlog Ideas', 'Innovation Backlog Idea'= OurIdeaGUID, {CurrentDevOwner: UserObject}));
                
                   //update idea to this new status in backend, collection, and variable
                   UpdateIf(AllIdeas, 'Innovation Backlog Idea'=OurIdeaGUID, 
                          {CurrentDevOwner: OurIdea.CurrentDevOwner, IdeaStatus: BacklogStatusOptions.'Partially Complete'});
                   Set(OurIdea, LookUp(AllIdeas, ThisIdeaGUID=OurIdeaGUID));
                   UpdateIf('Innovation Backlog Ideas', 'Innovation Backlog Idea'= OurIdeaGUID, 
                          {CurrentDevOwner: OurIdea.CurrentDevOwner, IdeaStatus: BacklogStatusOptions.'Partially Complete'});
                
                   //update filter on browser page
                   Remove(StateFilterDefaultColl, [BacklogStatusOptions.'Partially Complete']);
                   Collect(StateFilterDefaultColl, [BacklogStatusOptions.'Partially Complete']);
                
                   //prepare for new solution information
                   Set(SolnForFeedbackGUID, Blank()););
                
                //if set to in complete
                If(StatusOptions.Selected.Value = BacklogStatusOptions.Complete,
                   //assign dev if one does not exist
                   If(IsBlank(OurIdea.CurrentDevOwner), UpdateIf('Innovation Backlog Ideas', 'Innovation Backlog Idea'= OurIdeaGUID, {CurrentDevOwner: UserObject}));
                
                   //update idea to this new status in backend, collection, and variable
                   UpdateIf(AllIdeas, 'Innovation Backlog Idea'=OurIdeaGUID, 
                          {CurrentDevOwner: OurIdea.CurrentDevOwner, IdeaStatus: BacklogStatusOptions.Complete});
                   Set(OurIdea, LookUp(AllIdeas, ThisIdeaGUID=OurIdeaGUID));
                   UpdateIf('Innovation Backlog Ideas', 'Innovation Backlog Idea'= OurIdeaGUID, 
                          {CurrentDevOwner: OurIdea.CurrentDevOwner, IdeaStatus: BacklogStatusOptions.Complete});
                
                   //update filter on browser page
                   Remove(StateFilterDefaultColl, [BacklogStatusOptions.Complete]);
                   Collect(StateFilterDefaultColl, [BacklogStatusOptions.Complete]);
                   
                
                   //prepare for new solution information
                   Set(SolnForFeedbackGUID, Blank()););
                
                /****this part can be removed with fix to delegation issue of BacklogStatusOptions and In*****/
                //update workitems
                UpdateIf('Innovation Backlog Workitems', BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID, {IdeaStatus: OurIdea.IdeaStatus});
                UpdateIf(AllWorkItems, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID, {IdeaStatus: OurIdea.IdeaStatus});
                //update votes
                UpdateIf('Backlog Idea Votes', BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID, {IdeaStatus: OurIdea.IdeaStatus});
                UpdateIf(AllVotes, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID, {IdeaStatus: OurIdea.IdeaStatus});
                //update complexity
                UpdateIf('Backlog Item Complexities', BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID, {IdeaStatus: OurIdea.IdeaStatus});
                UpdateIf(AllComplexity, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID, {IdeaStatus: OurIdea.IdeaStatus});
                //update measures
                UpdateIf('Backlog Item MeasureSets', BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID, {IdeaStatus: OurIdea.IdeaStatus});
                UpdateIf(AllMeasures, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID, {IdeaStatus: OurIdea.IdeaStatus});
                //update painpoints
                UpdateIf('Backlog Item PainPointSets', BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID, {IdeaStatus: OurIdea.IdeaStatus});
                UpdateIf(PainPointMap, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID, {IdeaStatus: OurIdea.IdeaStatus});
                //update solutions
                UpdateIf('Backlog Item Solutions', BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID, {IdeaStatus: OurIdea.IdeaStatus});
                UpdateIf(AllSolutions, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID, {IdeaStatus: OurIdea.IdeaStatus});
                //update testimonials
                UpdateIf('Backlog Item Testimonials', BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID, {IdeaStatus: OurIdea.IdeaStatus});
                UpdateIf(AllTestimony, BacklogIdea.'Innovation Backlog Idea'=OurIdeaGUID, {IdeaStatus: OurIdea.IdeaStatus});
                
                ForAll(OurIdea.ThisIdeaWorkItems, 
                   //update tools
                   UpdateIf('Backlog Item Toolsets', admin_BacklogItem.'Innovation Backlog Workitem'=admin_innovationbacklogworkitemid , {admin_ideastatus: OurIdea.IdeaStatus});
                   UpdateIf(ToolsetMap, admin_BacklogItem.'Innovation Backlog Workitem'=admin_innovationbacklogworkitemid, {admin_ideastatus: OurIdea.IdeaStatus});
                   //update personas
                   UpdateIf('Backlog Item Personasets', admin_BacklogItem.'Innovation Backlog Workitem'=admin_innovationbacklogworkitemid , {admin_ideastatus: OurIdea.IdeaStatus});
                   //update workflow
                   UpdateIf('Backlog Item Workflows', admin_BacklogItem.'Innovation Backlog Workitem'=admin_innovationbacklogworkitemid , {admin_ideastatus: OurIdea.IdeaStatus});
                   //update documents
                   UpdateIf('Backlog Item Documentsets', admin_BacklogItem.'Innovation Backlog Workitem'=admin_innovationbacklogworkitemid , {admin_ideastatus: OurIdea.IdeaStatus});
                
                );
                /****END*****/
                
                Set(ActionSuccess, true);
                Set(ActionStatus, "Status updated");
                
                If(OurIdea.IdeaStatus=BacklogStatusOptions.'Partially Complete' || OurIdea.IdeaStatus=BacklogStatusOptions.Complete, 
                   Navigate(IdeaSolutionDetails), Back());
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Text: ="Save"
            X: =1180
            Y: =('HeaderBox-UpdateStatus'.Height/2)-(Self.Height/2)
            ZIndex: =15

        "'Cancel-UpdateStatus' As button":
            Color: =RGBA(102, 102, 102, 1)
            Fill: =RGBA(255, 255, 255, 1)
            FontWeight: =FontWeight.Bold
            OnSelect: |-
                =Set(ActionSuccess, false);
                Set(ActionStatus, "Status not updated");
                Back();
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Text: ="Cancel"
            X: =990
            Y: =('HeaderBox-UpdateStatus'.Height/2)-(Self.Height/2)
            ZIndex: =16

        "'HeaderText-UpdateStatus' As label":
            Color: =RGBA(51,51,51, 1)
            FontWeight: =Semibold
            PaddingBottom: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =22
            Text: ="Editing " & OurIdea.'Display Name' & If(AssignNewDev, " developer", " status")
            Width: =850
            X: =80
            Y: =('HeaderBox-UpdateStatus'.Height/2)-(Self.Height/2)
            ZIndex: =17

        "'Back-UpdateStatus' As icon.ArrowLeft":
            Color: =RGBA(0, 120, 212, 1)
            Height: =Self.Width
            Icon: =Icon.ArrowLeft
            OnSelect: =Back()
            Width: =40
            X: =25
            Y: =('HeaderBox-UpdateStatus'.Height/2)-(Self.Height/2)
            ZIndex: =18

