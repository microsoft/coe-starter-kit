Home As screen:
    BackgroundImage: =
    Height: =Max(App.Height, App.DesignHeight)
    OnVisible: |-
        =If(ReinitializeHome,
        Select(fncInitializeHome))
    Width: =Max(App.Width, App.DesignWidth)

    SearchBox As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =12

        txtSearch As text:
            AccessibleLabel: ="Search Solutions"
            Clear: =false
            Default: =""
            DelayOutput: =true
            Height: =46
            HintText: ="Search Solutions"
            HoverBorderColor: =ColorFade(txtSearch.BorderColor, 20%)
            HoverColor: =ColorFade(txtSearch.Color, 20%)
            HoverFill: =ColorFade(txtSearch.Fill, 20%)
            OnSelect: =
            PaddingLeft: =10
            PressedBorderColor: =txtSearch.HoverBorderColor
            PressedColor: =txtSearch.Color
            PressedFill: =txtSearch.Fill
            Width: =364
            X: =1532
            Y: =90
            ZIndex: =19

        icoSearch As icon.Search:
            AccessibleLabel: ="Search Solutions"
            BorderColor: =ColorFade(icoSearch.Fill, -20%)
            Color: =PrimaryColor2Value
            DisabledFill: =ColorFade(icoSearch.Fill, -80%)
            Height: =43
            HoverBorderColor: =ColorFade(icoSearch.BorderColor, 20%)
            HoverColor: =ColorFade(icoSearch.Color, 20%)
            HoverFill: =ColorFade(icoSearch.Fill, 20%)
            Icon: =If(Len(txtSearch.Text) = 0, Icon.Search, Icon.Cancel)
            OnSelect: =If(icoSearch.Icon = Icon.Cancel, Reset(txtSearch))
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            PressedBorderColor: =ColorFade(icoSearch.BorderColor, -20%)
            PressedColor: =ColorFade(icoSearch.Color, -20%)
            PressedFill: =ColorFade(icoSearch.Fill, -20%)
            Width: =51
            X: =1845
            Y: =91
            ZIndex: =21

    FooterContainer As groupContainer.horizontalAutoLayoutContainer:
        DisplayMode: =DisplayMode.Edit
        Height: =42
        Width: =1880
        X: =20
        Y: =1036
        ZIndex: =15

        lblCurrentSettings As label:
            Align: =Align.Center
            Text: |-
                ="ALM Accelerator Environment: " & LookUp(AllEnvironments, name = ExecutingEnvironment.tags.environmentName).properties.linkedEnvironmentMetadata.friendlyName & " â—¾ " & "Maker Environment: " & glrlEnvironments.Selected.lblEnvironments.Text
            Width: =1880
            ZIndex: =1

    lblAppTitle As label:
        Align: =Center
        Color: =RGBA(255, 255, 255, 1)
        Fill: =PrimaryColor2Value
        Font: =Font.'Segoe UI'
        FontWeight: =Semibold
        Height: =68
        OnSelect: =
        Size: =20
        Text: ="Power Platform ALM Accelerator"
        Width: =1920
        ZIndex: =16

    "glrSolutions As gallery.'BrowseLayout_Vertical_TwoTextVariant_ver4.0'":
        AccessibleLabel: ="Solutions"
        Fill: =RGBA(255,255, 255, 1)
        Height: =854
        Items: =Search(Sort(SelectedEnvironmentSolutions, friendlyname), txtSearch.Text, "friendlyname")
        Layout: =Layout.Vertical
        OnSelect: =
        TemplatePadding: =0
        TemplateSize: =80
        Width: =App.Width - 40
        X: =20
        Y: =182
        ZIndex: =18

        Title2 As label:
            Color: =RGBA(0, 0, 0, 1)
            FontWeight: =Normal
            Height: =37
            OnSelect: =
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =15
            Text: =ThisItem.friendlyname
            Tooltip: =ThisItem.friendlyname
            VerticalAlign: =VerticalAlign.Top
            Width: =362
            Wrap: =false
            X: =13
            Y: =17
            ZIndex: =1

        Separator2 As rectangle:
            BorderColor: =ColorFade(Separator2.Fill, -20%)
            DisabledFill: =Separator2.Fill
            Fill: |-
                =ColorValue("#f4f3f2")
            Height: =1
            HoverFill: =ColorFade(Separator2.Fill, 20%)
            OnSelect: =Select(Parent)
            PressedFill: =ColorFade(Separator2.Fill, -20%)
            Width: =Parent.TemplateWidth
            Y: =Parent.TemplateHeight - 1
            ZIndex: =2

        btnCreatePullRequest As button:
            BorderColor: =PrimaryColor2Value
            BorderThickness: =1
            Color: =PrimaryColor2Value
            DisplayMode: |-
                =If(
                    IsBlank(
                        LookUp(
                            SolutionsLatestBuildStatuses,
                            uniquename = ThisItem.uniquename
                        ).deleteSolutionStatus.buildNumber
                    ) And !IsBlankOrError(ThisItem.deploymentprofile),
                    DisplayMode.Edit,
                    DisplayMode.Disabled
                )
            Fill: =White
            FontWeight: =Normal
            Height: =45
            HoverBorderColor: =ColorFade(btnCreatePullRequest.BorderColor, 20%)
            HoverColor: =ColorFade(btnCreatePullRequest.Color, 20%)
            HoverFill: =ColorFade(btnCreatePullRequest.Fill, 20%)
            OnSelect: |
                =UpdateContext(
                    {
                        showDialogOverlay: true
                    }
                );
                
                Reset(drpPRDeploymentProfiles);
                UpdateContext(
                    {
                        LastDeployRequest: First(
                            Filter(
                                glrSolutions.Selected.deploymentrequests,
                                'Request Type' = [@Type].Deploy And 'Created By'.User = gblCdsUser.User
                            )
                        )
                    }
                );
                If(
                    IsBlankOrError(LastDeployRequest) Or IsBlankOrError(LastDeployRequest.'Target Branch'),
                    UpdateContext(
                        {
                            locDefaultBranchForCommit: LookUp(
                                SelectedRepoBranches,
                                glrSolutions.Selected.uniquename in DisplayName,
                                DisplayName
                            )
                        }
                    ),
                    UpdateContext({locDefaultBranchForCommit: LastDeployRequest.'Target Branch'})
                );
                UpdateContext(
                    {
                        locTargetBranchForPullRequest: LookUp(
                            SelectedRepoBranches,
                            glrSolutions.Selected.uniquename in DisplayName,
                            DisplayName
                        )
                    }
                );
                UpdateContext(
                    {
                        showPullRequestDialog: true
                    }
                );
            PressedBorderColor: =btnCreatePullRequest.Fill
            PressedColor: =btnCreatePullRequest.Fill
            PressedFill: =btnCreatePullRequest.Color
            Size: =11
            Text: ="DEPLOY SOLUTION"
            Tooltip: =
            Width: =200
            X: =776
            Y: =17
            ZIndex: =3

        lblOpenSolution As label:
            Color: =RGBA(0, 134, 208, 1)
            Height: =29
            LineHeight: =1.6
            OnSelect: =
            PaddingLeft: =0
            Size: =12
            Text: ="Open Solution"
            Underline: =true
            Width: =117
            X: =13
            Y: =42
            ZIndex: =4

        Image2 As image:
            BorderColor: =ColorFade(Image2.Fill, -20%)
            Height: =30
            HoverBorderColor: =ColorFade(Image2.BorderColor, 20%)
            HoverFill: =ColorFade(Image2.Fill, 20%)
            Image: =ic_fluent_error_circle_24_regular
            OnSelect: =Select(Parent)
            PaddingBottom: =2
            PaddingLeft: =2
            PaddingRight: =2
            PaddingTop: =2
            PressedBorderColor: =ColorFade(Image2.BorderColor, -20%)
            PressedFill: =ColorFade(Image2.Fill, -20%)
            Tooltip: =
            Visible: |-
                =//CurrentProjects.'Project Status' = 'Project Status'.Failed || CurrentProjects.ErrorType = ErrorType.'Deployment Failed'
                false
            Width: =30
            X: =1472
            Y: =33
            ZIndex: =5

        btnCommitAndPush As button:
            BorderColor: =PrimaryColor2Value
            BorderThickness: =1
            Color: =PrimaryColor2Value
            DisplayMode: |-
                =If(
                    IsBlank(
                        LookUp(
                            SolutionsLatestBuildStatuses,
                            uniquename = ThisItem.uniquename
                        ).deleteSolutionStatus.buildNumber
                    ) And !IsBlankOrError(ThisItem.deploymentprofile),
                    DisplayMode.Edit,
                    DisplayMode.Disabled
                )
            Fill: =White
            FontWeight: =Normal
            Height: =45
            HoverBorderColor: =ColorFade(btnCommitAndPush.BorderColor, 20%)
            HoverColor: =ColorFade(btnCommitAndPush.Color, 20%)
            HoverFill: =ColorFade(btnCommitAndPush.Fill, 20%)
            OnSelect: |
                =UpdateContext(
                    {
                        showDialogOverlay: true
                    }
                );
                
                ClearCollect(
                    SelectedProjectRepos,
                    CustomAzureDevOps.GetGitRepos(
                        glrSolutions.Selected.deploymentprofile.'AzDO Organization',
                        glrSolutions.Selected.deploymentprofile.'AzDO Project'
                    ).value
                );
                Clear(SelectedRepoBranches);
                If(
                    CountRows(
                        Filter(
                            SelectedProjectRepos,
                            id = glrSolutions.Selected.deploymentprofile.'Repository ID'
                        )
                    ) > 0,
                    Collect(
                        SelectedRepoBranches,
                        AddColumns(
                            Filter(
                                CustomAzureDevOps.GetBranches(
                                    glrSolutions.Selected.deploymentprofile.'AzDO Organization',
                                    glrSolutions.Selected.deploymentprofile.'AzDO Project',
                                    glrSolutions.Selected.deploymentprofile.'Repository ID'
                                ).value,
                                "refs/heads/" in name
                            ),
                            "DisplayName",
                            Substitute(
                                name,
                                "refs/heads/",
                                ""
                            )
                        )
                    )
                );
                SortByColumns(
                    SelectedRepoBranches,
                    "DisplayName"
                );
                ClearCollect(
                    SelectedProfileSteps,
                    Filter(
                        'Deployment Steps',
                        'Deployment Profile'.'Deployment Profile' = glrSolutions.Selected.deploymentprofile.'Deployment Profile'
                    )
                );
                UpdateContext(
                    {
                        selectedStep: First(SelectedProfileSteps).Name,
                        deploymentStage: "PREPARE",
                        showCommitDialog: true
                    }
                );
            PressedBorderColor: =btnCommitAndPush.Fill
            PressedColor: =btnCommitAndPush.Fill
            PressedFill: =btnCommitAndPush.Color
            Size: =11
            Text: |
                ="PUBLISH SOLUTION"
            Width: =200
            X: =407
            Y: =17
            ZIndex: =6

        imgCommitStatus As image:
            BorderColor: =ColorFade(imgCommitStatus.Fill, -20%)
            DisplayMode: =DisplayMode.View
            Height: =46
            HoverBorderColor: =ColorFade(imgCommitStatus.BorderColor, 20%)
            HoverFill: =ColorFade(imgCommitStatus.Fill, 20%)
            Image: |-
                =//ExportToGitStatus has two outputs - status and result which are used inter variably. 
                
                With( { gitStatus: LookUp(
                            SolutionsLatestBuildStatuses,
                            uniquename = ThisItem.uniquename
                        ).exportToGitStatus.status,
                        gitResult:LookUp(
                            SolutionsLatestBuildStatuses,
                            uniquename = ThisItem.uniquename
                        ).exportToGitStatus.result},
                        If(IsBlank(gitStatus),
                            LookUp(StageStatesIcons, state = "empty").image,
                        If(gitStatus = "completed",
                            LookUp(StageStatesIcons, state =  gitResult).image,
                            LookUp(StageStatesIcons, state =  gitStatus).image)
                        )
                    )
            OnSelect: =Select(Parent);
            PaddingBottom: =10
            PaddingTop: =10
            PressedBorderColor: =ColorFade(imgCommitStatus.BorderColor, -20%)
            PressedFill: =ColorFade(imgCommitStatus.Fill, -20%)
            Tooltip: =
            Width: =149
            X: =596
            Y: =17
            ZIndex: =7

        icoLaunchExportBuildUrl As icon.Add:
            BorderColor: =ColorFade(icoLaunchExportBuildUrl.Fill, -20%)
            Color: =RGBA(0, 0, 0, 0)
            DisabledFill: =ColorFade(icoLaunchExportBuildUrl.Fill, -80%)
            Fill: =RGBA(0, 0, 0, 0)
            Height: =80
            HoverBorderColor: =ColorFade(icoLaunchExportBuildUrl.BorderColor, 20%)
            HoverColor: =ColorFade(icoLaunchExportBuildUrl.Color, 20%)
            HoverFill: =ColorFade(icoLaunchExportBuildUrl.Fill, 20%)
            Icon: =Icon.Add
            OnSelect: |
                =Select(Parent);
                Launch(
                    LookUp(
                        SolutionsLatestBuildStatuses,
                        uniquename = ThisItem.uniquename
                    ).exportToGitStatus._links.web.href
                );
            PressedBorderColor: =ColorFade(icoLaunchExportBuildUrl.BorderColor, -20%)
            PressedColor: =ColorFade(icoLaunchExportBuildUrl.Color, -20%)
            PressedFill: =ColorFade(icoLaunchExportBuildUrl.Fill, -20%)
            Tooltip: |-
                =If(
                    Not IsBlank(
                        LookUp(
                            SolutionsLatestBuildStatuses,
                            uniquename = ThisItem.uniquename
                        ).exportToGitStatus.buildNumber
                    ),
                    Concatenate(
                        Text(
                            LookUp(
                                SolutionsLatestBuildStatuses,
                                uniquename = ThisItem.uniquename
                            ).exportToGitStatus.buildNumber
                        ),
                        " @ ",
                        Text(
                            DateTimeValue(
                                LookUp(
                                    SolutionsLatestBuildStatuses,
                                    uniquename = ThisItem.uniquename
                                ).exportToGitStatus.finishTime
                            ),
                            DateTimeFormat.LongDateTime
                        )
                    ),
                    Blank()
                )
            X: =637
            ZIndex: =8

        icoOpenSolution As icon.Add:
            BorderColor: =ColorFade(icoOpenSolution.Fill, -20%)
            Color: =RGBA(0, 0, 0, 0)
            DisabledFill: =ColorFade(icoOpenSolution.Fill, -80%)
            Height: =38
            HoverBorderColor: =ColorFade(icoOpenSolution.BorderColor, 20%)
            HoverColor: =ColorFade(icoOpenSolution.Color, 20%)
            HoverFill: =ColorFade(icoOpenSolution.Fill, 20%)
            Icon: =
            OnSelect: |-
                =Select(Parent);Launch("https://make.powerapps.com/environments/" & glrlEnvironments.Selected.name & "/solutions/" & ThisItem.solutionid, "", "_blank")
            PressedBorderColor: =ColorFade(icoOpenSolution.BorderColor, -20%)
            PressedColor: =ColorFade(icoOpenSolution.Color, -20%)
            PressedFill: =ColorFade(icoOpenSolution.Fill, -20%)
            Width: =106
            X: =10
            Y: =39
            ZIndex: =14

        btnDeleteSolution As button:
            BorderColor: =PrimaryColor2Value
            BorderThickness: =1
            Color: =PrimaryColor2Value
            DisplayMode: |-
                =If(
                    IsBlank(
                        LookUp(
                            SolutionsLatestBuildStatuses,
                            uniquename = ThisItem.uniquename
                        ).deleteSolutionStatus.buildNumber
                    ),
                    DisplayMode.Edit,
                    DisplayMode.Disabled
                )
            Fill: =White
            FontWeight: =Normal
            Height: =45
            HoverBorderColor: =ColorFade(btnDeleteSolution.BorderColor, 20%)
            HoverColor: =ColorFade(btnDeleteSolution.Color, 20%)
            HoverFill: =ColorFade(btnDeleteSolution.Fill, 20%)
            OnSelect: |
                =Reset(drpDeleteDeploymentProfiles);
                UpdateContext(
                    {
                        deleteSolutionName: glrSolutions.Selected.friendlyname,
                        showDialogOverlay: true,
                        showDeleteSolutionDialog: true
                    }
                );
            PressedBorderColor: =btnDeleteSolution.Fill
            PressedColor: =btnDeleteSolution.Fill
            PressedFill: =btnDeleteSolution.Color
            Size: =11
            Text: ="DELETE SOLUTION"
            Visible: |-
                =If(
                    IsBlankOrError(DeploymentUserSetting) Or DeploymentUserSetting.'Allow Delete' = 'A Yes or No boolean'.Allowed,
                    true,
                    false
                )
            Width: =200
            X: =1481
            Y: =17
            ZIndex: =18

        imgDeleteStatus As image:
            BorderColor: =ColorFade(imgDeleteStatus.Fill, -20%)
            DisplayMode: =DisplayMode.View
            Height: =46
            HoverBorderColor: =ColorFade(imgDeleteStatus.BorderColor, 20%)
            HoverFill: =ColorFade(imgDeleteStatus.Fill, 20%)
            Image: |-
                =//DeleteSolutionStatus has two outputs - status and result which are used inter variably. 
                
                With( { gitStatus: LookUp(
                            SolutionsLatestBuildStatuses,
                            uniquename = ThisItem.uniquename
                        ).deleteSolutionStatus.status,
                        gitResult:LookUp(
                            SolutionsLatestBuildStatuses,
                            uniquename = ThisItem.uniquename
                        ).deleteSolutionStatus.result},
                        If(IsBlank(gitStatus),
                            LookUp(StageStatesIcons, state = "empty").image,
                        If(gitStatus = "completed",
                            LookUp(StageStatesIcons, state =  gitResult).image,
                            LookUp(StageStatesIcons, state =  gitStatus).image)
                        )
                    )
            OnSelect: =Select(Parent);
            PaddingBottom: =10
            PaddingTop: =10
            PressedBorderColor: =ColorFade(imgDeleteStatus.BorderColor, -20%)
            PressedFill: =ColorFade(imgDeleteStatus.Fill, -20%)
            Tooltip: =
            Visible: |-
                =If(
                    IsBlankOrError(DeploymentUserSetting) Or DeploymentUserSetting.'Allow Delete' = 'A Yes or No boolean'.Allowed,
                    true,
                    false
                )
            Width: =149
            X: =1681
            Y: =17
            ZIndex: =19

        icoLaunchDeleteBuildUrl As icon.Add:
            BorderColor: =ColorFade(icoLaunchDeleteBuildUrl.Fill, -20%)
            Color: =RGBA(0, 0, 0, 0)
            DisabledFill: =ColorFade(icoLaunchDeleteBuildUrl.Fill, -80%)
            Fill: =RGBA(0, 0, 0, 0)
            Height: =80
            HoverBorderColor: =ColorFade(icoLaunchDeleteBuildUrl.BorderColor, 20%)
            HoverColor: =ColorFade(icoLaunchDeleteBuildUrl.Color, 20%)
            HoverFill: =ColorFade(icoLaunchDeleteBuildUrl.Fill, 20%)
            Icon: =Icon.Add
            OnSelect: |
                =Select(Parent);
                Launch(
                    LookUp(
                        SolutionsLatestBuildStatuses,
                        uniquename = ThisItem.uniquename
                    ).deleteSolutionStatus._links.web.href
                );
            PressedBorderColor: =ColorFade(icoLaunchDeleteBuildUrl.BorderColor, -20%)
            PressedColor: =ColorFade(icoLaunchDeleteBuildUrl.Color, -20%)
            PressedFill: =ColorFade(icoLaunchDeleteBuildUrl.Fill, -20%)
            Tooltip: |-
                =If(
                    Not IsBlank(
                        LookUp(
                            SolutionsLatestBuildStatuses,
                            uniquename = ThisItem.uniquename
                        ).deleteSolutionStatus.buildNumber
                    ),
                    Concatenate(
                        Text(
                            LookUp(
                                SolutionsLatestBuildStatuses,
                                uniquename = ThisItem.uniquename
                            ).deleteSolutionStatus.buildNumber
                        ),
                        " @ ",
                        Text(
                            DateTimeValue(
                                LookUp(
                                    SolutionsLatestBuildStatuses,
                                    uniquename = ThisItem.uniquename
                                ).deleteSolutionStatus.finishTime
                            ),
                            DateTimeFormat.LongDateTime
                        )
                    ),
                    Blank()
                )
            Visible: |-
                =If(
                    IsBlankOrError(DeploymentUserSetting) Or DeploymentUserSetting.'Allow Delete' = 'A Yes or No boolean'.Allowed,
                    true,
                    false
                )
            X: =1718
            ZIndex: =20

        grpDevTestProdStatus As group:
            Height: =5
            Width: =5
            X: =40
            Y: =40
            ZIndex: =20

            imgPullRequestStatus As image:
                BorderColor: =ColorFade(imgPullRequestStatus.Fill, -20%)
                DisplayMode: =DisplayMode.View
                Height: =45
                HoverBorderColor: =ColorFade(imgPullRequestStatus.BorderColor, 20%)
                HoverFill: =ColorFade(imgPullRequestStatus.Fill, 20%)
                Image: |-
                    =Switch(
                        LookUp(
                            SolutionsLatestBuildStatuses,
                            uniquename = ThisItem.uniquename
                        ).pullRequestStatus.status,
                        "active",
                        LookUp(
                            StageStatesIcons,
                            state = "notStarted"
                        ).image,
                        "completed",
                        LookUp(
                            StageStatesIcons,
                            state = "succeeded"
                        ).image,
                        "abandoned",
                        LookUp(
                            StageStatesIcons,
                            state = "failed"
                        ).image,
                        LookUp(
                            StageStatesIcons,
                            state = "empty"
                        ).image
                    )
                OnSelect: =Select(Parent);
                PaddingBottom: =10
                PaddingTop: =10
                PressedBorderColor: =ColorFade(imgPullRequestStatus.BorderColor, -20%)
                PressedFill: =ColorFade(imgPullRequestStatus.Fill, -20%)
                Width: =50
                X: =1014
                Y: =21
                ZIndex: =11

            icoLaunchPullRequestUrl As icon.Add:
                BorderColor: =ColorFade(icoLaunchPullRequestUrl.Fill, -20%)
                Color: =RGBA(0, 0, 0, 0)
                DisabledFill: =ColorFade(icoLaunchPullRequestUrl.Fill, -80%)
                Fill: =RGBA(0, 0, 0, 0)
                Height: =45
                HoverBorderColor: =ColorFade(icoLaunchPullRequestUrl.BorderColor, 20%)
                HoverColor: =ColorFade(icoLaunchPullRequestUrl.Color, 20%)
                HoverFill: =ColorFade(icoLaunchPullRequestUrl.Fill, 20%)
                Icon: =Icon.Add
                OnSelect: |
                    =Select(Parent);
                    UpdateContext(
                        {
                            locPRProfile: LookUp(
                                'Deployment Profiles',
                                'Deployment Profile' = ThisItem.deploymentprofile.'Deployment Profile'
                            )
                        }
                    );
                    Launch(
                        "https://dev.azure.com/" & locPRProfile.'AzDO Organization' & "/" & locPRProfile.'AzDO Project' & "/_git/" & locPRProfile.Repository & "/pullrequest/" & LookUp(
                            SolutionsLatestBuildStatuses,
                            uniquename = ThisItem.uniquename
                        ).pullRequestStatus.pullRequestId
                    );
                PressedBorderColor: =ColorFade(icoLaunchPullRequestUrl.BorderColor, -20%)
                PressedColor: =ColorFade(icoLaunchPullRequestUrl.Color, -20%)
                PressedFill: =ColorFade(icoLaunchPullRequestUrl.Fill, -20%)
                Tooltip: |-
                    =If(
                        Not IsBlank(
                            LookUp(
                                SolutionsLatestBuildStatuses,
                                uniquename = ThisItem.uniquename
                            ).pullRequestStatus.closedDate
                        ),
                        Concatenate(
                            LookUp(
                                SolutionsLatestBuildStatuses,
                                uniquename = ThisItem.uniquename
                            ).pullRequestStatus.title,
                            " @ ",
                            Text(
                                DateTimeValue(
                                    LookUp(
                                        SolutionsLatestBuildStatuses,
                                        uniquename = ThisItem.uniquename
                                    ).pullRequestStatus.closedDate
                                ),
                                DateTimeFormat.LongDateTime
                            )
                        ),
                        Blank()
                    )
                Width: =23
                X: =1027
                Y: =21
                ZIndex: =12

        lblConfigureDeployment As label:
            Color: =RGBA(0, 134, 208, 1)
            DisplayMode: =If(!IsBlankOrError(ThisItem.deploymentprofile), DisplayMode.Edit, DisplayMode.Disabled)
            Height: =29
            LineHeight: =1.6
            OnSelect: =
            PaddingLeft: =0
            Size: =12
            Text: ="Configure Deployment Settings"
            Underline: =true
            Width: =230
            X: =130
            Y: =42
            ZIndex: =21

        icoConfigureDeployment As icon.Add:
            BorderColor: =ColorFade(icoConfigureDeployment.Fill, -20%)
            Color: =RGBA(0, 0, 0, 0)
            DisabledFill: =ColorFade(icoConfigureDeployment.Fill, -80%)
            DisplayMode: =If(!IsBlankOrError(ThisItem.deploymentprofile), DisplayMode.Edit, DisplayMode.Disabled)
            Height: =38
            HoverBorderColor: =ColorFade(icoConfigureDeployment.BorderColor, 20%)
            HoverColor: =ColorFade(icoConfigureDeployment.Color, 20%)
            HoverFill: =ColorFade(icoConfigureDeployment.Fill, 20%)
            Icon: =
            OnSelect: |-
                =Set(ReturnScreen, Home);
                Set(ReinitializeHome, false);
                Set(SelectedDeploymentProfile, glrSolutions.Selected.deploymentprofile);
                Set(SelectedDeploymentStep, First(glrSolutions.Selected.deploymentprofile.'Deployment Steps'));
                Set(SelectedSolutionToConfigure, glrSolutions.Selected);
                Navigate(DeploymentSettingsScreen, ScreenTransition.Fade)
            PressedBorderColor: =ColorFade(icoConfigureDeployment.BorderColor, -20%)
            PressedColor: =ColorFade(icoConfigureDeployment.Color, -20%)
            PressedFill: =ColorFade(icoConfigureDeployment.Fill, -20%)
            Width: =220
            X: =130
            Y: =39
            ZIndex: =22

        lblSolutionDeploymentProfile As label:
            Align: =Align.Center
            Color: =RGBA(0, 134, 208, 1)
            FontWeight: =Normal
            Height: =37
            OnSelect: =
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =13
            Text: =If(!IsBlankOrError(ThisItem.deploymentprofile), ThisItem.deploymentprofile.Name, "Choose a Profile")
            Tooltip: =ThisItem.friendlyname
            Underline: =true
            VerticalAlign: =VerticalAlign.Top
            Width: =400
            Wrap: =false
            X: =1066
            Y: =17
            ZIndex: =23

        lblSolutionDeploymentProfileSteps As label:
            Align: =Align.Center
            Color: =RGBA(0, 0, 0, 1)
            FontWeight: =Normal
            Height: =29
            LineHeight: =1.6
            OnSelect: =
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =12
            Text: =If(!IsBlankOrError(ThisItem.deploymentprofile), Concat(ThisItem.deploymentprofile.'Deployment Steps', Name, " - "), "No Profile Selected")
            Tooltip: =ThisItem.friendlyname
            Width: =400
            Wrap: =false
            X: =1066
            Y: =42
            ZIndex: =24

        icoDeploymentProfile As icon.Add:
            BorderColor: =ColorFade(icoDeploymentProfile.Fill, -20%)
            Color: =RGBA(0, 0, 0, 0)
            DisabledFill: =ColorFade(icoDeploymentProfile.Fill, -80%)
            Height: =30
            HoverBorderColor: =ColorFade(icoDeploymentProfile.BorderColor, 20%)
            HoverColor: =ColorFade(icoDeploymentProfile.Color, 20%)
            HoverFill: =ColorFade(icoDeploymentProfile.Fill, 20%)
            Icon: =Icon.Add
            OnSelect: |
                =If(
                    !IsBlankOrError(glrSolutions.Selected.deploymentprofile),
                    UpdateContext({SelectedDeploymentProfile: glrSolutions.Selected.deploymentprofile}),
                    UpdateContext({SelectedDeploymentProfile: First('Deployment Profiles')})
                );
                UpdateContext(
                    {
                        showDialogOverlay: true,
                        showDeploymentProfileDialog: true
                    }
                );
            PressedBorderColor: =ColorFade(icoDeploymentProfile.BorderColor, -20%)
            PressedColor: =ColorFade(icoDeploymentProfile.Color, -20%)
            PressedFill: =ColorFade(icoDeploymentProfile.Fill, -20%)
            Width: =400
            X: =1066
            Y: =16
            ZIndex: =25

    PreLoader As Preloader:
        Height: =1012
        IsLoading: =showLoader
        SpinnerColorHex: =LookUp(PreLoader.Styles, Name = "PrimaryColor2Value").Value
        Styles: =ComponentStyles
        Visible: =PreLoader.IsLoading
        Width: =1920
        Y: =68
        ZIndex: =26

    DialogOverlay As rectangle:
        BorderColor: =ColorFade(DialogOverlay.Fill, -20%)
        DisabledFill: =DialogOverlay.Fill
        Fill: =RGBA(0, 0, 0, .5)
        Height: =1080
        HoverFill: =RGBA(0, 0, 0, .5)
        PressedFill: =ColorFade(DialogOverlay.Fill, -20%)
        Visible: =showDialogOverlay
        Width: =1920
        ZIndex: =27

    icoSelectEnvironment As icon.Add:
        AccessibleLabel: ="Select Environment"
        BorderColor: =ColorFade(icoSelectEnvironment.Fill, -20%)
        Color: =PrimaryColor2Value
        DisabledColor: =ColorFade(icoSelectEnvironment.Color, 50%)
        DisabledFill: =ColorFade(icoSelectEnvironment.Fill, -80%)
        Height: =53
        HoverBorderColor: =ColorFade(icoSelectEnvironment.BorderColor, 20%)
        HoverColor: =ColorFade(icoSelectEnvironment.Color, 20%)
        HoverFill: =ColorFade(icoSelectEnvironment.Fill, 20%)
        Icon: =
        OnSelect: |-
            =UpdateContext(
                {
                    showDialogOverlay: true,
                    showEnvironmentDialog: true
                }
            )
        PaddingBottom: =8
        PaddingLeft: =8
        PaddingRight: =5
        PaddingTop: =8
        PressedBorderColor: =ColorFade(icoSelectEnvironment.BorderColor, -20%)
        PressedColor: =ColorFade(icoSelectEnvironment.Color, -20%)
        PressedFill: =ColorFade(icoSelectEnvironment.Fill, -20%)
        Tooltip: ="Refresh Solution(s) and Statuses"
        Width: =265
        X: =1641
        Y: =8
        ZIndex: =28

    EnvironmentDialog As groupContainer:
        DisplayMode: =DisplayMode.Edit
        Fill: =PrimaryColor1Value
        Height: =1012
        Visible: =showEnvironmentDialog
        X: =1420
        Y: =68
        ZIndex: =29

        glrlEnvironments As gallery.galleryVertical:
            AccessibleLabel: ="Environments"
            Default: =DefaultEnvironmentToLoad
            Fill: =PrimaryColor1Value
            Height: =960
            Items: =AllEnvironments
            Layout: =Layout.Vertical
            OnSelect: =
            TemplateFill: =If(ThisItem.IsSelected, LightGray, Transparent)
            TemplateSize: =56
            Width: =500
            Y: =50
            ZIndex: =1

            lblEnvironments As label:
                Color: =RGBA(0, 0, 0, 1)
                FocusedBorderThickness: =FocusedBorderThicknessValue
                FontWeight: =Normal
                Height: =43
                OnSelect: |
                    =UpdateContext(
                        {
                            showDialogOverlay: false,
                            showEnvironmentDialog: false
                        }
                    );
                    Set(
                        SelectedEnvironment,
                        glrlEnvironments.Selected
                    );
                    Patch(
                        'User Settings',
                        DefaultEnvironment,
                        {Value: glrlEnvironments.Selected.name}
                    );
                    Patch(AppUserSetting_UserSettings,DefaultEnvironment,
                        {Value: glrlEnvironments.Selected.name}
                    );
                    Select(fncRefreshStatuses);
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =15
                Text: =ThisItem.properties.linkedEnvironmentMetadata.friendlyName
                Width: =400
                Wrap: =false
                X: =70
                Y: =9
                ZIndex: =1

            imgEnvironment_3 As image:
                AccessibleLabel: ="Environment"
                BorderColor: =ColorFade(imgEnvironment_3.Fill, -20%)
                Height: =43
                HoverBorderColor: =ColorFade(imgEnvironment_3.BorderColor, 20%)
                HoverFill: =ColorFade(imgEnvironment_3.Fill, 20%)
                Image: |-
                    ="data:image/svg+xml,"
                    & EncodeUrl("<svg width='16px' height='16px' xmlns='http://www.w3.org/2000/svg'><g><path fill='#742774' class='image-264' d='M15,10h-1.809C13.702,9.117,14,8.094,14,7c0-3.314-2.686-6-6-6S2,3.686,2,7c0,1.094,0.298,2.117,0.809,3H1l-1,5h16L15,10z     M4.854,10.854l-0.708-0.708C3.859,9.795,3.606,9.417,3.422,8.997h1.752c0.182,1.03,0.498,1.933,0.91,2.618   C5.632,11.427,5.228,11.16,4.854,10.854z M6.187,8.997h3.626C9.448,10.873,8.619,12,8,12S6.552,10.873,6.187,8.997z M6,7  c0-0.351,0.019-0.682,0.048-1.003h3.904C9.981,6.318,10,6.649,10,7c0,0.349-0.019,0.679-0.048,0.997H6.048C6.019,7.679,6,7.349,6,7z     M8,2c0.619,0,1.447,1.124,1.812,2.997H6.188C6.553,3.124,7.381,2,8,2z M13,7c0,0.341-0.035,0.675-0.101,0.997h-1.944   C10.982,7.672,11,7.341,11,7c0-0.342-0.018-0.676-0.045-1.003h1.944C12.965,6.321,13,6.657,13,7z M10.826,8.997h1.752   c-0.184,0.42-0.437,0.798-0.723,1.148l-0.708,0.708c-0.373,0.305-0.778,0.573-1.229,0.761C10.328,10.93,10.644,10.027,10.826,8.997z   M12.575,4.997h-1.75c-0.182-1.028-0.498-1.929-0.909-2.612C11.104,2.88,12.058,3.821,12.575,4.997z M6.084,2.385    C5.673,3.068,5.357,3.97,5.175,4.997h-1.75C3.942,3.821,4.896,2.88,6.084,2.385z M3.101,5.997h1.944C5.018,6.324,5,6.658,5,7    c0,0.341,0.018,0.672,0.045,0.997H3.101C3.035,7.675,3,7.341,3,7C3,6.657,3.035,6.321,3.101,5.997z M1.22,14l0.6-3h1.717    C4.635,12.225,6.225,13,8,13s3.365-0.775,4.463-2h1.717l0.6,3H1.22z'></path></g></svg>")
                OnSelect: |-
                    =UpdateContext(
                        {
                            showDialogOverlay: true,
                            showEnvironmentDialog: true
                        }
                    )
                PressedBorderColor: =ColorFade(imgEnvironment_3.BorderColor, -20%)
                PressedFill: =ColorFade(imgEnvironment_3.Fill, -20%)
                Width: =50
                X: =8
                Y: =9
                ZIndex: =2

        lblEnvironmentDialogEnvironments As label:
            Align: =Align.Center
            FontWeight: =Semibold
            Size: =16
            Text: ="Select your Maker Environment"
            Width: =450
            X: =12
            Y: =10
            ZIndex: =2

        icoEnvironmentsClose As icon.Cancel:
            AccessibleLabel: ="Close"
            BorderColor: =ColorFade(icoEnvironmentsClose.Fill, -20%)
            DisabledFill: =ColorFade(icoEnvironmentsClose.Fill, -80%)
            Height: =50
            HoverBorderColor: =ColorFade(icoEnvironmentsClose.BorderColor, 20%)
            HoverColor: =ColorFade(icoEnvironmentsClose.Color, 20%)
            HoverFill: =ColorFade(icoEnvironmentsClose.Fill, 20%)
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext(
                    {
                        showDialogOverlay: false,
                        showEnvironmentDialog: false
                    }
                )
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            PressedBorderColor: =ColorFade(icoEnvironmentsClose.BorderColor, -20%)
            PressedColor: =ColorFade(icoEnvironmentsClose.Color, -20%)
            PressedFill: =ColorFade(icoEnvironmentsClose.Fill, -20%)
            Width: =50
            X: =450
            Y: =5
            ZIndex: =3

    CommitDialog As groupContainer:
        DisplayMode: =DisplayMode.Edit
        Height: =1080
        Visible: =showCommitDialog
        Width: =550
        X: =1370
        ZIndex: =30

        CommitRectangle As rectangle:
            BorderColor: =ColorFade(CommitRectangle.Fill, -20%)
            DisabledFill: =CommitRectangle.Fill
            Fill: =RGBA(255, 255, 255, 1)
            Height: =1080
            HoverFill: =ColorFade(CommitRectangle.Fill, 20%)
            PressedFill: =ColorFade(CommitRectangle.Fill, -20%)
            Visible: =showCommitDialog
            Width: =550
            ZIndex: =1

        btnCommit As button:
            DisplayMode: =If(!IsBlankOrError(drpPushDeploymentProfiles) && Len(txtCommitMessage.Text)>1 && IsBlank(Find(Char(10), txtCommitMessage.Text)) && (!tglCreateBranch.Value || Len(txtBranchToCreate.Text)>1) && IsBlank(Find(" ", txtBranchToCreate.Text)), DisplayMode.Edit, DisplayMode.Disabled)
            Height: =45
            HoverBorderColor: =ColorFade(btnCommit.BorderColor, 20%)
            HoverColor: =ColorFade(btnCommit.Color, 20%)
            HoverFill: =ColorFade(btnCommit.Fill, 20%)
            OnSelect: |-
                =If(
                    deploymentStage = "PREPARE",
                    Set(
                        ReturnScreen,
                        Home
                    );
                    Set(
                        ReinitializeHome,
                        false
                    );
                    Set(
                        SelectedDeploymentProfile,
                        drpPushDeploymentProfiles.Selected
                    );
                    Set(
                        SelectedDeploymentStep,
                        First(drpPushDeploymentProfiles.Selected.'Deployment Steps')
                    );
                    Set(
                        SelectedSolutionToConfigure,
                        glrSolutions.Selected
                    );
                    Navigate(
                        DeploymentSettingsScreen,
                        ScreenTransition.Fade
                    );
                    UpdateContext({deploymentStage: "PUBLISH"});
                    ,
                    UpdateContext(
                        {
                            showDialogOverlay: false,
                            showCommitDialog: false
                        }
                    );
                    ClearCollect(
                        locPipelines,
                        CustomAzureDevOps.GetPipelines(
                            drpPushDeploymentProfiles.Selected.'AzDO Organization',
                            drpPushDeploymentProfiles.Selected.'AzDO Project'
                        ).value
                    );
                    
                //See if an export pipeline exists for the specific solution
                UpdateContext(
                        {
                            piplineIdToRun: LookUp(
                                locPipelines,
                                name = "export-solution-to-git-" & glrSolutions.Selected.uniquename
                            ).id
                        }
                    );
                    
                //If an export pipeline doesn't exist for the specific solution see if an export pipeline exists for the specific repo
                If(
                        IsBlank(piplineIdToRun),
                        UpdateContext(
                            {
                                piplineIdToRun: LookUp(
                                    locPipelines,
                                    name = "export-solution-to-git-" & drpPushDeploymentProfiles.Selected.Repository
                                ).id
                            }
                        )
                    );
                    
                //Otherwise we will default to the standard export pipeline
                If(
                        IsBlank(piplineIdToRun),
                        UpdateContext(
                            {
                                piplineIdToRun: LookUp(
                                    locPipelines,
                                    name = "export-solution-to-git"
                                ).id
                            }
                        )
                    );
                    If(
                        IsEmpty(SelectedRepoBranches),
                        UpdateContext({varBranch: txtBranch.Text}),
                        UpdateContext({varBranch: drpAdoBranches.Selected.DisplayName})
                    );
                    UpdateContext({locSolutionEnvironmentDeploySettingSearch: DeploymentSettingName & " - " & glrSolutions.Selected.uniquename});
                    ClearCollect(
                        SolutionDeploymentSettings,
                        {
                            EnvironmentUrl: LookUp(
                                AllEnvironments,
                                name = ExecutingEnvironment.tags.environmentName
                            ).properties.linkedEnvironmentMetadata.instanceUrl,
                            UserSettingId: ShowColumns(
                                Filter(
                                    'User Settings',
                                    locSolutionEnvironmentDeploySettingSearch in Name && Owner = gblCdsUser
                                ),
                                "cat_usersettingid"
                            )
                        }
                    );
                    UpdateContext(
                        {
                            publishBuildId: CustomAzureDevOps.RunPipeline(
                                drpPushDeploymentProfiles.Selected.'AzDO Organization',
                                drpPushDeploymentProfiles.Selected.'AzDO Project',
                                piplineIdToRun,
                                {
                                    definition: {id: piplineIdToRun},
                                    variables: {
                                        Project: {value: drpPushDeploymentProfiles.Selected.'AzDO Project'},
                                        Repo: {value: drpPushDeploymentProfiles.Selected.Repository},
                                        SolutionName: {value: glrSolutions.Selected.uniquename},
                                        Email: {value: gblUser.Email},
                                        UserName: {value: gblUser.FullName},
                                        CommitMessage: {value: txtCommitMessage.Text},
                                        Branch: {value: varBranch},
                                        BranchToCreate: {value: txtBranchToCreate.Text},
                                        ServiceConnection: {value: SelectedEnvironment.properties.linkedEnvironmentMetadata.instanceUrl},
                                        BuildDefinitionId: {value: ""},
                                        PipelineId: {value: piplineIdToRun},
                                        ImportUnmanaged: {value: ""},
                                        EnvironmentName: {value: ""},
                                        Data: {value: JSON(SolutionDeploymentSettings)}
                                    }
                                }
                            ).id
                        }
                    );
                    Patch(
                        'Deployment Requests',
                        {
                            Name: glrSolutions.Selected.friendlyname & " - Publish (" & Text(
                                Now(),
                                ShortDateTime
                            ) & ")",
                            'Solution Name': glrSolutions.Selected.uniquename,
                            'Deployment Profile': drpPushDeploymentProfiles.Selected,
                            'Build ID': publishBuildId,
                            'Request Type': [@Type].Publish
                        }
                    );
                    Reset(tglCreateBranch);
                    Reset(txtCommitMessage);
                    Reset(txtBranchToCreate);
                    UpdateContext({locStartCheckBuildStatusTimer: false});
                    Reset(tmrCheckBuildAndPullRequestStatuses);
                    UpdateContext({locStartCheckBuildStatusTimer: true});
                )
            PressedBorderColor: =btnCommit.Fill
            PressedColor: =btnCommit.Fill
            PressedFill: =btnCommit.Color
            Text: =deploymentStage
            Width: =200
            X: =330
            Y: =1015
            ZIndex: =2

        txtBranchToCreate As text:
            AccessibleLabel: ="Branch to Create"
            Default: =locNewBranchText
            Height: =45
            HintText: ="Enter new branch name to create branch"
            HoverBorderColor: =ColorFade(txtBranchToCreate.BorderColor, 20%)
            HoverColor: =ColorFade(txtBranchToCreate.Color, 20%)
            HoverFill: =ColorFade(txtBranchToCreate.Fill, 20%)
            OnChange: |-
                =If(
                   IsBlank(Find(" ", txtBranchToCreate.Text)),
                   true ,
                   Notify("The Branch Name cannot contain spaces. Please enter a Branch Name without spaces.",NotificationType.Error);
                )
            PressedBorderColor: =txtBranchToCreate.HoverBorderColor
            PressedColor: =txtBranchToCreate.Color
            PressedFill: =txtBranchToCreate.Fill
            Visible: =tglCreateBranch.Value && tglPublishAdvancedSettings.Value
            Width: =500
            X: =30
            Y: =436
            ZIndex: =3

        lblCommitPopUpTitle As label:
            Align: =Align.Center
            FontWeight: =Semibold
            Height: =55
            Size: =16
            Text: ="PUBLISH SOLUTION"
            Visible: =showCommitDialog
            Width: =550
            ZIndex: =4

        icoCommitDialogClose As icon.Cancel:
            AccessibleLabel: ="Close"
            BorderColor: =ColorFade(icoCommitDialogClose.Fill, -20%)
            DisabledFill: =ColorFade(icoCommitDialogClose.Fill, -80%)
            Height: =55
            HoverBorderColor: =ColorFade(icoCommitDialogClose.BorderColor, 20%)
            HoverColor: =ColorFade(icoCommitDialogClose.Color, 20%)
            HoverFill: =ColorFade(icoCommitDialogClose.Fill, 20%)
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext({showDialogOverlay: false, showCommitDialog: false})
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            PressedBorderColor: =ColorFade(icoCommitDialogClose.BorderColor, -20%)
            PressedColor: =ColorFade(icoCommitDialogClose.Color, -20%)
            PressedFill: =ColorFade(icoCommitDialogClose.Fill, -20%)
            Width: =52
            X: =498
            ZIndex: =5

        tglCreateBranch As toggleSwitch:
            AccessibleLabel: ="Create New Branch"
            FalseFill: =RGBA(237, 237, 237, 1)
            FalseHoverFill: =ColorFade(tglCreateBranch.FalseFill, 20%)
            FalseText: ="Create New Branch"
            FontWeight: =FontWeight.Semibold
            HandleFill: =If(tglCreateBranch.Value, PrimaryColor1Value, PrimaryColor2Value)
            HoverBorderColor: =ColorFade(tglCreateBranch.BorderColor, 20%)
            OnChange: =Set(locNewBranchText,  ""); Reset(txtBranchToCreate);
            PressedBorderColor: =ColorFade(tglCreateBranch.BorderColor, -20%)
            TrueHoverFill: =ColorFade(tglCreateBranch.TrueFill, 20%)
            TrueText: ="Create New Branch"
            Visible: =tglPublishAdvancedSettings.Value
            Width: =225
            X: =30
            Y: =394
            ZIndex: =6

        cntCommitAlwaysVisible As groupContainer:
            BorderColor: =RGBA(0, 0, 0, 0)
            DisplayMode: =DisplayMode.Edit
            Height: =291
            Visible: =tglPublishAdvancedSettings.Value
            Width: =498
            X: =30
            Y: =If(tglCreateBranch.Value = false, txtBranchToCreate.Y, txtBranchToCreate.Y + 45)
            ZIndex: =7

            drpAdoBranches As dropdown:
                AccessibleLabel: ="Branches"
                ChevronHoverBackground: =ColorFade(drpAdoBranches.ChevronBackground, 20%)
                ChevronHoverFill: =ColorFade(drpAdoBranches.ChevronFill, 20%)
                Default: =locDefaultBranchForCommit
                Height: =45
                HoverBorderColor: =ColorFade(drpAdoBranches.BorderColor, 20%)
                HoverColor: =ColorFade(drpAdoBranches.Color, 20%)
                HoverFill: =ColorFade(drpAdoBranches.SelectionFill, 20%)
                Items: =SelectedRepoBranches
                OnChange: =
                OnSelect: =
                PressedBorderColor: =drpAdoBranches.HoverBorderColor
                PressedColor: =drpAdoBranches.Fill
                PressedFill: =drpAdoBranches.Color
                Visible: =!IsEmpty(SelectedRepoBranches)
                Width: =498
                X: =1
                Y: =45
                ZIndex: =2

            lblBranch As label:
                FontWeight: =FontWeight.Semibold
                Height: =45
                PaddingLeft: =0
                PaddingTop: =0
                Text: =If(tglCreateBranch.Value, "Based On","Branch")
                VerticalAlign: =VerticalAlign.Bottom
                Visible: =showCommitDialog
                Width: =500
                X: =1
                ZIndex: =5

            txtBranch As text:
                AccessibleLabel: ="Branch"
                Default: =locDefaultBranchForCommit
                Height: =45
                HoverBorderColor: =ColorFade(txtBranch.BorderColor, 20%)
                HoverColor: =ColorFade(txtBranch.Color, 20%)
                HoverFill: =ColorFade(txtBranch.Fill, 20%)
                PressedBorderColor: =txtBranch.HoverBorderColor
                PressedColor: =txtBranch.Color
                PressedFill: =txtBranch.Fill
                Visible: =(CountRows(SelectedRepoBranches) = 0)
                Width: =498
                Y: =45
                ZIndex: =7

        icoCommitDownArrow As icon.ArrowDown:
            BorderColor: =ColorFade(icoCommitDownArrow.Fill, -20%)
            DisabledFill: =ColorFade(icoCommitDownArrow.Fill, -80%)
            Height: =45
            HoverBorderColor: =ColorFade(icoCommitDownArrow.BorderColor, 20%)
            HoverColor: =ColorFade(icoCommitDownArrow.Color, 20%)
            HoverFill: =ColorFade(icoCommitDownArrow.Fill, 20%)
            Icon: =Icon.ArrowUp
            PressedBorderColor: =ColorFade(icoCommitDownArrow.BorderColor, -20%)
            PressedColor: =ColorFade(icoCommitDownArrow.Color, -20%)
            PressedFill: =ColorFade(icoCommitDownArrow.Fill, -20%)
            Visible: =false//tglCreateBranch.Value
            X: =243
            Y: =286
            ZIndex: =8

        lblCommitSolutionFriendlyName As label:
            Align: =Center
            FontWeight: =FontWeight.Semibold
            Height: =27
            Size: =16
            Text: =glrSolutions.Selected.friendlyname
            Width: =548
            Y: =54
            ZIndex: =10

        drpPushDeploymentProfiles As dropdown:
            AccessibleLabel: ="Publish Profile"
            ChevronHoverBackground: =ColorFade(drpPushDeploymentProfiles.ChevronBackground, 20%)
            ChevronHoverFill: =ColorFade(drpPushDeploymentProfiles.ChevronFill, 20%)
            Default: =glrSolutions.Selected.deploymentprofile.Name
            DisplayMode: =DisplayMode.Disabled
            Height: =45
            HoverBorderColor: =ColorFade(drpPushDeploymentProfiles.BorderColor, 20%)
            HoverColor: =ColorFade(drpPushDeploymentProfiles.Color, 20%)
            HoverFill: =ColorFade(drpPushDeploymentProfiles.SelectionFill, 20%)
            Items: =DeploymentProfiles
            OnChange: |-
                =Set(
                    SelectedDeploymentProfile,
                    drpPushDeploymentProfiles.Selected
                );
                ClearCollect(
                    SelectedProfileSteps,
                    Filter('Deployment Steps', 'Deployment Profile'.'Deployment Profile' = SelectedDeploymentProfile.'Deployment Profile')
                );
                Set(
                    SelectedStep,
                    First(SelectedProfileSteps)
                );
            PressedBorderColor: =drpPushDeploymentProfiles.HoverBorderColor
            PressedColor: =drpPushDeploymentProfiles.Fill
            PressedFill: =drpPushDeploymentProfiles.Color
            Width: =500
            X: =30
            Y: =140
            ZIndex: =11

        lblSelectDeploymentProfile As label:
            FontWeight: =FontWeight.Semibold
            Height: =45
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Selected Profile"
            Width: =500
            X: =30
            Y: =95
            ZIndex: =12

        tglPublishAdvancedSettings As toggleSwitch:
            AccessibleLabel: ="Show Advanced"
            FalseFill: =RGBA(237, 237, 237, 1)
            FalseHoverFill: =ColorFade(tglPublishAdvancedSettings.FalseFill, 20%)
            FalseText: ="Show Advanced"
            FontWeight: =FontWeight.Semibold
            HandleFill: =If(tglPublishAdvancedSettings.Value, PrimaryColor1Value, PrimaryColor2Value)
            HoverBorderColor: =ColorFade(tglPublishAdvancedSettings.BorderColor, 20%)
            OnChange: =Set(locNewBranchText,  ""); Reset(txtBranchToCreate);
            PressedBorderColor: =ColorFade(tglPublishAdvancedSettings.BorderColor, -20%)
            TrueHoverFill: =ColorFade(tglPublishAdvancedSettings.TrueFill, 20%)
            TrueText: ="Show Advanced"
            Width: =200
            X: =30
            Y: =345
            ZIndex: =13

        txtCommitMessage As text:
            AccessibleLabel: ="Commit Message"
            Default: =""
            EnableSpellCheck: =true
            Height: =90
            HintText: ="Enter notes about this version of your solution (e.g. changes made or work items completed)"
            HoverBorderColor: =ColorFade(txtCommitMessage.BorderColor, 20%)
            HoverColor: =ColorFade(txtCommitMessage.Color, 20%)
            HoverFill: =ColorFade(txtCommitMessage.Fill, 20%)
            Mode: =TextMode.MultiLine
            OnChange: |-
                =If(
                   IsBlank(Find(Char(10), txtCommitMessage.Text)),
                   true ,
                   Notify("The Commit Message cannot contain carriage returns. Please enter a Commit Message without carriage returns.",NotificationType.Error);
                )
            PressedBorderColor: =txtCommitMessage.HoverBorderColor
            PressedColor: =txtCommitMessage.Color
            PressedFill: =txtCommitMessage.Fill
            Visible: =showCommitDialog
            Width: =498
            X: =30
            Y: =228
            ZIndex: =14

        lblCommitComment As label:
            FontWeight: =FontWeight.Semibold
            Height: =45
            PaddingLeft: =0
            Text: ="Enter Notes"
            VerticalAlign: =VerticalAlign.Bottom
            Visible: =showCommitDialog
            Width: =498
            X: =30
            Y: =183
            ZIndex: =15

    ImportDialog As groupContainer:
        DisplayMode: =DisplayMode.Edit
        Height: =1080
        Visible: =showImportDialog
        Width: =550
        X: =1370
        ZIndex: =31

        ImportDialogRectangle As rectangle:
            BorderColor: =ColorFade(ImportDialogRectangle.Fill, -20%)
            DisabledFill: =ImportDialogRectangle.Fill
            Fill: =RGBA(255, 255, 255, 1)
            Height: =1080
            HoverFill: =ColorFade(ImportDialogRectangle.Fill, 20%)
            PressedFill: =ColorFade(ImportDialogRectangle.Fill, -20%)
            Width: =550
            ZIndex: =1

        btnImport As button:
            DisplayMode: |-
                =If(
                    !IsBlankOrError(dpBranchName.Selected) And !IsBlankOrError(drpSolutionFolders.Selected),
                    DisplayMode.Edit,
                    DisplayMode.Disabled
                )
            Height: =45
            HoverBorderColor: =ColorFade(btnImport.BorderColor, 20%)
            HoverColor: =ColorFade(btnImport.Color, 20%)
            HoverFill: =ColorFade(btnImport.Fill, 20%)
            OnSelect: |-
                =Set(
                    LastSavedImportPipelineRunsSettingName,
                    "LastSavedImportPipelineRuns - " & drpImportDeploymentProfiles.Selected.'AzDO Organization' & " - " & drpImportDeploymentProfiles.Selected.'AzDO Project'
                );
                
                UpdateContext(
                    {
                        showImportDialog: false,
                        showDialogOverlay: false
                    }
                );
                UpdateContext(
                    {
                        piplineToRun: LookUp(
                            CustomAzureDevOps.GetPipelines(
                                drpImportDeploymentProfiles.Selected.'AzDO Organization',
                                drpImportDeploymentProfiles.Selected.'AzDO Project'
                            ).value,
                            name = "import-unmanaged-to-dev-environment"
                        )
                    }
                );
                UpdateContext({
                        importBuildId: CustomAzureDevOps.RunPipeline(
                            drpImportDeploymentProfiles.Selected.'AzDO Organization',
                            drpImportDeploymentProfiles.Selected.'AzDO Project',
                            piplineToRun.id,
                            {
                                definition: {id: piplineToRun.id},
                                variables: {
                                    Project: {value: drpImportDeploymentProfiles.Selected.'AzDO Project'},
                                    Repo: {value: drpImportDeploymentProfiles.Selected.Repository},
                                    SolutionName: {value: drpSolutionFolders.Selected.DisplayName},
                                    Email: {value: gblUser.Email},
                                    UserName: {value: gblUser.FullName},
                                    CommitMessage: {value: ""},
                                    Branch: {value: dpBranchName.Selected.name},
                                    BranchToCreate: {value: ""},
                                    ServiceConnection: {value: SelectedEnvironment.properties.linkedEnvironmentMetadata.instanceUrl},
                                    TriggerSolutionUpgrade: {value: ""},
                                    BuildDefinitionId: {value: ""},
                                    PipelineId: {value: ""},
                                    ImportUnmanaged: {value: "true"},
                                    EnvironmentName: {value: drpConfigFolders.Selected.DisplayName},
                                    Data: {value: "{test: """"}"}
                                }
                            }
                        ).id
                    }
                );
                Patch(
                    'Deployment Requests',
                    {
                        Name: drpSolutionFolders.Selected.DisplayName & " - Import (" & Text(
                            Now(),
                            ShortDateTime
                        ) & ")",
                        'Solution Name': drpSolutionFolders.Selected.DisplayName,
                        'Deployment Profile': drpImportDeploymentProfiles.Selected,
                        'Build ID': importBuildId,
                        'Request Type': [@Type].Import
                    }
                );
                UpdateContext({locStartCheckBuildStatusTimer: false});
                Reset(tmrCheckBuildAndPullRequestStatuses);
                UpdateContext({locStartCheckBuildStatusTimer: true});
            PressedBorderColor: =btnImport.Fill
            PressedColor: =btnImport.Fill
            PressedFill: =btnImport.Color
            Text: ="IMPORT"
            Width: =200
            X: =330
            Y: =1010
            ZIndex: =2

        lblImportDialogTitle As label:
            Align: =Center
            FontWeight: =Semibold
            Height: =55
            Size: =20
            Text: ="IMPORT SOLUTION"
            Width: =550
            ZIndex: =7

        icoImportDialogClose As icon.Cancel:
            AccessibleLabel: ="Close"
            BorderColor: =ColorFade(icoImportDialogClose.Fill, -20%)
            DisabledFill: =ColorFade(icoImportDialogClose.Fill, -80%)
            Height: =55
            HoverBorderColor: =ColorFade(icoImportDialogClose.BorderColor, 20%)
            HoverColor: =ColorFade(icoImportDialogClose.Color, 20%)
            HoverFill: =ColorFade(icoImportDialogClose.Fill, 20%)
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext({showDialogOverlay:false, showImportDialog:false})
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            PressedBorderColor: =ColorFade(icoImportDialogClose.BorderColor, -20%)
            PressedColor: =ColorFade(icoImportDialogClose.Color, -20%)
            PressedFill: =ColorFade(icoImportDialogClose.Fill, -20%)
            Width: =55
            X: =498
            ZIndex: =8

        drpSolutionFolders As dropdown:
            AccessibleLabel: ="Solution Folders"
            ChevronHoverBackground: =ColorFade(drpSolutionFolders.ChevronBackground, 20%)
            ChevronHoverFill: =ColorFade(drpSolutionFolders.ChevronFill, 20%)
            Default: =SelectedBranchSolutionFolder
            HoverBorderColor: =ColorFade(drpSolutionFolders.BorderColor, 20%)
            HoverColor: =ColorFade(drpSolutionFolders.Color, 20%)
            HoverFill: =ColorFade(drpSolutionFolders.SelectionFill, 20%)
            Items: =BranchSolutionFolders
            OnChange: =Select(fncRefreshBranchFolders);
            PressedBorderColor: =drpSolutionFolders.HoverBorderColor
            PressedColor: =drpSolutionFolders.Fill
            PressedFill: =drpSolutionFolders.Color
            Width: =506
            X: =30
            Y: =284
            ZIndex: =14

        lblSolutionBuild As label:
            FontWeight: =FontWeight.Semibold
            PaddingLeft: =0
            Text: ="Solution Folder"
            Width: =200
            X: =30
            Y: =244
            ZIndex: =15

        dpBranchName As dropdown:
            AccessibleLabel: ="Branch Name"
            ChevronHoverBackground: =ColorFade(dpBranchName.ChevronBackground, 20%)
            ChevronHoverFill: =ColorFade(dpBranchName.ChevronFill, 20%)
            HoverBorderColor: =ColorFade(dpBranchName.BorderColor, 20%)
            HoverColor: =ColorFade(dpBranchName.Color, 20%)
            HoverFill: =ColorFade(dpBranchName.SelectionFill, 20%)
            Items: =SelectedRepoBranches
            OnChange: =Select(fncRefreshBranchFolders);
            PressedBorderColor: =dpBranchName.HoverBorderColor
            PressedColor: =dpBranchName.Fill
            PressedFill: =dpBranchName.Color
            Width: =506
            X: =30
            Y: =202
            ZIndex: =16

        lblBranchName As label:
            FontWeight: =FontWeight.Semibold
            PaddingLeft: =0
            Text: ="Solution Source"
            Width: =486
            X: =30
            Y: =162
            ZIndex: =17

        "glrSolutionImportHistory As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver4.0'":
            AccessibleLabel: ="Solution Import History"
            Height: =493
            Items: =Search(SolutionsImportLatestBuildStatuses, drpSolutionFolders.Selected.DisplayName,"uniquename")
            Layout: =Layout.Vertical
            TemplatePadding: =0
            TemplateSize: =90
            Visible: =CountRows(glrSolutionImportHistory.AllItems) > 0
            Width: =500
            X: =32
            Y: =464
            ZIndex: =18

            lblPipelineName As label:
                Height: =35
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =14
                Text: =ThisItem.importSolutionStatus.buildNumber
                VerticalAlign: =VerticalAlign.Top
                Width: =374
                X: =76
                Y: =15
                ZIndex: =1

            lblPipelineStartDateTime As label:
                Height: =32
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =14
                Text: =Text(DateTimeValue(ThisItem.importSolutionStatus.finishTime), LongDateTime)
                VerticalAlign: =VerticalAlign.Top
                Width: =398
                X: =lblPipelineName.X
                Y: =45
                ZIndex: =2

            Separator1 As rectangle:
                BorderColor: =ColorFade(Separator1.Fill, -20%)
                DisabledFill: =Separator1.Fill
                Height: =1
                HoverFill: =ColorFade(Separator1.Fill, 20%)
                OnSelect: =Select(Parent)
                PressedFill: =ColorFade(Separator1.Fill, -20%)
                Width: =Parent.TemplateWidth
                Y: =Parent.TemplateHeight - 1
                ZIndex: =3

            imgImportStatusHistory As image:
                AccessibleLabel: ="Import Status History"
                BorderColor: =ColorFade(imgImportStatusHistory.Fill, -20%)
                DisplayMode: =DisplayMode.View
                Height: =44
                HoverBorderColor: =ColorFade(imgImportStatusHistory.BorderColor, 20%)
                HoverFill: =ColorFade(imgImportStatusHistory.Fill, 20%)
                Image: |-
                    =With(
                        {
                            gitStatus: ThisItem.importSolutionStatus.status,
                            gitResult: ThisItem.importSolutionStatus.result
                        },
                        If(
                            IsBlank(gitStatus),
                            LookUp(
                                StageStatesIcons,
                                state = "empty"
                            ).image,
                            If(
                                gitStatus = "completed",
                                LookUp(
                                    StageStatesIcons,
                                    state = gitResult
                                ).image,
                                LookUp(
                                    StageStatesIcons,
                                    state = gitStatus
                                ).image
                            )
                        )
                    )
                OnSelect: |
                    =Select(Parent);
                    Launch(
                        ThisItem.importSolutionStatus._links.web.href
                    );
                PaddingBottom: =10
                PaddingTop: =10
                PressedBorderColor: =ColorFade(imgImportStatusHistory.BorderColor, -20%)
                PressedFill: =ColorFade(imgImportStatusHistory.Fill, -20%)
                Tooltip: =
                Width: =48
                X: =12
                Y: =15
                ZIndex: =5

            icoLaunchImportBuildUrl As icon.Add:
                AccessibleLabel: ="Open Import Build"
                BorderColor: =ColorFade(icoLaunchImportBuildUrl.Fill, -20%)
                Color: =RGBA(0, 0, 0, 0)
                DisabledFill: =ColorFade(icoLaunchImportBuildUrl.Fill, -80%)
                Fill: =RGBA(0, 0, 0, 0)
                Height: =82
                HoverBorderColor: =ColorFade(icoLaunchImportBuildUrl.BorderColor, 20%)
                HoverColor: =ColorFade(icoLaunchImportBuildUrl.Color, 20%)
                HoverFill: =ColorFade(icoLaunchImportBuildUrl.Fill, 20%)
                Icon: =Icon.Add
                OnSelect: |
                    =Select(Parent);
                    Launch(
                        ThisItem.importSolutionStatus._links.web.href
                    );
                PressedBorderColor: =ColorFade(icoLaunchImportBuildUrl.BorderColor, -20%)
                PressedColor: =ColorFade(icoLaunchImportBuildUrl.Color, -20%)
                PressedFill: =ColorFade(icoLaunchImportBuildUrl.Fill, -20%)
                Tooltip: =
                Width: =48
                X: =12
                Y: =5
                ZIndex: =7

        lblSolutionImportHistory As label:
            Align: =Left
            FontWeight: =FontWeight.Semibold
            Height: =39
            PaddingLeft: =0
            Text: =Concatenate(drpSolutionFolders.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BDisplayName', " Import History")
            Width: =497
            X: =30
            Y: =425
            ZIndex: =19

        lblSolutionImportHistoryEmpty As label:
            Height: =39
            PaddingLeft: =0
            Text: ="There is no import history for this solution"
            Visible: =CountRows(glrSolutionImportHistory.AllItems) = 0
            Width: =497
            X: =32
            Y: =374
            ZIndex: =20

        drpConfigFolders As dropdown:
            AccessibleLabel: ="Configuration Folders"
            ChevronHoverBackground: =ColorFade(drpConfigFolders.ChevronBackground, 20%)
            ChevronHoverFill: =ColorFade(drpConfigFolders.ChevronFill, 20%)
            Default: =
            HoverBorderColor: =ColorFade(drpConfigFolders.BorderColor, 20%)
            HoverColor: =ColorFade(drpConfigFolders.Color, 20%)
            HoverFill: =ColorFade(drpConfigFolders.SelectionFill, 20%)
            Items: =BranchConfigFolders
            OnChange: =
            PressedBorderColor: =drpConfigFolders.HoverBorderColor
            PressedColor: =drpConfigFolders.Fill
            PressedFill: =drpConfigFolders.Color
            Width: =506
            X: =30
            Y: =364
            ZIndex: =21

        lblConfigFolder As label:
            FontWeight: =FontWeight.Semibold
            PaddingLeft: =0
            Text: ="Configuration"
            Width: =200
            X: =30
            Y: =324
            ZIndex: =22

        drpImportDeploymentProfiles As dropdown:
            AccessibleLabel: ="Publish Profiles"
            ChevronHoverBackground: =ColorFade(drpImportDeploymentProfiles.ChevronBackground, 20%)
            ChevronHoverFill: =ColorFade(drpImportDeploymentProfiles.ChevronFill, 20%)
            Default: =locLastProfileSelected.Name
            Height: =45
            HoverBorderColor: =ColorFade(drpImportDeploymentProfiles.BorderColor, 20%)
            HoverColor: =ColorFade(drpImportDeploymentProfiles.Color, 20%)
            HoverFill: =ColorFade(drpImportDeploymentProfiles.SelectionFill, 20%)
            Items: =DeploymentProfiles
            OnChange: |
                =If(
                    Not IsEmpty(drpImportDeploymentProfiles.Selected.'AzDO Organization') And Not IsEmpty(drpImportDeploymentProfiles.Selected.'AzDO Project'),
                    ForAll(
                        Filter(
                            'Deployment Requests',
                            'Request Type' = [@Type].Import And 'Created By'.User = gblCdsUser.User
                        ) As r,
                        Collect(
                            TempSolutionsImportLatestBuildStatuses,
                            {
                                uniquename: r.'Solution Name',
                                importSolutionStatus: CustomAzureDevOps.GetBuild(
                                    drpImportDeploymentProfiles.Selected.'AzDO Organization',
                                    drpImportDeploymentProfiles.Selected.'AzDO Project',
                                    r.'Build ID'
                                )
                            }
                        );
                    )
                );
                ClearCollect(
                    SolutionsImportLatestBuildStatuses,
                    Sort(
                        TempSolutionsImportLatestBuildStatuses,
                        importSolutionStatus.queueTime,
                        Descending
                    )
                );
                Clear(TempSolutionsImportLatestBuildStatuses);
                ClearCollect(
                    SelectedProjectRepos,
                    CustomAzureDevOps.GetGitRepos(
                        drpImportDeploymentProfiles.Selected.'AzDO Organization',
                        drpImportDeploymentProfiles.Selected.'AzDO Project'
                    ).value
                );
                Clear(SelectedRepoBranches);
                If(
                    CountRows(
                        Filter(
                            SelectedProjectRepos,
                            id = drpImportDeploymentProfiles.Selected.'Repository ID'
                        )
                    ) > 0,
                    Collect(
                        SelectedRepoBranches,
                        AddColumns(
                            Filter(
                                CustomAzureDevOps.GetBranches(
                                    drpImportDeploymentProfiles.Selected.'AzDO Organization',
                                    drpImportDeploymentProfiles.Selected.'AzDO Project',
                                    drpImportDeploymentProfiles.Selected.'Repository ID'
                                ).value,
                                "refs/heads/" in name
                            ),
                            "DisplayName",
                            Substitute(
                                name,
                                "refs/heads/",
                                ""
                            )
                        )
                    )
                );
                SortByColumns(
                    SelectedRepoBranches,
                    "DisplayName"
                );
                Select(fncRefreshBranchFolders);
            PressedBorderColor: =drpImportDeploymentProfiles.HoverBorderColor
            PressedColor: =drpImportDeploymentProfiles.Fill
            PressedFill: =drpImportDeploymentProfiles.Color
            Width: =500
            X: =30
            Y: =115
            ZIndex: =23

        lblSelectImportProfile As label:
            FontWeight: =FontWeight.Semibold
            Height: =45
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Select a Profile"
            Width: =500
            X: =30
            Y: =79
            ZIndex: =24

    grpImportSolution As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =31

        lblImportSolution As label:
            Color: =RGBA(0, 0, 0, 1)
            FocusedBorderThickness: =
            FontWeight: =Normal
            Height: =51
            HoverColor: =Self.BorderColor
            OnSelect: |-
                =UpdateContext({showDialogOverlay:true, showImportDialog:true})
            Size: =14
            Text: ="IMPORT SOLUTION"
            Visible: |-
                =If(
                    IsBlankOrError(DeploymentUserSetting) Or DeploymentUserSetting.'Allow Import' = 'A Yes or No boolean'.Allowed,
                    true,
                    false
                )
            Width: =185
            X: =457
            Y: =90
            ZIndex: =8

        icoImportSolution As icon.Add:
            AccessibleLabel: ="Import Solution"
            BorderColor: =ColorFade(icoImportSolution.Fill, -20%)
            Color: =PrimaryColor2Value
            DisabledFill: =ColorFade(icoImportSolution.Fill, -80%)
            FocusedBorderThickness: =
            Height: =50
            HoverBorderColor: =ColorFade(icoImportSolution.BorderColor, 20%)
            HoverColor: =ColorFade(icoImportSolution.Color, 20%)
            HoverFill: =ColorFade(icoImportSolution.Fill, 20%)
            Icon: =Icon.Import
            OnSelect: |-
                =UpdateContext(
                    {
                        locLastDeploymentRequest: First(
                            Sort(
                                Filter(
                                    'Deployment Requests',
                                    'Solution Name' = glrSolutions.Selected.uniquename
                                ),
                                'Created On',
                                Descending
                            )
                        ),
                        locLastProfileSelected: locLastDeploymentRequest.'Deployment Profile'
                    }
                );
                If(
                    IsBlankOrError(locLastProfileSelected),
                    UpdateContext({locLastProfileSelected: First('Deployment Profiles')})
                );
                Select(fncRefreshBranchFolders);
                UpdateContext({showDialogOverlay:true, showImportDialog:true});
            PaddingBottom: =8
            PaddingLeft: =8
            PaddingRight: =5
            PaddingTop: =8
            PressedBorderColor: =ColorFade(icoImportSolution.BorderColor, -20%)
            PressedColor: =ColorFade(icoImportSolution.Color, -20%)
            PressedFill: =ColorFade(icoImportSolution.Fill, -20%)
            Tooltip: ="Import an Unmanaged Solution from Source Control"
            Visible: |-
                =If(
                    IsBlankOrError(DeploymentUserSetting) Or DeploymentUserSetting.'Allow Import' = 'A Yes or No boolean'.Allowed,
                    IsBlankOrError(locImportSolutionStatus),
                    false
                )
            Width: =45
            X: =414
            Y: =90
            ZIndex: =9

        imgImportStatus As image:
            BorderColor: =ColorFade(imgImportStatus.Fill, -20%)
            DisplayMode: =DisplayMode.View
            Height: =48
            HoverBorderColor: =ColorFade(imgImportStatus.BorderColor, 20%)
            HoverFill: =ColorFade(imgImportStatus.Fill, 20%)
            Image: |-
                =Switch(
                    locImportSolutionStatus.status,
                    "completed",
                    LookUp(
                        StageStatesIcons,
                        state = locImportSolutionStatus.result
                    ).image,
                    "inProgress",
                    LookUp(
                        StageStatesIcons,
                        state = locImportSolutionStatus.status
                    ).image,
                    "notStarted",
                    LookUp(
                        StageStatesIcons,
                        state = locImportSolutionStatus.status
                    ).image,
                    ""
                )
            OnSelect: =
            PaddingBottom: =10
            PaddingTop: =10
            PressedBorderColor: =ColorFade(imgImportStatus.BorderColor, -20%)
            PressedFill: =ColorFade(imgImportStatus.Fill, -20%)
            Visible: |-
                =If(
                    IsBlankOrError(DeploymentUserSetting) Or DeploymentUserSetting.'Allow Import' = 'A Yes or No boolean'.Allowed,
                    true,
                    false
                )
            Width: =50
            X: =414
            Y: =90
            ZIndex: =10

        icoImportStatus As icon.Add:
            AccessibleLabel: ="Import Status"
            BorderColor: =ColorFade(icoImportStatus.Fill, -20%)
            Color: =RGBA(0, 0, 0, 0)
            DisabledFill: =ColorFade(icoImportStatus.Fill, -80%)
            DisplayMode: =Edit
            Height: =48
            HoverBorderColor: =ColorFade(icoImportStatus.BorderColor, 20%)
            HoverColor: =ColorFade(icoImportStatus.Color, 20%)
            HoverFill: =ColorFade(icoImportStatus.Fill, 20%)
            Icon: =Icon.Import
            OnSelect: |
                =If(
                    !IsBlank(locImportSolutionStatus),
                    Launch(locImportSolutionStatus._links.web.href),
                    Select(icoImportSolutionLabel)
                );
            PressedBorderColor: =ColorFade(icoImportStatus.BorderColor, -20%)
            PressedColor: =ColorFade(icoImportStatus.Color, -20%)
            PressedFill: =ColorFade(icoImportStatus.Fill, -20%)
            Visible: |-
                =If(
                    IsBlankOrError(DeploymentUserSetting) Or DeploymentUserSetting.'Allow Import' = 'A Yes or No boolean'.Allowed,
                    true,
                    false
                )
            Width: =50
            X: =421
            Y: =90
            ZIndex: =11

        icoImportSolutionLabel As icon.Add:
            AccessibleLabel: ="Import Solution"
            BorderColor: =ColorFade(icoImportSolutionLabel.Fill, -20%)
            Color: =PrimaryColor2Value
            DisabledFill: =ColorFade(icoImportSolutionLabel.Fill, -80%)
            FocusedBorderThickness: =
            Height: =49
            HoverBorderColor: =ColorFade(icoImportSolutionLabel.BorderColor, 20%)
            HoverColor: =ColorFade(icoImportSolutionLabel.Color, 20%)
            HoverFill: =ColorFade(icoImportSolutionLabel.Fill, 20%)
            Icon: =
            OnSelect: |
                =UpdateContext(
                    {
                        showDialogOverlay: true
                    }
                );
                If(
                    IsBlankOrError(locLastProfileSelected),
                    UpdateContext({locLastProfileSelected: First('Deployment Profiles')})
                );
                If(
                    Not IsEmpty(locLastProfileSelected.'AzDO Organization') And Not IsEmpty(locLastProfileSelected.'AzDO Project'),
                    ForAll(
                        Filter(
                            'Deployment Requests',
                            'Request Type' = [@Type].Import And 'Created By'.User = gblCdsUser.User
                        ) As r,
                        If(
                            !IsBlankOrError(r.'Build ID'),
                            Collect(
                                TempSolutionsImportLatestBuildStatuses,
                                {
                                    uniquename: r.'Solution Name',
                                    importSolutionStatus: CustomAzureDevOps.GetBuild(
                                        locLastProfileSelected.'AzDO Organization',
                                        locLastProfileSelected.'AzDO Project',
                                        r.'Build ID'
                                    )
                                }
                            );
                        )
                    )
                );
                ClearCollect(
                    SolutionsImportLatestBuildStatuses,
                    Sort(
                        TempSolutionsImportLatestBuildStatuses,
                        importSolutionStatus.queueTime,
                        Descending
                    )
                );
                Clear(TempSolutionsImportLatestBuildStatuses);
                ClearCollect(
                    SelectedProjectRepos,
                    CustomAzureDevOps.GetGitRepos(
                        locLastProfileSelected.'AzDO Organization',
                        locLastProfileSelected.'AzDO Project'
                    ).value
                );
                Clear(SelectedRepoBranches);
                If(
                    CountRows(
                        Filter(
                            SelectedProjectRepos,
                            id = locLastProfileSelected.'Repository ID'
                        )
                    ) > 0,
                    Collect(
                        SelectedRepoBranches,
                        AddColumns(
                            Filter(
                                CustomAzureDevOps.GetBranches(
                                    locLastProfileSelected.'AzDO Organization',
                                    locLastProfileSelected.'AzDO Project',
                                    locLastProfileSelected.'Repository ID'
                                ).value,
                                "refs/heads/" in name
                            ),
                            "DisplayName",
                            Substitute(
                                name,
                                "refs/heads/",
                                ""
                            )
                        )
                    )
                );
                SortByColumns(
                    SelectedRepoBranches,
                    "DisplayName"
                );
                Select(fncRefreshBranchFolders);
                UpdateContext(
                    {
                        showImportDialog: true
                    }
                );
            PaddingBottom: =8
            PaddingLeft: =8
            PaddingRight: =5
            PaddingTop: =8
            PressedBorderColor: =ColorFade(icoImportSolutionLabel.BorderColor, -20%)
            PressedColor: =ColorFade(icoImportSolutionLabel.Color, -20%)
            PressedFill: =ColorFade(icoImportSolutionLabel.Fill, -20%)
            Tooltip: ="Import an Unmanaged Solution from Source Control"
            Visible: |-
                =If(
                    IsBlankOrError(DeploymentUserSetting) Or DeploymentUserSetting.'Allow Import' = 'A Yes or No boolean'.Allowed,
                    true,
                    false
                )
            Width: =180
            X: =462
            Y: =90
            ZIndex: =12

    EnvironmentSettings As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =31

        imgEnvironment As image:
            AccessibleLabel: ="Environment"
            BorderColor: =ColorFade(imgEnvironment.Fill, -20%)
            Height: =43
            HoverBorderColor: =ColorFade(imgEnvironment.BorderColor, 20%)
            HoverFill: =ColorFade(imgEnvironment.Fill, 20%)
            Image: |-
                ="data:image/svg+xml,"
                & EncodeUrl("<svg width='16px' height='16px' xmlns='http://www.w3.org/2000/svg'><g><path fill='#ffffff' class='image-264' d='M15,10h-1.809C13.702,9.117,14,8.094,14,7c0-3.314-2.686-6-6-6S2,3.686,2,7c0,1.094,0.298,2.117,0.809,3H1l-1,5h16L15,10z     M4.854,10.854l-0.708-0.708C3.859,9.795,3.606,9.417,3.422,8.997h1.752c0.182,1.03,0.498,1.933,0.91,2.618   C5.632,11.427,5.228,11.16,4.854,10.854z M6.187,8.997h3.626C9.448,10.873,8.619,12,8,12S6.552,10.873,6.187,8.997z M6,7  c0-0.351,0.019-0.682,0.048-1.003h3.904C9.981,6.318,10,6.649,10,7c0,0.349-0.019,0.679-0.048,0.997H6.048C6.019,7.679,6,7.349,6,7z     M8,2c0.619,0,1.447,1.124,1.812,2.997H6.188C6.553,3.124,7.381,2,8,2z M13,7c0,0.341-0.035,0.675-0.101,0.997h-1.944   C10.982,7.672,11,7.341,11,7c0-0.342-0.018-0.676-0.045-1.003h1.944C12.965,6.321,13,6.657,13,7z M10.826,8.997h1.752   c-0.184,0.42-0.437,0.798-0.723,1.148l-0.708,0.708c-0.373,0.305-0.778,0.573-1.229,0.761C10.328,10.93,10.644,10.027,10.826,8.997z   M12.575,4.997h-1.75c-0.182-1.028-0.498-1.929-0.909-2.612C11.104,2.88,12.058,3.821,12.575,4.997z M6.084,2.385    C5.673,3.068,5.357,3.97,5.175,4.997h-1.75C3.942,3.821,4.896,2.88,6.084,2.385z M3.101,5.997h1.944C5.018,6.324,5,6.658,5,7    c0,0.341,0.018,0.672,0.045,0.997H3.101C3.035,7.675,3,7.341,3,7C3,6.657,3.035,6.321,3.101,5.997z M1.22,14l0.6-3h1.717    C4.635,12.225,6.225,13,8,13s3.365-0.775,4.463-2h1.717l0.6,3H1.22z'></path></g></svg>")
                
                //LookUp(ThemeStyles, Name = "PrimaryColor4Value").Value
            OnSelect: |-
                =UpdateContext(
                    {
                        showDialogOverlay: true,
                        showEnvironmentDialog: true
                    }
                )
            PressedBorderColor: =ColorFade(imgEnvironment.BorderColor, -20%)
            PressedFill: =ColorFade(imgEnvironment.Fill, -20%)
            Width: =50
            X: =1605
            Y: =16
            ZIndex: =22

        lblEnvironment As label:
            Color: =RGBA(255, 255, 255, 1)
            FocusedBorderThickness: =FocusedBorderThicknessValue
            Height: =29
            OnSelect: |-
                =UpdateContext(
                    {
                        showDialogOverlay: true,
                        showEnvironmentDialog: true
                    }
                )
            Size: =10
            Text: ="Select Your Maker Environment"
            Width: =241
            X: =1655
            Y: =8
            ZIndex: =23

        lblEnvironmentName As label:
            Color: =RGBA(255, 255, 255, 1)
            FocusedBorderThickness: =FocusedBorderThicknessValue
            Height: =29
            OnSelect: |-
                =UpdateContext(
                    {
                        showDialogOverlay: true,
                        showEnvironmentDialog: true
                    }
                )
            Size: =12
            Text: =glrlEnvironments.Selected.properties.linkedEnvironmentMetadata.friendlyName
            Width: =241
            X: =1655
            Y: =30
            ZIndex: =24

    grpRefreshSolutions As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =31

        icoRefreshSolutions As icon.Add:
            AccessibleLabel: ="Refresh Solutions"
            BorderColor: =ColorFade(icoRefreshSolutions.Fill, -20%)
            Color: =PrimaryColor2Value
            DisabledColor: =ColorFade(icoRefreshSolutions.Color, 50%)
            DisabledFill: =ColorFade(icoRefreshSolutions.Fill, -80%)
            Height: =47
            HoverBorderColor: =ColorFade(icoRefreshSolutions.BorderColor, 20%)
            HoverColor: =ColorFade(icoRefreshSolutions.Color, 20%)
            HoverFill: =ColorFade(icoRefreshSolutions.Fill, 20%)
            Icon: =Icon.Reload
            OnSelect: =Select(fncRefreshStatuses);
            PaddingBottom: =8
            PaddingLeft: =8
            PaddingRight: =5
            PaddingTop: =8
            PressedBorderColor: =ColorFade(icoRefreshSolutions.BorderColor, -20%)
            PressedColor: =ColorFade(icoRefreshSolutions.Color, -20%)
            PressedFill: =ColorFade(icoRefreshSolutions.Fill, -20%)
            Tooltip: ="Click to Refresh Solutions and Statuses"
            Width: =65
            X: =11
            Y: =90
            ZIndex: =17

        lblRefreshSolution As label:
            Color: =RGBA(0, 0, 0, 1)
            FocusedBorderThickness: =FocusedBorderThicknessValue
            FontWeight: =Normal
            Height: =51
            HoverColor: =Self.BorderColor
            OnSelect: =Select(fncRefreshStatuses);
            Size: =14
            Text: ="REFRESH"
            Tooltip: ="Refresh Solution(s) and Statuses"
            Width: =90
            X: =69
            Y: =90
            ZIndex: =20

        icoRefreshSolutionsLabel As icon.Add:
            AccessibleLabel: ="Refresh Solutions"
            BorderColor: =ColorFade(icoRefreshSolutionsLabel.Fill, -20%)
            Color: =PrimaryColor2Value
            DisabledColor: =ColorFade(icoRefreshSolutionsLabel.Color, 50%)
            DisabledFill: =ColorFade(icoRefreshSolutionsLabel.Fill, -80%)
            Height: =52
            HoverBorderColor: =ColorFade(icoRefreshSolutionsLabel.BorderColor, 20%)
            HoverColor: =ColorFade(icoRefreshSolutionsLabel.Color, 20%)
            HoverFill: =ColorFade(icoRefreshSolutionsLabel.Fill, 20%)
            Icon: =
            OnSelect: =Select(fncRefreshStatuses);
            PaddingBottom: =8
            PaddingLeft: =8
            PaddingRight: =5
            PaddingTop: =8
            PressedBorderColor: =ColorFade(icoRefreshSolutionsLabel.BorderColor, -20%)
            PressedColor: =ColorFade(icoRefreshSolutionsLabel.Color, -20%)
            PressedFill: =ColorFade(icoRefreshSolutionsLabel.Fill, -20%)
            Tooltip: ="Refresh Solution(s) and Statuses"
            Width: =140
            X: =11
            Y: =90
            ZIndex: =37

    PullRequestDialog As groupContainer:
        DisplayMode: =DisplayMode.Edit
        Height: =1080
        Visible: =showPullRequestDialog
        Width: =550
        X: =1370
        ZIndex: =32

        rctPullRequestDialog As rectangle:
            BorderColor: =ColorFade(rctPullRequestDialog.Fill, -20%)
            DisabledFill: =rctPullRequestDialog.Fill
            Fill: =RGBA(255, 255, 255, 1)
            Height: =1080
            HoverFill: =ColorFade(rctPullRequestDialog.Fill, 20%)
            PressedFill: =ColorFade(rctPullRequestDialog.Fill, -20%)
            Width: =550
            ZIndex: =1

        lblPullRequestDialogTitle As label:
            Align: =Center
            FontWeight: =Semibold
            Height: =64
            Size: =16
            Text: ="DEPLOY SOLUTION"
            Width: =546
            ZIndex: =2

        icoPullRequestDialogClose As icon.Cancel:
            AccessibleLabel: ="Close"
            BorderColor: =ColorFade(icoPullRequestDialogClose.Fill, -20%)
            DisabledFill: =ColorFade(icoPullRequestDialogClose.Fill, -80%)
            Height: =55
            HoverBorderColor: =ColorFade(icoPullRequestDialogClose.BorderColor, 20%)
            HoverColor: =ColorFade(icoPullRequestDialogClose.Color, 20%)
            HoverFill: =ColorFade(icoPullRequestDialogClose.Fill, 20%)
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext({showDialogOverlay:false,showPullRequestDialog:false})
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            PressedBorderColor: =ColorFade(icoPullRequestDialogClose.BorderColor, -20%)
            PressedColor: =ColorFade(icoPullRequestDialogClose.Color, -20%)
            PressedFill: =ColorFade(icoPullRequestDialogClose.Fill, -20%)
            Width: =55
            X: =495
            Y: =4
            ZIndex: =3

        lblSourceBranch As label:
            FontWeight: =FontWeight.Semibold
            Height: =45
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Source Branch"
            VerticalAlign: =VerticalAlign.Bottom
            Visible: =tglPRAdvancedSettings.Value
            Width: =500
            X: =31
            Y: =463
            ZIndex: =4

        drpPullRequestSourceBranches As dropdown:
            AccessibleLabel: ="Source Branches"
            ChevronHoverBackground: =ColorFade(drpPullRequestSourceBranches.ChevronBackground, 20%)
            ChevronHoverFill: =ColorFade(drpPullRequestSourceBranches.ChevronFill, 20%)
            Default: =locDefaultBranchForCommit
            Height: =45
            HoverBorderColor: =ColorFade(drpPullRequestSourceBranches.BorderColor, 20%)
            HoverColor: =ColorFade(drpPullRequestSourceBranches.Color, 20%)
            HoverFill: =ColorFade(drpPullRequestSourceBranches.SelectionFill, 20%)
            Items: =SelectedRepoBranches
            PressedBorderColor: =drpPullRequestSourceBranches.HoverBorderColor
            PressedColor: =drpPullRequestSourceBranches.Fill
            PressedFill: =drpPullRequestSourceBranches.Color
            Tooltip: ="This is the branch that contains the changes you'd like to merge into the Target Branch"
            Visible: =tglPRAdvancedSettings.Value
            Width: =500
            X: =31
            Y: =508
            ZIndex: =5

        lblTargetBranch As label:
            FontWeight: =FontWeight.Semibold
            Height: =45
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Target Branch"
            VerticalAlign: =VerticalAlign.Bottom
            Visible: =tglPRAdvancedSettings.Value
            Width: =500
            X: =31
            Y: =553
            ZIndex: =6

        drpPullRequestTargetBranches As dropdown:
            AccessibleLabel: ="Target Branches"
            ChevronHoverBackground: =ColorFade(drpPullRequestTargetBranches.ChevronBackground, 20%)
            ChevronHoverFill: =ColorFade(drpPullRequestTargetBranches.ChevronFill, 20%)
            Default: =locTargetBranchForPullRequest
            Height: =45
            HoverBorderColor: =ColorFade(drpPullRequestTargetBranches.BorderColor, 20%)
            HoverColor: =ColorFade(drpPullRequestTargetBranches.Color, 20%)
            HoverFill: =ColorFade(drpPullRequestTargetBranches.SelectionFill, 20%)
            Items: =SelectedRepoBranches
            PressedBorderColor: =drpPullRequestTargetBranches.HoverBorderColor
            PressedColor: =drpPullRequestTargetBranches.Fill
            PressedFill: =drpPullRequestTargetBranches.Color
            Tooltip: ="This is the branch to which your changes will be merged when the Pull Request is completed"
            Visible: =tglPRAdvancedSettings.Value
            Width: =500
            X: =31
            Y: =598
            ZIndex: =7

        btnCreate As button:
            DisplayMode: |-
                =If(
                    Len(txtPullRequestTitle.Text) > 0,
                    DisplayMode.Edit,
                    DisplayMode.Disabled
                )
            Height: =45
            HoverBorderColor: =ColorFade(btnCreate.BorderColor, 20%)
            HoverColor: =ColorFade(btnCreate.Color, 20%)
            HoverFill: =ColorFade(btnCreate.Fill, 20%)
            OnSelect: |
                =UpdateContext(
                    {
                        showDialogOverlay: false,
                        showPullRequestDialog: false
                    }
                );
                UpdateContext(
                    {
                        pullRequestId: CustomAzureDevOps.CreatePullRequest(
                            drpPRDeploymentProfiles.Selected.'AzDO Organization',
                            drpPRDeploymentProfiles.Selected.'AzDO Project',
                            drpPRDeploymentProfiles.Selected.'Repository ID',
                            {
                                sourceRefName: drpPullRequestSourceBranches.Selected.name,
                                targetRefName: drpPullRequestTargetBranches.Selected.name,
                                title: txtPullRequestTitle.Text,
                                description: txtPullRequestDescription.Text
                            }
                        ).pullRequestId
                    }
                );
                Patch(
                    'Deployment Requests',
                    {
                        Name: glrSolutions.Selected.friendlyname & " - Deploy (" & Text(
                            Now(),
                            ShortDateTime
                        ) & ")",
                        'Solution Name': glrSolutions.Selected.uniquename,
                        'Deployment Profile': drpPRDeploymentProfiles.Selected,
                        'Build ID': pullRequestId,
                        'Request Type': [@Type].Deploy
                    }
                );
                Reset(txtPullRequestTitle);
                Reset(txtPullRequestDescription);
                UpdateContext({locStartCheckBuildStatusTimer: false});
                Reset(tmrCheckBuildAndPullRequestStatuses);
                UpdateContext({locStartCheckBuildStatusTimer: true});
            PressedBorderColor: =btnCreate.Fill
            PressedColor: =btnCreate.Fill
            PressedFill: =btnCreate.Color
            Text: ="DEPLOY"
            Width: =200
            X: =330
            Y: =1015
            ZIndex: =8

        icoPullRequestDownArrow As icon.ArrowDown:
            BorderColor: =ColorFade(icoPullRequestDownArrow.Fill, -20%)
            DisabledFill: =ColorFade(icoPullRequestDownArrow.Fill, -80%)
            Height: =45
            HoverBorderColor: =ColorFade(icoPullRequestDownArrow.BorderColor, 20%)
            HoverColor: =ColorFade(icoPullRequestDownArrow.Color, 20%)
            HoverFill: =ColorFade(icoPullRequestDownArrow.Fill, 20%)
            PressedBorderColor: =ColorFade(icoPullRequestDownArrow.BorderColor, -20%)
            PressedColor: =ColorFade(icoPullRequestDownArrow.Color, -20%)
            PressedFill: =ColorFade(icoPullRequestDownArrow.Fill, -20%)
            Visible: =tglPRAdvancedSettings.Value
            X: =244
            Y: =553
            ZIndex: =9

        txtPullRequestTitle As text:
            AccessibleLabel: ="Title"
            Default: =""
            Height: =45
            HintText: ="Enter a title for this deployment of your solution."
            HoverBorderColor: =ColorFade(txtPullRequestTitle.BorderColor, 20%)
            HoverColor: =ColorFade(txtPullRequestTitle.Color, 20%)
            HoverFill: =ColorFade(txtPullRequestTitle.Fill, 20%)
            PressedBorderColor: =txtPullRequestTitle.HoverBorderColor
            PressedColor: =txtPullRequestTitle.Color
            PressedFill: =txtPullRequestTitle.Fill
            Tooltip: |-
                ="Enter a Title for this Pull Request (e.g. Fixes #123)"
            Width: =500
            X: =30
            Y: =229
            ZIndex: =10

        txtPullRequestDescription As text:
            AccessibleLabel: ="Description"
            Default: =""
            EnableSpellCheck: =true
            Height: =90
            HintText: ="Enter notes about this deployment of your solution (e.g. changes made or work items completed)"
            HoverBorderColor: =ColorFade(txtPullRequestDescription.BorderColor, 20%)
            HoverColor: =ColorFade(txtPullRequestDescription.Color, 20%)
            HoverFill: =ColorFade(txtPullRequestDescription.Fill, 20%)
            Mode: =TextMode.MultiLine
            PressedBorderColor: =txtPullRequestDescription.HoverBorderColor
            PressedColor: =txtPullRequestDescription.Color
            PressedFill: =txtPullRequestDescription.Fill
            Tooltip: |-
                ="Enter a Description for this Pull Request (e.g. Fixes #123)"
            Width: =500
            X: =32
            Y: =324
            ZIndex: =11

        lblPullRequestDescription As label:
            FontWeight: =FontWeight.Semibold
            Height: =45
            PaddingLeft: =0
            Text: ="Enter Notes"
            VerticalAlign: =VerticalAlign.Bottom
            Width: =500
            X: =31
            Y: =279
            ZIndex: =12

        lblPullRequestTitle As label:
            FontWeight: =FontWeight.Semibold
            Height: =45
            PaddingLeft: =0
            Text: ="Title"
            VerticalAlign: =VerticalAlign.Bottom
            Width: =500
            X: =31
            Y: =184
            ZIndex: =13

        lblPullRequestSolutionFriendlyName As label:
            Align: =Center
            FontWeight: =FontWeight.Semibold
            Height: =28
            Size: =16
            Text: =glrSolutions.Selected.friendlyname
            Width: =550
            Y: =58
            ZIndex: =14

        drpPRDeploymentProfiles As dropdown:
            AccessibleLabel: ="Publish Profiles"
            ChevronHoverBackground: =ColorFade(drpPRDeploymentProfiles.ChevronBackground, 20%)
            ChevronHoverFill: =ColorFade(drpPRDeploymentProfiles.ChevronFill, 20%)
            Default: =glrSolutions.Selected.deploymentprofile.Name
            DisplayMode: =DisplayMode.Disabled
            Height: =45
            HoverBorderColor: =ColorFade(drpPRDeploymentProfiles.BorderColor, 20%)
            HoverColor: =ColorFade(drpPRDeploymentProfiles.Color, 20%)
            HoverFill: =ColorFade(drpPRDeploymentProfiles.SelectionFill, 20%)
            Items: =DeploymentProfiles
            OnChange: |-
                =Set(
                    SelectedDeploymentProfile,
                    drpPRDeploymentProfiles.Selected
                );
                ClearCollect(
                    SelectedProfileSteps,
                    Filter('Deployment Steps', 'Deployment Profile'.'Deployment Profile' = SelectedDeploymentProfile.'Deployment Profile')
                );
                Set(
                    SelectedStep,
                    First(SelectedProfileSteps)
                );
            PressedBorderColor: =drpPRDeploymentProfiles.HoverBorderColor
            PressedColor: =drpPRDeploymentProfiles.Fill
            PressedFill: =drpPRDeploymentProfiles.Color
            Width: =500
            X: =30
            Y: =136
            ZIndex: =18

        lblSelectPRProfile As label:
            FontWeight: =FontWeight.Semibold
            Height: =45
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Selected Profile"
            VerticalAlign: =VerticalAlign.Bottom
            Width: =500
            X: =30
            Y: =91
            ZIndex: =19

        drpDeploymentSteps As dropdown:
            AccessibleLabel: ="Publish Steps"
            ChevronHoverBackground: =ColorFade(drpDeploymentSteps.ChevronBackground, 20%)
            ChevronHoverFill: =ColorFade(drpDeploymentSteps.ChevronFill, 20%)
            Default: =selectedStep
            Height: =45
            HoverBorderColor: =ColorFade(drpDeploymentSteps.BorderColor, 20%)
            HoverColor: =ColorFade(drpDeploymentSteps.Color, 20%)
            HoverFill: =ColorFade(drpDeploymentSteps.SelectionFill, 20%)
            Items: =glrSolutions.Selected.deploymentprofile.'Deployment Steps'
            OnChange: =//MODEBUG TODO Select(fncCollectSelectedProjectRepos)
            PressedBorderColor: =drpDeploymentSteps.HoverBorderColor
            PressedColor: =drpDeploymentSteps.Fill
            PressedFill: =drpDeploymentSteps.Color
            Visible: =!tglPRAdvancedSettings.Value
            Width: =500
            X: =32
            Y: =517
            ZIndex: =20

        lblDeploymentEnvironment As label:
            FontWeight: =FontWeight.Semibold
            Height: =45
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Select a Target"
            VerticalAlign: =VerticalAlign.Bottom
            Visible: =!tglPRAdvancedSettings.Value
            Width: =458
            X: =32
            Y: =472
            ZIndex: =21

        tglPRAdvancedSettings As toggleSwitch:
            AccessibleLabel: ="Advanced Settings"
            FalseFill: =RGBA(237, 237, 237, 1)
            FalseHoverFill: =ColorFade(tglPRAdvancedSettings.FalseFill, 20%)
            FalseText: ="Advanced Settings"
            FontWeight: =FontWeight.Semibold
            HandleFill: =If(tglPRAdvancedSettings.Value, PrimaryColor1Value, PrimaryColor2Value)
            HoverBorderColor: =ColorFade(tglPRAdvancedSettings.BorderColor, 20%)
            OnChange: =Set(locNewBranchText,  ""); Reset(txtBranchToCreate);
            PressedBorderColor: =ColorFade(tglPRAdvancedSettings.BorderColor, -20%)
            TrueHoverFill: =ColorFade(tglPRAdvancedSettings.TrueFill, 20%)
            TrueText: ="Advanced Settings"
            Width: =225
            X: =31
            Y: =436
            ZIndex: =22

    DeleteSolutionDialog As groupContainer:
        DisplayMode: =DisplayMode.Edit
        Height: =1080
        Visible: =showDeleteSolutionDialog
        Width: =550
        X: =1370
        ZIndex: =33

        rctDeleteSolutionDialog As rectangle:
            BorderColor: =ColorFade(rctDeleteSolutionDialog.Fill, -20%)
            DisabledFill: =rctDeleteSolutionDialog.Fill
            Fill: =RGBA(255, 255, 255, 1)
            Height: =1080
            HoverFill: =ColorFade(rctDeleteSolutionDialog.Fill, 20%)
            OnSelect: =
            PressedFill: =ColorFade(rctDeleteSolutionDialog.Fill, -20%)
            Width: =550
            ZIndex: =1

        lblDeleteSolutionDialogTitle As label:
            Align: =Center
            FontWeight: =Semibold
            Height: =64
            Size: =16
            Text: ="DELETE SOLUTION"
            Width: =546
            ZIndex: =2

        icoDeleteSolutionDialogClose As icon.Cancel:
            AccessibleLabel: ="Close"
            BorderColor: =ColorFade(icoDeleteSolutionDialogClose.Fill, -20%)
            DisabledFill: =ColorFade(icoDeleteSolutionDialogClose.Fill, -80%)
            Height: =55
            HoverBorderColor: =ColorFade(icoDeleteSolutionDialogClose.BorderColor, 20%)
            HoverColor: =ColorFade(icoDeleteSolutionDialogClose.Color, 20%)
            HoverFill: =ColorFade(icoDeleteSolutionDialogClose.Fill, 20%)
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext({showDialogOverlay:false,showDeleteSolutionDialog:false})
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            PressedBorderColor: =ColorFade(icoDeleteSolutionDialogClose.BorderColor, -20%)
            PressedColor: =ColorFade(icoDeleteSolutionDialogClose.Color, -20%)
            PressedFill: =ColorFade(icoDeleteSolutionDialogClose.Fill, -20%)
            Width: =55
            X: =495
            Y: =4
            ZIndex: =3

        btnDelete As button:
            DisplayMode: |-
                =If(
                    txtSolutionName.Text = deleteSolutionName,
                    DisplayMode.Edit,
                    DisplayMode.Disabled
                )
            Height: =45
            HoverBorderColor: =ColorFade(btnDelete.BorderColor, 20%)
            HoverColor: =ColorFade(btnDelete.Color, 20%)
            HoverFill: =ColorFade(btnDelete.Fill, 20%)
            OnSelect: |-
                =UpdateContext(
                    {
                        showDialogOverlay: false,
                        showDeleteSolutionDialog: false
                    }
                );
                UpdateContext(
                    {
                        piplineIdToRun: LookUp(
                            CustomAzureDevOps.GetPipelines(
                                drpDeleteDeploymentProfiles.Selected.'AzDO Organization',
                                drpDeleteDeploymentProfiles.Selected.'AzDO Project'
                            ).value,
                            name = "delete-unmanaged-solution-and-components"
                        ).id
                    }
                );
                //Updated LookUp and Remove code to RemoveIf
                UpdateContext(
                    {
                        deleteBuildId: CustomAzureDevOps.RunPipeline(
                            drpDeleteDeploymentProfiles.Selected.'AzDO Organization',
                            drpDeleteDeploymentProfiles.Selected.'AzDO Project',
                            piplineIdToRun,
                            {
                                definition: {id: piplineIdToRun},
                                variables: {
                                    Project: {value: drpDeleteDeploymentProfiles.Selected.'AzDO Project'},
                                    Repo: {value: drpDeleteDeploymentProfiles.Selected.Repository},
                                    SolutionName: {value: glrSolutions.Selected.uniquename},
                                    Email: {value: gblUser.Email},
                                    UserName: {value: gblUser.FullName},
                                    CommitMessage: {value: txtCommitMessage.Text},
                                    Branch: {value: drpAdoBranches.Selected.DisplayName},
                                    BranchToCreate: {value: txtBranchToCreate.Text},
                                    ServiceConnection: {value: SelectedEnvironment.properties.linkedEnvironmentMetadata.instanceUrl},
                                    TriggerSolutionUpgrade: {value: false},
                                    BuildDefinitionId: {value: ""},
                                    PipelineId: {value: piplineIdToRun},
                                    ImportUnmanaged: {value: ""},
                                    EnvironmentName: {value: ""},
                                    Data: {value: "{test: """"}"}
                                }
                            }
                        ).id
                    }
                );
                Patch(
                    'Deployment Requests',
                    {
                        Name: glrSolutions.Selected.friendlyname & " - Delete (" & Text(
                            Now(),
                            ShortDateTime
                        ) & ")",
                        'Solution Name': glrSolutions.Selected.uniquename,
                        'Deployment Profile': drpDeleteDeploymentProfiles.Selected,
                        'Build ID': deleteBuildId,
                        'Request Type': [@Type].Delete
                    }
                );
                Patch(
                    SelectedEnvironmentSolutions,
                    glrSolutions.Selected,
                    {deploymentprofile: drpDeleteDeploymentProfiles.Selected}
                );
                Reset(txtSolutionName);
                UpdateContext({locStartCheckBuildStatusTimer: false});
                Reset(tmrCheckBuildAndPullRequestStatuses);
                UpdateContext({locStartCheckBuildStatusTimer: true});
            PressedBorderColor: =btnDelete.Fill
            PressedColor: =btnDelete.Fill
            PressedFill: =btnDelete.Color
            Text: ="DELETE"
            Width: =200
            X: =330
            Y: =1015
            ZIndex: =8

        txtSolutionName As text:
            AccessibleLabel: ="Solution Name"
            Default: =""
            Height: =45
            HintText: ="Enter the Name of the Solution"
            HoverBorderColor: =ColorFade(txtSolutionName.BorderColor, 20%)
            HoverColor: =ColorFade(txtSolutionName.Color, 20%)
            HoverFill: =ColorFade(txtSolutionName.Fill, 20%)
            PressedBorderColor: =txtSolutionName.HoverBorderColor
            PressedColor: =txtSolutionName.Color
            PressedFill: =txtSolutionName.Fill
            Width: =500
            X: =26
            Y: =391
            ZIndex: =10

        lblDeleteNotice As label:
            Color: =Red
            FontWeight: =FontWeight.Semibold
            Height: =129
            PaddingLeft: =0
            Text: |-
                ="NOTE: This is a destructive action. Deleting this solution will cause you to lose all changes you've made. If there are dependent solutions in this environment the delete action will fail and possibly leave this solution in an unstable state. Make sure you delete dependent solutions first."
            Width: =513
            X: =20
            Y: =110
            ZIndex: =13

        lblSolutionFriendlyName As label:
            Align: =Center
            FontWeight: =FontWeight.Semibold
            Height: =30
            Size: =16
            Text: =glrSolutions.Selected.friendlyname
            Width: =537
            Y: =60
            ZIndex: =14

        lblConfirmNotice As label:
            Color: =RGBA(0, 0, 0, 1)
            FontWeight: =FontWeight.Semibold
            Height: =37
            PaddingLeft: =0
            Text: ="To confirm type the name of the solution"
            Width: =525
            X: =25
            Y: =352
            ZIndex: =15

        drpDeleteDeploymentProfiles As dropdown:
            AccessibleLabel: ="Publish Profile"
            ChevronHoverBackground: =ColorFade(drpDeleteDeploymentProfiles.ChevronBackground, 20%)
            ChevronHoverFill: =ColorFade(drpDeleteDeploymentProfiles.ChevronFill, 20%)
            Default: =glrSolutions.Selected.deploymentprofile.Name
            DisplayMode: =If(IsBlankOrError(glrSolutions.Selected.deploymentprofile), DisplayMode.Edit, DisplayMode.Disabled)
            Height: =45
            HoverBorderColor: =ColorFade(drpDeleteDeploymentProfiles.BorderColor, 20%)
            HoverColor: =ColorFade(drpDeleteDeploymentProfiles.Color, 20%)
            HoverFill: =ColorFade(drpDeleteDeploymentProfiles.SelectionFill, 20%)
            Items: =DeploymentProfiles
            OnChange: |-
                =Set(
                    SelectedDeploymentProfile,
                    drpDeleteDeploymentProfiles.Selected
                );
                ClearCollect(
                    SelectedProfileSteps,
                    Filter('Deployment Steps', 'Deployment Profile'.'Deployment Profile' = SelectedDeploymentProfile.'Deployment Profile')
                );
                Set(
                    SelectedStep,
                    First(SelectedProfileSteps)
                );
            PressedBorderColor: =drpDeleteDeploymentProfiles.HoverBorderColor
            PressedColor: =drpDeleteDeploymentProfiles.Fill
            PressedFill: =drpDeleteDeploymentProfiles.Color
            Width: =500
            X: =25
            Y: =297
            ZIndex: =16

        lblDeleteSelectDeploymentProfile As label:
            FontWeight: =FontWeight.Semibold
            Height: =45
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Select a Profile"
            Width: =500
            X: =25
            Y: =252
            ZIndex: =17

    DeploymentProfileDialog As groupContainer:
        DisplayMode: =DisplayMode.Edit
        Fill: =RGBA(0, 0, 0, .5)
        Height: =1080
        Visible: =showDeploymentProfileDialog
        Width: =550
        X: =1370
        ZIndex: =34

        DeployRectangle_1 As rectangle:
            BorderColor: =ColorFade(DeployRectangle_1.Fill, -20%)
            DisabledFill: =DeployRectangle_1.Fill
            Fill: =RGBA(255, 255, 255, 1)
            Height: =1080
            HoverFill: =ColorFade(DeployRectangle_1.Fill, 20%)
            PressedFill: =ColorFade(DeployRectangle_1.Fill, -20%)
            Width: =550
            ZIndex: =1

        lblDeployProfilePopUpTitle As label:
            Align: =Center
            FontWeight: =Semibold
            Height: =64
            Size: =16
            Text: ="PROFILE"
            Width: =546
            ZIndex: =2

        icoDeployClose_1 As icon.Cancel:
            AccessibleLabel: ="Close"
            BorderColor: =ColorFade(icoDeployClose_1.Fill, -20%)
            DisabledFill: =ColorFade(icoDeployClose_1.Fill, -80%)
            Height: =55
            HoverBorderColor: =ColorFade(icoDeployClose_1.BorderColor, 20%)
            HoverColor: =ColorFade(icoDeployClose_1.Color, 20%)
            HoverFill: =ColorFade(icoDeployClose_1.Fill, 20%)
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext({showDialogOverlay:false,showDeploymentProfileDialog:false})
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            PressedBorderColor: =ColorFade(icoDeployClose_1.BorderColor, -20%)
            PressedColor: =ColorFade(icoDeployClose_1.Color, -20%)
            PressedFill: =ColorFade(icoDeployClose_1.Fill, -20%)
            Width: =55
            X: =492
            Y: =8
            ZIndex: =3

        lblDeployProfileSolutionFriendlyName As label:
            Align: =Center
            FontWeight: =FontWeight.Semibold
            Height: =27
            Size: =16
            Text: =glrSolutions.Selected.friendlyname
            Width: =548
            X: =2
            Y: =49
            ZIndex: =14

        lblDeploymentProfileOrgLabel As label:
            FontWeight: =FontWeight.Semibold
            Height: =45
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Publish Organization"
            Width: =500
            X: =30
            Y: =181
            ZIndex: =18

        lblDeploymentProfileOrg As label:
            Height: =45
            PaddingLeft: =0
            PaddingTop: =0
            Text: =LookUp('Deployment Profiles', 'Deployment Profile' = SelectedDeploymentProfile.'Deployment Profile').'AzDO Organization'
            Width: =500
            X: =30
            Y: =211
            ZIndex: =20

        lblDeploymentProfileRepoLabel As label:
            FontWeight: =FontWeight.Semibold
            Height: =45
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Publish Project"
            Width: =500
            X: =30
            Y: =254
            ZIndex: =21

        lblDeploymentProfileRepo As label:
            Height: =45
            PaddingLeft: =0
            PaddingTop: =0
            Text: =LookUp('Deployment Profiles', 'Deployment Profile' = SelectedDeploymentProfile.'Deployment Profile').'AzDO Project'
            Width: =500
            X: =30
            Y: =284
            ZIndex: =22

        "glrDeploymentEnvironments As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver4.0'":
            AccessibleLabel: ="Environments"
            Height: =508
            Items: =SelectedDeploymentProfile.'Deployment Steps'
            Layout: =Layout.Vertical
            TemplatePadding: =0
            TemplateSize: =110
            Width: =531
            X: =10
            Y: =457
            ZIndex: =28

            Image6_1 As image:
                BorderColor: =ColorFade(Image6_1.Fill, -20%)
                Height: =48
                HoverBorderColor: =ColorFade(Image6_1.BorderColor, 20%)
                HoverFill: =ColorFade(Image6_1.Fill, 20%)
                Image: =deployment
                OnSelect: =Select(Parent)
                PressedBorderColor: =ColorFade(Image6_1.BorderColor, -20%)
                PressedFill: =ColorFade(Image6_1.Fill, -20%)
                Width: =48
                X: =6
                Y: =16
                ZIndex: =1

            Title6_1 As label:
                Height: =26
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =14
                Text: =ThisItem.Name & " - " & ThisItem.'Deployment Environment'.Name
                VerticalAlign: =VerticalAlign.Top
                Width: =460
                X: =57
                Y: =16
                ZIndex: =2

            Separator4_1 As rectangle:
                BorderColor: =ColorFade(Separator4_1.Fill, -20%)
                DisabledFill: =Separator4_1.Fill
                Height: =1
                HoverFill: =ColorFade(Separator4_1.Fill, 20%)
                OnSelect: =Select(Parent)
                PressedFill: =ColorFade(Separator4_1.Fill, -20%)
                Width: =Parent.TemplateWidth
                Y: =Parent.TemplateHeight - 1
                ZIndex: =5

            Subtitle5_3 As label:
                Height: =46
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =14
                Text: =LookUp('Deployment Environments', 'Deployment Environment' = ThisItem.'Deployment Environment'.'Deployment Environment').URL
                VerticalAlign: =VerticalAlign.Top
                Width: =Title6_1.Width
                X: =57
                Y: =46
                ZIndex: =6

        lblDeployProfileSolutionFriendlyName_1 As label:
            Align: =Center
            FontWeight: =FontWeight.Semibold
            Height: =27
            Size: =16
            Text: ="Deployment Environments"
            Width: =548
            X: =2
            Y: =424
            ZIndex: =31

        lblDeploymentProfileRepoLabel_1 As label:
            FontWeight: =FontWeight.Semibold
            Height: =45
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Publish Repository"
            Width: =500
            X: =30
            Y: =327
            ZIndex: =32

        lblDeploymentProfileRepo_1 As label:
            Height: =45
            PaddingLeft: =0
            PaddingTop: =0
            Text: =LookUp('Deployment Profiles', 'Deployment Profile' = SelectedDeploymentProfile.'Deployment Profile').Repository
            Width: =500
            X: =30
            Y: =357
            ZIndex: =33

        drpProfileDeploymentProfiles As dropdown:
            AccessibleLabel: ="Publish Profile"
            ChevronHoverBackground: =ColorFade(drpProfileDeploymentProfiles.ChevronBackground, 20%)
            ChevronHoverFill: =ColorFade(drpProfileDeploymentProfiles.ChevronFill, 20%)
            Default: =SelectedDeploymentProfile.Name
            Height: =45
            HoverBorderColor: =ColorFade(drpProfileDeploymentProfiles.BorderColor, 20%)
            HoverColor: =ColorFade(drpProfileDeploymentProfiles.Color, 20%)
            HoverFill: =ColorFade(drpProfileDeploymentProfiles.SelectionFill, 20%)
            Items: =DeploymentProfiles
            OnChange: |-
                =UpdateContext({SelectedDeploymentProfile: drpProfileDeploymentProfiles.Selected});
                ClearCollect(
                    SelectedProfileSteps,
                    Filter('Deployment Steps', 'Deployment Profile'.'Deployment Profile' = SelectedDeploymentProfile.'Deployment Profile')
                );
            PressedBorderColor: =drpProfileDeploymentProfiles.HoverBorderColor
            PressedColor: =drpProfileDeploymentProfiles.Fill
            PressedFill: =drpProfileDeploymentProfiles.Color
            Width: =500
            X: =30
            Y: =127
            ZIndex: =34

        lblProfileDeploymentProfile As label:
            FontWeight: =FontWeight.Semibold
            Height: =45
            PaddingLeft: =0
            PaddingTop: =0
            Text: ="Select a Profile"
            Width: =500
            X: =30
            Y: =92
            ZIndex: =35

        btnSavePublishProfile As button:
            HoverBorderColor: =ColorFade(btnSavePublishProfile.BorderColor, 20%)
            HoverColor: =ColorFade(btnSavePublishProfile.Color, 20%)
            HoverFill: =ColorFade(btnSavePublishProfile.Fill, 20%)
            OnSelect: |
                =Patch(
                    'Deployment Requests',
                    {
                        Name: glrSolutions.Selected.friendlyname & " - Profile (" & Text(
                            Now(),
                            ShortDateTime
                        ) & ")",
                        'Solution Name': glrSolutions.Selected.uniquename,
                        'Deployment Profile': drpProfileDeploymentProfiles.Selected,
                        'Request Type': [@Type].Profile
                    }
                );
                Patch(
                    SelectedEnvironmentSolutions,
                    glrSolutions.Selected,
                    {deploymentprofile: drpProfileDeploymentProfiles.Selected}
                );
                UpdateContext(
                    {
                        showDialogOverlay: false,
                        showDeploymentProfileDialog: false
                    }
                );
                UpdateContext({locStartCheckBuildStatusTimer: false});
                Reset(tmrCheckBuildAndPullRequestStatuses);
                UpdateContext({locStartCheckBuildStatusTimer: true});
            PressedBorderColor: =btnSavePublishProfile.Fill
            PressedColor: =btnSavePublishProfile.Fill
            PressedFill: =btnSavePublishProfile.Color
            Text: ="Save"
            X: =370
            Y: =1020
            ZIndex: =36

    btnFunctions As groupContainer:
        DisplayMode: =DisplayMode.Edit
        Height: =320
        Visible: =false
        Width: =564
        X: =1
        Y: =760
        ZIndex: =35

        fncRefreshStatuses As button:
            Height: =50
            HoverBorderColor: =ColorFade(fncRefreshStatuses.BorderColor, 20%)
            HoverColor: =ColorFade(fncRefreshStatuses.Color, 20%)
            HoverFill: =ColorFade(fncRefreshStatuses.Fill, 20%)
            OnSelect: |
                =UpdateContext(
                    {
                        locImportingSolutionBuildRequest: First(
                            Filter(
                                'Deployment Requests',
                                'Request Type' = [@Type].Import And Status = 'Status (Deployment Requests)'.Active
                            )
                        )
                    }
                );
                UpdateContext({locImportingSolutionProfile: locImportingSolutionBuildRequest.'Deployment Profile'});
                UpdateContext(
                    {
                        locImportSolutionStatus: If(
                            !IsBlankOrError(locImportingSolutionProfile) And !IsBlankOrError(locImportingSolutionBuildRequest.'Build ID'),
                            CustomAzureDevOps.GetBuild(
                                locImportingSolutionProfile.'AzDO Organization',
                                locImportingSolutionProfile.'AzDO Project',
                                locImportingSolutionBuildRequest.'Build ID'
                            )
                        )
                    }
                );
                If(
                    locImportSolutionStatus.status = "completed",
                    Patch(
                        'Deployment Requests',
                        locImportingSolutionBuildRequest,
                        {
                            Status: 'Status (Deployment Requests)'.Inactive,
                            'Status Reason': 'Status Reason (Deployment Requests)'.Completed
                        }
                    );
                );
                Clear(TempSelectedEnvironmentSolutions);
                If(
                    Not IsBlank(SelectedEnvironment.properties.linkedEnvironmentMetadata.uniqueName),
                    Collect(
                        TempSelectedEnvironmentSolutions,
                        AddColumns(
                            GetEnvironmentSolutions.Run(
                                SelectedEnvironment.properties.linkedEnvironmentMetadata.uniqueName,
                                Last(
                                    FirstN(
                                        ClearCollect(
                                            splitCol,
                                            Split(
                                                SelectedEnvironment.properties.linkedEnvironmentMetadata.instanceUrl,
                                                "."
                                            )
                                        ),
                                        2
                                    )
                                ).Result
                            ),
                            "deploymentrequests",
                            Sort(
                                Filter(
                                    'Deployment Requests',
                                    'Solution Name' = uniquename
                                ),
                                'Created On',
                                Descending
                            ),
                            "deploymentprofile",
                            First(
                                Sort(
                                    Filter(
                                        'Deployment Requests',
                                        'Solution Name' = uniquename
                                    ),
                                    'Created On',
                                    Descending
                                )
                            ).'Deployment Profile'
                        )
                    )
                );
                
                ForAll(
                    TempSelectedEnvironmentSolutions As e,
                    If(
                        !IsBlankOrError(e.deploymentprofile),
                        Collect(
                            TempSolutionsLatestBuildStatuses,
                            {
                                uniquename: e.uniquename,
                                exportToGitStatus: If(
                                    !IsBlankOrError(
                                        First(
                                            Filter(
                                                e.deploymentrequests,
                                                'Deployment Profile'.'Deployment Profile' = e.deploymentprofile.'Deployment Profile' And 'Request Type' = [@Type].Publish And 'Created By'.User = gblCdsUser.User
                                            )
                                        )
                                    ),
                                    CustomAzureDevOps.GetBuild(
                                        e.deploymentprofile.'AzDO Organization',
                                        e.deploymentprofile.'AzDO Project',
                                        First(
                                            Filter(
                                                e.deploymentrequests,
                                                'Deployment Profile'.'Deployment Profile' = e.deploymentprofile.'Deployment Profile' And 'Request Type' = [@Type].Publish And 'Created By'.User = gblCdsUser.User
                                            )
                                        ).'Build ID'
                                    )
                                ),
                                deleteSolutionStatus: If(
                                    !IsBlankOrError(
                                        First(
                                            Filter(
                                                e.deploymentrequests,
                                                'Deployment Profile'.'Deployment Profile' = e.deploymentprofile.'Deployment Profile' And 'Request Type' = [@Type].Delete And 'Created By'.User = gblCdsUser.User
                                            )
                                        )
                                    ),
                                    CustomAzureDevOps.GetBuild(
                                        e.deploymentprofile.'AzDO Organization',
                                        e.deploymentprofile.'AzDO Project',
                                        First(
                                            Filter(
                                                e.deploymentrequests,
                                                'Deployment Profile'.'Deployment Profile' = e.deploymentprofile.'Deployment Profile' And 'Request Type' = [@Type].Delete And 'Created By'.User = gblCdsUser.User
                                            )
                                        ).'Build ID'
                                    )
                                ),
                                pullRequestStatus: If(
                                    !IsBlankOrError(
                                        First(
                                            Filter(
                                                e.deploymentrequests,
                                                'Deployment Profile'.'Deployment Profile' = e.deploymentprofile.'Deployment Profile' And 'Request Type' = [@Type].Deploy And 'Created By'.User = gblCdsUser.User
                                            )
                                        )
                                    ),
                                    CustomAzureDevOps.GetPullReqeust(
                                        e.deploymentprofile.'AzDO Organization',
                                        e.deploymentprofile.'AzDO Project',
                                        e.deploymentprofile.'Repository ID',
                                        First(
                                            Filter(
                                                e.deploymentrequests,
                                                'Deployment Profile'.'Deployment Profile' = e.deploymentprofile.'Deployment Profile' And 'Request Type' = [@Type].Deploy And 'Created By'.User = gblCdsUser.User
                                            )
                                        ).'Build ID'
                                    )
                                )
                            }
                        )
                    )
                );
                ClearCollect(
                    SelectedEnvironmentSolutions,
                    TempSelectedEnvironmentSolutions
                );
                Clear(TempSelectedEnvironmentSolutions);
                ClearCollect(
                    SolutionsLatestBuildStatuses,
                    TempSolutionsLatestBuildStatuses
                );
                Clear(TempSolutionsLatestBuildStatuses);
            PressedBorderColor: =fncRefreshStatuses.Fill
            PressedColor: =fncRefreshStatuses.Fill
            PressedFill: =fncRefreshStatuses.Color
            Text: ="fncRefreshStatuses"
            Width: =562
            X: =2
            Y: =60
            ZIndex: =6

        fncRefreshBranchFolders As button:
            Height: =50
            HoverBorderColor: =ColorFade(fncRefreshBranchFolders.BorderColor, 20%)
            HoverColor: =ColorFade(fncRefreshBranchFolders.Color, 20%)
            HoverFill: =ColorFade(fncRefreshBranchFolders.Fill, 20%)
            OnSelect: |
                =UpdateContext({SelectedBranchSolutionFolder: drpSolutionFolders.Selected.DisplayName});
                Clear(BranchFolders);
                Clear(BranchSolutionFolders);
                Clear(BranchConfigFolders);
                If(
                    Not IsBlank(drpImportDeploymentProfiles.Selected.'AzDO Organization') And Not IsBlank(drpImportDeploymentProfiles.Selected.'AzDO Project') And Not IsBlank(dpBranchName.Selected.name),
                    Collect(
                        BranchFolders,
                        CustomAzureDevOps.ListItems(
                            drpImportDeploymentProfiles.Selected.'AzDO Organization',
                            drpImportDeploymentProfiles.Selected.'AzDO Project',
                            drpImportDeploymentProfiles.Selected.Repository,
                            {
                                recursionLevel: "full",
                                'versionDescriptor.versionType': "branch",
                                'versionDescriptor.version': dpBranchName.Selected.DisplayName
                            }
                        ).value
                    );
                    Collect(
                        BranchSolutionFolders,
                        AddColumns(
                            Filter(
                                BranchFolders,
                                isFolder = true && "SolutionPackage" in path && Not("SolutionPackage/" in path)
                            ),
                            "DisplayName",
                            Match(
                                path,
                                "\/(?<name>.+)\/SolutionPackage"
                            ).name;
                        )
                    );
                    If(
                        IsBlankOrError(SelectedBranchSolutionFolder),
                        UpdateContext({SelectedBranchSolutionFolder: First(BranchSolutionFolders).DisplayName})
                    );
                    Collect(
                        BranchConfigFolders,
                        {DisplayName: Char(160)}
                    );
                    Collect(
                        BranchConfigFolders,
                        AddColumns(
                            Filter(
                                BranchFolders,
                                isFolder = true && SelectedBranchSolutionFolder & "/config/" in path && Not("/ConfigurationMigrationData" in path)
                            ),
                            "DisplayName",
                            Match(
                                path,
                                "\/config\/(?<environment>.+)"
                            ).environment;
                        )
                    );
                );
            PressedBorderColor: =fncRefreshBranchFolders.Fill
            PressedColor: =fncRefreshBranchFolders.Fill
            PressedFill: =fncRefreshBranchFolders.Color
            Text: ="fncRefreshStatuses"
            Width: =562
            X: =2
            Y: =98
            ZIndex: =7

        fncInitializeHome As button:
            HoverBorderColor: =ColorFade(fncInitializeHome.BorderColor, 20%)
            HoverColor: =ColorFade(fncInitializeHome.Color, 20%)
            HoverFill: =ColorFade(fncInitializeHome.Fill, 20%)
            OnSelect: |-
                =UpdateContext({showLoader: true});
                UpdateContext({locStartCheckBuildStatusTimer: false});
                //Set Global user, Global CDS user and get App User Settings
                Set(
                    gblUser,
                    User()
                );
                Set(
                    gblCdsUser,
                    LookUp(
                        Users,
                        domainname = gblUser.Email
                    )
                );
                Set(
                    DeploymentUserSetting,
                    First('Deployment User Settings')
                );
                ClearCollect(
                    DeploymentProfiles,
                    AddColumns(
                        DeploymentUserSetting.'Deployment Profiles',
                        "DisplayName",
                        Name
                    )
                );
                // Get user settings for this App.   
                Set(
                    AppUserSetting,
                    LookUp(
                        'App User Settings',
                        AppName = ApplicationName && Owner = gblCdsUser
                    )
                );
                // If App User Setting record doesn't exist, it is the first time the user has used this app, so create it and force user to save initial values
                If(
                    IsBlank(AppUserSetting),
                    Set(
                        AppUserSetting,
                        Patch(
                            'App User Settings',
                            {cat_appname: ApplicationName}
                        )
                    );
                    UpdateContext(
                        {
                            showDialogOverlay: true,
                            showEnvironmentDialog: true
                        }
                    );
                    
                );
                //Store User Settings in a collection
                ClearCollect(
                    AppUserSetting_UserSettings,
                    Filter(
                        'User Settings',
                        'App User Setting'.'App User Setting' = AppUserSetting.'App User Setting'
                    )
                );
                //Pull the Orgs, Projects and Project Repos.
                Set(
                    Orgs,
                    CustomAzureDevOps.GetOrganizations()
                );
                Set(
                    DefaultOrg,
                    LookUp(
                        AppUserSetting_UserSettings,
                        Name = DefaultOrgSettingName
                    )
                );
                // Required to force explicit column selection, otherwise the Value field won't be returned in the result
                LookUp(
                    AppUserSetting_UserSettings,
                    Name = DefaultOrgSettingName
                ).Value;
                //Redirect to Deployment Settings Page if the required parameters were supplied
                ClearCollect(
                    AllEnvironments,
                    Sort(
                        PowerAppsforMakers.GetEnvironments().value,
                        DisplayName
                    )
                );
                If(
                    !IsBlank(Param("configsoln")) && !IsBlank(Param("env")),
                    Set(
                        SelectedEnvironment,
                        LookUp(
                            AllEnvironments,
                            name = Param("env")
                        )
                    );
                    Set(
                        SelectedSolutionToConfigure,
                        LookUp(
                            SelectedEnvironmentSolutions,
                            Text(solutionid) = Param("configsoln")
                        )
                    );
                    Navigate(DeploymentSettingsScreen)
                );
                // Parse the CSV and get it into the LastSavedPullRequests / LastSavedExportToGitPipelineRuns  / LastSavedBranchesCreated collections 
                Set(
                    DefaultEnvironmentSettingName,
                    "LastSavedEnvironment"
                );
                Set(
                    DeploymentSettingName,
                    "Deployment - "
                );
                Set(
                    DefaultEnvironment,
                    LookUp(
                        AppUserSetting_UserSettings,
                        Name = DefaultEnvironmentSettingName
                    )
                );
                If(
                    IsBlank(SelectedEnvironment),
                    If(
                        IsBlank(DefaultEnvironment) && CountRows(AllEnvironments) > 0,
                        Set(
                            DefaultEnvironment,
                            Patch(
                                'User Settings',
                                {
                                    'App User Setting': AppUserSetting,
                                    Name: DefaultEnvironmentSettingName,
                                    Value: First(AllEnvironments).name
                                }
                            )
                        )
                    );
                    Set(
                        DefaultEnvironmentToLoad,
                        LookUp(
                            AllEnvironments,
                            name = DefaultEnvironment.Value
                        )
                    );
                    Set(
                        SelectedEnvironment,
                        DefaultEnvironmentToLoad
                    )
                );
                Select(fncRefreshBranchFolders);
                Concurrent(
                    ClearCollect(
                        AADGroups,
                        GetAADGroups.Run().value
                    ),
                    ClearCollect(
                        SharepointSites,
                        GetSharepointSites.Run().value
                    )
                );
                Collect(
                    SharepointSites,
                    {webUrl: ""}
                );
                ClearCollect(
                    SharepointSites,
                    Sort(
                        SharepointSites,
                        webUrl
                    )
                );
                Collect(
                    AADGroups,
                    {name: ""}
                );
                ClearCollect(
                    AADGroups,
                    Sort(
                        AADGroups,
                        name
                    )
                );
                UpdateContext({locStartCheckBuildStatusTimer: false});
                Reset(tmrCheckBuildAndPullRequestStatuses);
                UpdateContext({locStartCheckBuildStatusTimer: true});
                UpdateContext({showLoader: false});
            PressedBorderColor: =fncInitializeHome.Fill
            PressedColor: =fncInitializeHome.Fill
            PressedFill: =fncInitializeHome.Color
            Text: ="fncInitializeHome"
            Width: =560
            X: =4
            Y: =173
            ZIndex: =8

    tmrCheckBuildAndPullRequestStatuses As timer:
        AutoStart: =true
        BorderColor: =ColorFade(tmrCheckBuildAndPullRequestStatuses.Fill, -20%)
        DisabledBorderColor: =ColorFade(tmrCheckBuildAndPullRequestStatuses.BorderColor, 70%)
        DisabledColor: =ColorFade(tmrCheckBuildAndPullRequestStatuses.Fill, 90%)
        DisabledFill: =ColorFade(tmrCheckBuildAndPullRequestStatuses.Fill, 70%)
        Duration: =15000
        Height: =68
        HoverBorderColor: =ColorFade(tmrCheckBuildAndPullRequestStatuses.BorderColor, 20%)
        HoverColor: =ColorFade(tmrCheckBuildAndPullRequestStatuses.Color, 20%)
        HoverFill: =ColorFade(tmrCheckBuildAndPullRequestStatuses.Fill, 20%)
        OnTimerEnd: =
        OnTimerStart: =Select(fncRefreshStatuses)
        PressedBorderColor: =tmrCheckBuildAndPullRequestStatuses.Fill
        PressedColor: =tmrCheckBuildAndPullRequestStatuses.Fill
        PressedFill: =tmrCheckBuildAndPullRequestStatuses.Color
        Repeat: =true
        Start: =locStartCheckBuildStatusTimer
        Visible: =false
        X: =490
        ZIndex: =36

    Group2 As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =37

        lblSolution As label:
            Font: =Font.'Segoe UI'
            FontWeight: =Semibold
            Height: =32
            Size: =10
            Text: ="SOLUTION"
            Width: =258
            X: =28
            Y: =146
            ZIndex: =6

        lblTestProdStatus As label:
            Align: =Center
            Font: =Font.'Segoe UI'
            FontWeight: =Semibold
            Height: =36
            Size: =10
            Text: ="DELETE STATUS"
            Visible: |-
                =If(
                    IsBlankOrError(DeploymentUserSetting) Or DeploymentUserSetting.'Allow Delete' = 'A Yes or No boolean'.Allowed,
                    true,
                    false
                )
            X: =1700
            Y: =146
            ZIndex: =7

        lblPushStatus As label:
            Align: =Center
            Font: =Font.'Segoe UI'
            FontWeight: =Semibold
            Height: =29
            Size: =10
            Text: ="PUBLISH STATUS"
            Width: =170
            X: =605
            Y: =146
            ZIndex: =13

        lblPullRequestStatus As label:
            Align: =Center
            Font: =Font.'Segoe UI'
            FontWeight: =Semibold
            Height: =32
            Size: =10
            Text: ="DEPLOY STATUS"
            Width: =292
            X: =915
            Y: =146
            ZIndex: =14

        lblDeploymentProfile As label:
            Align: =Center
            Font: =Font.'Segoe UI'
            FontWeight: =Semibold
            Height: =30
            Size: =10
            Text: ="PROFILE"
            Width: =310
            X: =1130
            Y: =146
            ZIndex: =25

    grpNewSolution As group:
        Height: =5
        Width: =5
        X: =20
        Y: =20
        ZIndex: =40

        lblNewSolution As label:
            Color: =RGBA(0, 0, 0, 1)
            FocusedBorderThickness: =
            FontWeight: =Normal
            Height: =51
            HoverColor: =Self.BorderColor
            OnSelect: |-
                =UpdateContext({showDialogOverlay:true, showImportDialog:true})
            Size: =14
            Text: ="MANAGE SOLUTIONS"
            Visible: |-
                =If(
                    IsBlankOrError(DeploymentUserSetting) Or DeploymentUserSetting.'Allow Import' = 'A Yes or No boolean'.Allowed,
                    true,
                    false
                )
            Width: =200
            X: =212
            Y: =90
            ZIndex: =1

        icoNewSolution As icon.Add:
            AccessibleLabel: ="Import Solution"
            BorderColor: =ColorFade(icoNewSolution.Fill, -20%)
            Color: =PrimaryColor2Value
            DisabledFill: =ColorFade(icoNewSolution.Fill, -80%)
            FocusedBorderThickness: =
            Height: =47
            HoverBorderColor: =ColorFade(icoNewSolution.BorderColor, 20%)
            HoverColor: =ColorFade(icoNewSolution.Color, 20%)
            HoverFill: =ColorFade(icoNewSolution.Fill, 20%)
            Icon: =Icon.DetailList
            OnSelect: |-
                =UpdateContext(
                    {
                        locLastDeploymentRequest: First(
                            Sort(
                                Filter(
                                    'Deployment Requests',
                                    'Solution Name' = glrSolutions.Selected.uniquename
                                ),
                                'Created On',
                                Descending
                            )
                        ),
                        locLastProfileSelected: locLastDeploymentRequest.'Deployment Profile'
                    }
                );
                If(
                    IsBlankOrError(locLastProfileSelected),
                    UpdateContext({locLastProfileSelected: First('Deployment Profiles')})
                );
                Select(fncRefreshBranchFolders);
                UpdateContext({showDialogOverlay:true, showImportDialog:true});
            PaddingBottom: =8
            PaddingLeft: =8
            PaddingRight: =5
            PaddingTop: =8
            PressedBorderColor: =ColorFade(icoNewSolution.BorderColor, -20%)
            PressedColor: =ColorFade(icoNewSolution.Color, -20%)
            PressedFill: =ColorFade(icoNewSolution.Fill, -20%)
            Tooltip: ="Import an Unmanaged Solution from Source Control"
            Visible: |-
                =If(
                    IsBlankOrError(DeploymentUserSetting) Or DeploymentUserSetting.'Allow Import' = 'A Yes or No boolean'.Allowed,
                    true,
                    false
                )
            Width: =57
            X: =160
            Y: =90
            ZIndex: =2

        icoNewSolutionLabel As icon.Add:
            AccessibleLabel: ="Import Solution"
            BorderColor: =ColorFade(icoNewSolutionLabel.Fill, -20%)
            Color: =PrimaryColor2Value
            DisabledFill: =ColorFade(icoNewSolutionLabel.Fill, -80%)
            FocusedBorderThickness: =
            Height: =49
            HoverBorderColor: =ColorFade(icoNewSolutionLabel.BorderColor, 20%)
            HoverColor: =ColorFade(icoNewSolutionLabel.Color, 20%)
            HoverFill: =ColorFade(icoNewSolutionLabel.Fill, 20%)
            Icon: =
            OnSelect: |
                =If(
                    !IsBlank(SelectedEnvironment),
                    Launch("https://make.powerapps.com/environments/" & SelectedEnvironment.name & "/solutions")
                );
            PaddingBottom: =8
            PaddingLeft: =8
            PaddingRight: =5
            PaddingTop: =8
            PressedBorderColor: =ColorFade(icoNewSolutionLabel.BorderColor, -20%)
            PressedColor: =ColorFade(icoNewSolutionLabel.Color, -20%)
            PressedFill: =ColorFade(icoNewSolutionLabel.Fill, -20%)
            Tooltip: ="Import an Unmanaged Solution from Source Control"
            Visible: |-
                =If(
                    IsBlankOrError(DeploymentUserSetting) Or DeploymentUserSetting.'Allow Import' = 'A Yes or No boolean'.Allowed,
                    true,
                    false
                )
            Width: =190
            X: =217
            Y: =90
            ZIndex: =5

