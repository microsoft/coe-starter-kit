{
  "properties": {
    "connectionReferences": {
      "shared_office365users_1": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "admin_CoENurtureO365Users"
        },
        "api": {
          "name": "shared_office365users"
        }
      },
      "shared_teams_1": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "admin_CoENurtureMicrosoftTeams"
        },
        "api": {
          "name": "shared_teams"
        }
      },
      "shared_commondataserviceforapps_1": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "new_CoENurtureDataverse"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      },
      "shared_commondataserviceforapps": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "admin_sharedcommondataserviceforapps_98924"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "ProductionEnvironment (admin_ProductionEnvironment)": {
          "defaultValue": true,
          "type": "Bool",
          "metadata": {
            "schemaName": "admin_ProductionEnvironment",
            "description": "Inventory - Yes by default. Set to No if you are creating a dev type envt. This will allow some flows to set target users to the admin instead of resource owners"
          }
        },
        "Individual Admin (admin_ApprovalAdmin)": {
          "defaultValue": "AdeleV@powercattools.onmicrosoft.com ",
          "type": "String",
          "metadata": {
            "schemaName": "admin_ApprovalAdmin",
            "description": "Inventory - REQUIRED. An individual admin's email. Some actions (approvals / team chats) cannot accept a group/DL. So this env variable is for those instances in the kit. "
          }
        },
        "Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)": {
          "defaultValue": "https://flow.microsoft.com/manage/environments/",
          "type": "String",
          "metadata": {
            "schemaName": "admin_PowerAutomateEnvironmentVariable",
            "description": "Inventory - REQUIRED. Environment, including geographic location, for Power Automate - Ex for commercial: https://flow.microsoft.com/manage/environments/"
          }
        }
      },
      "triggers": {
        "manual": {
          "metadata": {
            "operationMetadataId": "1a2efe6f-ee5d-4fca-b998-13ff606e6f07"
          },
          "type": "Request",
          "kind": "Button",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "title": "Email",
                  "type": "string",
                  "format": "email",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter an e-mail address",
                  "x-ms-content-hint": "EMAIL"
                },
                "text": {
                  "title": "MakerID",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                }
              },
              "required": [
                "email",
                "text"
              ]
            }
          }
        }
      },
      "actions": {
        "Pulse_[Child]_-_Post_adaptive_cards_to_maker_SCOPE": {
          "actions": {
            "Respond_to_parent_flow": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "3ad5f762-941f-420c-9159-5c727f29ae73"
              },
              "type": "Response",
              "kind": "PowerApp",
              "inputs": {
                "statusCode": 200,
                "body": {
                  "status": "Started"
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "title": "Status",
                      "x-ms-dynamically-added": true,
                      "type": "string"
                    }
                  }
                }
              },
              "description": "Send response to parent flow so the parent flow does not wait for this to be complete"
            },
            "Get_user_profile_(V2)": {
              "runAfter": {
                "Respond_to_parent_flow": [
                  "Succeeded",
                  "Skipped"
                ]
              },
              "metadata": {
                "operationMetadataId": "3f0439d0-3400-4cbe-bb64-94bb900496e9"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_office365users_1",
                  "operationId": "UserProfile_V2",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_office365users"
                },
                "parameters": {
                  "id": "@triggerBody()['email']",
                  "$select": "preferredLanguage"
                },
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                }
              }
            },
            "Get_admin_profile_(V2)": {
              "runAfter": {
                "Get_user_profile_(V2)": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "3ef63fcc-8a1c-4662-90c7-0b60aaa16afa"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_office365users_1",
                  "operationId": "UserProfile_V2",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_office365users"
                },
                "parameters": {
                  "id": "@parameters('Individual Admin (admin_ApprovalAdmin)')",
                  "$select": "id"
                },
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                }
              }
            },
            "the_Maker_ID": {
              "runAfter": {
                "Get_admin_profile_(V2)": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "52133d5a-fdd3-4843-8c0c-6e856ec0cf1f"
              },
              "type": "Compose",
              "inputs": "@if(equals(parameters('ProductionEnvironment (admin_ProductionEnvironment)'), false), outputs('Get_admin_profile_(V2)')?['body/id'], triggerBody()['text'])",
              "description": "For non-production environments, will attribute feedback to admin, not user"
            },
            "Post_adaptive_card_to_maker_to_ask_for_pulse_feedback": {
              "runAfter": {
                "the_Maker_ID": [
                  "Succeeded"
                ]
              },
              "limit": {
                "timeout": "P2D"
              },
              "metadata": {
                "operationMetadataId": "18c9ca9c-aeb0-46ce-84a0-875e297a6240"
              },
              "type": "OpenApiConnectionWebhook",
              "inputs": {
                "host": {
                  "connectionName": "shared_teams_1",
                  "operationId": "PostCardAndWaitForResponse",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams"
                },
                "parameters": {
                  "poster": "Flow bot",
                  "location": "Chat with Flow bot",
                  "body/body/messageBody": "{\n    \"type\": \"AdaptiveCard\",\n    \"body\": [\n        {\n            \"type\": \"TextBlock\",\n            \"size\": \"Medium\",\n            \"weight\": \"Bolder\",\n            \"text\": \"We need your feedback\"\n        },\n        {\n            \"type\": \"ColumnSet\",\n            \"columns\": [\n                {\n                    \"type\": \"Column\",\n                    \"width\": \"stretch\"\n                }\n            ]\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"As a Power Platform developer, we really value your feedback. As part of our commitment to continually improve our service, we would appreciate it if you could provide us with some feedback? What can we do better, what are we doing well and what isn't working well for you today?\",\n            \"wrap\": true\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"Describe how satisfied you are with the internal Power Platform adoption program and what works well for you today?\",\n            \"wrap\": true,\n            \"weight\": \"Bolder\"\n        },\n        {\n            \"type\": \"Input.Text\",\n            \"placeholder\": \"\",\n            \"isMultiline\": true,\n            \"maxLength\": 20000,\n            \"id\": \"myCurrentSatisfaction\"\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"What else would you like to see as part of our Power Platform adoption program?\",\n            \"wrap\": true,\n            \"weight\": \"Bolder\"\n        },\n        {\n            \"type\": \"Input.Text\",\n            \"placeholder\": \"\",\n            \"isMultiline\": true,\n            \"maxLength\": 2000,\n            \"id\": \"myFutureIdeas\"\n        }\n    ],\n    \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n    \"version\": \"1.4\",\n    \"actions\": [\n        {\n            \"type\": \"Action.Submit\",\n            \"title\": \"Submit Feedback\",\n            \"id\": \"btnSubmit\"\n        }\n    ]\n}",
                  "body/body/updateMessage": "Thanks for your response!",
                  "body/body/recipient/to": "@{trim(if(equals(parameters('ProductionEnvironment (admin_ProductionEnvironment)'), false), parameters('Individual Admin (admin_ApprovalAdmin)'), triggerBody()['email']))};"
                },
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                }
              }
            },
            "Send_time_out_message_to_maker": {
              "runAfter": {
                "Post_adaptive_card_to_maker_to_ask_for_pulse_feedback": [
                  "TimedOut"
                ]
              },
              "metadata": {
                "operationMetadataId": "57c2dd10-eb3f-4601-bf6f-fd4112460e22"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_teams_1",
                  "operationId": "PostMessageToConversation",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_teams"
                },
                "parameters": {
                  "poster": "Flow bot",
                  "location": "Chat with Flow bot",
                  "body/recipient": "@{if(equals(parameters('ProductionEnvironment (admin_ProductionEnvironment)'), false), parameters('Individual Admin (admin_ApprovalAdmin)'), triggerBody()['email'])};",
                  "body/messageBody": "<p>This request for feedback above has timed out.&nbsp;</p>"
                },
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                }
              }
            },
            "Update_last_survey_send_in_Maker_table": {
              "runAfter": {
                "Send_time_out_message_to_maker": [
                  "Succeeded",
                  "Skipped"
                ]
              },
              "metadata": {
                "operationMetadataId": "7cfa9b87-c1ee-4719-b946-40cc246fe2de"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps_1",
                  "operationId": "UpdateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_makers",
                  "recordId": "@outputs('the_Maker_ID')",
                  "item/admin_lastpulsesurvey": "@utcNow()"
                },
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                }
              }
            },
            "Check_if_feedback_is_provided": {
              "actions": {
                "Analyze_sentiment_for_current_satisfaction": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "84173bcd-7634-4370-bf47-d33ce7847b9d",
                    "flowSystemMetadata": {
                      "portalOperationId": "aibuilderpredict_sentimentanalysis",
                      "portalOperationGroup": "aibuilder",
                      "portalOperationApiDisplayNameOverride": "AI Builder",
                      "portalOperationIconOverride": "https://content.powerapps.com/resource/makerx/static/pauto/images/designeroperations/aiBuilderNew.51dbdb6b.png",
                      "portalOperationBrandColorOverride": "#0A76C4",
                      "portalOperationApiTierOverride": "Standard"
                    }
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_commondataserviceforapps_1",
                      "operationId": "aibuilderpredict_sentimentanalysis",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                    },
                    "parameters": {
                      "item/requestv2/language": "en",
                      "item/requestv2/text": "@outputs('Post_adaptive_card_to_maker_to_ask_for_pulse_feedback')?['body/data/myCurrentSatisfaction']"
                    },
                    "authentication": {
                      "type": "Raw",
                      "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                    }
                  }
                },
                "Update_Pulse_Feedback_with_response": {
                  "runAfter": {
                    "Analyze_sentiment_for_current_satisfaction": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "d67fe39d-eb52-48f0-9fd5-27d9a8b2a131"
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_commondataserviceforapps_1",
                      "operationId": "CreateRecord",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                    },
                    "parameters": {
                      "entityName": "admin_pulsefeedbacks",
                      "item/admin_currentsatisfaction": "@outputs('Post_adaptive_card_to_maker_to_ask_for_pulse_feedback')?['body/data/myCurrentSatisfaction']",
                      "item/admin_currentsatisfactionsentiment": "@outputs('Analyze_sentiment_for_current_satisfaction')?['body/responsev2/predictionOutput/result/sentiment']",
                      "item/admin_Feedbackfrom@odata.bind": "admin_makers(@{outputs('the_Maker_ID')})",
                      "item/admin_futureideas": "@outputs('Post_adaptive_card_to_maker_to_ask_for_pulse_feedback')?['body/data/myFutureIdeas']",
                      "item/admin_name": "@{if(equals(parameters('ProductionEnvironment (admin_ProductionEnvironment)'), false), parameters('Individual Admin (admin_ApprovalAdmin)'), triggerBody()['email'])} completed survey @{formatDateTime(utcNow(), 'yyyy-MM-dd')}"
                    },
                    "authentication": {
                      "type": "Raw",
                      "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                    }
                  }
                }
              },
              "runAfter": {
                "Update_last_survey_send_in_Maker_table": [
                  "Succeeded"
                ]
              },
              "expression": {
                "greater": [
                  "@length(outputs('Post_adaptive_card_to_maker_to_ask_for_pulse_feedback')?['body/data/myCurrentSatisfaction'])",
                  0
                ]
              },
              "metadata": {
                "operationMetadataId": "08ab5851-8957-460a-adc1-d4a4fbcc4ad5"
              },
              "type": "If"
            }
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "8a7e28af-f748-4757-95ce-20c66f2d4ef7"
          },
          "type": "Scope"
        },
        "Error_Handling": {
          "actions": {
            "Create_a_new_record_-_Sync_Flow_Errors": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "87961ff0-e261-4890-9ab9-a53f88fe0de5"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "CreateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_syncflowerrorses",
                  "item/admin_name": "@workflow()?['tags']['flowDisplayName']",
                  "item/admin_flowinstanceurl": "@concat(parameters('Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)'), workflow()?['tags']['environmentName'], '/flows/', workflow()?['name'], '/runs/', workflow()?['run']['name'])"
                },
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                },
                "retryPolicy": {
                  "type": "exponential",
                  "count": 10,
                  "interval": "PT10S"
                }
              }
            },
            "Terminate": {
              "runAfter": {
                "Update_Last_Run_Fail": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "9e5a2a18-dba2-47a1-96d5-3356f4348e5a"
              },
              "type": "Terminate",
              "inputs": {
                "runStatus": "Failed",
                "runError": {
                  "code": "500",
                  "message": "Get Environments Failed"
                }
              }
            },
            "Get_ID_Fail": {
              "runAfter": {
                "Create_a_new_record_-_Sync_Flow_Errors": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "47329bf2-8aac-400d-9778-a793b4f1180f"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "$select": "admin_coesolutionmetadataid",
                  "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                  "$top": 1
                },
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                }
              }
            },
            "Update_Last_Run_Fail": {
              "runAfter": {
                "Get_ID_Fail": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "c63eb7cc-6101-4567-b520-a4a8881264e9"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "recordId": "@first(outputs('Get_ID_Fail')?['body/value'])?['admin_coesolutionmetadataid']",
                  "item/admin_lastrun": "@utcNow()",
                  "item/admin_lastrunpassed": false
                },
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                }
              }
            }
          },
          "runAfter": {
            "Pulse_[Child]_-_Post_adaptive_cards_to_maker_SCOPE": [
              "Failed"
            ]
          },
          "metadata": {
            "operationMetadataId": "38ae684e-622d-42ea-abd2-ee571aee3a5f"
          },
          "type": "Scope"
        },
        "Update_last_run_as_pass": {
          "actions": {
            "Update_Last_Run_Successful": {
              "runAfter": {
                "Get_ID_Pass": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "78ef70e5-7f67-4737-9a02-8533f12caa19"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "recordId": "@first(outputs('Get_ID_Pass')?['body/value'])?['admin_coesolutionmetadataid']",
                  "item/admin_lastrun": "@utcNow()",
                  "item/admin_lastrunpassed": true
                },
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                }
              }
            },
            "Get_ID_Pass": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "f4f314b6-89d3-4056-af1c-73115e7d6bd1"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "$select": "admin_coesolutionmetadataid",
                  "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                  "$top": 1
                },
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                }
              }
            },
            "Catch_-_not_ready_to_take_last_run_date": {
              "runAfter": {
                "Update_Last_Run_Successful": [
                  "Failed"
                ]
              },
              "metadata": {
                "operationMetadataId": "f88cdefe-c402-49d7-8f4a-934475e6f741"
              },
              "type": "Compose",
              "inputs": "Catch - not ready to take last run date"
            }
          },
          "runAfter": {
            "Error_Handling": [
              "Skipped"
            ]
          },
          "metadata": {
            "operationMetadataId": "5c140442-d939-4ca4-8ec8-d1ee2bed4a81"
          },
          "type": "Scope"
        }
      }
    },
    "templateName": ""
  },
  "schemaVersion": "1.0.0.0"
}