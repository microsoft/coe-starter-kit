ThemeEditor As screen:
    Height: =Max(App.Height, App.DesignHeight)
    OnVisible: |-
        =ClearCollect(ThemeStyles, Filter(Styles, Theme.Theme = SelectedTheme.Theme));
        
        Set(PrimaryColor1Value,                  ColorValue(LookUp(ThemeStyles, Name = "PrimaryColor1Value").Value));
        Set(PrimaryColor1TextValue,              ColorValue(LookUp(ThemeStyles, Name = "PrimaryColor1TextValue").Value));
        Set(PrimaryColor2Value,                  ColorValue(LookUp(ThemeStyles, Name = "PrimaryColor2Value").Value));
        Set(PrimaryColor2TextValue,              ColorValue(LookUp(ThemeStyles, Name = "PrimaryColor2TextValue").Value));
        Set(PrimaryColor3Value,                  ColorValue(LookUp(ThemeStyles, Name = "PrimaryColor3Value").Value));
        Set(PrimaryColor3TextValue,              ColorValue(LookUp(ThemeStyles, Name = "PrimaryColor3TextValue").Value));
        Set(defaultLabelColorValue,              ColorValue(LookUp(ThemeStyles, Name = "defaultLabelColorValue").Value));
        Set(RadiusValue,                         Value(LookUp(ThemeStyles,  Name = "RadiusValue").Value));
        Set(TextBodyFontFaceValue, 			  	 LookUp(ThemeStyles, Name = "TextBodyFontFaceValue").Value);
        Set(PaddingValue, 						 Value(LookUp(ThemeStyles, Name = "PaddingValue").Value));
        Set(TextEmphasisFontSizeValue, 			 Value(LookUp(ThemeStyles, Name = "TextEmphasisFontSizeValue").Value));
        Set(TextEmphasisFontSizePhoneValue,		 Value(LookUp(ThemeStyles,Name = "TextEmphasisFontSizePhoneValue").Value));
        Set(TextBodyFontSizeValue,				 Value(LookUp(ThemeStyles, Name = "TextBodyFontSizeValue").Value));
        Set(TextBodyFontSizePhoneValue,			 Value(LookUp(ThemeStyles, Name = "TextBodyFontSizePhoneValue").Value));
        Set(BackgroundColorValue,				 ColorValue(LookUp(ThemeStyles, Name = "BackgroundColorValue").Value));
        Set(BorderThicknessValue,				 Value(LookUp(ThemeStyles, Name = "BorderThicknessValue").Value));
        Set(BorderColorValue,			    	 ColorValue(LookUp(ThemeStyles, Name = "BorderColorValue").Value));
        Set(FocusedBorderThicknessValue,		 Value(LookUp(ThemeStyles, Name = "FocusedBorderThicknessValue").Value));
        
        // Prepare Collection for Component.
        ClearCollect(ComponentStyles, ShowColumns(ThemeStyles,"cat_name", "cat_value"));
        
        UpdateContext({showLoader:false});
        
        Reset(TabControl_1);
        
        ClearCollect(PanelMenu, 
        {Icon: themeIcon, Label: "Styles", Screen:ThemeEditor}, 
        {Icon: media , Label: "Asset", Screen:AssetScreen});
    Width: =Max(App.Width, App.DesignWidth)

    TabControl_1 As TabControl:
        Height: =78
        IsVertical: =TabControl_1.Height > TabControl_1.Width
        Items: |-
            =Table(     {
                    Label: "Tab1",
                    Screen:App.ActiveScreen,
                    Icon: "",
                    SelectedIcon:""
               },
               {
                    Label: "Tab2",
                    Screen: HomeScreen,
                    Icon: "",
                    SelectedIcon:""
               },
               {
                    Label: "Tab3",
                    Screen: HomeScreen,
                    Icon: "",
                    SelectedIcon:""
               }
               )
        OnReset: |-
            =Set(PrimaryColor1Value,                  ColorValue(LookUp(TabControl_1.Styles, Name = "PrimaryColor1Value").Value));
            Set(PrimaryColor1TextValue,              ColorValue(LookUp(TabControl_1.Styles, Name = "PrimaryColor1TextValue").Value));
            Set(PrimaryColor2Value,                  ColorValue(LookUp(TabControl_1.Styles, Name = "PrimaryColor2Value").Value));
            Set(PrimaryColor2TextValue,              ColorValue(LookUp(TabControl_1.Styles, Name = "PrimaryColor2TextValue").Value));
            Set(PrimaryColor3Value,                  ColorValue(LookUp(TabControl_1.Styles, Name = "PrimaryColor3Value").Value));
            Set(PrimaryColor3TextValue,              ColorValue(LookUp(TabControl_1.Styles, Name = "PrimaryColor3TextValue").Value));
            Set(defaultLabelColorValue,              ColorValue(LookUp(TabControl_1.Styles, Name = "defaultLabelColorValue").Value));
            Set(RadiusValue,                         Value(LookUp(TabControl_1.Styles,  Name = "RadiusValue").Value));
            Set(TextBodyFontFaceValue, 			  	 LookUp(TabControl_1.Styles, Name = "TextBodyFontFaceValue").Value);
            Set(PaddingValue, 						 Value(LookUp(TabControl_1.Styles, Name = "PaddingValue").Value));
            Set(TextEmphasisFontSizeValue, 			 Value(LookUp(TabControl_1.Styles, Name = "TextEmphasisFontSizeValue").Value));
            Set(TextEmphasisFontSizePhoneValue,		 Value(LookUp(TabControl_1.Styles,Name = "TextEmphasisFontSizePhoneValue").Value));
            Set(TextBodyFontSizeValue,				 Value(LookUp(TabControl_1.Styles, Name = "TextBodyFontSizeValue").Value));
            Set(TextBodyFontSizePhoneValue,			 Value(LookUp(TabControl_1.Styles, Name = "TextBodyFontSizePhoneValue").Value));
            Set(BackgroundColorValue,				 ColorValue(LookUp(TabControl_1.Styles, Name = "BackgroundColorValue").Value));
            Set(BorderThicknessValue,				 Value(LookUp(TabControl_1.Styles, Name = "BorderThicknessValue").Value));
            Set(FocusedBorderThicknessValue,		 Value(LookUp(TabControl_1.Styles, Name = "FocusedBorderThicknessValue").Value));
        Styles: =ComponentStyles
        Width: =640
        X: =1216
        Y: =296

    Preloader_1 As Preloader:
        Height: =572
        SpinnerColorHex: =LookUp(Preloader_1.Styles, Name = "PrimaryColor2Value").Value
        Styles: =ComponentStyles
        Visible: =Preloader_1.IsLoading
        X: =1216
        Y: =432

    Header_1 As Header:
        Height: =85
        OnReset: |-
            =Set(PrimaryColor1Value,                  ColorValue(LookUp(Header_1.Styles, Name = "PrimaryColor1Value").Value));
            Set(PrimaryColor1TextValue,              ColorValue(LookUp(Header_1.Styles, Name = "PrimaryColor1TextValue").Value));
            Set(PrimaryColor2Value,                  ColorValue(LookUp(Header_1.Styles, Name = "PrimaryColor2Value").Value));
            Set(PrimaryColor2TextValue,              ColorValue(LookUp(Header_1.Styles, Name = "PrimaryColor2TextValue").Value));
            Set(PrimaryColor3Value,                  ColorValue(LookUp(Header_1.Styles, Name = "PrimaryColor3Value").Value));
            Set(PrimaryColor3TextValue,              ColorValue(LookUp(Header_1.Styles, Name = "PrimaryColor3TextValue").Value));
            Set(defaultLabelColorValue,              ColorValue(LookUp(Header_1.Styles, Name = "defaultLabelColorValue").Value));
            Set(RadiusValue,                         Value(LookUp(Header_1.Styles,  Name = "RadiusValue").Value));
            Set(TextBodyFontFaceValue, 			  	 LookUp(Header_1.Styles, Name = "TextBodyFontFaceValue").Value);
            Set(PaddingValue, 						 Value(LookUp(Header_1.Styles, Name = "PaddingValue").Value));
            Set(TextEmphasisFontSizeValue, 			 Value(LookUp(Header_1.Styles, Name = "TextEmphasisFontSizeValue").Value));
            Set(TextEmphasisFontSizePhoneValue,		 Value(LookUp(Header_1.Styles,Name = "TextEmphasisFontSizePhoneValue").Value));
            Set(TextBodyFontSizeValue,				 Value(LookUp(Header_1.Styles, Name = "TextBodyFontSizeValue").Value));
            Set(TextBodyFontSizePhoneValue,			 Value(LookUp(Header_1.Styles, Name = "TextBodyFontSizePhoneValue").Value));
            Set(BackgroundColorValue,				 ColorValue(LookUp(Header_1.Styles, Name = "BackgroundColorValue").Value));
            Set(BorderThicknessValue,				 Value(LookUp(Header_1.Styles, Name = "BorderThicknessValue").Value));
            Set(FocusedBorderThicknessValue,		 Value(LookUp(Header_1.Styles, Name = "FocusedBorderThicknessValue").Value));
        Styles: =ComponentStyles
        X: =1216
        Y: =173
        ZIndex: =3

    TextInput3 As text:
        Align: =Center
        BorderThickness: =0
        Color: =PrimaryColor2TextValue
        Default: =txtThemeName_1.Text
        Fill: =RGBA(51, 51, 51, 1)
        Font: ='Segoe UI'
        Height: =64
        HoverBorderColor: =ColorFade(TextInput3.BorderColor, 20%)
        HoverColor: =ColorFade(TextInput3.Color, 20%)
        HoverFill: =Self.Fill
        PressedBorderColor: =TextInput3.HoverBorderColor
        PressedColor: =TextInput3.Color
        PressedFill: =TextInput3.Fill
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Size: =28
        Width: =1920
        ZIndex: =4

    Rectangle1 As rectangle:
        BorderColor: =ColorFade(Rectangle1.Fill, -20%)
        DisabledFill: =Rectangle1.Fill
        Fill: =RGBA(255, 255, 255, 1)
        FocusedBorderThickness: =2
        Height: =1016
        HoverFill: =ColorFade(Rectangle1.Fill, 20%)
        PressedFill: =ColorFade(Rectangle1.Fill, -20%)
        Width: =535
        X: =61
        Y: =64
        ZIndex: =5

    Rating1_1 As rating:
        AccessibleLabel: ="An example rating for showing Theme colours"
        ContentLanguage: =""
        Default: =3
        DisabledFill: =Rating1_1.Fill
        DisplayMode: =DisplayMode.Edit
        FocusedBorderColor: =Rating1_1.BorderColor
        FocusedBorderThickness: =2
        Height: =42
        HoverFill: =Rating1_1.Fill
        PressedFill: =Rating1_1.Fill
        Width: =460
        X: =674
        Y: =321
        ZIndex: =6

    icoBackButton As icon.ChevronLeft:
        BorderColor: =ColorFade(icoBackButton.Fill, -20%)
        Color: =RGBA(255, 255, 255, 1)
        DisabledFill: =ColorFade(icoBackButton.Fill, -80%)
        Fill: =RGBA(0, 0, 0, 0)
        FocusedBorderThickness: =2
        HoverBorderColor: =ColorFade(icoBackButton.BorderColor, 20%)
        HoverColor: =ColorFade(icoBackButton.Color, 20%)
        HoverFill: =ColorFade(icoBackButton.Fill, 20%)
        Icon: =Icon.ChevronLeft
        OnSelect: =Back()
        PaddingBottom: =10
        PaddingLeft: =10
        PaddingRight: =10
        PaddingTop: =10
        PressedBorderColor: =ColorFade(icoBackButton.BorderColor, -20%)
        PressedColor: =ColorFade(icoBackButton.Color, -20%)
        PressedFill: =ColorFade(icoBackButton.Fill, -20%)
        X: =14
        ZIndex: =7

    Label4_1 As label:
        Align: =Left
        Font: =Font.'Open Sans'
        FontWeight: =FontWeight.Semibold
        Height: =43
        PaddingBottom: =5
        PaddingLeft: =0
        PaddingRight: =5
        PaddingTop: =5
        Size: =24
        Text: ="THEME PREVIEW"
        Width: =310
        X: =674
        Y: =94
        ZIndex: =8

    Radio2 As radio:
        HoverFill: =ColorFade(Radio2.Fill, 20%)
        Items: =RadioSample
        PressedColor: =Radio2.Color
        PressedFill: =ColorFade(Radio2.Fill, -20%)
        X: =855
        Y: =374
        ZIndex: =9

    Checkbox1 As checkbox:
        HoverBorderColor: =ColorFade(Checkbox1.BorderColor, 20%)
        HoverColor: =ColorFade(Checkbox1.Color, 20%)
        HoverFill: =ColorFade(Checkbox1.Fill, 20%)
        PressedBorderColor: =ColorFade(Checkbox1.BorderColor, -20%)
        PressedColor: =ColorFade(Checkbox1.Color, -20%)
        PressedFill: =ColorFade(Checkbox1.Fill, -20%)
        Text: ="Option"
        X: =984
        Y: =394
        ZIndex: =10

    Toggle2 As toggleSwitch:
        Default: =true
        FalseHoverFill: =ColorFade(Toggle2.FalseFill, 20%)
        HoverBorderColor: =ColorFade(Toggle2.BorderColor, 20%)
        PressedBorderColor: =ColorFade(Toggle2.BorderColor, -20%)
        TrueHoverFill: =ColorFade(Toggle2.TrueFill, 20%)
        X: =682
        Y: =408
        ZIndex: =11

    ListBox1 As listbox:
        Height: =159
        HoverBorderColor: =ColorFade(ListBox1.BorderColor, 15%)
        HoverFill: =ColorFade(ListBox1.SelectionFill, 20%)
        Items: =ListboxSample
        PressedBorderColor: =ListBox1.HoverBorderColor
        Width: =463
        X: =674
        Y: =669
        ZIndex: =12

    DatePicker1 As datepicker:
        Height: =45
        InputTextPlaceholder: =Text(Date(2001,12,31), Self.Format, Self.Language)
        Width: =463
        X: =674
        Y: =611
        ZIndex: =13

    ComboBox2 As combobox:
        ChevronHoverBackground: =ColorFade(ComboBox2.ChevronBackground, 20%)
        ChevronHoverFill: =ColorFade(ComboBox2.ChevronFill, 20%)
        Height: =51
        HoverBorderColor: =ColorFade(ComboBox2.BorderColor, 20%)
        HoverColor: =ColorFade(ComboBox2.Color, 20%)
        HoverFill: =ColorFade(ComboBox2.SelectionFill, 20%)
        Items: =ComboBoxSample
        MoreItemsButtonColor: =Self.ChevronBackground
        PressedBorderColor: =ComboBox2.HoverBorderColor
        SearchItems: =Search(ComboBoxSample,ComboBox2.SearchText,"Value1")
        SelectionFill: =ColorFade(PrimaryColor2Value, 20%) 
        Width: =461
        X: =674
        Y: =541
        ZIndex: =14

    TextInput2 As text:
        Default: ="Text input"
        Height: =56
        HoverBorderColor: =ColorFade(TextInput2.BorderColor, 20%)
        HoverColor: =ColorFade(TextInput2.Color, 20%)
        HoverFill: =ColorFade(TextInput2.Fill, 20%)
        PressedBorderColor: =TextInput2.HoverBorderColor
        PressedColor: =TextInput2.Color
        PressedFill: =TextInput2.Fill
        Width: =458
        X: =676
        Y: =241
        ZIndex: =15

    Dropdown2 As dropdown:
        ChevronHoverBackground: =ColorFade(Dropdown2.ChevronBackground, 20%)
        ChevronHoverFill: =ColorFade(Dropdown2.ChevronFill, 20%)
        Height: =45
        HoverBorderColor: =ColorFade(Dropdown2.BorderColor, 20%)
        HoverColor: =ColorFade(Dropdown2.Color, 20%)
        HoverFill: =ColorFade(Dropdown2.SelectionFill, 20%)
        Items: =DropDownSample
        PressedBorderColor: =Dropdown2.HoverBorderColor
        PressedColor: =Dropdown2.Fill
        PressedFill: =Dropdown2.Color
        Width: =460
        X: =674
        Y: =472
        ZIndex: =16

    Button3 As button:
        Height: =56
        HoverBorderColor: =ColorFade(Button3.BorderColor, 20%)
        HoverColor: =ColorFade(Button3.Color, 20%)
        HoverFill: =ColorFade(Button3.Fill, 20%)
        OnSelect: =
        PressedBorderColor: =Button3.Fill
        PressedColor: =Button3.Fill
        PressedFill: =Button3.Color
        Text: ="Button"
        Width: =212
        X: =676
        Y: =168
        ZIndex: =17

    RichTextEditor1 As richTextEditor:
        Default: ="Enter some <strong>rich text</strong> here."
        Width: =460
        X: =677
        Y: =846
        ZIndex: =18

    Rectangle1_1 As rectangle:
        BorderColor: =ColorFade(Rectangle1_1.Fill, -20%)
        DisabledFill: =Rectangle1_1.Fill
        Fill: |-
            =ColorValue("#f3f2f1")
        FocusedBorderThickness: =2
        Height: =1016
        HoverFill: =ColorFade(Rectangle1_1.Fill, 20%)
        PressedFill: =ColorFade(Rectangle1_1.Fill, -20%)
        Width: =61
        Y: =64
        ZIndex: =19

    IcoDelete As icon.Trash:
        BorderColor: =ColorFade(IcoDelete.Fill, -20%)
        Color: =RGBA(255, 255, 255, 1)
        DisabledFill: =ColorFade(IcoDelete.Fill, -80%)
        Height: =40
        HoverBorderColor: =ColorFade(IcoDelete.BorderColor, 20%)
        HoverColor: =ColorFade(IcoDelete.Color, 20%)
        HoverFill: =ColorFade(IcoDelete.Fill, 20%)
        Icon: =Icon.Trash
        OnSelect: |-
            =UpdateContext({showConfirmDialog:true});
            RemoveIf(Styles, Theme.Name = SelectedTheme.Name);
            Remove(Themes_1, SelectedTheme);
        PressedBorderColor: =ColorFade(IcoDelete.BorderColor, -20%)
        PressedColor: =ColorFade(IcoDelete.Color, -20%)
        PressedFill: =ColorFade(IcoDelete.Fill, -20%)
        X: =1856
        Y: =12
        ZIndex: =20

    PreloaderTE As Preloader:
        Height: =1080
        IsLoading: =showLoader
        SpinnerColorHex: =LookUp(PreloaderTE.Styles, Name = "PrimaryColor2Value").Value
        Styles: =ComponentStyles
        Text: ="LOADING THEME..."
        Visible: =PreloaderTE.IsLoading
        Width: =1920
        ZIndex: =21

    Container1 As groupContainer.horizontalAutoLayoutContainer:
        DisplayMode: =DisplayMode.Edit
        Height: =1016
        LayoutAlignItems: =LayoutAlignItems.Stretch
        Width: =1920
        Y: =64
        ZIndex: =22

        ExpandMenu_1 As ExpandMenu:
            Items: =PanelMenu
            LayoutMinWidth: =640
            OnReset: |-
                =Set(PrimaryColor1Value,                  ColorValue(LookUp(ExpandMenu_1.Styles, Name = "PrimaryColor1Value").Value));
                Set(PrimaryColor1TextValue,              ColorValue(LookUp(ExpandMenu_1.Styles, Name = "PrimaryColor1TextValue").Value));
                Set(PrimaryColor2Value,                  ColorValue(LookUp(ExpandMenu_1.Styles, Name = "PrimaryColor2Value").Value));
                Set(PrimaryColor2TextValue,              ColorValue(LookUp(ExpandMenu_1.Styles, Name = "PrimaryColor2TextValue").Value));
                Set(PrimaryColor3Value,                  ColorValue(LookUp(ExpandMenu_1.Styles, Name = "PrimaryColor3Value").Value));
                Set(PrimaryColor3TextValue,              ColorValue(LookUp(ExpandMenu_1.Styles, Name = "PrimaryColor3TextValue").Value));
                Set(defaultLabelColorValue,              ColorValue(LookUp(ExpandMenu_1.Styles, Name = "defaultLabelColorValue").Value));
                Set(RadiusValue,                         Value(LookUp(ExpandMenu_1.Styles,  Name = "RadiusValue").Value));
                Set(TextBodyFontFaceValue, 			  	 LookUp(ExpandMenu_1.Styles, Name = "TextBodyFontFaceValue").Value);
                Set(PaddingValue, 						 Value(LookUp(ExpandMenu_1.Styles, Name = "PaddingValue").Value));
                Set(TextEmphasisFontSizeValue, 			 Value(LookUp(ExpandMenu_1.Styles, Name = "TextEmphasisFontSizeValue").Value));
                Set(TextEmphasisFontSizePhoneValue,		 Value(LookUp(ExpandMenu_1.Styles,Name = "TextEmphasisFontSizePhoneValue").Value));
                Set(TextBodyFontSizeValue,				 Value(LookUp(ExpandMenu_1.Styles, Name = "TextBodyFontSizeValue").Value));
                Set(TextBodyFontSizePhoneValue,			 Value(LookUp(ExpandMenu_1.Styles, Name = "TextBodyFontSizePhoneValue").Value));
                Set(BackgroundColorValue,				 ColorValue(LookUp(ExpandMenu_1.Styles, Name = "BackgroundColorValue").Value));
                Set(BorderThicknessValue,				 Value(LookUp(ExpandMenu_1.Styles, Name = "BorderThicknessValue").Value));
                Set(FocusedBorderThicknessValue,		 Value(LookUp(ExpandMenu_1.Styles, Name = "FocusedBorderThicknessValue").Value));
            Styles: |-
                =Table({Name: "PrimaryColor1Value", Value: "#ffffff"},
                {Name: "PrimaryColor1TextValue", Value: "#292929"},
                {Name: "PrimaryColor2Value", Value: "#742774"},
                {Name: "PrimaryColor2TextValue", Value: "#ffffff"},
                {Name: "PrimaryColor3Value", Value: "#303030"},
                {Name: "PrimaryColor3TextValue", Value: "#080808"},
                {Name: "PrimaryColor4Value", Value: "#006e7d"},
                {Name: "defaultLabelColorValue", Value: "#0f0f0f"},
                {Name: "RadiusValue", Value: "0"},
                {Name: "TextBodyFontFaceValue", Value: "Segoe UI" },
                {Name: "PaddingValue", Value: "8"},
                {Name: "TextEmphasisFontSizeValue", Value: "16"},
                {Name: "TextEmphasisFontSizePhoneValue", Value: "24"},
                {Name: "TextBodyFontSizeValue", Value: "14"},
                {Name: "TextBodyFontSizePhoneValue", Value: "21"},
                {Name: "BackgroundColorValue", Value: "#d9d4d4"},
                {Name: "BorderThicknessValue", Value: "0"},
                {Name: "BorderColorValue", Value: "#FFFFFF"},
                {Name: "FocusedBorderThicknessValue", Value: "0"}
                )
            Width: =46
            Y: =64
            ZIndex: =1

        Container2 As groupContainer.verticalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(255, 255, 255, 1)
            FillPortions: =0
            LayoutAlignItems: =LayoutAlignItems.Stretch
            LayoutGap: =8
            PaddingBottom: =20
            PaddingLeft: =20
            PaddingRight: =20
            PaddingTop: =20
            Width: =550
            ZIndex: =3

            lbThemeName_1 As label:
                Font: =Font.'Segoe UI'
                FontWeight: =Semibold
                Height: =30
                PaddingLeft: =0
                Size: =16
                Text: ="Theme name"
                X: =3
                Y: =19
                ZIndex: =1

            txtThemeName_1 As text:
                BorderColor: =RGBA(102, 102, 102, 1)
                Default: =SelectedTheme.Name
                Font: ='Segoe UI'
                HoverBorderColor: =ColorFade(txtThemeName_1.BorderColor, 20%)
                HoverColor: =ColorFade(txtThemeName_1.Color, 20%)
                HoverFill: =ColorFade(txtThemeName_1.Fill, 20%)
                OnChange: |-
                    =Patch(Themes_1, SelectedTheme, { Name : txtThemeName_1.Text});
                PressedBorderColor: =txtThemeName_1.HoverBorderColor
                PressedColor: =txtThemeName_1.Color
                PressedFill: =txtThemeName_1.Fill
                Size: =16
                Width: =486
                X: =40
                Y: =60
                ZIndex: =2

            lbStyles_2 As label:
                Font: ='Segoe UI'
                FontWeight: =Semibold
                PaddingLeft: =0
                Size: =16
                Text: ="Theme Colors"
                X: =40
                Y: =117
                ZIndex: =3

            DialogEventHandler_2 As toggleSwitch:
                Default: =DeleteDialog.IsOpen
                FalseHoverFill: =ColorFade(DialogEventHandler_2.FalseFill, 20%)
                HoverBorderColor: =ColorFade(DialogEventHandler_2.BorderColor, 20%)
                OnChange: =
                OnUncheck: |-
                    =/**/
                    If(DeleteDialog.SelectedButton.Label = "Ok", 
                    RemoveIf(Styles, Theme.Name = SelectedTheme.Name);
                    Remove(Themes_1, SelectedTheme);
                    Back();
                    Notify("Theme Deleted Successfuly",NotificationType.Success));
                    UpdateContext({showConfirmDialog:false});
                PressedBorderColor: =ColorFade(DialogEventHandler_2.BorderColor, -20%)
                TrueHoverFill: =ColorFade(DialogEventHandler_2.TrueFill, 20%)
                Visible: =false
                X: =327
                Y: =19
                ZIndex: =4

            "PaletteGallery As gallery.'BrowseLayout_Vertical_TwoTextVariant_ver4.0'":
                Height: =376
                Items: =Filter(ThemeStyles, Type = [@Type].Color)
                Layout: =Layout.Vertical
                OnSelect: =Remove(ThemeStyles, PaletteGallery.AllItems)
                TemplatePadding: =0
                TemplateSize: =73
                Width: =508
                WrapCount: =2
                X: =78
                Y: =224
                ZIndex: =5

                Title1 As label:
                    Color: =RGBA(51, 51, 51, 1)
                    Font: =Font.'Segoe UI'
                    FontWeight: =Semibold
                    Height: =28
                    OnSelect: =Select(Parent)
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0.00
                    PaddingTop: =0.00
                    Size: =12
                    Text: =ThisItem.Name 
                    VerticalAlign: =VerticalAlign.Top
                    Width: =200
                    Wrap: =false
                    ZIndex: =1

                "ColorPicker As 'Color Picker'":
                    defaultColor: =ThisItem.Value
                    DisplayMode: =DisplayMode.Edit
                    Height: =45
                    inputValue: =ThisItem.Value
                    OnChange: |-
                        =Switch(ThisItem.Name, "PrimaryColor1Value",  Set(PrimaryColor1Value, ColorValue(ColorPicker.inputValue)),
                                              "PrimaryColor1TextValue", Set(PrimaryColor1TextValue, ColorValue(ColorPicker.inputValue)),
                                              "PrimaryColor2Value",Set(PrimaryColor2Value,ColorValue(ColorPicker.inputValue)),
                        					  "PrimaryColor2TextValue",  Set(PrimaryColor2TextValue,  ColorValue(ColorPicker.inputValue)),
                        					"PrimaryColor3Value",      Set(PrimaryColor3Value,      ColorValue(ColorPicker.inputValue)),
                        					"PrimaryColor3TextValue",  Set(PrimaryColor3TextValue,  ColorValue(ColorPicker.inputValue)),
                        					"defaultLabelColorValue",  Set(defaultLabelColorValue,  ColorValue(ColorPicker.inputValue)),
                        					"BackgroundColorValue",		Set(BackgroundColorValue,	 ColorValue(ColorPicker.inputValue)),
                        					"BorderColorValue",			Set(BorderColorValue,		 ColorValue(ColorPicker.inputValue))
                        );
                        
                        Patch(ComponentStyles, LookUp(ComponentStyles,cat_name = ThisItem.Name), { cat_value: ColorPicker.inputValue });
                    Width: =182
                    X: =0
                    Y: =28
                    ZIndex: =2

            lbStyles_3 As label:
                Font: ='Segoe UI'
                FontWeight: =Semibold
                PaddingLeft: =0
                Size: =16
                Text: ="Properties"
                X: =3
                Y: =528
                ZIndex: =7

            "PropertiesGallery As gallery.'BrowseLayout_Vertical_TwoTextVariant_ver4.0'":
                AlignInContainer: =AlignInContainer.SetByContainer
                Height: =348
                Items: =Filter(ThemeStyles, Type <> [@Type].Color)
                Layout: =Layout.Vertical
                TemplatePadding: =0
                TemplateSize: =68
                Width: =508
                WrapCount: =2
                X: =40
                Y: =568
                ZIndex: =8

                Title1_3 As label:
                    Color: =RGBA(51, 51, 51, 1)
                    Font: =Font.'Segoe UI'
                    FontWeight: =Semibold
                    Height: =28
                    OnSelect: =Select(Parent)
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0.00
                    PaddingTop: =0.00
                    Size: =12
                    Text: =ThisItem.Name 
                    VerticalAlign: =VerticalAlign.Top
                    Width: =200
                    Wrap: =false
                    Y: =7
                    ZIndex: =1

                TextInput1_3 As text:
                    Align: =Align.Right
                    BorderColor: =RGBA(149, 149, 149, 1)
                    BorderThickness: =1
                    Default: =ThisItem.Value
                    Font: =Font.'Open Sans'
                    Height: =31
                    HoverBorderColor: =ColorFade(TextInput1_3.BorderColor, 20%)
                    HoverColor: =ColorFade(TextInput1_3.Color, 20%)
                    HoverFill: =ColorFade(TextInput1_3.Fill, 20%)
                    OnChange: |
                        =// Patch Local collection
                        Switch(ThisItem.Name, 
                        
                        "RadiusValue",                    		Set(RadiusValue,                     Value(TextInput1_3.Text)),
                        "TextBodyFontFaceValue", 			    Set(TextBodyFontFaceValue, 			 TextInput1_3.Text),
                        "PaddingValue", 					    Set(PaddingValue, 					Value(TextInput1_3.Text)),
                        "TextEmphasisFontSizeValue", 		    Set(TextEmphasisFontSizeValue, 		Value(TextInput1_3.Text)),
                        "TextEmphasisFontSizePhoneValue", 	    Set(TextEmphasisFontSizePhoneValue,	Value(TextInput1_3.Text)),
                        "TextBodyFontSizeValue",			    Set(TextBodyFontSizeValue,			Value(TextInput1_3.Text)),
                        "TextBodyFontSizePhoneValue",		    Set(TextBodyFontSizePhoneValue,		Value(TextInput1_3.Text)),
                        "BorderThicknessValue",			        Set(BorderThicknessValue,			Value(TextInput1_3.Text)),
                        "FocusedBorderThicknessValue",	        Set(FocusedBorderThicknessValue,	Value(TextInput1_3.Text))
                        
                        );
                        
                        Patch(ComponentStyles, LookUp(ComponentStyles,cat_name = ThisItem.Name), { cat_value: TextInput1_3.Text });
                    OnSelect: =Select(Parent)
                    PaddingBottom: =0
                    PaddingLeft: =12
                    PaddingRight: =7.03
                    PaddingTop: =0.00
                    PressedBorderColor: =TextInput1_3.HoverBorderColor
                    PressedColor: =TextInput1_3.Color
                    PressedFill: =TextInput1_3.Fill
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =14
                    Visible: =ThisItem.Type <> [@Type].Color
                    Width: =230
                    X: =5
                    Y: =35
                    ZIndex: =5

            Container3 As groupContainer.horizontalAutoLayoutContainer:
                DisplayMode: =DisplayMode.Edit
                FillPortions: =0
                Height: =45
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                ZIndex: =9

                Button6 As button:
                    BorderThickness: =0
                    Fill: =RGBA(51, 51, 51, 1)
                    FillPortions: =1
                    FontWeight: =Normal
                    HoverBorderColor: =ColorFade(Button6.BorderColor, 20%)
                    HoverColor: =ColorFade(Button6.Color, 20%)
                    HoverFill: =ColorFade(Button6.Fill, 20%)
                    OnSelect: |-
                        =
                        Patch(Styles, LookUp(Styles, Name = "PrimaryColor1Value" && Theme.Name = SelectedTheme.Name ),  { Value : LookUp(PaletteGallery.AllItems, Name = "PrimaryColor1Value").ColorPicker.inputValue});
                        Patch(Styles, LookUp(Styles, Name = "PrimaryColor1TextValue" && Theme.Name = SelectedTheme.Name ),{ Value : LookUp(PaletteGallery.AllItems, Name = "PrimaryColor1TextValue").ColorPicker.inputValue});
                        Patch(Styles, LookUp(Styles, Name = "PrimaryColor2Value" && Theme.Name = SelectedTheme.Name ), { Value : LookUp(PaletteGallery.AllItems, Name = "PrimaryColor2Value").ColorPicker.inputValue});
                        Patch(Styles, LookUp(Styles, Name = "PrimaryColor2TextValue" && Theme.Name = SelectedTheme.Name), { Value : LookUp(PaletteGallery.AllItems, Name = "PrimaryColor2TextValue").ColorPicker.inputValue});
                        Patch(Styles, LookUp(Styles, Name = "PrimaryColor3Value" && Theme.Name = SelectedTheme.Name ),{ Value : LookUp(PaletteGallery.AllItems, Name = "PrimaryColor3Value").ColorPicker.inputValue});
                        Patch(Styles, LookUp(Styles, Name = "PrimaryColor3TextValue" && Theme.Name = SelectedTheme.Name ), { Value : LookUp(PaletteGallery.AllItems, Name = "PrimaryColor3TextValue").ColorPicker.inputValue});
                        Patch(Styles, LookUp(Styles, Name = "defaultLabelColorValue" && Theme.Name = SelectedTheme.Name ), { Value : LookUp(PaletteGallery.AllItems, Name = "defaultLabelColorValue").ColorPicker.inputValue});
                        Patch(Styles, LookUp(Styles, Name = "BackgroundColorValue" && Theme.Name = SelectedTheme.Name ), { Value : LookUp(PaletteGallery.AllItems, Name = "BackgroundColorValue").ColorPicker.inputValue});
                        Patch(Styles, LookUp(Styles, Name = "BorderColorValue" && Theme.Name = SelectedTheme.Name ), { Value : LookUp(PaletteGallery.AllItems, Name = "BorderColorValue").ColorPicker.inputValue});
                        
                        Patch(Styles, LookUp(Styles, Name = "RadiusValue" && Theme.Name = SelectedTheme.Name ) , { Value: LookUp(PropertiesGallery.AllItems, Name = "RadiusValue").TextInput1_3.Text});
                        Patch(Styles, LookUp(Styles, Name = "TextBodyFontFaceValue" && Theme.Name = SelectedTheme.Name ) , { Value: LookUp(PropertiesGallery.AllItems, Name = "TextBodyFontFaceValue").TextInput1_3.Text});
                        Patch(Styles, LookUp(Styles, Name = "PaddingValue" && Theme.Name = SelectedTheme.Name )  , { Value: LookUp(PropertiesGallery.AllItems, Name = "PaddingValue").TextInput1_3.Text});
                        Patch(Styles, LookUp(Styles, Name = "TextEmphasisFontSizeValue" && Theme.Name = SelectedTheme.Name ) , { Value: LookUp(PropertiesGallery.AllItems, Name = "TextEmphasisFontSizeValue").TextInput1_3.Text});
                        Patch(Styles, LookUp(Styles, Name = "TextEmphasisFontSizePhoneValue" && Theme.Name = SelectedTheme.Name ) , { Value: LookUp(PropertiesGallery.AllItems, Name = "TextEmphasisFontSizePhoneValue").TextInput1_3.Text});
                        Patch(Styles, LookUp(Styles, Name = "TextBodyFontSizeValue" && Theme.Name = SelectedTheme.Name )  , { Value: LookUp(PropertiesGallery.AllItems, Name = "TextBodyFontSizeValue").TextInput1_3.Text});
                        Patch(Styles, LookUp(Styles, Name = "TextBodyFontSizePhoneValue" && Theme.Name = SelectedTheme.Name )  , { Value: LookUp(PropertiesGallery.AllItems, Name = "TextBodyFontSizePhoneValue").TextInput1_3.Text});
                        Patch(Styles, LookUp(Styles, Name = "BorderThicknessValue" && Theme.Name = SelectedTheme.Name )  , { Value: LookUp(PropertiesGallery.AllItems, Name = "BorderThicknessValue").TextInput1_3.Text});
                        Patch(Styles, LookUp(Styles, Name = "FocusedBorderThicknessValue" && Theme.Name = SelectedTheme.Name )  , { Value: LookUp(PropertiesGallery.AllItems, Name = "FocusedBorderThicknessValue").TextInput1_3.Text});
                        
                        
                        ClearCollect(ThemeStyles, Filter(Styles, Theme.Theme = SelectedTheme.Theme));
                        
                        // Prepare Collection for Component.
                        ClearCollect(ComponentStyles, ShowColumns(ThemeStyles,"cat_name", "cat_value"));
                    PressedBorderColor: =Button6.Fill
                    PressedColor: =Button6.Fill
                    PressedFill: =Button6.Color
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Text: |-
                        ="Save
                        "
                    Width: =200
                    ZIndex: =1

                btnPublish As button:
                    BorderThickness: =2
                    Fill: =RGBA(26, 26, 26, 1)
                    Font: ='Segoe UI'
                    FontWeight: =FontWeight.Normal
                    HoverBorderColor: =ColorFade(btnPublish.BorderColor, 20%)
                    HoverColor: =ColorFade(btnPublish.Color, 20%)
                    HoverFill: =ColorFade(btnPublish.Fill, 20%)
                    OnSelect: =Navigate(PublishScreen, ScreenTransition.Fade)
                    PressedBorderColor: =btnPublish.Fill
                    PressedColor: =btnPublish.Fill
                    PressedFill: =btnPublish.Color
                    Size: =14
                    Text: =If(LookUp(Themes_1, Theme = SelectedTheme.Theme).Published = 'Published (Themes_1)'.No, "Publish Theme", "Settings")
                    Width: =229
                    X: =1627
                    Y: =12
                    ZIndex: =2

    DeleteDialog As Dialog:
        Description: ="Are you sure you would like to delete this theme ?"
        Height: =1080
        OnReset: =Set(isDialogOpen, DeleteDialog.IsOpen)
        OpenClose: =showConfirmDialog
        Title: ="CONFIRMATION"
        Visible: =DeleteDialog.IsOpen
        Width: =1920
        ZIndex: =23

