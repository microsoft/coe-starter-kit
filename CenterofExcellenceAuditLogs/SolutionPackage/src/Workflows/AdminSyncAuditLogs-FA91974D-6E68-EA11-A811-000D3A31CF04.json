{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "admin_sharedcommondataserviceforapps_98924"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "StartTime-Unit (admin_StartTimeUnit)": {
          "defaultValue": "Day",
          "type": "String",
          "metadata": {
            "schemaName": "admin_StartTimeUnit",
            "description": "Audit Logs - Specify the units for the start time for how far back to go to fetch. Default is Day (for 1 Day). Options are those of the Add to time action's Time Unit Parameter"
          }
        },
        "StartTime-Interval (admin_StartTimeInterval)": {
          "defaultValue": 1,
          "type": "Int",
          "metadata": {
            "schemaName": "admin_StartTimeInterval",
            "description": "Audit Logs - Specify the interval for the start time for how far back to go to fetch. Default is 1, (for 1 day)"
          }
        },
        "TimeInterval-Unit (admin_TimeIntervalUnit)": {
          "defaultValue": "Hour",
          "type": "String",
          "metadata": {
            "schemaName": "admin_TimeIntervalUnit",
            "description": "Audit Logs - Specify the units for the chunks of time to fetch. Default is Hour, (for 1 hour). Options are those of the Add to time action's Time Unit Parameter"
          }
        },
        "TimeSegments-CountLimit (admin_TimeSegmentsCountLimit)": {
          "defaultValue": 60,
          "type": "Int",
          "metadata": {
            "schemaName": "admin_TimeSegmentsCountLimit",
            "description": "Audit Logs - Specify the count for the limit of number of chunks. Default is 60"
          }
        },
        "TenantID (admin_TenantID)": {
          "defaultValue": "67c96cd6-4a95-46ee-ac9b-8ee13ae256c4",
          "type": "String",
          "metadata": {
            "schemaName": "admin_TenantID",
            "description": "Inventory - REQUIRED. Azure Tenant ID"
          }
        },
        "Admin eMail (admin_AdminMail)": {
          "defaultValue": "PowerPlatformAdmins@powercattools.onmicrosoft.com ",
          "type": "String",
          "metadata": {
            "schemaName": "admin_AdminMail",
            "description": "Inventory - CoE Admin eMail. Email address used in flows to send notifications to admins; this should be either your email address or a distribution list"
          }
        },
        "Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)": {
          "defaultValue": "https://flow.microsoft.com/manage/environments/",
          "type": "String",
          "metadata": {
            "schemaName": "admin_PowerAutomateEnvironmentVariable",
            "description": "Inventory - REQUIRED. Environment, including geographic location, for Power Automate - Ex for commercial: https://flow.microsoft.com/manage/environments/"
          }
        },
        "TimeInterval-Interval (admin_TimeIntervalInterval)": {
          "defaultValue": 1,
          "type": "Int",
          "metadata": {
            "schemaName": "admin_TimeIntervalInterval",
            "description": "Audit Logs - Specify the interval for the chunks of time to fetch. Default is 1, (for 1 hour)"
          }
        },
        "Admin eMail Preferred Language (admin_AdmineMailPreferredLanguage)": {
          "defaultValue": "en-US",
          "type": "String",
          "metadata": {
            "schemaName": "admin_AdmineMailPreferredLanguage",
            "description": "Inventory - The preferred language for the emails sent to the admin email alias, which is specified in theAdmin eMail environment variable. Default is en-US"
          }
        }
      },
      "triggers": {
        "Recurrence": {
          "recurrence": {
            "frequency": "Day",
            "interval": 1
          },
          "metadata": {
            "operationMetadataId": "5eac420c-d71e-472e-b125-7ef4bb32e1f2"
          },
          "type": "Recurrence"
        }
      },
      "actions": {
        "CONFIGURE_::_Start_Time": {
          "runAfter": {
            "CONFIGURE_::_Tenant_Id": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "5fad8303-b392-426e-bc7e-71028f23cf7b"
          },
          "type": "Expression",
          "kind": "GetPastTime",
          "inputs": {
            "interval": "@parameters('StartTime-Interval (admin_StartTimeInterval)')",
            "timeUnit": "@parameters('StartTime-Unit (admin_StartTimeUnit)')"
          }
        },
        "CONFIGURE_::_End_Time": {
          "runAfter": {
            "CONFIGURE_::_Start_Time": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "1a07bc4a-bfc3-4f1a-bae5-70f853c5c037"
          },
          "type": "Expression",
          "kind": "GetPastTime",
          "inputs": {
            "interval": 1,
            "timeUnit": "Minute"
          }
        },
        "Initialize_startTime_variable": {
          "runAfter": {
            "CONFIGURE_::_Time_interval": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "8d2f458b-5680-4af9-9a99-6f4b895fb2e0"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "startTime",
                "type": "string",
                "value": "@body('CONFIGURE_::_Start_Time')"
              }
            ]
          }
        },
        "CONFIGURE_::_Time_interval": {
          "runAfter": {
            "CONFIGURE_::_End_Time": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "b47d8f36-c2c7-4011-bbac-daad2bbd6fc6"
          },
          "type": "Expression",
          "kind": "AddToTime",
          "inputs": {
            "baseTime": "@body('CONFIGURE_::_Start_Time')",
            "interval": "@parameters('TimeInterval-Interval (admin_TimeIntervalInterval)')",
            "timeUnit": "@parameters('TimeInterval-Unit (admin_TimeIntervalUnit)')"
          }
        },
        "Initialize_endTime_variable_": {
          "runAfter": {
            "Initialize_startTime_variable": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "6f63706f-8ddd-4ce2-85d4-0dc7ba17b82d"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "endTime",
                "type": "string",
                "value": "@body('CONFIGURE_::_Time_interval')"
              }
            ]
          }
        },
        "Initialize_arrTimeSegment_array": {
          "runAfter": {
            "Initialize_endTime_variable_": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "69078eea-b647-4628-a60e-77d8a6a47460"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "arrTimeSegments",
                "type": "array"
              }
            ]
          }
        },
        "CONFIGURE_::_Tenant_Id": {
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "9a2b22dd-75c5-4f97-b3de-41f630dc23db"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "tenantId",
                "type": "string",
                "value": "@parameters('TenantID (admin_TenantID)')"
              }
            ]
          }
        },
        "Initialize_variable_childrenNeedSmallerClusters": {
          "runAfter": {
            "Initialize_arrTimeSegment_array": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "311d8016-0fd5-489f-a12e-9cb138e36c04"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "childrenNeedSmallerClusters",
                "type": "boolean",
                "value": "@false"
              }
            ]
          }
        },
        "Initialize_emailGUID": {
          "runAfter": {
            "Initialize_variable_childrenNeedSmallerClusters": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "dad8eca6-7937-47c0-aa57-f2d48dd1c5a2"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "emailGUID",
                "type": "string"
              }
            ]
          }
        },
        "Audi_Logs_Chunk_Scope": {
          "actions": {
            "Generate_timeSegments_list": {
              "actions": {
                "Append_to_array_variable": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "e0a19e85-35ca-4c1d-90e7-d3ed99843c66"
                  },
                  "type": "AppendToArrayVariable",
                  "inputs": {
                    "name": "arrTimeSegments",
                    "value": {
                      "startTime": "@{variables('startTime')}",
                      "endTime": "@{variables('endTime')}"
                    }
                  }
                },
                "Update_startTime": {
                  "runAfter": {
                    "Add_to_startTime": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "2bc47ead-c76d-48c9-bd0c-e2d9ab113c0f"
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "startTime",
                    "value": "@body('Add_to_startTime')"
                  }
                },
                "Add_to_startTime": {
                  "runAfter": {
                    "Append_to_array_variable": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "f526ffcc-ae85-4571-937a-b4d03149165e"
                  },
                  "type": "Expression",
                  "kind": "AddToTime",
                  "inputs": {
                    "baseTime": "@variables('startTime')",
                    "interval": "@parameters('TimeInterval-Interval (admin_TimeIntervalInterval)')",
                    "timeUnit": "@parameters('TimeInterval-Unit (admin_TimeIntervalUnit)')"
                  }
                },
                "Add_to_endTime": {
                  "runAfter": {
                    "Update_startTime": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "aceb3faf-814b-4f68-bcaf-00fdee7caabd"
                  },
                  "type": "Expression",
                  "kind": "AddToTime",
                  "inputs": {
                    "baseTime": "@variables('endTime')",
                    "interval": "@parameters('TimeInterval-Interval (admin_TimeIntervalInterval)')",
                    "timeUnit": "@parameters('TimeInterval-Unit (admin_TimeIntervalUnit)')"
                  }
                },
                "Update_endTime": {
                  "runAfter": {
                    "Add_to_endTime": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "e2e4ecf7-9a60-4854-a9da-441ea3acf2e9"
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "endTime",
                    "value": "@body('Add_to_endTime')"
                  }
                }
              },
              "runAfter": {},
              "expression": "@greaterOrEquals(variables('endTime'), body('CONFIGURE_::_End_Time'))",
              "limit": {
                "count": "@parameters('TimeSegments-CountLimit (admin_TimeSegmentsCountLimit)')",
                "timeout": "PT1H"
              },
              "metadata": {
                "operationMetadataId": "4ace7992-b157-43e1-8e72-882417e17ef0"
              },
              "type": "Until"
            },
            "Condition": {
              "actions": {
                "Append_last_segment_to_arrtimeSegments": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "067ecbf9-ad75-4b06-ade7-632eda0d8324"
                  },
                  "type": "AppendToArrayVariable",
                  "inputs": {
                    "name": "arrTimeSegments",
                    "value": {
                      "startTime": "@{variables('startTime')}",
                      "endTime": "@{body('CONFIGURE_::_End_Time')}"
                    }
                  }
                }
              },
              "runAfter": {
                "Generate_timeSegments_list": [
                  "Succeeded"
                ]
              },
              "expression": {
                "lessOrEquals": [
                  "@variables('startTime')",
                  "@body('CONFIGURE_::_End_Time')"
                ]
              },
              "metadata": {
                "operationMetadataId": "0711f340-8b94-4df1-ab97-0b83b61a01c3"
              },
              "type": "If"
            },
            "Apply_to_each_timeSegment": {
              "foreach": "@variables('arrTimeSegments')",
              "actions": {
                "Run_a_Child_Flow": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "6d2e88be-3173-400d-a6a9-9da2084b6cb2"
                  },
                  "type": "Workflow",
                  "inputs": {
                    "host": {
                      "workflowReferenceName": "751183fc-db68-ea11-a811-000d3a31cf04"
                    },
                    "body": {
                      "text": "@variables('tenantId')",
                      "text_1": "@items('Apply_to_each_timeSegment')?['startTime']",
                      "text_2": "@items('Apply_to_each_timeSegment')?['endTime']"
                    }
                  }
                }
              },
              "runAfter": {
                "Condition": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "e6db5bdf-d469-4fd0-9f5f-543acddee346"
              },
              "type": "Foreach",
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 50
                }
              }
            }
          },
          "runAfter": {
            "Initialize_emailGUID": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "7709596c-aae5-4e71-a2de-72b74eb80d0b"
          },
          "type": "Scope"
        },
        "Error_Handling": {
          "actions": {
            "Terminate_2": {
              "runAfter": {
                "Update_Last_Run_Fail": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "9e5a2a18-dba2-47a1-96d5-3356f4348e5a"
              },
              "type": "Terminate",
              "inputs": {
                "runStatus": "Failed",
                "runError": {
                  "code": "500",
                  "message": "Get Environments Failed"
                }
              }
            },
            "Get_ID_Fail": {
              "runAfter": {
                "Create_a_new_record_-_Sync_Flow_Errors": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "47329bf2-8aac-400d-9778-a793b4f1180f"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "$select": "admin_coesolutionmetadataid",
                  "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                  "$top": 1
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Update_Last_Run_Fail": {
              "runAfter": {
                "Get_ID_Fail": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "c63eb7cc-6101-4567-b520-a4a8881264e9"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "recordId": "@first(outputs('Get_ID_Fail')?['body/value'])?['admin_coesolutionmetadataid']",
                  "item/admin_lastrun": "@utcNow()",
                  "item/admin_lastrunpassed": false
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Get_Row_-_Send_admin_email_about_failure": {
              "actions": {
                "emailGUID_to_en-US": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "3c46d691-0f2a-4c36-9611-c2c7de1ec33d"
                  },
                  "type": "Compose",
                  "inputs": "355c1a60-2a86-ed11-81ac-0022480813ff"
                },
                "List_emails_for_preferred_language": {
                  "runAfter": {
                    "emailGUID_to_en-US": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "29188a43-3a3a-46da-a4f6-f162180d8254"
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_commondataserviceforapps",
                      "operationId": "ListRecords",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                    },
                    "parameters": {
                      "entityName": "admin_customizedemails",
                      "$select": "admin_customizedemailid",
                      "$filter": "admin_basedon eq '@{outputs('emailGUID_to_en-US')}' and admin_language eq '@{parameters('Admin eMail Preferred Language (admin_AdmineMailPreferredLanguage)')}'"
                    },
                    "authentication": "@parameters('$authentication')"
                  }
                },
                "Set_emailGUID_to_localized_row": {
                  "runAfter": {
                    "List_emails_for_preferred_language": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "1e1c0a09-41a6-4b3d-a558-df89f10ca738"
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "emailGUID",
                    "value": "@{if(greater(length(outputs('List_emails_for_preferred_language')?['body/value']), 0), first(body('List_emails_for_preferred_language')?['value'])['admin_customizedemailid'], outputs('emailGUID_to_en-US'))}"
                  },
                  "description": "if(greater(length(outputs('List_emails_for_preferred_language')?['body/value']),0), first(body('List_emails_for_preferred_language')?['value'])['admin_customizedemailid'], outputs('emailGUID_to_en-US'))"
                },
                "Get_a_row_by_ID": {
                  "runAfter": {
                    "Set_emailGUID_to_localized_row": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "operationMetadataId": "c34df6f5-d327-47a2-8e25-e33c207762e2"
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "connectionName": "shared_commondataserviceforapps",
                      "operationId": "GetItem",
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                    },
                    "parameters": {
                      "entityName": "admin_customizedemails",
                      "recordId": "@variables('emailGUID')",
                      "$select": "admin_body, admin_cc, admin_replyto, admin_sendonbehalf, admin_subject, admin_importance"
                    },
                    "authentication": "@parameters('$authentication')"
                  }
                }
              },
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "74c8fe2a-d9bd-4ab1-a2a7-1ceffc6c9c18"
              },
              "type": "Scope"
            },
            "Send_admin_email_about_failure": {
              "runAfter": {
                "Get_Row_-_Send_admin_email_about_failure": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "acaf353e-cf00-46d1-b457-eac85c38f49e"
              },
              "type": "Workflow",
              "inputs": {
                "host": {
                  "workflowReferenceName": "5625768c-bd3d-ec11-8c63-00224829720b"
                },
                "body": {
                  "email": "@parameters('Admin eMail (admin_AdminMail)')",
                  "text": "@outputs('Get_a_row_by_ID')?['body/admin_subject']",
                  "text_1": "@{outputs('Get_a_row_by_ID')?['body/admin_body']} <a href=\"@{concat(parameters('Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)'), workflow()?['tags']['environmentName'], '/flows/', workflow()?['name'], '/runs/', workflow()?['run']['name'])}\"> view failure </a>",
                  "email_1": "@if(equals(outputs('Get_a_row_by_ID')?['body/admin_cc'], null), '', outputs('Get_a_row_by_ID')?['body/admin_cc'])",
                  "email_2": "@if(equals(outputs('Get_a_row_by_ID')?['body/admin_sendonbehalf'], null), '', outputs('Get_a_row_by_ID')?['body/admin_sendonbehalf'])",
                  "email_3": "@if(equals(outputs('Get_a_row_by_ID')?['body/admin_replyto'], null), '', outputs('Get_a_row_by_ID')?['body/admin_replyto'])",
                  "text_2": "@if(equals(outputs('Get_a_row_by_ID')?['body/admin_importance'], null), '', outputs('Get_a_row_by_ID')?['body/admin_importance'])"
                }
              },
              "description": "355c1a60-2a86-ed11-81ac-0022480813ff"
            },
            "Create_a_new_record_-_Sync_Flow_Errors": {
              "runAfter": {
                "Send_admin_email_about_failure": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "87961ff0-e261-4890-9ab9-a53f88fe0de5"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "CreateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_syncflowerrorses",
                  "item/admin_name": "@workflow()?['tags']['flowDisplayName']",
                  "item/admin_flowinstanceurl": "@concat(parameters('Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)'), workflow()?['tags']['environmentName'], '/flows/', workflow()?['name'], '/runs/', workflow()?['run']['name'])"
                },
                "authentication": "@parameters('$authentication')",
                "retryPolicy": {
                  "type": "exponential",
                  "count": 10,
                  "interval": "PT10S"
                }
              }
            }
          },
          "runAfter": {
            "Audi_Logs_Chunk_Scope": [
              "Failed"
            ]
          },
          "metadata": {
            "operationMetadataId": "38ae684e-622d-42ea-abd2-ee571aee3a5f"
          },
          "type": "Scope"
        },
        "Update_last_run_as_pass": {
          "actions": {
            "Update_Last_Run_Successful": {
              "runAfter": {
                "Get_ID_Pass": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "78ef70e5-7f67-4737-9a02-8533f12caa19"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "UpdateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "recordId": "@first(outputs('Get_ID_Pass')?['body/value'])?['admin_coesolutionmetadataid']",
                  "item/admin_lastrun": "@utcNow()",
                  "item/admin_lastrunpassed": true
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Get_ID_Pass": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "f4f314b6-89d3-4056-af1c-73115e7d6bd1"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps",
                  "operationId": "ListRecords",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "admin_coesolutionmetadatas",
                  "$select": "admin_coesolutionmetadataid",
                  "$filter": "admin_objectname eq '@{workflow()?['tags']['flowDisplayName']}'",
                  "$top": 1
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Catch_-_not_ready_to_take_last_run_date": {
              "runAfter": {
                "Update_Last_Run_Successful": [
                  "Failed"
                ]
              },
              "metadata": {
                "operationMetadataId": "f88cdefe-c402-49d7-8f4a-934475e6f741"
              },
              "type": "Compose",
              "inputs": "Catch - not ready to take last run date"
            }
          },
          "runAfter": {
            "Error_Handling": [
              "Skipped"
            ]
          },
          "metadata": {
            "operationMetadataId": "5c140442-d939-4ca4-8ec8-d1ee2bed4a81"
          },
          "type": "Scope"
        }
      },
      "outputs": {}
    },
    "templateName": ""
  },
  "schemaVersion": "1.0.0.0"
}