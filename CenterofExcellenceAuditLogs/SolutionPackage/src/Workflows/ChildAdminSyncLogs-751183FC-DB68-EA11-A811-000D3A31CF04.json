{
  "properties": {
    "connectionReferences": {
      "shared_admin-5foffice-20365-20management-20api-5f7fc9343cf45734fe": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "admin_sharedadmin5foffice2036520management20api5f7fc9343cf45734fe_8f08c"
        },
        "api": {
          "name": "shared_admin-5foffice-20365-20management-20api-5ff18d20b7ec3dbffe",
          "logicalName": "admin_5Foffice-20365-20management-20api"
        }
      },
      "shared_commondataserviceforapps_1": {
        "impersonation": {},
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "new_CoEAuditLogsDataverse"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      },
      "shared_office365_1": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "new_CoEAuditLogsO365Outlook"
        },
        "api": {
          "name": "shared_office365"
        }
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "Admin eMail (admin_AdminMail)": {
          "defaultValue": "adelev@pplatform.onmicrosoft.com",
          "type": "String",
          "metadata": {
            "schemaName": "admin_AdminMail",
            "description": "CoE Admin eMail. Email address used in flows to send notifications to admins; this should be either your email address or a distribution list"
          }
        },
        "eMail Header Style (admin_eMailHeaderStyle)": {
          "defaultValue": "<head>     <style>         body {             background-color: #efefef;             font-family: Segoe UI;             text-align: center;         }          #content {             border: 1px solid #742774;             background-color: #ffffff;             width: 650px;             margin-bottom: 50px;             display: inline-block;         }          #logo {             margin-left: 52px;             margin-top: 40px;             width: 60px;             height: 12px;         }          #header {             font-size: 24px;             margin-left: 50px;             margin-top: 20px;             margin-bottom: 20px;         }          #ribbon {             background-color: #742774;         }          #ribbonContent {             font-size: 20px;             padding-left: 30px;             padding-top: 10px;             padding-bottom: 20px;             color: white;             width: 100%;             padding-right: 10px;         }          #message>td {             font-size: 14px;             padding-left: 60px;             padding-right: 60px;             padding-top: 20px;             padding-bottom: 40px;         }          #footer>td {             font-size: 12px;             background-color: #cfcfcf;             height: 40px;             padding-top: 15px;             padding-left: 40px;             padding-bottom: 20px;         }          #form {             width: 100%;             border-collapse: collapse;         }          #app {             width: 60%;             font-size: 12px;         }          .label {             color: #5f5f5f         }          table {             border-collapse: collapse;             width: 100%;         }          th,         td {             padding: 8px;             text-align: left;             border-bottom: 1px solid #ddd;         }     </style> </head>",
          "type": "String",
          "metadata": {
            "schemaName": "admin_eMailHeaderStyle",
            "description": "CSS/Style used for eMails"
          }
        },
        "TimeInterval-Unit (admin_TimeIntervalUnit)": {
          "defaultValue": "Hour",
          "type": "String",
          "metadata": {
            "schemaName": "admin_TimeIntervalUnit",
            "description": "Specify the units for the chunks of time to fetch. Default is Hour, (for 1 hour). Options are those of the Add to time action's Time Unit Parameter"
          }
        },
        "Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)": {
          "defaultValue": "https://us.flow.microsoft.com/manage/environments/ ",
          "type": "String",
          "metadata": {
            "schemaName": "admin_PowerAutomateEnvironmentVariable",
            "description": "Environment, including geographic location, for Power Automate - for example https://us.flow.microsoft.com/manage/environments/ for US environments"
          }
        },
        "TimeInterval-Interval (admin_TimeIntervalInterval)": {
          "defaultValue": 1,
          "type": "Int",
          "metadata": {
            "schemaName": "admin_TimeIntervalInterval",
            "description": "Specify the interval for the chunks of time to fetch. Default is 1, (for 1 hour)"
          }
        }
      },
      "triggers": {
        "manual": {
          "metadata": {
            "operationMetadataId": "3c56ec01-0c70-4839-9a5a-6855d3966c6a"
          },
          "type": "Request",
          "kind": "Button",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "title": "TenantId",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Unique Identifier for the Microsoft tenant",
                  "x-ms-content-hint": "TEXT"
                },
                "text_1": {
                  "title": "Start",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "DateTime within past 7 days",
                  "x-ms-content-hint": "TEXT"
                },
                "text_2": {
                  "title": "End",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "DateTime later than Start, 7 days > x >= 2 hours",
                  "x-ms-content-hint": "TEXT"
                }
              },
              "required": [
                "text",
                "text_1",
                "text_2"
              ]
            }
          }
        }
      },
      "actions": {
        "Respond_to_a_PowerApp_or_flow": {
          "runAfter": {
            "Apply_to_each_cluster": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "52204c4a-76d8-4389-b4d0-d1706ac995f9"
          },
          "type": "Response",
          "kind": "PowerApp",
          "inputs": {
            "statusCode": 200,
            "body": {
              "response": "200"
            },
            "schema": {
              "type": "object",
              "properties": {
                "response": {
                  "title": "Response",
                  "x-ms-dynamically-added": true,
                  "type": "string"
                }
              }
            }
          }
        },
        "List_audit_log_content": {
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "b57b19ed-4fda-4164-a7d2-12bdf65f22fb"
          },
          "type": "OpenApiConnection",
          "inputs": {
            "host": {
              "apiId": "",
              "connectionName": "shared_admin-5foffice-20365-20management-20api-5f7fc9343cf45734fe",
              "operationId": "ListContent"
            },
            "parameters": {
              "tenant": "@triggerBody()['text']",
              "contentType": "Audit.General",
              "PublisherIdentifier": "@triggerBody()['text']",
              "startTime": "@triggerBody()['text_1']",
              "endTime": "@triggerBody()['text_2']",
              "Content-Type": "application/json"
            },
            "authentication": "@parameters('$authentication')"
          }
        },
        "Apply_to_each_cluster": {
          "foreach": "@outputs('List_audit_log_content')?['body']",
          "actions": {
            "Apply_to_each_Audit_Log": {
              "foreach": "@body('Filter_array')",
              "actions": {
                "Switch": {
                  "runAfter": {},
                  "cases": {
                    "LaunchPowerApp_Case": {
                      "case": "LaunchPowerApp",
                      "actions": {
                        "Catch,_already_inserted": {
                          "runAfter": {
                            "Insert_Audit_Log_record_(Current_Environment)": [
                              "Succeeded"
                            ]
                          },
                          "type": "Compose",
                          "inputs": "Catch, already inserted. For time span overlaps. "
                        },
                        "Insert_Audit_Log_record_(Current_Environment)": {
                          "runAfter": {},
                          "type": "OpenApiConnection",
                          "inputs": {
                            "host": {
                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                              "connectionName": "shared_commondataserviceforapps_1",
                              "operationId": "CreateRecord"
                            },
                            "parameters": {
                              "entityName": "admin_auditlogs",
                              "item/admin_creationtime": "@items('Apply_to_each_Audit_Log')?['CreationTime']",
                              "item/admin_appid": "@items('Apply_to_each_Audit_Log')?['AppName']",
                              "item/admin_AppLookup@odata.bind": "admin_apps(@{items('Apply_to_each_Audit_Log')?['AppName']})",
                              "item/admin_auditlogid": "@items('Apply_to_each_Audit_Log')?['Id']",
                              "item/admin_operation": "@items('Apply_to_each_Audit_Log')?['Operation']",
                              "item/admin_title": "Power App Launch @{items('Apply_to_each_Audit_Log')?['AppName']} - @{items('Apply_to_each_Audit_Log')?['CreationTime']}",
                              "item/admin_userupn": "@items('Apply_to_each_Audit_Log')?['UserId']",
                              "item/admin_workload": "@items('Apply_to_each_Audit_Log')?['Workload']"
                            },
                            "authentication": "@parameters('$authentication')"
                          }
                        },
                        "See_if_app_already_exists_in_inventory": {
                          "runAfter": {
                            "Catch,_already_inserted": [
                              "Succeeded",
                              "Skipped"
                            ]
                          },
                          "type": "OpenApiConnection",
                          "inputs": {
                            "host": {
                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                              "connectionName": "shared_commondataserviceforapps_1",
                              "operationId": "ListRecords"
                            },
                            "parameters": {
                              "entityName": "admin_apps",
                              "$select": "admin_appid",
                              "$filter": "admin_appid eq @{items('Apply_to_each_Audit_Log')?['AppName']}"
                            },
                            "authentication": "@parameters('$authentication')"
                          }
                        },
                        "If_exists_update_with_last_launched": {
                          "actions": {
                            "Update_App_Last_Launch_Date_(Current_Environment)": {
                              "runAfter": {},
                              "type": "OpenApiConnection",
                              "inputs": {
                                "host": {
                                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                                  "connectionName": "shared_commondataserviceforapps_1",
                                  "operationId": "UpdateRecord"
                                },
                                "parameters": {
                                  "entityName": "admin_apps",
                                  "recordId": "@items('Apply_to_each_Audit_Log')?['AppName']",
                                  "item/admin_applastlaunchedon": "@items('Apply_to_each_Audit_Log')?['CreationTime']"
                                },
                                "authentication": "@parameters('$authentication')"
                              }
                            }
                          },
                          "runAfter": {
                            "See_if_app_already_exists_in_inventory": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "greater": [
                              "@length(outputs('See_if_app_already_exists_in_inventory')?['body/value'])",
                              0
                            ]
                          },
                          "type": "If"
                        }
                      }
                    },
                    "DeletePowerApp_Case": {
                      "case": "DeletePowerApp",
                      "actions": {
                        "Mark_Power_App_record_deleted_(Current_Environment)": {
                          "runAfter": {},
                          "type": "OpenApiConnection",
                          "inputs": {
                            "host": {
                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                              "connectionName": "shared_commondataserviceforapps_1",
                              "operationId": "UpdateRecord"
                            },
                            "parameters": {
                              "entityName": "admin_apps",
                              "recordId": "@items('Apply_to_each_Audit_Log')?['AppName']",
                              "item/admin_appdeleted": true,
                              "item/admin_appdeletedon": "@items('Apply_to_each_Audit_Log')?['CreationTime']"
                            },
                            "authentication": "@parameters('$authentication')"
                          }
                        }
                      }
                    },
                    "DeleteFlow_Case": {
                      "case": "DeleteFlow",
                      "actions": {
                        "Update_Flow_record_(Current_Environment)": {
                          "runAfter": {},
                          "type": "OpenApiConnection",
                          "inputs": {
                            "host": {
                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                              "connectionName": "shared_commondataserviceforapps_1",
                              "operationId": "UpdateRecord"
                            },
                            "parameters": {
                              "entityName": "admin_flows",
                              "recordId": "@items('Apply_to_each_Audit_Log')?['ObjectId']",
                              "item/admin_flowdeleted": true,
                              "item/admin_flowdeletedon": "@items('Apply_to_each_Audit_Log')?['CreationTime']"
                            },
                            "authentication": "@parameters('$authentication')"
                          }
                        }
                      }
                    }
                  },
                  "default": {
                    "actions": {}
                  },
                  "expression": "@items('Apply_to_each_Audit_Log')?['Operation']",
                  "metadata": {
                    "operationMetadataId": "80ade088-7dbc-49bc-a97b-6bbdfcbbf6d5"
                  },
                  "type": "Switch"
                }
              },
              "runAfter": {
                "Filter_array": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "5d43e08c-b006-4d3f-ad32-e77f89f0aa4f"
              },
              "type": "Foreach",
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 25
                }
              }
            },
            "GetContentDetails": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "75d69240-a7e2-4b47-bb63-591b4a9142fb"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_admin-5foffice-20365-20management-20api-5ff18d20b7ec3dbffe",
                  "connectionName": "shared_admin-5foffice-20365-20management-20api-5f7fc9343cf45734fe",
                  "operationId": "ListContentDetails"
                },
                "parameters": {
                  "tenant": "@triggerBody()['text']",
                  "contentId": "@items('Apply_to_each_cluster')?['contentId']"
                },
                "retryPolicy": {
                  "type": "exponential",
                  "count": 10,
                  "interval": "PT10S"
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Parse_JSON": {
              "runAfter": {
                "GetContentDetails": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "a04422a9-d34d-4fad-bfc1-98e33076cc0f"
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@outputs('GetContentDetails')?['body']",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "CreationTime": {
                        "type": "string"
                      },
                      "Id": {
                        "type": "string"
                      },
                      "Operation": {
                        "type": "string"
                      },
                      "Workload": {
                        "type": "string"
                      },
                      "AppName": {
                        "type": "string"
                      },
                      "ObjectId": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "UserId": {
                        "type": "string"
                      },
                      "UserKey": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "Filter_array": {
              "runAfter": {
                "Parse_JSON": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "7b99dc10-63d6-4883-a44b-3ae786cff830"
              },
              "type": "Query",
              "inputs": {
                "from": "@body('Parse_JSON')",
                "where": "@or(equals(item()?['Operation'], 'LaunchPowerApp'), equals(item()?['Operation'], 'DeletePowerApp'), equals(item()?['Operation'], 'DeleteFlow'), equals(item()?['Operation'], 'PowerAppPermissionEdited'))"
              }
            }
          },
          "runAfter": {
            "Determine_if_chunk_size_needs_reduced": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "be2e7508-d055-4d82-81f6-8b7741a6ab3e"
          },
          "type": "Foreach",
          "runtimeConfiguration": {
            "concurrency": {
              "repetitions": 50
            }
          }
        },
        "Determine_if_chunk_size_needs_reduced": {
          "actions": {
            "Fetch_Header": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "96d1efc9-ceb8-492a-9426-af2b73f1f7a6"
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@outputs('List_audit_log_content')?['headers']",
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextpageuri": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "Fetch_NextPageURI": {
              "runAfter": {
                "Fetch_Header": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "b0935e56-cbae-4153-a1ad-d811d4e4dcc6"
              },
              "type": "Compose",
              "inputs": "@body('Fetch_Header')?['nextpageuri']"
            },
            "If_NextPageURI_not_blank,_need_smaller_chunks": {
              "actions": {
                "Send_an_email_(V2)": {
                  "runAfter": {},
                  "metadata": {
                    "operationMetadataId": "15df9f3e-2fc5-4c5a-8f8f-0d84ebe0194f"
                  },
                  "type": "OpenApiConnection",
                  "inputs": {
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_office365",
                      "connectionName": "shared_office365_1",
                      "operationId": "SendEmailV2"
                    },
                    "parameters": {
                      "emailMessage/To": "@parameters('Admin eMail (admin_AdminMail)')",
                      "emailMessage/Subject": "CoE Audit Logs - Missing some logs - require smaller chunks",
                      "emailMessage/Body": "@{parameters('eMail Header Style (admin_eMailHeaderStyle)')}\n<p>\nYour audit logs were collected but some were missed due to truncated results in <a href=\"@{concat(parameters('Power Automate Environment Variable (admin_PowerAutomateEnvironmentVariable)'), workflow()?['tags']['environmentName'], '/flows/', workflow()?['name'], '/runs/', workflow()?['run']['name'])}\"> this run </a>. <br>\nYou will need to use a smaller interval to gather all logs. <br>\n<b>Current chunking size: </b> @{parameters('TimeInterval-Interval (admin_TimeIntervalInterval)')} @{parameters('TimeInterval-Unit (admin_TimeIntervalUnit)')} <br>\nSee the optional Step 11 of our <a href=\"https://docs.microsoft.com/power-platform/guidance/coe/setup-auditlog#set-up-the-power-automate-flow\"> Audt Log flow setup documentation </a> for more details.\n</p>"
                    },
                    "authentication": "@parameters('$authentication')"
                  }
                }
              },
              "runAfter": {
                "Fetch_NextPageURI": [
                  "Succeeded"
                ]
              },
              "expression": {
                "not": {
                  "equals": [
                    "@outputs('Fetch_NextPageURI')",
                    "@null"
                  ]
                }
              },
              "metadata": {
                "operationMetadataId": "68537ed9-e1bb-42c5-a75f-ceef89cbd70b"
              },
              "type": "If"
            }
          },
          "runAfter": {
            "List_audit_log_content": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "4a365055-4209-4dbb-8c94-826c471d77b6"
          },
          "type": "Scope"
        }
      },
      "outputs": {}
    },
    "templateName": null
  },
  "schemaVersion": "1.0.0.0"
}