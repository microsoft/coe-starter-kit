{
  "properties": {
    "connectionReferences": {
      "shared_admin-5foffice-20365-20management-20api-5f691c36f6fa56d15c_1": {
        "api": {
          "logicalName": "admin_5Foffice-20365-20management-20api",
          "name": "shared_admin-5foffice-20365-20management-20api-5f7fc9343cf45734fe"
        },
        "connection": {},
        "runtimeSource": "embedded"
      },
      "shared_commondataserviceforapps_1": {
        "api": {
          "name": "shared_commondataserviceforapps"
        },
        "connection": {},
        "runtimeSource": "embedded"
      },
      "shared_office365_1": {
        "api": {
          "name": "shared_office365"
        },
        "connection": {},
        "runtimeSource": "embedded"
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "actions": {
        "Apply_to_each_cluster": {
          "actions": {
            "Apply_to_each_Audit_Log": {
              "actions": {
                "Switch": {
                  "cases": {
                    "DeleteFlow_Case": {
                      "actions": {
                        "Update_Flow_record_(Current_Environment)": {
                          "inputs": {
                            "authentication": {
                              "type": "Raw",
                              "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                            },
                            "host": {
                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                              "connectionName": "shared_commondataserviceforapps_1",
                              "operationId": "UpdateRecord"
                            },
                            "parameters": {
                              "entityName": "admin_flows",
                              "item/admin_flowdeleted": true,
                              "item/admin_flowdeletedon": "@items('Apply_to_each_Audit_Log')?['CreationTime']",
                              "recordId": "@items('Apply_to_each_Audit_Log')?['ObjectId']"
                            }
                          },
                          "runAfter": {},
                          "type": "OpenApiConnection"
                        }
                      },
                      "case": "DeleteFlow"
                    },
                    "DeletePowerApp_Case": {
                      "actions": {
                        "Mark_Power_App_record_deleted_(Current_Environment)": {
                          "inputs": {
                            "authentication": {
                              "type": "Raw",
                              "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                            },
                            "host": {
                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                              "connectionName": "shared_commondataserviceforapps_1",
                              "operationId": "UpdateRecord"
                            },
                            "parameters": {
                              "entityName": "admin_apps",
                              "item/admin_appdeleted": true,
                              "item/admin_appdeletedon": "@items('Apply_to_each_Audit_Log')?['CreationTime']",
                              "recordId": "@items('Apply_to_each_Audit_Log')?['AppName']"
                            }
                          },
                          "runAfter": {},
                          "type": "OpenApiConnection"
                        }
                      },
                      "case": "DeletePowerApp"
                    },
                    "LaunchPowerApp_Case": {
                      "actions": {
                        "Catch,_already_inserted": {
                          "inputs": "Catch, already inserted. For time span overlaps. ",
                          "runAfter": {
                            "Insert_Audit_Log_record_(Current_Environment)": [
                              "Failed"
                            ]
                          },
                          "type": "Compose"
                        },
                        "Insert_Audit_Log_record_(Current_Environment)": {
                          "inputs": {
                            "authentication": {
                              "type": "Raw",
                              "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                            },
                            "host": {
                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                              "connectionName": "shared_commondataserviceforapps_1",
                              "operationId": "CreateRecord"
                            },
                            "parameters": {
                              "entityName": "admin_auditlogs",
                              "item/admin_appid": "@items('Apply_to_each_Audit_Log')?['AppName']",
                              "item/admin_auditlogid": "@items('Apply_to_each_Audit_Log')?['Id']",
                              "item/admin_creationtime": "@items('Apply_to_each_Audit_Log')?['CreationTime']",
                              "item/admin_operation": "@items('Apply_to_each_Audit_Log')?['Operation']",
                              "item/admin_title": "Power App Launch @{items('Apply_to_each_Audit_Log')?['AppName']} - @{items('Apply_to_each_Audit_Log')?['CreationTime']}",
                              "item/admin_userupn": "@items('Apply_to_each_Audit_Log')?['UserKey']",
                              "item/admin_workload": "@items('Apply_to_each_Audit_Log')?['Workload']"
                            }
                          },
                          "runAfter": {},
                          "type": "OpenApiConnection"
                        },
                        "Update_App_Last_Launch_Date_(Current_Environment)": {
                          "inputs": {
                            "authentication": {
                              "type": "Raw",
                              "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                            },
                            "host": {
                              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps",
                              "connectionName": "shared_commondataserviceforapps_1",
                              "operationId": "UpdateRecord"
                            },
                            "parameters": {
                              "entityName": "admin_apps",
                              "item/admin_applastlaunchedon": "@items('Apply_to_each_Audit_Log')?['CreationTime']",
                              "recordId": "@items('Apply_to_each_Audit_Log')?['AppName']"
                            }
                          },
                          "runAfter": {
                            "Catch,_already_inserted": [
                              "Succeeded"
                            ]
                          },
                          "type": "OpenApiConnection"
                        }
                      },
                      "case": "LaunchPowerApp"
                    }
                  },
                  "default": {
                    "actions": {}
                  },
                  "expression": "@items('Apply_to_each_Audit_Log')?['Operation']",
                  "runAfter": {},
                  "type": "Switch"
                }
              },
              "foreach": "@body('Filter_array')",
              "runAfter": {
                "Filter_array": [
                  "Succeeded"
                ]
              },
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 25
                }
              },
              "type": "Foreach"
            },
            "Filter_array": {
              "inputs": {
                "from": "@body('Parse_JSON')",
                "where": "@or(equals(item()?['Operation'], 'LaunchPowerApp'), equals(item()?['Operation'], 'DeletePowerApp'), equals(item()?['Operation'], 'DeleteFlow'), equals(item()?['Operation'], 'PowerAppPermissionEdited'))"
              },
              "runAfter": {
                "Parse_JSON": [
                  "Succeeded"
                ]
              },
              "type": "Query"
            },
            "GetContentDetails": {
              "inputs": {
                "authentication": {
                  "type": "Raw",
                  "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                },
                "host": {
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_admin-5foffice-20365-20management-20api-5f7fc9343cf45734fe",
                  "connectionName": "shared_admin-5foffice-20365-20management-20api-5f691c36f6fa56d15c_1",
                  "operationId": "ListContentDetails"
                },
                "parameters": {
                  "contentId": "@items('Apply_to_each_cluster')?['contentId']",
                  "tenant": "@triggerBody()['text']"
                },
                "retryPolicy": {
                  "count": 10,
                  "interval": "PT10S",
                  "type": "exponential"
                }
              },
              "runAfter": {},
              "type": "OpenApiConnection"
            },
            "Parse_JSON": {
              "inputs": {
                "content": "@outputs('GetContentDetails')?['body']",
                "schema": {
                  "items": {
                    "properties": {
                      "AppName": {
                        "type": "string"
                      },
                      "CreationTime": {
                        "type": "string"
                      },
                      "Id": {
                        "type": "string"
                      },
                      "ObjectId": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "Operation": {
                        "type": "string"
                      },
                      "UserId": {
                        "type": "string"
                      },
                      "UserKey": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "Workload": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "runAfter": {
                "GetContentDetails": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson"
            }
          },
          "foreach": "@outputs('List_audit_log_content')?['body']",
          "runAfter": {
            "Determine_if_chunk_size_needs_reduced": [
              "Succeeded"
            ]
          },
          "runtimeConfiguration": {
            "concurrency": {
              "repetitions": 50
            }
          },
          "type": "Foreach"
        },
        "Determine_if_chunk_size_needs_reduced": {
          "actions": {
            "Fetch_Header": {
              "inputs": {
                "content": "@outputs('List_audit_log_content')?['headers']",
                "schema": {
                  "properties": {
                    "nextpageuri": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "runAfter": {},
              "type": "ParseJson"
            },
            "Fetch_NextPageURI": {
              "inputs": "@body('Fetch_Header')?['nextpageuri']",
              "runAfter": {
                "Fetch_Header": [
                  "Succeeded"
                ]
              },
              "type": "Compose"
            },
            "If_NextPageURI_not_blank,_need_smaller_chunks": {
              "actions": {
                "Send_an_email_(V2)": {
                  "inputs": {
                    "authentication": {
                      "type": "Raw",
                      "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
                    },
                    "host": {
                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_office365",
                      "connectionName": "shared_office365_1",
                      "operationId": "SendEmailV2"
                    },
                    "parameters": {
                      "emailMessage/Body": "@{parameters('eMail Header Style')}\n<p>\nYour audit logs were collected but some were missed do to truncated results in <a href=\"@{concat(parameters('Power Automate Environment Variable'), workflow()?['tags']['environmentName'], '/flows/', workflow()?['name'], '/runs/', workflow()?['run']['name'])}\"> this run </a>. <br>\nYou will need to use a smaller interval to gather all logs. <br>\n<b>Current chunking size: </b> @{parameters('TimeInterval-Interval')} @{parameters('TimeInterval-Unit')} <br>\nSee <a href=\"https://docs.microsoft.com/power-platform/guidance/coe/setup-auditlog#set-up-the-power-automate-flow\"> CoE documentation </a> for more details.\n</p>",
                      "emailMessage/Subject": "CoE Audit Logs require smaller chunks",
                      "emailMessage/To": "@parameters('Admin eMail')"
                    }
                  },
                  "runAfter": {},
                  "type": "OpenApiConnection"
                }
              },
              "expression": {
                "not": {
                  "equals": [
                    "@outputs('Fetch_NextPageURI')",
                    "@null"
                  ]
                }
              },
              "runAfter": {
                "Fetch_NextPageURI": [
                  "Succeeded"
                ]
              },
              "type": "If"
            }
          },
          "runAfter": {
            "List_audit_log_content": [
              "Succeeded"
            ]
          },
          "type": "Scope"
        },
        "List_audit_log_content": {
          "inputs": {
            "authentication": {
              "type": "Raw",
              "value": "@json(decodeBase64(triggerOutputs().headers['X-MS-APIM-Tokens']))['$ConnectionKey']"
            },
            "host": {
              "apiId": "",
              "connectionName": "shared_admin-5foffice-20365-20management-20api-5f691c36f6fa56d15c_1",
              "operationId": "ListContent"
            },
            "parameters": {
              "Content-Type": "application/json",
              "PublisherIdentifier": "@triggerBody()['text']",
              "contentType": "Audit.General",
              "endTime": "@triggerBody()['text_2']",
              "startTime": "@triggerBody()['text_1']",
              "tenant": "@triggerBody()['text']"
            }
          },
          "runAfter": {},
          "type": "OpenApiConnection"
        },
        "Respond_to_a_PowerApp_or_flow": {
          "inputs": {
            "body": {
              "response": "200"
            },
            "schema": {
              "properties": {
                "response": {
                  "title": "Response",
                  "type": "string",
                  "x-ms-dynamically-added": true
                }
              },
              "type": "object"
            },
            "statusCode": 200
          },
          "kind": "PowerApp",
          "runAfter": {
            "Apply_to_each_cluster": [
              "Succeeded"
            ]
          },
          "type": "Response"
        }
      },
      "contentVersion": "1.0.0.0",
      "outputs": {},
      "parameters": {
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        },
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "Admin eMail": {
          "defaultValue": "adelev@pplatform.onmicrosoft.com",
          "metadata": {
            "description": "CoE Admin eMail. Email address used in flows to send notifications to admins; this should be either your email address or a distribution list",
            "schemaName": "admin_AdminMail"
          },
          "type": "String"
        },
        "Power Automate Environment Variable": {
          "defaultValue": "https://us.flow.microsoft.com/manage/environments/ ",
          "metadata": {
            "description": "Environment, including geographic location, for Power Automate - for example https://us.flow.microsoft.com/manage/environments/ for US environments",
            "schemaName": "admin_PowerAutomateEnvironmentVariable"
          },
          "type": "String"
        },
        "TimeInterval-Interval": {
          "defaultValue": 1,
          "metadata": {
            "description": "Specify the interval for the chunks of time to fetch. Default is 1, (for 1 hour)",
            "schemaName": "admin_TimeIntervalInterval"
          },
          "type": "Int"
        },
        "TimeInterval-Unit": {
          "defaultValue": "Hour",
          "metadata": {
            "description": "Specify the units for the chunks of time to fetch. Default is Hour, (for 1 hour). Options are those of the Add to time action's Time Unit Parameter",
            "schemaName": "admin_TimeIntervalUnit"
          },
          "type": "String"
        },
        "eMail Header Style": {
          "defaultValue": "<head> <style>  body {     background-color: #efefef;     font-family: Segoe UI;     text-align: left; }  #content {     border: 1px solid #742774;     background-color: #ffffff;     width: 650px;     margin-bottom: 50px;     display: inline-block; }  #logo {     margin-left: 52px;     margin-top: 40px;     width: 60px;     height: 12px; }  #header {     font-size: 24px;     margin-left: 50px;     margin-top: 20px;     margin-bottom: 20px; }  #ribbon {     background-color: #742774; }  #ribbonContent {     font-size: 20px;     padding-left: 30px;     padding-top: 10px;     padding-bottom: 20px;     color: white;     width: 100%;     padding-right: 10px; }  #message > td {     font-size: 14px;     padding-left: 60px;     padding-right: 60px;     padding-top: 20px;     padding-bottom: 40px; }  #footer > td {     font-size: 12px;     background-color: #cfcfcf;     height: 40px;     padding-top: 15px;     padding-left: 40px;     padding-bottom: 20px; }  #form {     width: 100%;     border-collapse: collapse; }  #app {     width: 60%;     font-size: 12px; }  .label {     color: #5f5f5f }  table {     border-collapse: collapse;     width: 100%; }  th, td {     padding: 8px;     text-align: left;     border-bottom: 1px solid #ddd; }  </style> </head>",
          "metadata": {
            "description": "CSS/Style used for eMails",
            "schemaName": "admin_eMailHeaderStyle"
          },
          "type": "String"
        }
      },
      "triggers": {
        "manual": {
          "inputs": {
            "schema": {
              "properties": {
                "text": {
                  "description": "Unique Identifier for the Microsoft tenant",
                  "title": "TenantId",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "text_1": {
                  "description": "DateTime within past 7 days",
                  "title": "Start",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                },
                "text_2": {
                  "description": "DateTime later than Start, 7 days > x >= 2 hours",
                  "title": "End",
                  "type": "string",
                  "x-ms-content-hint": "TEXT",
                  "x-ms-dynamically-added": true
                }
              },
              "required": [
                "text",
                "text_1",
                "text_2"
              ],
              "type": "object"
            }
          },
          "kind": "Button",
          "type": "Request"
        }
      }
    }
  },
  "schemaVersion": "1.0.0.0"
}
